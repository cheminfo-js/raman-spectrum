{"version":3,"file":"raman-spectrum.min.js","sources":["../node_modules/.pnpm/is-any-array@1.0.0/node_modules/is-any-array/src/index.js","../node_modules/.pnpm/median-quickselect@1.0.1/node_modules/median-quickselect/lib/median-quickselect.min.js","../node_modules/.pnpm/ml-array-median@1.1.5/node_modules/ml-array-median/lib-es6/index.js","../node_modules/.pnpm/ml-spectra-processing@6.7.1/node_modules/ml-spectra-processing/src/x/xAdd.js","../node_modules/.pnpm/ml-spectra-processing@6.7.1/node_modules/ml-spectra-processing/src/x/xMultiply.js","../node_modules/.pnpm/ml-spectra-processing@6.7.1/node_modules/ml-spectra-processing/src/x/xDivide.js","../node_modules/.pnpm/ml-spectra-processing@6.7.1/node_modules/ml-spectra-processing/src/x/xFindClosestIndex.js","../node_modules/.pnpm/ml-array-sequential-fill@1.1.6/node_modules/ml-array-sequential-fill/lib-es6/index.js","../node_modules/.pnpm/ml-spectra-processing@6.7.1/node_modules/ml-spectra-processing/src/x/xIsMonotone.js","../node_modules/.pnpm/ml-array-sum@1.1.5/node_modules/ml-array-sum/lib-es6/index.js","../node_modules/.pnpm/ml-array-mean@1.1.5/node_modules/ml-array-mean/lib-es6/index.js","../node_modules/.pnpm/ml-array-min@1.2.2/node_modules/ml-array-min/lib-es6/index.js","../node_modules/.pnpm/ml-array-max@1.2.3/node_modules/ml-array-max/lib-es6/index.js","../node_modules/.pnpm/ml-spectra-processing@6.7.1/node_modules/ml-spectra-processing/src/x/xSubtract.js","../node_modules/.pnpm/ml-spectra-processing@6.7.1/node_modules/ml-spectra-processing/src/xy/xyCheck.js","../node_modules/.pnpm/ml-spectra-processing@6.7.1/node_modules/ml-spectra-processing/src/xy/xyEnsureGrowingX.js","../node_modules/.pnpm/ml-spectra-processing@6.7.1/node_modules/ml-spectra-processing/src/xy/xyFilterXPositive.js","../node_modules/.pnpm/ml-spectra-processing@6.7.1/node_modules/ml-spectra-processing/src/xy/xyMaxClosestYPoint.js","../node_modules/.pnpm/ml-spectra-processing@6.7.1/node_modules/ml-spectra-processing/src/xy/xyMinClosestYPoint.js","../node_modules/.pnpm/ml-peak-shape-generator@1.0.0/node_modules/ml-peak-shape-generator/src/util/constants.js","../node_modules/.pnpm/ml-peak-shape-generator@1.0.0/node_modules/ml-peak-shape-generator/src/util/erfinv.js","../node_modules/.pnpm/ml-peak-shape-generator@1.0.0/node_modules/ml-peak-shape-generator/src/classes/Gaussian.js","../node_modules/.pnpm/ml-peak-shape-generator@1.0.0/node_modules/ml-peak-shape-generator/src/classes/Lorentzian.js","../node_modules/.pnpm/ml-peak-shape-generator@1.0.0/node_modules/ml-peak-shape-generator/src/classes/PseudoVoigt.js","../node_modules/.pnpm/ml-peak-shape-generator@1.0.0/node_modules/ml-peak-shape-generator/src/classes/Gaussian2D.js","../node_modules/.pnpm/ml-savitzky-golay-generalized@2.0.3/node_modules/ml-savitzky-golay-generalized/src/index.js","../node_modules/.pnpm/ml-gsd@6.6.3/node_modules/ml-gsd/src/gsd.js","../node_modules/.pnpm/ml-peak-shape-generator@1.0.0/node_modules/ml-peak-shape-generator/src/util/getShapeGenerator.js","../node_modules/.pnpm/ml-array-rescale@1.3.5/node_modules/ml-array-rescale/lib-es6/index.js","../node_modules/.pnpm/ml-matrix@6.8.0/node_modules/ml-matrix/src/inspect.js","../node_modules/.pnpm/ml-matrix@6.8.0/node_modules/ml-matrix/src/util.js","../node_modules/.pnpm/ml-matrix@6.8.0/node_modules/ml-matrix/src/matrix.js","../node_modules/.pnpm/ml-matrix@6.8.0/node_modules/ml-matrix/src/stat.js","../node_modules/.pnpm/ml-matrix@6.8.0/node_modules/ml-matrix/src/mathOperations.js","../node_modules/.pnpm/ml-matrix@6.8.0/node_modules/ml-matrix/src/views/base.js","../node_modules/.pnpm/ml-matrix@6.8.0/node_modules/ml-matrix/src/views/transpose.js","../node_modules/.pnpm/ml-matrix@6.8.0/node_modules/ml-matrix/src/wrap/WrapperMatrix2D.js","../node_modules/.pnpm/ml-matrix@6.8.0/node_modules/ml-matrix/src/dc/lu.js","../node_modules/.pnpm/ml-matrix@6.8.0/node_modules/ml-matrix/src/dc/util.js","../node_modules/.pnpm/ml-matrix@6.8.0/node_modules/ml-matrix/src/dc/qr.js","../node_modules/.pnpm/ml-matrix@6.8.0/node_modules/ml-matrix/src/dc/svd.js","../node_modules/.pnpm/ml-matrix@6.8.0/node_modules/ml-matrix/src/decompositions.js","../node_modules/.pnpm/common-spectrum@0.37.0/node_modules/common-spectrum/lib-esm/jsgraph/addStyle.js","../node_modules/.pnpm/common-spectrum@0.37.0/node_modules/common-spectrum/lib-esm/jsgraph/colors.js","../node_modules/.pnpm/common-spectrum@0.37.0/node_modules/common-spectrum/lib-esm/util/appendDistinctParameter.js","../node_modules/.pnpm/common-spectrum@0.37.0/node_modules/common-spectrum/lib-esm/util/appendDistinctValue.js","../node_modules/.pnpm/ml-airpls@1.0.0/node_modules/ml-airpls/src/choleskySolver.js","../node_modules/.pnpm/cuthill-mckee@1.0.0/node_modules/cuthill-mckee/cuthill-mckee.js","../node_modules/.pnpm/ml-airpls@1.0.0/node_modules/ml-airpls/src/utils.js","../node_modules/.pnpm/ml-airpls@1.0.0/node_modules/ml-airpls/src/index.js","../node_modules/.pnpm/baselines@1.0.0/node_modules/baselines/src/airPLS.js","../node_modules/.pnpm/ml-regression-base@2.1.3/node_modules/ml-regression-base/src/maybeToPrecision.js","../node_modules/.pnpm/ml-regression-base@2.1.3/node_modules/ml-regression-base/src/index.js","../node_modules/.pnpm/ml-regression-polynomial@2.2.0/node_modules/ml-regression-polynomial/src/index.js","../node_modules/.pnpm/ml-regression-base@2.1.3/node_modules/ml-regression-base/src/checkArrayLength.js","../node_modules/.pnpm/baselines@1.0.0/node_modules/baselines/src/iterativePolynomial.js","../node_modules/.pnpm/ml-baseline-correction-regression@1.0.0/node_modules/ml-baseline-correction-regression/src/index.js","../node_modules/.pnpm/ml-spectra-processing@5.10.0/node_modules/ml-spectra-processing/src/x/xCheck.js","../node_modules/.pnpm/ml-spectra-processing@5.10.0/node_modules/ml-spectra-processing/src/x/xRolling.js","../node_modules/.pnpm/ml-spectra-processing@5.10.0/node_modules/ml-spectra-processing/src/x/xPadding.js","../node_modules/.pnpm/baselines@1.0.0/node_modules/baselines/src/rollingAverage.js","../node_modules/.pnpm/ml-spectra-processing@5.10.0/node_modules/ml-spectra-processing/src/x/xRollingAverage.js","../node_modules/.pnpm/baselines@1.0.0/node_modules/baselines/src/rollingBall.js","../node_modules/.pnpm/ml-rolling-ball-baseline@1.0.0/node_modules/ml-rolling-ball-baseline/src/rollingBall.js","../node_modules/.pnpm/baselines@1.0.0/node_modules/baselines/src/rollingMedian.js","../node_modules/.pnpm/ml-spectra-processing@5.10.0/node_modules/ml-spectra-processing/src/x/xRollingMedian.js","../node_modules/.pnpm/ml-array-normed@1.3.6/node_modules/ml-array-normed/lib-es6/index.js","../node_modules/.pnpm/ml-zones@0.1.0/node_modules/ml-zones/src/normalize.js","../node_modules/.pnpm/ml-array-xy-equally-spaced@1.2.0/node_modules/ml-array-xy-equally-spaced/src/integral.js","../node_modules/.pnpm/ml-array-xy-equally-spaced@1.2.0/node_modules/ml-array-xy-equally-spaced/src/index.js","../node_modules/.pnpm/ml-zones@0.1.0/node_modules/ml-zones/src/invert.js","../node_modules/.pnpm/ml-zones@0.1.0/node_modules/ml-zones/src/zonesWithPoints.js","../node_modules/.pnpm/ml-array-xy-equally-spaced@1.2.0/node_modules/ml-array-xy-equally-spaced/src/equallySpacedSlot.js","../node_modules/.pnpm/ml-array-xy-equally-spaced@1.2.0/node_modules/ml-array-xy-equally-spaced/src/equallySpacedSmooth.js","../node_modules/.pnpm/ml-array-xy-filter-x@1.0.2/node_modules/ml-array-xy-filter-x/src/index.js","../node_modules/.pnpm/ml-array-xy-filter-x@1.0.2/node_modules/ml-array-xy-filter-x/src/getZones.js","../node_modules/.pnpm/ml-pad-array@2.0.0/node_modules/ml-pad-array/src/index.js","../node_modules/.pnpm/ml-savitzky-golay@4.1.1/node_modules/ml-savitzky-golay/src/index.js","../node_modules/.pnpm/common-spectrum@0.37.0/node_modules/common-spectrum/lib-esm/util/getNormalizedSpectrum.js","../node_modules/.pnpm/ml-stat@1.3.3/node_modules/ml-stat/array.js","../node_modules/.pnpm/js-quantities@1.7.6/node_modules/js-quantities/build/quantities.js","../node_modules/.pnpm/common-spectrum@0.37.0/node_modules/common-spectrum/lib-esm/util/convertUnit.js","../node_modules/.pnpm/common-spectrum@0.37.0/node_modules/common-spectrum/lib-esm/util/ensureRegexp.js","../node_modules/.pnpm/common-spectrum@0.37.0/node_modules/common-spectrum/lib-esm/util/getConvertedVariable.js","../node_modules/.pnpm/common-spectrum@0.37.0/node_modules/common-spectrum/lib-esm/util/getXYSpectrum.js","../node_modules/.pnpm/common-spectrum@0.37.0/node_modules/common-spectrum/lib-esm/Analysis.js","../node_modules/.pnpm/jcampconverter@8.1.4/node_modules/jcampconverter/src/complexChromatogram.js","../node_modules/.pnpm/jcampconverter@8.1.4/node_modules/jcampconverter/src/convertToFloatArray.js","../node_modules/.pnpm/jcampconverter@8.1.4/node_modules/jcampconverter/src/parse/fastParseXYData.js","../node_modules/.pnpm/jcampconverter@8.1.4/node_modules/jcampconverter/src/parse/parsePeakTable.js","../node_modules/.pnpm/jcampconverter@8.1.4/node_modules/jcampconverter/src/parse/parseXYA.js","../node_modules/.pnpm/jcampconverter@8.1.4/node_modules/jcampconverter/src/2d/add2D.js","../node_modules/.pnpm/jcampconverter@8.1.4/node_modules/jcampconverter/src/2d/convertTo3DZ.js","../node_modules/.pnpm/jcampconverter@8.1.4/node_modules/jcampconverter/src/2d/generateContourLines.js","../node_modules/.pnpm/nmr-processing@1.4.0/node_modules/nmr-processing/src/constants/gyromagneticRatio.js","../node_modules/.pnpm/jcampconverter@8.1.4/node_modules/jcampconverter/src/profiling.js","../node_modules/.pnpm/jcampconverter@8.1.4/node_modules/jcampconverter/src/simpleChromatogram.js","../node_modules/.pnpm/jcampconverter@8.1.4/node_modules/jcampconverter/src/postProcessing.js","../node_modules/.pnpm/jcampconverter@8.1.4/node_modules/jcampconverter/src/postProcessingNMR.js","../node_modules/.pnpm/jcampconverter@8.1.4/node_modules/jcampconverter/src/prepareNtuplesDatatable.js","../node_modules/.pnpm/jcampconverter@8.1.4/node_modules/jcampconverter/src/prepareSpectrum.js","../node_modules/.pnpm/jcampconverter@8.1.4/node_modules/jcampconverter/src/convert.js","../node_modules/.pnpm/ensure-string@0.1.1/node_modules/ensure-string/src/index.js","../node_modules/.pnpm/common-spectrum@0.37.0/node_modules/common-spectrum/lib-esm/from/fromJcamp.js","../node_modules/.pnpm/convert-to-jcamp@4.5.0/node_modules/convert-to-jcamp/src/fromVariables.js","../node_modules/.pnpm/convert-to-jcamp@4.5.0/node_modules/convert-to-jcamp/src/fromJSON.js","../node_modules/.pnpm/convert-to-jcamp@4.5.0/node_modules/convert-to-jcamp/src/creatorNtuples.js","../node_modules/.pnpm/common-spectrum@0.37.0/node_modules/common-spectrum/lib-esm/to/toJcamps.js","../src/jsgraph/getAnnotations.js","../src/from/fromJcamp.js","../src/index.js","../node_modules/.pnpm/common-spectrum@0.37.0/node_modules/common-spectrum/lib-esm/index.js","../node_modules/.pnpm/common-spectrum@0.37.0/node_modules/common-spectrum/lib-esm/jsgraph/getJSGraph.js","../node_modules/.pnpm/common-spectrum@0.37.0/node_modules/common-spectrum/lib-esm/jsgraph/getNormalizationAnnotations.js","../node_modules/.pnpm/common-spectrum@0.37.0/node_modules/common-spectrum/lib-esm/AnalysesManager.js","../node_modules/.pnpm/common-spectrum@0.37.0/node_modules/common-spectrum/lib-esm/util/autoPeakPicking.js","../node_modules/.pnpm/common-spectrum@0.37.0/node_modules/common-spectrum/lib-esm/util/peakPicking.js","../node_modules/.pnpm/common-spectrum@0.37.0/node_modules/common-spectrum/lib-esm/to/toJcamp.js"],"sourcesContent":["const toString = Object.prototype.toString;\r\n\r\nexport default function isAnyArray(object) {\r\n  return toString.call(object).endsWith('Array]');\r\n}\r\n","(function(){function a(d){for(var e=0,f=d.length-1,g=void 0,h=void 0,i=void 0,j=c(e,f);!0;){if(f<=e)return d[j];if(f==e+1)return d[e]>d[f]&&b(d,e,f),d[j];for(g=c(e,f),d[g]>d[f]&&b(d,g,f),d[e]>d[f]&&b(d,e,f),d[g]>d[e]&&b(d,g,e),b(d,g,e+1),h=e+1,i=f;!0;){do h++;while(d[e]>d[h]);do i--;while(d[i]>d[e]);if(i<h)break;b(d,h,i)}b(d,e,i),i<=j&&(e=h),i>=j&&(f=i-1)}}var b=function b(d,e,f){var _ref;return _ref=[d[f],d[e]],d[e]=_ref[0],d[f]=_ref[1],_ref},c=function c(d,e){return~~((d+e)/2)};'undefined'!=typeof module&&module.exports?module.exports=a:window.median=a})();\n","import isArray from 'is-any-array';\nimport quickSelectMedian from 'median-quickselect';\n\nfunction median(input) {\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  return quickSelectMedian(input.slice());\n}\n\nexport default median;\n","import isAnyArray from 'is-any-array';\n\n/**\n * This function xAdd the first array by the second array or a constant value to each element of the first array\n * @param {Array<Number>} array1 - the array that will be rotated\n * @param {Array|Number} array2\n * @return {Array}\n */\nexport function xAdd(array1, array2) {\n  let isConstant = false;\n  let constant;\n  if (isAnyArray(array2)) {\n    if (array1.length !== array2.length) {\n      throw new Error('sub: size of array1 and array2 must be identical');\n    }\n  } else {\n    isConstant = true;\n    constant = Number(array2);\n  }\n\n  let array3 = new Array(array1.length);\n  if (isConstant) {\n    for (let i = 0; i < array1.length; i++) {\n      array3[i] = array1[i] + constant;\n    }\n  } else {\n    for (let i = 0; i < array1.length; i++) {\n      array3[i] = array1[i] + array2[i];\n    }\n  }\n\n  return array3;\n}\n","import isAnyArray from 'is-any-array';\n/**\n * This function xMultiply the first array by the second array or a constant value to each element of the first array\n * @param {Array} array1 - the array that will be rotated\n * @param {Array|Number} array2\n * @return {Float64Array}\n */\nexport function xMultiply(array1, array2) {\n  let isConstant = false;\n  let constant;\n  if (isAnyArray(array2)) {\n    if (array1.length !== array2.length) {\n      throw new Error('sub: size of array1 and array2 must be identical');\n    }\n  } else {\n    isConstant = true;\n    constant = Number(array2);\n  }\n\n  let array3 = new Float64Array(array1.length);\n  if (isConstant) {\n    for (let i = 0; i < array1.length; i++) {\n      array3[i] = array1[i] * constant;\n    }\n  } else {\n    for (let i = 0; i < array1.length; i++) {\n      array3[i] = array1[i] * array2[i];\n    }\n  }\n\n  return array3;\n}\n","import isAnyArray from 'is-any-array';\n\n/**\n * This function divide the first array by the second array or a constant value to each element of the first array\n * @param {Array<Number>} array1 - the array that will be rotated\n * @param {Array<Number>|Number} array2\n * @return {Array}\n */\nexport function xDivide(array1, array2) {\n  let isConstant = false;\n  let constant;\n  if (isAnyArray(array2)) {\n    if (array1.length !== array2.length) {\n      throw new Error('sub: size of array1 and array2 must be identical');\n    }\n  } else {\n    isConstant = true;\n    constant = Number(array2);\n  }\n\n  let array3 = new Array(array1.length);\n  if (isConstant) {\n    for (let i = 0; i < array1.length; i++) {\n      array3[i] = array1[i] / constant;\n    }\n  } else {\n    for (let i = 0; i < array1.length; i++) {\n      array3[i] = array1[i] / array2[i];\n    }\n  }\n\n  return array3;\n}\n","/**\n * Returns the closest index of a `target` in an ordered array\n * @param {array<Number>} array\n * @param {number} target\n */\n\nexport function xFindClosestIndex(array, target) {\n  let low = 0;\n  let high = array.length - 1;\n  let middle = 0;\n  while (high - low > 1) {\n    middle = low + ((high - low) >> 1);\n    if (array[middle] < target) {\n      low = middle;\n    } else if (array[middle] > target) {\n      high = middle;\n    } else {\n      return middle;\n    }\n  }\n\n  if (low < array.length - 1) {\n    if (Math.abs(target - array[low]) < Math.abs(array[low + 1] - target)) {\n      return low;\n    } else {\n      return low + 1;\n    }\n  } else {\n    return low;\n  }\n}\n","import isArray from 'is-any-array';\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\n/**\r\n * Fill an array with sequential numbers\r\n * @param {Array<number>} [input] - optional destination array (if not provided a new array will be created)\r\n * @param {object} [options={}]\r\n * @param {number} [options.from=0] - first value in the array\r\n * @param {number} [options.to=10] - last value in the array\r\n * @param {number} [options.size=input.length] - size of the array (if not provided calculated from step)\r\n * @param {number} [options.step] - if not provided calculated from size\r\n * @return {Array<number>}\r\n */\n\nfunction sequentialFill() {\n  var input = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (_typeof(input) === 'object' && !isArray(input)) {\n    options = input;\n    input = [];\n  }\n\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  var _options = options,\n      _options$from = _options.from,\n      from = _options$from === void 0 ? 0 : _options$from,\n      _options$to = _options.to,\n      to = _options$to === void 0 ? 10 : _options$to,\n      _options$size = _options.size,\n      size = _options$size === void 0 ? input.length : _options$size,\n      step = _options.step;\n\n  if (size !== 0 && step) {\n    throw new Error('step is defined by the array size');\n  }\n\n  if (!size) {\n    if (step) {\n      size = Math.floor((to - from) / step) + 1;\n    } else {\n      size = to - from + 1;\n    }\n  }\n\n  if (!step && size) {\n    step = (to - from) / (size - 1);\n  }\n\n  if (Array.isArray(input)) {\n    // only works with normal array\n    input.length = 0;\n\n    for (var i = 0; i < size; i++) {\n      input.push(from);\n      from += step;\n    }\n  } else {\n    if (input.length !== size) {\n      throw new Error('sequentialFill typed array must have the correct length');\n    }\n\n    for (var _i = 0; _i < size; _i++) {\n      input[_i] = from;\n      from += step;\n    }\n  }\n\n  return input;\n}\n\nexport default sequentialFill;\n","/**\n * Returns true if x is monotone\n * @param {Array} array\n * @return {boolean}\n */\nexport function xIsMonotone(array) {\n  if (array.length <= 2) {\n    return true;\n  }\n  if (array[0] === array[1]) {\n    // maybe a constant series\n    for (let i = 1; i < array.length - 1; i++) {\n      if (array[i] !== array[i + 1]) return false;\n    }\n    return true;\n  }\n\n  if (array[0] < array[array.length - 1]) {\n    for (let i = 0; i < array.length - 1; i++) {\n      if (array[i] >= array[i + 1]) return false;\n    }\n  } else {\n    for (let i = 0; i < array.length - 1; i++) {\n      if (array[i] <= array[i + 1]) return false;\n    }\n  }\n  return true;\n}\n","import isArray from 'is-any-array';\n\nfunction sum(input) {\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var sumValue = 0;\n\n  for (var i = 0; i < input.length; i++) {\n    sumValue += input[i];\n  }\n\n  return sumValue;\n}\n\nexport default sum;\n","import sum from 'ml-array-sum';\n\nfunction mean(input) {\n  return sum(input) / input.length;\n}\n\nexport default mean;\n","import isArray from 'is-any-array';\n\nfunction min(input) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var _options$fromIndex = options.fromIndex,\n      fromIndex = _options$fromIndex === void 0 ? 0 : _options$fromIndex,\n      _options$toIndex = options.toIndex,\n      toIndex = _options$toIndex === void 0 ? input.length : _options$toIndex;\n\n  if (fromIndex < 0 || fromIndex >= input.length || !Number.isInteger(fromIndex)) {\n    throw new Error('fromIndex must be a positive integer smaller than length');\n  }\n\n  if (toIndex <= fromIndex || toIndex > input.length || !Number.isInteger(toIndex)) {\n    throw new Error('toIndex must be an integer greater than fromIndex and at most equal to length');\n  }\n\n  var minValue = input[fromIndex];\n\n  for (var i = fromIndex + 1; i < toIndex; i++) {\n    if (input[i] < minValue) minValue = input[i];\n  }\n\n  return minValue;\n}\n\nexport default min;\n","import isArray from 'is-any-array';\n\nfunction max(input) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var _options$fromIndex = options.fromIndex,\n      fromIndex = _options$fromIndex === void 0 ? 0 : _options$fromIndex,\n      _options$toIndex = options.toIndex,\n      toIndex = _options$toIndex === void 0 ? input.length : _options$toIndex;\n\n  if (fromIndex < 0 || fromIndex >= input.length || !Number.isInteger(fromIndex)) {\n    throw new Error('fromIndex must be a positive integer smaller than length');\n  }\n\n  if (toIndex <= fromIndex || toIndex > input.length || !Number.isInteger(toIndex)) {\n    throw new Error('toIndex must be an integer greater than fromIndex and at most equal to length');\n  }\n\n  var maxValue = input[fromIndex];\n\n  for (var i = fromIndex + 1; i < toIndex; i++) {\n    if (input[i] > maxValue) maxValue = input[i];\n  }\n\n  return maxValue;\n}\n\nexport default max;\n","import isAnyArray from 'is-any-array';\n/**\n * This function xSubtract the first array by the second array or a constant value from each element of the first array\n * @param {Array} array1 - the array that will be rotated\n * @param {Array|Number} array2\n * @return {Array}\n */\nexport function xSubtract(array1, array2) {\n  let isConstant = false;\n  let constant;\n  if (isAnyArray(array2)) {\n    if (array1.length !== array2.length) {\n      throw new Error('sub: size of array1 and array2 must be identical');\n    }\n  } else {\n    isConstant = true;\n    constant = Number(array2);\n  }\n\n  let array3 = new Array(array1.length);\n  if (isConstant) {\n    for (let i = 0; i < array1.length; i++) {\n      array3[i] = array1[i] - constant;\n    }\n  } else {\n    for (let i = 0; i < array1.length; i++) {\n      array3[i] = array1[i] - array2[i];\n    }\n  }\n\n  return array3;\n}\n","import isAnyArray from 'is-any-array';\n\n/**\n * Throw an error in no an object of x,y arrays\n * @param {DataXY} [data={}]\n */\nexport function xyCheck(data = {}) {\n  if (!isAnyArray(data.x) || !isAnyArray(data.y)) {\n    throw new Error('Data must be an object of x and y arrays');\n  }\n  if (data.x.length !== data.y.length) {\n    throw new Error('The x and y arrays mush have the same length');\n  }\n}\n","import { xyCheck } from './xyCheck';\n\n/**\n * Filters x,y values to allow strictly growing values in x axis.\n * @param {DataXY} [data={}] - Object that contains property x (an ordered increasing array) and y (an array)\n * @return {DataXY}\n */\nexport function xyEnsureGrowingX(data = {}) {\n  xyCheck(data);\n  const x = Array.from(data.x);\n  const y = Array.from(data.y);\n  let prevX = -Infinity;\n  let ansX = [];\n  let ansY = [];\n\n  for (let index = 0; index < x.length; index++) {\n    if (prevX < x[index]) {\n      ansX.push(x[index]);\n      ansY.push(y[index]);\n      prevX = x[index];\n    }\n  }\n  return { x: ansX, y: ansY };\n}\n","import { xyCheck } from './xyCheck';\n/**\n * Filter out all the points for which x <= 0. Useful to display log scale data\n * @param {DataXY} [data={}]\n * @return {{x:[],y:[]}} An object with the filtered data\n */\n\nexport function xyFilterXPositive(data = {}) {\n  xyCheck(data);\n  const { x, y } = data;\n  const newX = [];\n  const newY = [];\n  for (let i = 0; i < x.length; i++) {\n    if (x[i] > 0) {\n      newX.push(x[i]);\n      newY.push(y[i]);\n    }\n  }\n\n  return { x: newX, y: newY };\n}\n","import { xFindClosestIndex } from '../x/xFindClosestIndex';\n\nimport { xyCheck } from './xyCheck';\n\n/**\n * Find the closest maximum going up hill\n * @param {DataXY} [data={}] - Object that contains property x (an ordered increasing array) and y (an array)\n * @param {object} [options={}]\n * @param {number} [options.target]\n * @param {number} [options.targetIndex=0]\n * @return {{x,y,xIndex}} An object with the x/y value\n */\n\nexport function xyMaxClosestYPoint(data, options = {}) {\n  xyCheck(data);\n  const { x, y } = data;\n\n  let { target, targetIndex } = options;\n\n  if (targetIndex === undefined) {\n    if (target !== undefined) {\n      targetIndex = xFindClosestIndex(x, target);\n    } else {\n      targetIndex = 0;\n    }\n  }\n\n  let previousIndex = Number.MIN_SAFE_INTEGER;\n  let currentIndex = targetIndex;\n\n  let xyMaxY = y[targetIndex];\n\n  while (currentIndex !== previousIndex) {\n    previousIndex = currentIndex;\n    if (currentIndex > 0 && y[currentIndex - 1] > xyMaxY) {\n      currentIndex--;\n    } else if (currentIndex < x.length - 1 && y[currentIndex + 1] > xyMaxY) {\n      currentIndex++;\n    }\n    xyMaxY = y[currentIndex];\n  }\n  return {\n    x: x[currentIndex],\n    y: y[currentIndex],\n    index: currentIndex,\n  };\n}\n","import { xFindClosestIndex } from '../x/xFindClosestIndex';\n\nimport { xyCheck } from './xyCheck';\n\n/**\n * Find the closest minimum going down hill\n * @param {DataXY} [data={}] - Object that contains property x (an ordered increasing array) and y (an array)\n * @param {object} [options={}]\n * @param {number} [options.target]\n * @param {number} [options.targetIndex=0]\n * @return {{x,y,xIndex}} An object with the x/y value\n */\n\nexport function xyMinClosestYPoint(data, options = {}) {\n  xyCheck(data);\n  const { x, y } = data;\n\n  let { target, targetIndex } = options;\n\n  if (targetIndex === undefined) {\n    if (target !== undefined) {\n      targetIndex = xFindClosestIndex(x, target);\n    } else {\n      targetIndex = 0;\n    }\n  }\n\n  let previousIndex = Number.MIN_SAFE_INTEGER;\n  let currentIndex = targetIndex;\n\n  let minY = y[targetIndex];\n\n  while (currentIndex !== previousIndex) {\n    previousIndex = currentIndex;\n    if (currentIndex > 0 && y[currentIndex - 1] < minY) {\n      currentIndex--;\n    } else if (currentIndex < x.length - 1 && y[currentIndex + 1] < minY) {\n      currentIndex++;\n    }\n    minY = y[currentIndex];\n  }\n  return {\n    x: x[currentIndex],\n    y: y[currentIndex],\n    index: currentIndex,\n  };\n}\n","export const GAUSSIAN_EXP_FACTOR = -4 * Math.LN2;\nexport const ROOT_PI_OVER_LN2 = Math.sqrt(Math.PI / Math.LN2);\nexport const ROOT_THREE = Math.sqrt(3);\nexport const ROOT_2LN2 = Math.sqrt(2 * Math.LN2);\nexport const ROOT_2LN2_MINUS_ONE = Math.sqrt(2 * Math.LN2) - 1;\n","// https://en.wikipedia.org/wiki/Error_function#Inverse_functions\n// This code yields to a good approximation\n\n// If needed a better implementation using polynomial can be found on https://en.wikipedia.org/wiki/Error_function#Inverse_functions\n\nexport default function erfinv(x) {\n  let a = 0.147;\n  if (x === 0) return 0;\n  let ln1MinusXSqrd = Math.log(1 - x * x);\n  let lnEtcBy2Plus2 = ln1MinusXSqrd / 2 + 2 / (Math.PI * a);\n  let firstSqrt = Math.sqrt(lnEtcBy2Plus2 ** 2 - ln1MinusXSqrd / a);\n  let secondSqrt = Math.sqrt(firstSqrt - lnEtcBy2Plus2);\n  return secondSqrt * (x > 0 ? 1 : -1);\n}\n","import {\n  ROOT_2LN2,\n  GAUSSIAN_EXP_FACTOR,\n  ROOT_PI_OVER_LN2,\n} from '../util/constants';\nimport erfinv from '../util/erfinv';\n\nexport class Gaussian {\n  /**\n   * @param {object} [options = {}]\n   * @param {number} [options.height=4*LN2/(PI*FWHM)] Define the height of the peak, by default area=1 (normalized)\n   * @param {number} [options.fwhm = 500] - Full Width at Half Maximum in the number of points in FWHM.\n   * @param {number} [options.sd] - Standard deviation, if it's defined options.fwhm will be ignored and the value will be computed sd * Math.sqrt(8 * Math.LN2);\n   */\n  constructor(options = {}) {\n    this.fwhm = options.sd\n      ? Gaussian.widthToFWHM(2 * options.sd)\n      : options.fwhm\n      ? options.fwhm\n      : 500;\n    this.height =\n      options.height === undefined\n        ? Math.sqrt(-GAUSSIAN_EXP_FACTOR / Math.PI) / this.fwhm\n        : options.height;\n  }\n  /**\n   * Calculate a gaussian shape\n   * @param {object} [options = {}]\n   * @param {number} [options.factor = 6] - Number of time to take fwhm to calculate length. Default covers 99.99 % of area.\n   * @param {number} [options.length = fwhm * factor + 1] - total number of points to calculate\n   * @return {Float64Array} y values\n   */\n\n  getData(options = {}) {\n    let { length, factor = this.getFactor() } = options;\n\n    if (!length) {\n      length = Math.min(Math.ceil(this.fwhm * factor), Math.pow(2, 25) - 1);\n      if (length % 2 === 0) length++;\n    }\n\n    const center = (length - 1) / 2;\n    const data = new Float64Array(length);\n    for (let i = 0; i <= center; i++) {\n      data[i] = this.fct(i - center) * this.height;\n      data[length - 1 - i] = data[i];\n    }\n\n    return data;\n  }\n\n  /**\n   * Return a parameterized function of a gaussian shape (see README for equation).\n   * @param {number} x - x value to calculate.\n   * @returns {number} - the y value of gaussian with the current parameters.\n   */\n  fct(x) {\n    return Gaussian.fct(x, this.fwhm);\n  }\n\n  /**\n   * Calculate the number of times FWHM allows to reach a specific area coverage\n   * @param {number} [area=0.9999]\n   * @returns {number}\n   */\n  getFactor(area = 0.9999) {\n    return Gaussian.getFactor(area);\n  }\n\n  /**\n   * Calculate the area of the shape.\n   * @returns {number} - returns the area.\n   */\n\n  getArea() {\n    return Gaussian.getArea(this.fwhm, { height: this.height });\n  }\n\n  /**\n   * Compute the value of Full Width at Half Maximum (FWHM) from the width between the inflection points.\n   * //https://mathworld.wolfram.com/GaussianFunction.html\n   * @param {number} width - Width between the inflection points\n   * @returns {number} fwhm\n   */\n  widthToFWHM(width) {\n    //https://mathworld.wolfram.com/GaussianFunction.html\n    return Gaussian.widthToFWHM(width);\n  }\n\n  /**\n   * Compute the value of width between the inflection points from Full Width at Half Maximum (FWHM).\n   * //https://mathworld.wolfram.com/GaussianFunction.html\n   * @param {number} fwhm - Full Width at Half Maximum.\n   * @returns {number} width\n   */\n  fwhmToWidth(fwhm = this.fwhm) {\n    return Gaussian.fwhmToWidth(fwhm);\n  }\n\n  /**\n   * set a new full width at half maximum\n   * @param {number} fwhm - full width at half maximum\n   */\n  setFWHM(fwhm) {\n    this.fwhm = fwhm;\n  }\n\n  /**\n   * set a new height\n   * @param {number} height - The maximal intensity of the shape.\n   */\n  setHeight(height) {\n    this.height = height;\n  }\n}\n\n/**\n * Return a parameterized function of a gaussian shape (see README for equation).\n * @param {number} x - x value to calculate.\n * @param {number} fwhm - full width half maximum\n * @returns {number} - the y value of gaussian with the current parameters.\n */\nGaussian.fct = function fct(x, fwhm = 500) {\n  return Math.exp(GAUSSIAN_EXP_FACTOR * Math.pow(x / fwhm, 2));\n};\n\n/**\n * Compute the value of Full Width at Half Maximum (FWHM) from the width between the inflection points.\n * //https://mathworld.wolfram.com/GaussianFunction.html\n * @param {number} width - Width between the inflection points\n * @returns {number} fwhm\n */\nGaussian.widthToFWHM = function widthToFWHM(width) {\n  return width * ROOT_2LN2;\n};\n\n/**\n * Compute the value of width between the inflection points from Full Width at Half Maximum (FWHM).\n * //https://mathworld.wolfram.com/GaussianFunction.html\n * @param {number} fwhm - Full Width at Half Maximum.\n * @returns {number} width\n */\nGaussian.fwhmToWidth = function fwhmToWidth(fwhm) {\n  return fwhm / ROOT_2LN2;\n};\n\n/**\n * Calculate the area of a specific shape.\n * @param {number} fwhm - Full width at half maximum.\n * @param {object} [options = {}] - options.\n * @param {number} [options.height = 1] - Maximum y value of the shape.\n * @returns {number} - returns the area of the specific shape and parameters.\n */\n\nGaussian.getArea = function getArea(fwhm, options = {}) {\n  let { height = 1 } = options;\n  return (height * ROOT_PI_OVER_LN2 * fwhm) / 2;\n};\n\n/**\n * Calculate the number of times FWHM allows to reach a specific area coverage.\n * @param {number} [area=0.9999]\n * @returns {number}\n */\nGaussian.getFactor = function getFactor(area = 0.9999) {\n  return Math.sqrt(2) * erfinv(area);\n};\n","import { ROOT_THREE } from '../util/constants';\n\nexport class Lorentzian {\n  /**\n   * @param {object} [options = {}]\n   * @param {number} [options.height=2/(PI*FWHM)] Define the height of the peak, by default area=1 (normalized)\n   * @param {number} [options.fwhm = 500] - Full Width at Half Maximum in the number of points in FWHM.\n   * @param {number} [options.sd] - Standard deviation, if it's defined options.fwhm will be ignored and the value will be computed sd * Math.sqrt(8 * Math.LN2);\n   */\n  constructor(options = {}) {\n    this.fwhm = options.fwhm === undefined ? 500 : options.fwhm;\n    this.height =\n      options.height === undefined ? 2 / Math.PI / this.fwhm : options.height;\n  }\n  /**\n   * Calculate a lorentzian shape\n   * @param {object} [options = {}]\n   * @param {number} [options.factor = Math.tan(Math.PI * (0.9999 - 0.5))] - Number of time to take fwhm to calculate length. Default covers 99.99 % of area.\n   * @param {number} [options.length = fwhm * factor + 1] - total number of points to calculate\n   * @return {Float64Array} y values\n   */\n  getData(options = {}) {\n    let { length, factor = this.getFactor() } = options;\n\n    if (!length) {\n      length = Math.min(Math.ceil(this.fwhm * factor), Math.pow(2, 25) - 1);\n      if (length % 2 === 0) length++;\n    }\n\n    const center = (length - 1) / 2;\n    const data = new Float64Array(length);\n    for (let i = 0; i <= center; i++) {\n      data[i] = this.fct(i - center) * this.height;\n      data[length - 1 - i] = data[i];\n    }\n    return data;\n  }\n\n  /**\n   * Return a parameterized function of a lorentzian shape (see README for equation).\n   * @param {number} x - x value to calculate.\n   * @returns {number} - the y value of lorentzian with the current parameters.\n   */\n  fct(x) {\n    return Lorentzian.fct(x, this.fwhm);\n  }\n\n  /**\n   * Calculate the number of times FWHM allows to reach a specific area coverage\n   * @param {number} [area=0.9999]\n   * @returns {number}\n   */\n  getFactor(area = 0.9999) {\n    return Lorentzian.getFactor(area);\n  }\n\n  /**\n   * Calculate the area of the shape.\n   * @returns {number} - returns the area.\n   */\n\n  getArea() {\n    return Lorentzian.getArea(this.fwhm, { height: this.height });\n  }\n\n  /**\n   * Compute the value of width between the inflection points of a specific shape from Full Width at Half Maximum (FWHM).\n   * //https://mathworld.wolfram.com/LorentzianFunction.html\n   * @param {number} [fwhm] - Full Width at Half Maximum.\n   * @returns {number} width between the inflection points\n   */\n  fwhmToWidth(fwhm = this.fwhm) {\n    return Lorentzian.fwhmToWidth(fwhm);\n  }\n\n  /**\n   * Compute the value of Full Width at Half Maximum (FWHM) of a specific shape from the width between the inflection points.\n   * //https://mathworld.wolfram.com/LorentzianFunction.html\n   * @param {number} [width] Width between the inflection points\n   * @returns {number} fwhm\n   */\n  widthToFWHM(width) {\n    return Lorentzian.widthToFWHM(width);\n  }\n  /**\n   * set a new full width at half maximum\n   * @param {number} fwhm - full width at half maximum\n   */\n  setFWHM(fwhm) {\n    this.fwhm = fwhm;\n  }\n\n  /**\n   * set a new height\n   * @param {number} height - The maximal intensity of the shape.\n   */\n  setHeight(height) {\n    this.height = height;\n  }\n}\n\n/**\n * Return a parameterized function of a gaussian shape (see README for equation).\n * @param {number} x - x value to calculate.\n * @param {number} fwhm - full width half maximum\n * @returns {number} - the y value of gaussian with the current parameters.\n */\nLorentzian.fct = function fct(x, fwhm) {\n  const squareFWHM = fwhm * fwhm;\n  return squareFWHM / (4 * Math.pow(x, 2) + squareFWHM);\n};\n\n/**\n * Compute the value of width between the inflection points of a specific shape from Full Width at Half Maximum (FWHM).\n * //https://mathworld.wolfram.com/LorentzianFunction.html\n * @param {number} [fwhm] - Full Width at Half Maximum.\n * @returns {number} width between the inflection points\n */\nLorentzian.fwhmToWidth = function fwhmToWidth(fwhm) {\n  return fwhm / ROOT_THREE;\n};\n\n/**\n * Compute the value of Full Width at Half Maximum (FWHM) of a specific shape from the width between the inflection points.\n * //https://mathworld.wolfram.com/LorentzianFunction.html\n * @param {number} [width] Width between the inflection points\n * @returns {number} fwhm\n */\nLorentzian.widthToFWHM = function widthToFWHM(width) {\n  return width * ROOT_THREE;\n};\n\n/**\n * Calculate the area of a specific shape.\n * @param {number} fwhm - Full width at half maximum.\n * @param {*} [options = {}] - options.\n * @param {number} [options.height = 1] - Maximum y value of the shape.\n * @returns {number} - returns the area of the specific shape and parameters.\n */\nLorentzian.getArea = function getArea(fwhm, options = {}) {\n  let { height = 1 } = options;\n\n  return (height * Math.PI * fwhm) / 2;\n};\n\n/**\n * Calculate the number of times FWHM allows to reach a specific area coverage\n * @param {number} [area=0.9999]\n * @returns {number}\n */\nLorentzian.getFactor = function getFactor(area = 0.9999) {\n  return 2 * Math.tan(Math.PI * (area - 0.5));\n};\n","import {\n  GAUSSIAN_EXP_FACTOR,\n  ROOT_2LN2_MINUS_ONE,\n  ROOT_PI_OVER_LN2,\n} from '../util/constants';\n\nimport { Gaussian } from './Gaussian';\nimport { Lorentzian } from './Lorentzian';\n\nexport class PseudoVoigt {\n  /**\n   * @param {object} [options={}]\n   * @param {number} [options.height=1/(mu*FWHM/sqrt(4*LN2/PI)+(1-mu)*fwhm*PI*0.5)] Define the height of the peak, by default area=1 (normalized)\n   * @param {number} [options.fwhm=500] - Full Width at Half Maximum in the number of points in FWHM.\n   * @param {number} [options.mu=0.5] - ratio of gaussian contribution.\n   */\n\n  constructor(options = {}) {\n    this.mu = options.mu === undefined ? 0.5 : options.mu;\n    this.fwhm = options.fwhm === undefined ? 500 : options.fwhm;\n    this.height =\n      options.height === undefined\n        ? 1 /\n          ((this.mu / Math.sqrt(-GAUSSIAN_EXP_FACTOR / Math.PI)) * this.fwhm +\n            ((1 - this.mu) * this.fwhm * Math.PI) / 2)\n        : options.height;\n  }\n\n  /**\n   * Calculate a linear combination of gaussian and lorentzian function width an same full width at half maximum\n   * @param { object } [options = {}]\n   * @param { number } [options.factor = 2 * Math.tan(Math.PI * (0.9999 - 0.5))] - Number of time to take fwhm in the calculation of the length.Default covers 99.99 % of area.\n   * @param { number } [options.length = fwhm * factor + 1] - total number of points to calculate\n   * @return { object } - { fwhm, data<Float64Array>} - An with the number of points at half maximum and the array of y values covering the 99.99 % of the area.\n   */\n\n  getData(options = {}) {\n    let { length, factor = this.getFactor() } = options;\n    if (!length) {\n      length = Math.ceil(this.fwhm * factor);\n      if (length % 2 === 0) length++;\n    }\n\n    const center = (length - 1) / 2;\n\n    let data = new Float64Array(length);\n    for (let i = 0; i <= center; i++) {\n      data[i] = this.fct(i - center) * this.height;\n      data[length - 1 - i] = data[i];\n    }\n\n    return data;\n  }\n\n  /**\n   * Return a parameterized function of a linear combination of Gaussian and Lorentzian shapes where the full width at half maximum are the same for both kind of shapes (see README for equation).\n   * @param {number} [x] x value to calculate.\n   * @returns {number} - the y value of a pseudo voigt with the current parameters.\n   */\n\n  fct(x) {\n    return PseudoVoigt.fct(x, this.fwhm, this.mu);\n  }\n\n  /**\n   * Calculate the number of times FWHM allows to reach a specific area coverage\n   * @param {number} [area=0.9999] - required area to be coverage\n   * @param {number} [mu=this.mu] - ratio of gaussian contribution.\n   * @returns {number}\n   */\n  getFactor(area = 0.9999, mu = this.mu) {\n    return PseudoVoigt.getFactor(area, mu);\n  }\n\n  /**\n   * Calculate the area of the shape.\n   * @returns {number} - returns the area.\n   */\n  getArea() {\n    return PseudoVoigt.getArea(this.fwhm, { height: this.height, mu: this.mu });\n  }\n\n  /**\n   * Compute the value of Full Width at Half Maximum (FMHM) from width between the inflection points.\n   * @param {number} width - width between the inflection points\n   * @param {number} [mu = 0.5] - ratio of gaussian contribution.\n   * @returns {number} Full Width at Half Maximum (FMHM).\n   */\n  widthToFWHM(width, mu) {\n    return PseudoVoigt.widthToFWHM(width, mu);\n  }\n  /**\n   * Compute the value of width between the inflection points from Full Width at Half Maximum (FWHM).\n   * @param {number} fwhm - Full Width at Half Maximum.\n   * @param {number} [mu] - ratio of gaussian contribution.\n   * @returns {number} width between the inflection points.\n   */\n  fwhmToWidth(fwhm = this.fwhm, mu = this.mu) {\n    return PseudoVoigt.fwhmToWidth(fwhm, mu);\n  }\n\n  /**\n   * set a new full width at half maximum\n   * @param {number} fwhm - full width at half maximum\n   */\n  setFWHM(fwhm) {\n    this.fwhm = fwhm;\n  }\n\n  /**\n   * set a new height\n   * @param {number} height - The maximal intensity of the shape.\n   */\n  setHeight(height) {\n    this.height = height;\n  }\n\n  /**\n   * set a new mu\n   * @param {number} mu - ratio of gaussian contribution.\n   */\n  setMu(mu) {\n    this.mu = mu;\n  }\n}\n\n/**\n * Return a parameterized function of a gaussian shape (see README for equation).\n * @param {number} x - x value to calculate.\n * @param {number} fwhm - full width half maximum\n * @param {number} [mu=0.5] - ratio of gaussian contribution.\n * @returns {number} - the y value of gaussian with the current parameters.\n */\nPseudoVoigt.fct = function fct(x, fwhm, mu = 0.5) {\n  return (1 - mu) * Lorentzian.fct(x, fwhm) + mu * Gaussian.fct(x, fwhm);\n};\n\n/**\n * Compute the value of Full Width at Half Maximum (FMHM) from width between the inflection points.\n * @param {number} width - width between the inflection points\n * @param {number} [mu = 0.5] - ratio of gaussian contribution.\n * @returns {number} Full Width at Half Maximum (FMHM).\n */\nPseudoVoigt.widthToFWHM = function widthToFWHM(width, mu = 0.5) {\n  return width * (mu * ROOT_2LN2_MINUS_ONE + 1);\n};\n/**\n * Compute the value of width between the inflection points from Full Width at Half Maximum (FWHM).\n * @param {number} fwhm - Full Width at Half Maximum.\n * @param {number} [mu = 0.5] - ratio of gaussian contribution.\n * @returns {number} width between the inflection points.\n */\nPseudoVoigt.fwhmToWidth = function fwhmToWidth(fwhm, mu = 0.5) {\n  return fwhm / (mu * ROOT_2LN2_MINUS_ONE + 1);\n};\n\n/**\n * Calculate the area of a specific shape.\n * @param {number} fwhm - Full width at half maximum.\n * @param {*} [options = {}] - options.\n * @param {number} [options.height = 1] - Maximum y value of the shape.\n * @param {number} [options.mu = 0.5] - ratio of gaussian contribution.\n * @returns {number} - returns the area of the specific shape and parameters.\n */\nPseudoVoigt.getArea = function getArea(fwhm, options = {}) {\n  let { height = 1, mu = 0.5 } = options;\n  return (fwhm * height * (mu * ROOT_PI_OVER_LN2 + (1 - mu) * Math.PI)) / 2;\n};\n\n/**\n * Calculate the number of times FWHM allows to reach a specific area coverage\n * @param {number} [area=0.9999] - required area to be coverage\n * @param {number} [mu=this.mu] - ratio of gaussian contribution.\n * @returns {number}\n */\nPseudoVoigt.getFactor = function getFactor(area = 0.9999, mu = 0.5) {\n  return mu < 1 ? Lorentzian.getFactor(area) : Gaussian.getFactor(area);\n};\n","import { ROOT_2LN2, GAUSSIAN_EXP_FACTOR } from '../util/constants';\nimport erfinv from '../util/erfinv';\n\nlet axis = ['x', 'y'];\n\nexport class Gaussian2D {\n  /**\n   * @param {object} [options = {}]\n   * @param {number} [options.height=4*LN2/(PI*xFWHM*yFWHM)] Define the height of the peak, by default area=1 (normalized).\n   * @param {number} [options.fwhm = 500] - Full Width at Half Maximum in the number of points in FWHM used if x or y has not the fwhm property.\n   * @param {object} [options.x] - Options for x axis.\n   * @param {number} [options.x.fwhm = fwhm] - Full Width at Half Maximum in the number of points in FWHM for x axis.\n   * @param {number} [options.x.sd] - Standard deviation for x axis, if it's defined options.x.fwhm will be ignored and the value will be computed sd * Math.sqrt(8 * Math.LN2);\n   * @param {object} [options.y] - Options for y axis.\n   * @param {number} [options.y.fwhm = fwhm] - Full Width at Half Maximum in the number of points in FWHM for y axis.\n   * @param {number} [options.y.sd] - Standard deviation for y axis, if it's defined options.y.fwhm will be ignored and the value will be computed sd * Math.sqrt(8 * Math.LN2);\n   */\n  constructor(options = {}) {\n    let { fwhm: globalFWHM = 500 } = options;\n\n    for (let i of axis) {\n      let fwhm;\n      if (!options[i]) {\n        fwhm = globalFWHM;\n      } else {\n        fwhm = options[i].sd\n          ? Gaussian2D.widthToFWHM(2 * options[i].sd)\n          : options[i].fwhm || globalFWHM;\n      }\n      this[i] = { fwhm };\n    }\n\n    this.height =\n      options.height === undefined\n        ? -GAUSSIAN_EXP_FACTOR / Math.PI / this.x.fwhm / this.y.fwhm\n        : options.height;\n  }\n  /**\n   * Calculate a Gaussian2D shape\n   * @param {object} [options = {}]\n   * @param {number} [options.factor] - Number of time to take fwhm to calculate length. Default covers 99.99 % of area.\n   * @param {object} [options.x] - parameter for x axis.\n   * @param {number} [options.x.length=fwhm*factor+1] - length on x axis.\n   * @param {number} [options.x.factor=factor] - Number of time to take fwhm to calculate length. Default covers 99.99 % of area.\n   * @param {object} [options.y] - parameter for y axis.\n   * @param {number} [options.y.length=fwhm*factor+1] - length on y axis.\n   * @param {number} [options.y.factor=factor] - Number of time to take fwhm to calculate length. Default covers 99.99 % of area.\n   * @return {Array<Float64Array>} - z values.\n   */\n\n  getData(options = {}) {\n    let { x = {}, y = {}, factor = this.getFactor(), length } = options;\n\n    let xLength = x.length || length;\n    if (!xLength) {\n      let { factor: xFactor = factor } = x;\n      xLength = Math.min(Math.ceil(this.x.fwhm * xFactor), Math.pow(2, 25) - 1);\n      if (xLength % 2 === 0) xLength++;\n    }\n\n    let yLength = y.length || length;\n    if (!yLength) {\n      let { factor: yFactor = factor } = y;\n      yLength = Math.min(Math.ceil(this.y.fwhm * yFactor), Math.pow(2, 25) - 1);\n      if (yLength % 2 === 0) yLength++;\n    }\n\n    const xCenter = (xLength - 1) / 2;\n    const yCenter = (yLength - 1) / 2;\n    const data = new Array(xLength);\n    for (let i = 0; i < xLength; i++) {\n      data[i] = new Array(yLength);\n    }\n\n    for (let i = 0; i < xLength; i++) {\n      for (let j = 0; j < yLength; j++) {\n        data[i][j] = this.fct(i - xCenter, j - yCenter) * this.height;\n      }\n    }\n\n    return data;\n  }\n\n  /**\n   * Return the intensity value of a 2D gaussian shape (see README for equation).\n   * @param {number} x - x value to calculate.\n   * @param {number} y - y value to calculate.\n   * @returns {number} - the z value of bi-dimensional gaussian with the current parameters.\n   */\n  fct(x, y) {\n    return Gaussian2D.fct(x, y, this.x.fwhm, this.y.fwhm);\n  }\n\n  /**\n   * Calculate the number of times FWHM allows to reach a specific volume coverage.\n   * @param {number} [volume=0.9999]\n   * @returns {number}\n   */\n  getFactor(volume = 0.9999) {\n    return Gaussian2D.getFactor(volume);\n  }\n\n  /**\n   * Calculate the volume of the shape.\n   * @returns {number} - returns the volume.\n   */\n\n  getVolume() {\n    return Gaussian2D.getVolume(this.x.fwhm, this.y.fwhm, {\n      height: this.height,\n    });\n  }\n\n  /**\n   * Compute the value of Full Width at Half Maximum (FWHM) from the width between the inflection points.\n   * //https://mathworld.wolfram.com/Gaussian2DFunction.html\n   * @param {number} width - Width between the inflection points\n   * @returns {number} fwhm\n   */\n  widthToFWHM(width) {\n    //https://mathworld.wolfram.com/Gaussian2DFunction.html\n    return Gaussian2D.widthToFWHM(width);\n  }\n\n  /**\n   * Compute the value of width between the inflection points from Full Width at Half Maximum (FWHM).\n   * //https://mathworld.wolfram.com/Gaussian2DFunction.html\n   * @param {number} fwhm - Full Width at Half Maximum.\n   * @returns {number} width\n   */\n  fwhmToWidth(fwhm = this.x.fwhm) {\n    return Gaussian2D.fwhmToWidth(fwhm);\n  }\n\n  /**\n   * set a new full width at half maximum\n   * @param {number} fwhm - full width at half maximum\n   * @param {string|Array<string>} axisLabel - label of axis, if it is undefined fwhm is set to both axis.\n   */\n  setFWHM(fwhm, axisLabel) {\n    if (!axisLabel) axisLabel = axis;\n    if (!Array.isArray(axisLabel)) axisLabel = [axisLabel];\n    for (let i of axisLabel) {\n      let axisName = i.toLowerCase();\n      if (axisName !== 'y' && axisName !== 'x') {\n        throw new Error('axis label should be x or y');\n      }\n      this[axisName].fwhm = fwhm;\n    }\n  }\n\n  /**\n   * set a new height\n   * @param {number} height - The maximal intensity of the shape.\n   */\n  setHeight(height) {\n    this.height = height;\n  }\n}\n\n/**\n * Return a parameterized function of a Gaussian2D shape (see README for equation).\n * @param {number} x - x value to calculate.\n * @param {number} y - y value to calculate.\n * @param {number} fwhmX - full width half maximum in the x axis.\n * @param {number} fwhmY - full width half maximum in the y axis.\n * @returns {number} - the z value of bi-dimensional gaussian with the current parameters.\n */\nGaussian2D.fct = function fct(x, y, xFWHM = 500, yFWHM = 500) {\n  return Math.exp(\n    GAUSSIAN_EXP_FACTOR * (Math.pow(x / xFWHM, 2) + Math.pow(y / yFWHM, 2)),\n  );\n};\n\n/**\n * Compute the value of Full Width at Half Maximum (FWHM) from the width between the inflection points.\n * //https://mathworld.wolfram.com/Gaussian2DFunction.html\n * @param {number} width - Width between the inflection points\n * @returns {number} fwhm\n */\nGaussian2D.widthToFWHM = function widthToFWHM(width) {\n  return width * ROOT_2LN2;\n};\n\n/**\n * Compute the value of width between the inflection points from Full Width at Half Maximum (FWHM).\n * //https://mathworld.wolfram.com/Gaussian2DFunction.html\n * @param {number} fwhm - Full Width at Half Maximum.\n * @returns {number} width\n */\nGaussian2D.fwhmToWidth = function fwhmToWidth(fwhm) {\n  return fwhm / ROOT_2LN2;\n};\n\n/**\n * Calculate the volume of a specific shape.\n * @param {number} xFWHM - Full width at half maximum for x axis.\n * @param {number} yFWHM - Full width at half maximum for y axis.\n * @param {object} [options = {}] - options.\n * @param {number} [options.height = 1] - Maximum z value of the shape.\n * @returns {number} - returns the area of the specific shape and parameters.\n */\n\nGaussian2D.getVolume = function getVolume(xFWHM, yFWHM, options = {}) {\n  let { height = 1 } = options;\n  return (height * Math.PI * xFWHM * yFWHM) / Math.LN2 / 4;\n};\n\n/**@TODO look for a better factor\n * Calculate the number of times FWHM allows to reach a specific volume coverage.\n * @param {number} [volume=0.9999]\n * @returns {number}\n */\nGaussian2D.getFactor = function getFactor(volume = 0.9999) {\n  return Math.sqrt(2) * erfinv(volume);\n};\n","/**\n * Apply Savitzky Golay algorithm\n * @param {array} [ys] Array of y values\n * @param {array|number} [xs] Array of X or deltaX\n * @param {object} [options={}]\n * @param {number} [options.windowSize=9]\n * @param {number} [options.derivative=0]\n * @param {number} [options.polynomial=3]\n * @return {array} Array containing the new ys (same length)\n */\n\nexport default function SavitzkyGolay(ys, xs, options = {}) {\n  let { windowSize = 9, derivative = 0, polynomial = 3 } = options;\n\n  if (windowSize % 2 === 0 || windowSize < 5 || !Number.isInteger(windowSize)) {\n    throw new RangeError(\n      'Invalid window size (should be odd and at least 5 integer number)',\n    );\n  }\n  if (windowSize > ys.length) {\n    throw new RangeError(\n      `Window size is higher than the data length ${windowSize}>${ys.length}`,\n    );\n  }\n  if (derivative < 0 || !Number.isInteger(derivative)) {\n    throw new RangeError('Derivative should be a positive integer');\n  }\n  if (polynomial < 1 || !Number.isInteger(polynomial)) {\n    throw new RangeError('Polynomial should be a positive integer');\n  }\n  if (polynomial >= 6) {\n    // eslint-disable-next-line no-console\n    console.warn(\n      'You should not use polynomial grade higher than 5 if you are' +\n        ' not sure that your data arises from such a model. Possible polynomial oscillation problems',\n    );\n  }\n\n  let half = Math.floor(windowSize / 2);\n  let np = ys.length;\n  let ans = new Array(np);\n  let weights = fullWeights(windowSize, polynomial, derivative);\n  let hs = 0;\n  let constantH = true;\n  if (Array.isArray(xs)) {\n    constantH = false;\n  } else {\n    hs = Math.pow(xs, derivative);\n  }\n\n  //For the borders\n  for (let i = 0; i < half; i++) {\n    let wg1 = weights[half - i - 1];\n    let wg2 = weights[half + i + 1];\n    let d1 = 0;\n    let d2 = 0;\n    for (let l = 0; l < windowSize; l++) {\n      d1 += wg1[l] * ys[l];\n      d2 += wg2[l] * ys[np - windowSize + l];\n    }\n    if (constantH) {\n      ans[half - i - 1] = d1 / hs;\n      ans[np - half + i] = d2 / hs;\n    } else {\n      hs = getHs(xs, half - i - 1, half, derivative);\n      ans[half - i - 1] = d1 / hs;\n      hs = getHs(xs, np - half + i, half, derivative);\n      ans[np - half + i] = d2 / hs;\n    }\n  }\n\n  //For the internal points\n  let wg = weights[half];\n  for (let i = windowSize; i <= np; i++) {\n    let d = 0;\n    for (let l = 0; l < windowSize; l++) d += wg[l] * ys[l + i - windowSize];\n    if (!constantH) hs = getHs(xs, i - half - 1, half, derivative);\n    ans[i - half - 1] = d / hs;\n  }\n  return ans;\n}\n\nfunction getHs(h, center, half, derivative) {\n  let hs = 0;\n  let count = 0;\n  for (let i = center - half; i < center + half; i++) {\n    if (i >= 0 && i < h.length - 1) {\n      hs += h[i + 1] - h[i];\n      count++;\n    }\n  }\n  return Math.pow(hs / count, derivative);\n}\n\nfunction GramPoly(i, m, k, s) {\n  let Grampoly = 0;\n  if (k > 0) {\n    Grampoly =\n      ((4 * k - 2) / (k * (2 * m - k + 1))) *\n        (i * GramPoly(i, m, k - 1, s) + s * GramPoly(i, m, k - 1, s - 1)) -\n      (((k - 1) * (2 * m + k)) / (k * (2 * m - k + 1))) *\n        GramPoly(i, m, k - 2, s);\n  } else {\n    if (k === 0 && s === 0) {\n      Grampoly = 1;\n    } else {\n      Grampoly = 0;\n    }\n  }\n  return Grampoly;\n}\n\nfunction GenFact(a, b) {\n  let gf = 1;\n  if (a >= b) {\n    for (let j = a - b + 1; j <= a; j++) {\n      gf *= j;\n    }\n  }\n  return gf;\n}\n\nfunction Weight(i, t, m, n, s) {\n  let sum = 0;\n  for (let k = 0; k <= n; k++) {\n    //console.log(k);\n    sum +=\n      (2 * k + 1) *\n      (GenFact(2 * m, k) / GenFact(2 * m + k + 1, k + 1)) *\n      GramPoly(i, m, k, 0) *\n      GramPoly(t, m, k, s);\n  }\n  return sum;\n}\n\n/**\n *\n * @param m  Number of points\n * @param n  Polynomial grade\n * @param s  Derivative\n */\nfunction fullWeights(m, n, s) {\n  let weights = new Array(m);\n  let np = Math.floor(m / 2);\n  for (let t = -np; t <= np; t++) {\n    weights[t + np] = new Array(m);\n    for (let j = -np; j <= np; j++) {\n      weights[t + np][j + np] = Weight(j, t, np, n, s);\n    }\n  }\n  return weights;\n}\n\n/*function entropy(data,h,options){\n    var trend = SavitzkyGolay(data,h,trendOptions);\n    var copy = new Array(data.length);\n    var sum = 0;\n    var max = 0;\n    for(var i=0;i<data.length;i++){\n        copy[i] = data[i]-trend[i];\n    }\n\n    sum/=data.length;\n    console.log(sum+\" \"+max);\n    console.log(stat.array.standardDeviation(copy));\n    console.log(Math.abs(stat.array.mean(copy))/stat.array.standardDeviation(copy));\n    return sum;\n\n}\n\n\n\nfunction guessWindowSize(data, h){\n    console.log(\"entropy \"+entropy(data,h,trendOptions));\n    return 5;\n}\n*/\n","import { getShapeGenerator } from 'ml-peak-shape-generator';\nimport SG from 'ml-savitzky-golay-generalized';\n\n/**\n * Global spectra deconvolution\n * @param {object} data - Object data with x and y arrays\n * @param {Array<number>} [data.x] - Independent variable\n * @param {Array<number>} [data.y] - Dependent variable\n * @param {object} [options={}] - Options object\n * @param {object} [options.shape={}] - Object that specified the kind of shape to calculate the FWHM instead of width between inflection points. see https://mljs.github.io/peak-shape-generator/#inflectionpointswidthtofwhm\n * @param {object} [options.shape.kind='gaussian']\n * @param {object} [options.shape.options={}]\n * @param {object} [options.sgOptions] - Options object for Savitzky-Golay filter. See https://github.com/mljs/savitzky-golay-generalized#options\n * @param {number} [options.sgOptions.windowSize = 9] - points to use in the approximations\n * @param {number} [options.sgOptions.polynomial = 3] - degree of the polynomial to use in the approximations\n * @param {number} [options.minMaxRatio = 0.00025] - Threshold to determine if a given peak should be considered as a noise\n * @param {number} [options.broadRatio = 0.00] - If `broadRatio` is higher than 0, then all the peaks which second derivative\n * smaller than `broadRatio * maxAbsSecondDerivative` will be marked with the soft mask equal to true.\n * @param {number} [options.noiseLevel = 0] - Noise threshold in spectrum units\n * @param {boolean} [options.maxCriteria = true] - Peaks are local maximum(true) or minimum(false)\n * @param {boolean} [options.smoothY = true] - Select the peak intensities from a smoothed version of the independent variables\n * @param {boolean} [options.realTopDetection = false] - Use a quadratic optimizations with the peak and its 3 closest neighbors\n * to determine the true x,y values of the peak?\n * @param {number} [options.heightFactor = 0] - Factor to multiply the calculated height (usually 2)\n * @param {number} [options.derivativeThreshold = -1] - Filters based on the amplitude of the first derivative\n * @return {Array<object>}\n */\nexport function gsd(data, options = {}) {\n  let {\n    noiseLevel,\n    sgOptions = {\n      windowSize: 9,\n      polynomial: 3,\n    },\n    shape = {},\n    smoothY = true,\n    heightFactor = 0,\n    broadRatio = 0.0,\n    maxCriteria = true,\n    minMaxRatio = 0.00025,\n    derivativeThreshold = -1,\n    realTopDetection = false,\n  } = options;\n\n  let { y: yIn, x } = data;\n\n  const y = yIn.slice();\n  let equalSpaced = isEqualSpaced(x);\n\n  if (maxCriteria === false) {\n    for (let i = 0; i < y.length; i++) {\n      y[i] *= -1;\n    }\n  }\n\n  if (noiseLevel === undefined) {\n    noiseLevel = equalSpaced ? getNoiseLevel(y) : 0;\n  }\n  for (let i = 0; i < y.length; i++) {\n    y[i] -= noiseLevel;\n  }\n  for (let i = 0; i < y.length; i++) {\n    if (y[i] < 0) {\n      y[i] = 0;\n    }\n  }\n  // If the max difference between delta x is less than 5%, then,\n  // we can assume it to be equally spaced variable\n  let yData = y;\n  let dY, ddY;\n  const { windowSize, polynomial } = sgOptions;\n\n  if (equalSpaced) {\n    if (smoothY) {\n      yData = SG(y, x[1] - x[0], {\n        windowSize,\n        polynomial,\n        derivative: 0,\n      });\n    }\n    dY = SG(y, x[1] - x[0], {\n      windowSize,\n      polynomial,\n      derivative: 1,\n    });\n    ddY = SG(y, x[1] - x[0], {\n      windowSize,\n      polynomial,\n      derivative: 2,\n    });\n  } else {\n    if (smoothY) {\n      yData = SG(y, x, {\n        windowSize,\n        polynomial,\n        derivative: 0,\n      });\n    }\n    dY = SG(y, x, {\n      windowSize,\n      polynomial,\n      derivative: 1,\n    });\n    ddY = SG(y, x, {\n      windowSize,\n      polynomial,\n      derivative: 2,\n    });\n  }\n\n  const xData = x;\n  const dX = x[1] - x[0];\n  let maxDdy = 0;\n  let maxY = 0;\n  for (let i = 0; i < yData.length; i++) {\n    if (Math.abs(ddY[i]) > maxDdy) {\n      maxDdy = Math.abs(ddY[i]);\n    }\n    if (Math.abs(yData[i]) > maxY) {\n      maxY = Math.abs(yData[i]);\n    }\n  }\n\n  let lastMax = null;\n  let lastMin = null;\n  let minddY = [];\n  let intervalL = [];\n  let intervalR = [];\n  let broadMask = [];\n\n  // By the intermediate value theorem We cannot find 2 consecutive maximum or minimum\n  for (let i = 1; i < yData.length - 1; ++i) {\n    // filter based on derivativeThreshold\n    // console.log('pasa', y[i], dY[i], ddY[i]);\n    if (Math.abs(dY[i]) > derivativeThreshold) {\n      // Minimum in first derivative\n      if (\n        (dY[i] < dY[i - 1] && dY[i] <= dY[i + 1]) ||\n        (dY[i] <= dY[i - 1] && dY[i] < dY[i + 1])\n      ) {\n        lastMin = {\n          x: xData[i],\n          index: i,\n        };\n        if (dX > 0 && lastMax !== null) {\n          intervalL.push(lastMax);\n          intervalR.push(lastMin);\n        }\n      }\n\n      // Maximum in first derivative\n      if (\n        (dY[i] >= dY[i - 1] && dY[i] > dY[i + 1]) ||\n        (dY[i] > dY[i - 1] && dY[i] >= dY[i + 1])\n      ) {\n        lastMax = {\n          x: xData[i],\n          index: i,\n        };\n        if (dX < 0 && lastMin !== null) {\n          intervalL.push(lastMax);\n          intervalR.push(lastMin);\n        }\n      }\n    }\n\n    // Minimum in second derivative\n    if (ddY[i] < ddY[i - 1] && ddY[i] < ddY[i + 1]) {\n      minddY.push(i);\n      broadMask.push(Math.abs(ddY[i]) <= broadRatio * maxDdy);\n    }\n  }\n\n  let widthProcessor = shape.kind\n    ? getShapeGenerator(shape.kind, shape.options).widthToFWHM\n    : (x) => x;\n\n  let signals = [];\n  let lastK = -1;\n  let possible, frequency, distanceJ, minDistance, gettingCloser;\n  for (let j = 0; j < minddY.length; ++j) {\n    frequency = xData[minddY[j]];\n    possible = -1;\n    let k = lastK + 1;\n    minDistance = Number.MAX_VALUE;\n    distanceJ = 0;\n    gettingCloser = true;\n    while (possible === -1 && k < intervalL.length && gettingCloser) {\n      distanceJ = Math.abs(frequency - (intervalL[k].x + intervalR[k].x) / 2);\n\n      // Still getting closer?\n      if (distanceJ < minDistance) {\n        minDistance = distanceJ;\n      } else {\n        gettingCloser = false;\n      }\n      if (distanceJ < Math.abs(intervalL[k].x - intervalR[k].x) / 2) {\n        possible = k;\n        lastK = k;\n      }\n      ++k;\n    }\n\n    if (possible !== -1) {\n      if (Math.abs(yData[minddY[j]]) > minMaxRatio * maxY) {\n        let width = Math.abs(intervalR[possible].x - intervalL[possible].x);\n        signals.push({\n          index: minddY[j],\n          x: frequency,\n          y: maxCriteria\n            ? yData[minddY[j]] + noiseLevel\n            : -yData[minddY[j]] - noiseLevel,\n          width: widthProcessor(width),\n          soft: broadMask[j],\n        });\n\n        signals[signals.length - 1].left = intervalL[possible];\n        signals[signals.length - 1].right = intervalR[possible];\n\n        if (heightFactor) {\n          let yLeft = yData[intervalL[possible].index];\n          let yRight = yData[intervalR[possible].index];\n          signals[signals.length - 1].height =\n            heightFactor *\n            (signals[signals.length - 1].y - (yLeft + yRight) / 2);\n        }\n      }\n    }\n  }\n\n  if (realTopDetection) {\n    determineRealTop(signals, xData, yData);\n  }\n\n  // Correct the values to fit the original spectra data\n  for (let j = 0; j < signals.length; j++) {\n    signals[j].base = noiseLevel;\n  }\n\n  signals.sort(function (a, b) {\n    return a.x - b.x;\n  });\n\n  return signals;\n}\n\nconst isEqualSpaced = (x) => {\n  let tmp;\n  let maxDx = 0;\n  let minDx = Number.MAX_SAFE_INTEGER;\n  for (let i = 0; i < x.length - 1; ++i) {\n    tmp = Math.abs(x[i + 1] - x[i]);\n    if (tmp < minDx) {\n      minDx = tmp;\n    }\n    if (tmp > maxDx) {\n      maxDx = tmp;\n    }\n  }\n  return (maxDx - minDx) / maxDx < 0.05;\n};\n\nconst getNoiseLevel = (y) => {\n  let mean = 0;\n\n  let stddev = 0;\n  let length = y.length;\n  for (let i = 0; i < length; ++i) {\n    mean += y[i];\n  }\n  mean /= length;\n  let averageDeviations = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    averageDeviations[i] = Math.abs(y[i] - mean);\n  }\n  averageDeviations.sort((a, b) => a - b);\n  if (length % 2 === 1) {\n    stddev = averageDeviations[(length - 1) / 2] / 0.6745;\n  } else {\n    stddev =\n      (0.5 *\n        (averageDeviations[length / 2] + averageDeviations[length / 2 - 1])) /\n      0.6745;\n  }\n\n  return stddev;\n};\n\nconst determineRealTop = (peakList, x, y) => {\n  let alpha, beta, gamma, p, currentPoint;\n  for (let j = 0; j < peakList.length; j++) {\n    currentPoint = peakList[j].index; // peakList[j][2];\n    // The detected peak could be moved 1 or 2 units to left or right.\n    if (\n      y[currentPoint - 1] >= y[currentPoint - 2] &&\n      y[currentPoint - 1] >= y[currentPoint]\n    ) {\n      currentPoint--;\n    } else {\n      if (\n        y[currentPoint + 1] >= y[currentPoint] &&\n        y[currentPoint + 1] >= y[currentPoint + 2]\n      ) {\n        currentPoint++;\n      } else {\n        if (\n          y[currentPoint - 2] >= y[currentPoint - 3] &&\n          y[currentPoint - 2] >= y[currentPoint - 1]\n        ) {\n          currentPoint -= 2;\n        } else {\n          if (\n            y[currentPoint + 2] >= y[currentPoint + 1] &&\n            y[currentPoint + 2] >= y[currentPoint + 3]\n          ) {\n            currentPoint += 2;\n          }\n        }\n      }\n    }\n    // interpolation to a sin() function\n    if (\n      y[currentPoint - 1] > 0 &&\n      y[currentPoint + 1] > 0 &&\n      y[currentPoint] >= y[currentPoint - 1] &&\n      y[currentPoint] >= y[currentPoint + 1] &&\n      (y[currentPoint] !== y[currentPoint - 1] ||\n        y[currentPoint] !== y[currentPoint + 1])\n    ) {\n      alpha = 20 * Math.log10(y[currentPoint - 1]);\n      beta = 20 * Math.log10(y[currentPoint]);\n      gamma = 20 * Math.log10(y[currentPoint + 1]);\n      p = (0.5 * (alpha - gamma)) / (alpha - 2 * beta + gamma);\n      // console.log(alpha, beta, gamma, `p: ${p}`);\n      // console.log(x[currentPoint]+\" \"+tmp+\" \"+currentPoint);\n      peakList[j].x =\n        x[currentPoint] + (x[currentPoint] - x[currentPoint - 1]) * p;\n      peakList[j].y =\n        y[currentPoint] -\n        0.25 * (y[currentPoint - 1] - y[currentPoint + 1]) * p;\n    }\n  }\n};\n","import { Gaussian } from '../classes/Gaussian';\nimport { Gaussian2D } from '../classes/Gaussian2D';\nimport { Lorentzian } from '../classes/Lorentzian';\nimport { PseudoVoigt } from '../classes/PseudoVoigt';\n\nexport function getShapeGenerator(options) {\n  let { kind = 'Gaussian', options: shapeOptions } = options;\n  switch (kind.toLowerCase().replace(/[^a-z^0-9]/g, '')) {\n    case 'gaussian':\n      return new Gaussian(shapeOptions);\n    case 'lorentzian':\n      return new Lorentzian(shapeOptions);\n    case 'pseudovoigt':\n      return new PseudoVoigt(shapeOptions);\n    case 'gaussian2d':\n      return new Gaussian2D(shapeOptions);\n    default:\n      throw new Error(`Unknown kind: ${kind}`);\n  }\n}\n","import isArray from 'is-any-array';\nimport max from 'ml-array-max';\nimport min from 'ml-array-min';\n\nfunction rescale(input) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  } else if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var output;\n\n  if (options.output !== undefined) {\n    if (!isArray(options.output)) {\n      throw new TypeError('output option must be an array if specified');\n    }\n\n    output = options.output;\n  } else {\n    output = new Array(input.length);\n  }\n\n  var currentMin = min(input);\n  var currentMax = max(input);\n\n  if (currentMin === currentMax) {\n    throw new RangeError('minimum and maximum input values are equal. Cannot rescale a constant array');\n  }\n\n  var _options$min = options.min,\n      minValue = _options$min === void 0 ? options.autoMinMax ? currentMin : 0 : _options$min,\n      _options$max = options.max,\n      maxValue = _options$max === void 0 ? options.autoMinMax ? currentMax : 1 : _options$max;\n\n  if (minValue >= maxValue) {\n    throw new RangeError('min option must be smaller than max option');\n  }\n\n  var factor = (maxValue - minValue) / (currentMax - currentMin);\n\n  for (var i = 0; i < input.length; i++) {\n    output[i] = (input[i] - currentMin) * factor + minValue;\n  }\n\n  return output;\n}\n\nexport default rescale;\n","const indent = ' '.repeat(2);\nconst indentData = ' '.repeat(4);\n\nexport function inspectMatrix() {\n  return inspectMatrixWithOptions(this);\n}\n\nexport function inspectMatrixWithOptions(matrix, options = {}) {\n  const { maxRows = 15, maxColumns = 10, maxNumSize = 8 } = options;\n  return `${matrix.constructor.name} {\n${indent}[\n${indentData}${inspectData(matrix, maxRows, maxColumns, maxNumSize)}\n${indent}]\n${indent}rows: ${matrix.rows}\n${indent}columns: ${matrix.columns}\n}`;\n}\n\nfunction inspectData(matrix, maxRows, maxColumns, maxNumSize) {\n  const { rows, columns } = matrix;\n  const maxI = Math.min(rows, maxRows);\n  const maxJ = Math.min(columns, maxColumns);\n  const result = [];\n  for (let i = 0; i < maxI; i++) {\n    let line = [];\n    for (let j = 0; j < maxJ; j++) {\n      line.push(formatNumber(matrix.get(i, j), maxNumSize));\n    }\n    result.push(`${line.join(' ')}`);\n  }\n  if (maxJ !== columns) {\n    result[result.length - 1] += ` ... ${columns - maxColumns} more columns`;\n  }\n  if (maxI !== rows) {\n    result.push(`... ${rows - maxRows} more rows`);\n  }\n  return result.join(`\\n${indentData}`);\n}\n\nfunction formatNumber(num, maxNumSize) {\n  const numStr = String(num);\n  if (numStr.length <= maxNumSize) {\n    return numStr.padEnd(maxNumSize, ' ');\n  }\n  const precise = num.toPrecision(maxNumSize - 2);\n  if (precise.length <= maxNumSize) {\n    return precise;\n  }\n  const exponential = num.toExponential(maxNumSize - 2);\n  const eIndex = exponential.indexOf('e');\n  const e = exponential.slice(eIndex);\n  return exponential.slice(0, maxNumSize - e.length) + e;\n}\n","/**\n * @private\n * Check that a row index is not out of bounds\n * @param {Matrix} matrix\n * @param {number} index\n * @param {boolean} [outer]\n */\nexport function checkRowIndex(matrix, index, outer) {\n  let max = outer ? matrix.rows : matrix.rows - 1;\n  if (index < 0 || index > max) {\n    throw new RangeError('Row index out of range');\n  }\n}\n\n/**\n * @private\n * Check that a column index is not out of bounds\n * @param {Matrix} matrix\n * @param {number} index\n * @param {boolean} [outer]\n */\nexport function checkColumnIndex(matrix, index, outer) {\n  let max = outer ? matrix.columns : matrix.columns - 1;\n  if (index < 0 || index > max) {\n    throw new RangeError('Column index out of range');\n  }\n}\n\n/**\n * @private\n * Check that the provided vector is an array with the right length\n * @param {Matrix} matrix\n * @param {Array|Matrix} vector\n * @return {Array}\n * @throws {RangeError}\n */\nexport function checkRowVector(matrix, vector) {\n  if (vector.to1DArray) {\n    vector = vector.to1DArray();\n  }\n  if (vector.length !== matrix.columns) {\n    throw new RangeError(\n      'vector size must be the same as the number of columns',\n    );\n  }\n  return vector;\n}\n\n/**\n * @private\n * Check that the provided vector is an array with the right length\n * @param {Matrix} matrix\n * @param {Array|Matrix} vector\n * @return {Array}\n * @throws {RangeError}\n */\nexport function checkColumnVector(matrix, vector) {\n  if (vector.to1DArray) {\n    vector = vector.to1DArray();\n  }\n  if (vector.length !== matrix.rows) {\n    throw new RangeError('vector size must be the same as the number of rows');\n  }\n  return vector;\n}\n\nexport function checkIndices(matrix, rowIndices, columnIndices) {\n  return {\n    row: checkRowIndices(matrix, rowIndices),\n    column: checkColumnIndices(matrix, columnIndices),\n  };\n}\n\nexport function checkRowIndices(matrix, rowIndices) {\n  if (typeof rowIndices !== 'object') {\n    throw new TypeError('unexpected type for row indices');\n  }\n\n  let rowOut = rowIndices.some((r) => {\n    return r < 0 || r >= matrix.rows;\n  });\n\n  if (rowOut) {\n    throw new RangeError('row indices are out of range');\n  }\n\n  if (!Array.isArray(rowIndices)) rowIndices = Array.from(rowIndices);\n\n  return rowIndices;\n}\n\nexport function checkColumnIndices(matrix, columnIndices) {\n  if (typeof columnIndices !== 'object') {\n    throw new TypeError('unexpected type for column indices');\n  }\n\n  let columnOut = columnIndices.some((c) => {\n    return c < 0 || c >= matrix.columns;\n  });\n\n  if (columnOut) {\n    throw new RangeError('column indices are out of range');\n  }\n  if (!Array.isArray(columnIndices)) columnIndices = Array.from(columnIndices);\n\n  return columnIndices;\n}\n\nexport function checkRange(matrix, startRow, endRow, startColumn, endColumn) {\n  if (arguments.length !== 5) {\n    throw new RangeError('expected 4 arguments');\n  }\n  checkNumber('startRow', startRow);\n  checkNumber('endRow', endRow);\n  checkNumber('startColumn', startColumn);\n  checkNumber('endColumn', endColumn);\n  if (\n    startRow > endRow ||\n    startColumn > endColumn ||\n    startRow < 0 ||\n    startRow >= matrix.rows ||\n    endRow < 0 ||\n    endRow >= matrix.rows ||\n    startColumn < 0 ||\n    startColumn >= matrix.columns ||\n    endColumn < 0 ||\n    endColumn >= matrix.columns\n  ) {\n    throw new RangeError('Submatrix indices are out of range');\n  }\n}\n\nexport function newArray(length, value = 0) {\n  let array = [];\n  for (let i = 0; i < length; i++) {\n    array.push(value);\n  }\n  return array;\n}\n\nfunction checkNumber(name, value) {\n  if (typeof value !== 'number') {\n    throw new TypeError(`${name} must be a number`);\n  }\n}\n\nexport function checkNonEmpty(matrix) {\n  if (matrix.isEmpty()) {\n    throw new Error('Empty matrix has no elements to index');\n  }\n}\n","import rescale from 'ml-array-rescale';\n\nimport { inspectMatrix, inspectMatrixWithOptions } from './inspect';\nimport { installMathOperations } from './mathOperations';\nimport {\n  sumByRow,\n  sumByColumn,\n  sumAll,\n  productByRow,\n  productByColumn,\n  productAll,\n  varianceByRow,\n  varianceByColumn,\n  varianceAll,\n  centerByRow,\n  centerByColumn,\n  centerAll,\n  scaleByRow,\n  scaleByColumn,\n  scaleAll,\n  getScaleByRow,\n  getScaleByColumn,\n  getScaleAll,\n} from './stat';\nimport {\n  checkRowVector,\n  checkRowIndex,\n  checkColumnIndex,\n  checkColumnVector,\n  checkRange,\n  checkIndices,\n  checkNonEmpty,\n} from './util';\n\nexport class AbstractMatrix {\n  static from1DArray(newRows, newColumns, newData) {\n    let length = newRows * newColumns;\n    if (length !== newData.length) {\n      throw new RangeError('data length does not match given dimensions');\n    }\n    let newMatrix = new Matrix(newRows, newColumns);\n    for (let row = 0; row < newRows; row++) {\n      for (let column = 0; column < newColumns; column++) {\n        newMatrix.set(row, column, newData[row * newColumns + column]);\n      }\n    }\n    return newMatrix;\n  }\n\n  static rowVector(newData) {\n    let vector = new Matrix(1, newData.length);\n    for (let i = 0; i < newData.length; i++) {\n      vector.set(0, i, newData[i]);\n    }\n    return vector;\n  }\n\n  static columnVector(newData) {\n    let vector = new Matrix(newData.length, 1);\n    for (let i = 0; i < newData.length; i++) {\n      vector.set(i, 0, newData[i]);\n    }\n    return vector;\n  }\n\n  static zeros(rows, columns) {\n    return new Matrix(rows, columns);\n  }\n\n  static ones(rows, columns) {\n    return new Matrix(rows, columns).fill(1);\n  }\n\n  static rand(rows, columns, options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { random = Math.random } = options;\n    let matrix = new Matrix(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        matrix.set(i, j, random());\n      }\n    }\n    return matrix;\n  }\n\n  static randInt(rows, columns, options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { min = 0, max = 1000, random = Math.random } = options;\n    if (!Number.isInteger(min)) throw new TypeError('min must be an integer');\n    if (!Number.isInteger(max)) throw new TypeError('max must be an integer');\n    if (min >= max) throw new RangeError('min must be smaller than max');\n    let interval = max - min;\n    let matrix = new Matrix(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        let value = min + Math.round(random() * interval);\n        matrix.set(i, j, value);\n      }\n    }\n    return matrix;\n  }\n\n  static eye(rows, columns, value) {\n    if (columns === undefined) columns = rows;\n    if (value === undefined) value = 1;\n    let min = Math.min(rows, columns);\n    let matrix = this.zeros(rows, columns);\n    for (let i = 0; i < min; i++) {\n      matrix.set(i, i, value);\n    }\n    return matrix;\n  }\n\n  static diag(data, rows, columns) {\n    let l = data.length;\n    if (rows === undefined) rows = l;\n    if (columns === undefined) columns = rows;\n    let min = Math.min(l, rows, columns);\n    let matrix = this.zeros(rows, columns);\n    for (let i = 0; i < min; i++) {\n      matrix.set(i, i, data[i]);\n    }\n    return matrix;\n  }\n\n  static min(matrix1, matrix2) {\n    matrix1 = this.checkMatrix(matrix1);\n    matrix2 = this.checkMatrix(matrix2);\n    let rows = matrix1.rows;\n    let columns = matrix1.columns;\n    let result = new Matrix(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        result.set(i, j, Math.min(matrix1.get(i, j), matrix2.get(i, j)));\n      }\n    }\n    return result;\n  }\n\n  static max(matrix1, matrix2) {\n    matrix1 = this.checkMatrix(matrix1);\n    matrix2 = this.checkMatrix(matrix2);\n    let rows = matrix1.rows;\n    let columns = matrix1.columns;\n    let result = new this(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        result.set(i, j, Math.max(matrix1.get(i, j), matrix2.get(i, j)));\n      }\n    }\n    return result;\n  }\n\n  static checkMatrix(value) {\n    return AbstractMatrix.isMatrix(value) ? value : new Matrix(value);\n  }\n\n  static isMatrix(value) {\n    return value != null && value.klass === 'Matrix';\n  }\n\n  get size() {\n    return this.rows * this.columns;\n  }\n\n  apply(callback) {\n    if (typeof callback !== 'function') {\n      throw new TypeError('callback must be a function');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        callback.call(this, i, j);\n      }\n    }\n    return this;\n  }\n\n  to1DArray() {\n    let array = [];\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        array.push(this.get(i, j));\n      }\n    }\n    return array;\n  }\n\n  to2DArray() {\n    let copy = [];\n    for (let i = 0; i < this.rows; i++) {\n      copy.push([]);\n      for (let j = 0; j < this.columns; j++) {\n        copy[i].push(this.get(i, j));\n      }\n    }\n    return copy;\n  }\n\n  toJSON() {\n    return this.to2DArray();\n  }\n\n  isRowVector() {\n    return this.rows === 1;\n  }\n\n  isColumnVector() {\n    return this.columns === 1;\n  }\n\n  isVector() {\n    return this.rows === 1 || this.columns === 1;\n  }\n\n  isSquare() {\n    return this.rows === this.columns;\n  }\n\n  isEmpty() {\n    return this.rows === 0 || this.columns === 0;\n  }\n\n  isSymmetric() {\n    if (this.isSquare()) {\n      for (let i = 0; i < this.rows; i++) {\n        for (let j = 0; j <= i; j++) {\n          if (this.get(i, j) !== this.get(j, i)) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n    return false;\n  }\n\n  isEchelonForm() {\n    let i = 0;\n    let j = 0;\n    let previousColumn = -1;\n    let isEchelonForm = true;\n    let checked = false;\n    while (i < this.rows && isEchelonForm) {\n      j = 0;\n      checked = false;\n      while (j < this.columns && checked === false) {\n        if (this.get(i, j) === 0) {\n          j++;\n        } else if (this.get(i, j) === 1 && j > previousColumn) {\n          checked = true;\n          previousColumn = j;\n        } else {\n          isEchelonForm = false;\n          checked = true;\n        }\n      }\n      i++;\n    }\n    return isEchelonForm;\n  }\n\n  isReducedEchelonForm() {\n    let i = 0;\n    let j = 0;\n    let previousColumn = -1;\n    let isReducedEchelonForm = true;\n    let checked = false;\n    while (i < this.rows && isReducedEchelonForm) {\n      j = 0;\n      checked = false;\n      while (j < this.columns && checked === false) {\n        if (this.get(i, j) === 0) {\n          j++;\n        } else if (this.get(i, j) === 1 && j > previousColumn) {\n          checked = true;\n          previousColumn = j;\n        } else {\n          isReducedEchelonForm = false;\n          checked = true;\n        }\n      }\n      for (let k = j + 1; k < this.rows; k++) {\n        if (this.get(i, k) !== 0) {\n          isReducedEchelonForm = false;\n        }\n      }\n      i++;\n    }\n    return isReducedEchelonForm;\n  }\n\n  echelonForm() {\n    let result = this.clone();\n    let h = 0;\n    let k = 0;\n    while (h < result.rows && k < result.columns) {\n      let iMax = h;\n      for (let i = h; i < result.rows; i++) {\n        if (result.get(i, k) > result.get(iMax, k)) {\n          iMax = i;\n        }\n      }\n      if (result.get(iMax, k) === 0) {\n        k++;\n      } else {\n        result.swapRows(h, iMax);\n        let tmp = result.get(h, k);\n        for (let j = k; j < result.columns; j++) {\n          result.set(h, j, result.get(h, j) / tmp);\n        }\n        for (let i = h + 1; i < result.rows; i++) {\n          let factor = result.get(i, k) / result.get(h, k);\n          result.set(i, k, 0);\n          for (let j = k + 1; j < result.columns; j++) {\n            result.set(i, j, result.get(i, j) - result.get(h, j) * factor);\n          }\n        }\n        h++;\n        k++;\n      }\n    }\n    return result;\n  }\n\n  reducedEchelonForm() {\n    let result = this.echelonForm();\n    let m = result.columns;\n    let n = result.rows;\n    let h = n - 1;\n    while (h >= 0) {\n      if (result.maxRow(h) === 0) {\n        h--;\n      } else {\n        let p = 0;\n        let pivot = false;\n        while (p < n && pivot === false) {\n          if (result.get(h, p) === 1) {\n            pivot = true;\n          } else {\n            p++;\n          }\n        }\n        for (let i = 0; i < h; i++) {\n          let factor = result.get(i, p);\n          for (let j = p; j < m; j++) {\n            let tmp = result.get(i, j) - factor * result.get(h, j);\n            result.set(i, j, tmp);\n          }\n        }\n        h--;\n      }\n    }\n    return result;\n  }\n\n  set() {\n    throw new Error('set method is unimplemented');\n  }\n\n  get() {\n    throw new Error('get method is unimplemented');\n  }\n\n  repeat(options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { rows = 1, columns = 1 } = options;\n    if (!Number.isInteger(rows) || rows <= 0) {\n      throw new TypeError('rows must be a positive integer');\n    }\n    if (!Number.isInteger(columns) || columns <= 0) {\n      throw new TypeError('columns must be a positive integer');\n    }\n    let matrix = new Matrix(this.rows * rows, this.columns * columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        matrix.setSubMatrix(this, this.rows * i, this.columns * j);\n      }\n    }\n    return matrix;\n  }\n\n  fill(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, value);\n      }\n    }\n    return this;\n  }\n\n  neg() {\n    return this.mulS(-1);\n  }\n\n  getRow(index) {\n    checkRowIndex(this, index);\n    let row = [];\n    for (let i = 0; i < this.columns; i++) {\n      row.push(this.get(index, i));\n    }\n    return row;\n  }\n\n  getRowVector(index) {\n    return Matrix.rowVector(this.getRow(index));\n  }\n\n  setRow(index, array) {\n    checkRowIndex(this, index);\n    array = checkRowVector(this, array);\n    for (let i = 0; i < this.columns; i++) {\n      this.set(index, i, array[i]);\n    }\n    return this;\n  }\n\n  swapRows(row1, row2) {\n    checkRowIndex(this, row1);\n    checkRowIndex(this, row2);\n    for (let i = 0; i < this.columns; i++) {\n      let temp = this.get(row1, i);\n      this.set(row1, i, this.get(row2, i));\n      this.set(row2, i, temp);\n    }\n    return this;\n  }\n\n  getColumn(index) {\n    checkColumnIndex(this, index);\n    let column = [];\n    for (let i = 0; i < this.rows; i++) {\n      column.push(this.get(i, index));\n    }\n    return column;\n  }\n\n  getColumnVector(index) {\n    return Matrix.columnVector(this.getColumn(index));\n  }\n\n  setColumn(index, array) {\n    checkColumnIndex(this, index);\n    array = checkColumnVector(this, array);\n    for (let i = 0; i < this.rows; i++) {\n      this.set(i, index, array[i]);\n    }\n    return this;\n  }\n\n  swapColumns(column1, column2) {\n    checkColumnIndex(this, column1);\n    checkColumnIndex(this, column2);\n    for (let i = 0; i < this.rows; i++) {\n      let temp = this.get(i, column1);\n      this.set(i, column1, this.get(i, column2));\n      this.set(i, column2, temp);\n    }\n    return this;\n  }\n\n  addRowVector(vector) {\n    vector = checkRowVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) + vector[j]);\n      }\n    }\n    return this;\n  }\n\n  subRowVector(vector) {\n    vector = checkRowVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) - vector[j]);\n      }\n    }\n    return this;\n  }\n\n  mulRowVector(vector) {\n    vector = checkRowVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) * vector[j]);\n      }\n    }\n    return this;\n  }\n\n  divRowVector(vector) {\n    vector = checkRowVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) / vector[j]);\n      }\n    }\n    return this;\n  }\n\n  addColumnVector(vector) {\n    vector = checkColumnVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) + vector[i]);\n      }\n    }\n    return this;\n  }\n\n  subColumnVector(vector) {\n    vector = checkColumnVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) - vector[i]);\n      }\n    }\n    return this;\n  }\n\n  mulColumnVector(vector) {\n    vector = checkColumnVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) * vector[i]);\n      }\n    }\n    return this;\n  }\n\n  divColumnVector(vector) {\n    vector = checkColumnVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) / vector[i]);\n      }\n    }\n    return this;\n  }\n\n  mulRow(index, value) {\n    checkRowIndex(this, index);\n    for (let i = 0; i < this.columns; i++) {\n      this.set(index, i, this.get(index, i) * value);\n    }\n    return this;\n  }\n\n  mulColumn(index, value) {\n    checkColumnIndex(this, index);\n    for (let i = 0; i < this.rows; i++) {\n      this.set(i, index, this.get(i, index) * value);\n    }\n    return this;\n  }\n\n  max() {\n    if (this.isEmpty()) {\n      return NaN;\n    }\n    let v = this.get(0, 0);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        if (this.get(i, j) > v) {\n          v = this.get(i, j);\n        }\n      }\n    }\n    return v;\n  }\n\n  maxIndex() {\n    checkNonEmpty(this);\n    let v = this.get(0, 0);\n    let idx = [0, 0];\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        if (this.get(i, j) > v) {\n          v = this.get(i, j);\n          idx[0] = i;\n          idx[1] = j;\n        }\n      }\n    }\n    return idx;\n  }\n\n  min() {\n    if (this.isEmpty()) {\n      return NaN;\n    }\n    let v = this.get(0, 0);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        if (this.get(i, j) < v) {\n          v = this.get(i, j);\n        }\n      }\n    }\n    return v;\n  }\n\n  minIndex() {\n    checkNonEmpty(this);\n    let v = this.get(0, 0);\n    let idx = [0, 0];\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        if (this.get(i, j) < v) {\n          v = this.get(i, j);\n          idx[0] = i;\n          idx[1] = j;\n        }\n      }\n    }\n    return idx;\n  }\n\n  maxRow(row) {\n    checkRowIndex(this, row);\n    if (this.isEmpty()) {\n      return NaN;\n    }\n    let v = this.get(row, 0);\n    for (let i = 1; i < this.columns; i++) {\n      if (this.get(row, i) > v) {\n        v = this.get(row, i);\n      }\n    }\n    return v;\n  }\n\n  maxRowIndex(row) {\n    checkRowIndex(this, row);\n    checkNonEmpty(this);\n    let v = this.get(row, 0);\n    let idx = [row, 0];\n    for (let i = 1; i < this.columns; i++) {\n      if (this.get(row, i) > v) {\n        v = this.get(row, i);\n        idx[1] = i;\n      }\n    }\n    return idx;\n  }\n\n  minRow(row) {\n    checkRowIndex(this, row);\n    if (this.isEmpty()) {\n      return NaN;\n    }\n    let v = this.get(row, 0);\n    for (let i = 1; i < this.columns; i++) {\n      if (this.get(row, i) < v) {\n        v = this.get(row, i);\n      }\n    }\n    return v;\n  }\n\n  minRowIndex(row) {\n    checkRowIndex(this, row);\n    checkNonEmpty(this);\n    let v = this.get(row, 0);\n    let idx = [row, 0];\n    for (let i = 1; i < this.columns; i++) {\n      if (this.get(row, i) < v) {\n        v = this.get(row, i);\n        idx[1] = i;\n      }\n    }\n    return idx;\n  }\n\n  maxColumn(column) {\n    checkColumnIndex(this, column);\n    if (this.isEmpty()) {\n      return NaN;\n    }\n    let v = this.get(0, column);\n    for (let i = 1; i < this.rows; i++) {\n      if (this.get(i, column) > v) {\n        v = this.get(i, column);\n      }\n    }\n    return v;\n  }\n\n  maxColumnIndex(column) {\n    checkColumnIndex(this, column);\n    checkNonEmpty(this);\n    let v = this.get(0, column);\n    let idx = [0, column];\n    for (let i = 1; i < this.rows; i++) {\n      if (this.get(i, column) > v) {\n        v = this.get(i, column);\n        idx[0] = i;\n      }\n    }\n    return idx;\n  }\n\n  minColumn(column) {\n    checkColumnIndex(this, column);\n    if (this.isEmpty()) {\n      return NaN;\n    }\n    let v = this.get(0, column);\n    for (let i = 1; i < this.rows; i++) {\n      if (this.get(i, column) < v) {\n        v = this.get(i, column);\n      }\n    }\n    return v;\n  }\n\n  minColumnIndex(column) {\n    checkColumnIndex(this, column);\n    checkNonEmpty(this);\n    let v = this.get(0, column);\n    let idx = [0, column];\n    for (let i = 1; i < this.rows; i++) {\n      if (this.get(i, column) < v) {\n        v = this.get(i, column);\n        idx[0] = i;\n      }\n    }\n    return idx;\n  }\n\n  diag() {\n    let min = Math.min(this.rows, this.columns);\n    let diag = [];\n    for (let i = 0; i < min; i++) {\n      diag.push(this.get(i, i));\n    }\n    return diag;\n  }\n\n  norm(type = 'frobenius') {\n    let result = 0;\n    if (type === 'max') {\n      return this.max();\n    } else if (type === 'frobenius') {\n      for (let i = 0; i < this.rows; i++) {\n        for (let j = 0; j < this.columns; j++) {\n          result = result + this.get(i, j) * this.get(i, j);\n        }\n      }\n      return Math.sqrt(result);\n    } else {\n      throw new RangeError(`unknown norm type: ${type}`);\n    }\n  }\n\n  cumulativeSum() {\n    let sum = 0;\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        sum += this.get(i, j);\n        this.set(i, j, sum);\n      }\n    }\n    return this;\n  }\n\n  dot(vector2) {\n    if (AbstractMatrix.isMatrix(vector2)) vector2 = vector2.to1DArray();\n    let vector1 = this.to1DArray();\n    if (vector1.length !== vector2.length) {\n      throw new RangeError('vectors do not have the same size');\n    }\n    let dot = 0;\n    for (let i = 0; i < vector1.length; i++) {\n      dot += vector1[i] * vector2[i];\n    }\n    return dot;\n  }\n\n  mmul(other) {\n    other = Matrix.checkMatrix(other);\n\n    let m = this.rows;\n    let n = this.columns;\n    let p = other.columns;\n\n    let result = new Matrix(m, p);\n\n    let Bcolj = new Float64Array(n);\n    for (let j = 0; j < p; j++) {\n      for (let k = 0; k < n; k++) {\n        Bcolj[k] = other.get(k, j);\n      }\n\n      for (let i = 0; i < m; i++) {\n        let s = 0;\n        for (let k = 0; k < n; k++) {\n          s += this.get(i, k) * Bcolj[k];\n        }\n\n        result.set(i, j, s);\n      }\n    }\n    return result;\n  }\n\n  strassen2x2(other) {\n    other = Matrix.checkMatrix(other);\n    let result = new Matrix(2, 2);\n    const a11 = this.get(0, 0);\n    const b11 = other.get(0, 0);\n    const a12 = this.get(0, 1);\n    const b12 = other.get(0, 1);\n    const a21 = this.get(1, 0);\n    const b21 = other.get(1, 0);\n    const a22 = this.get(1, 1);\n    const b22 = other.get(1, 1);\n\n    // Compute intermediate values.\n    const m1 = (a11 + a22) * (b11 + b22);\n    const m2 = (a21 + a22) * b11;\n    const m3 = a11 * (b12 - b22);\n    const m4 = a22 * (b21 - b11);\n    const m5 = (a11 + a12) * b22;\n    const m6 = (a21 - a11) * (b11 + b12);\n    const m7 = (a12 - a22) * (b21 + b22);\n\n    // Combine intermediate values into the output.\n    const c00 = m1 + m4 - m5 + m7;\n    const c01 = m3 + m5;\n    const c10 = m2 + m4;\n    const c11 = m1 - m2 + m3 + m6;\n\n    result.set(0, 0, c00);\n    result.set(0, 1, c01);\n    result.set(1, 0, c10);\n    result.set(1, 1, c11);\n    return result;\n  }\n\n  strassen3x3(other) {\n    other = Matrix.checkMatrix(other);\n    let result = new Matrix(3, 3);\n\n    const a00 = this.get(0, 0);\n    const a01 = this.get(0, 1);\n    const a02 = this.get(0, 2);\n    const a10 = this.get(1, 0);\n    const a11 = this.get(1, 1);\n    const a12 = this.get(1, 2);\n    const a20 = this.get(2, 0);\n    const a21 = this.get(2, 1);\n    const a22 = this.get(2, 2);\n\n    const b00 = other.get(0, 0);\n    const b01 = other.get(0, 1);\n    const b02 = other.get(0, 2);\n    const b10 = other.get(1, 0);\n    const b11 = other.get(1, 1);\n    const b12 = other.get(1, 2);\n    const b20 = other.get(2, 0);\n    const b21 = other.get(2, 1);\n    const b22 = other.get(2, 2);\n\n    const m1 = (a00 + a01 + a02 - a10 - a11 - a21 - a22) * b11;\n    const m2 = (a00 - a10) * (-b01 + b11);\n    const m3 = a11 * (-b00 + b01 + b10 - b11 - b12 - b20 + b22);\n    const m4 = (-a00 + a10 + a11) * (b00 - b01 + b11);\n    const m5 = (a10 + a11) * (-b00 + b01);\n    const m6 = a00 * b00;\n    const m7 = (-a00 + a20 + a21) * (b00 - b02 + b12);\n    const m8 = (-a00 + a20) * (b02 - b12);\n    const m9 = (a20 + a21) * (-b00 + b02);\n    const m10 = (a00 + a01 + a02 - a11 - a12 - a20 - a21) * b12;\n    const m11 = a21 * (-b00 + b02 + b10 - b11 - b12 - b20 + b21);\n    const m12 = (-a02 + a21 + a22) * (b11 + b20 - b21);\n    const m13 = (a02 - a22) * (b11 - b21);\n    const m14 = a02 * b20;\n    const m15 = (a21 + a22) * (-b20 + b21);\n    const m16 = (-a02 + a11 + a12) * (b12 + b20 - b22);\n    const m17 = (a02 - a12) * (b12 - b22);\n    const m18 = (a11 + a12) * (-b20 + b22);\n    const m19 = a01 * b10;\n    const m20 = a12 * b21;\n    const m21 = a10 * b02;\n    const m22 = a20 * b01;\n    const m23 = a22 * b22;\n\n    const c00 = m6 + m14 + m19;\n    const c01 = m1 + m4 + m5 + m6 + m12 + m14 + m15;\n    const c02 = m6 + m7 + m9 + m10 + m14 + m16 + m18;\n    const c10 = m2 + m3 + m4 + m6 + m14 + m16 + m17;\n    const c11 = m2 + m4 + m5 + m6 + m20;\n    const c12 = m14 + m16 + m17 + m18 + m21;\n    const c20 = m6 + m7 + m8 + m11 + m12 + m13 + m14;\n    const c21 = m12 + m13 + m14 + m15 + m22;\n    const c22 = m6 + m7 + m8 + m9 + m23;\n\n    result.set(0, 0, c00);\n    result.set(0, 1, c01);\n    result.set(0, 2, c02);\n    result.set(1, 0, c10);\n    result.set(1, 1, c11);\n    result.set(1, 2, c12);\n    result.set(2, 0, c20);\n    result.set(2, 1, c21);\n    result.set(2, 2, c22);\n    return result;\n  }\n\n  mmulStrassen(y) {\n    y = Matrix.checkMatrix(y);\n    let x = this.clone();\n    let r1 = x.rows;\n    let c1 = x.columns;\n    let r2 = y.rows;\n    let c2 = y.columns;\n    if (c1 !== r2) {\n      // eslint-disable-next-line no-console\n      console.warn(\n        `Multiplying ${r1} x ${c1} and ${r2} x ${c2} matrix: dimensions do not match.`,\n      );\n    }\n\n    // Put a matrix into the top left of a matrix of zeros.\n    // `rows` and `cols` are the dimensions of the output matrix.\n    function embed(mat, rows, cols) {\n      let r = mat.rows;\n      let c = mat.columns;\n      if (r === rows && c === cols) {\n        return mat;\n      } else {\n        let resultat = AbstractMatrix.zeros(rows, cols);\n        resultat = resultat.setSubMatrix(mat, 0, 0);\n        return resultat;\n      }\n    }\n\n    // Make sure both matrices are the same size.\n    // This is exclusively for simplicity:\n    // this algorithm can be implemented with matrices of different sizes.\n\n    let r = Math.max(r1, r2);\n    let c = Math.max(c1, c2);\n    x = embed(x, r, c);\n    y = embed(y, r, c);\n\n    // Our recursive multiplication function.\n    function blockMult(a, b, rows, cols) {\n      // For small matrices, resort to naive multiplication.\n      if (rows <= 512 || cols <= 512) {\n        return a.mmul(b); // a is equivalent to this\n      }\n\n      // Apply dynamic padding.\n      if (rows % 2 === 1 && cols % 2 === 1) {\n        a = embed(a, rows + 1, cols + 1);\n        b = embed(b, rows + 1, cols + 1);\n      } else if (rows % 2 === 1) {\n        a = embed(a, rows + 1, cols);\n        b = embed(b, rows + 1, cols);\n      } else if (cols % 2 === 1) {\n        a = embed(a, rows, cols + 1);\n        b = embed(b, rows, cols + 1);\n      }\n\n      let halfRows = parseInt(a.rows / 2, 10);\n      let halfCols = parseInt(a.columns / 2, 10);\n      // Subdivide input matrices.\n      let a11 = a.subMatrix(0, halfRows - 1, 0, halfCols - 1);\n      let b11 = b.subMatrix(0, halfRows - 1, 0, halfCols - 1);\n\n      let a12 = a.subMatrix(0, halfRows - 1, halfCols, a.columns - 1);\n      let b12 = b.subMatrix(0, halfRows - 1, halfCols, b.columns - 1);\n\n      let a21 = a.subMatrix(halfRows, a.rows - 1, 0, halfCols - 1);\n      let b21 = b.subMatrix(halfRows, b.rows - 1, 0, halfCols - 1);\n\n      let a22 = a.subMatrix(halfRows, a.rows - 1, halfCols, a.columns - 1);\n      let b22 = b.subMatrix(halfRows, b.rows - 1, halfCols, b.columns - 1);\n\n      // Compute intermediate values.\n      let m1 = blockMult(\n        AbstractMatrix.add(a11, a22),\n        AbstractMatrix.add(b11, b22),\n        halfRows,\n        halfCols,\n      );\n      let m2 = blockMult(AbstractMatrix.add(a21, a22), b11, halfRows, halfCols);\n      let m3 = blockMult(a11, AbstractMatrix.sub(b12, b22), halfRows, halfCols);\n      let m4 = blockMult(a22, AbstractMatrix.sub(b21, b11), halfRows, halfCols);\n      let m5 = blockMult(AbstractMatrix.add(a11, a12), b22, halfRows, halfCols);\n      let m6 = blockMult(\n        AbstractMatrix.sub(a21, a11),\n        AbstractMatrix.add(b11, b12),\n        halfRows,\n        halfCols,\n      );\n      let m7 = blockMult(\n        AbstractMatrix.sub(a12, a22),\n        AbstractMatrix.add(b21, b22),\n        halfRows,\n        halfCols,\n      );\n\n      // Combine intermediate values into the output.\n      let c11 = AbstractMatrix.add(m1, m4);\n      c11.sub(m5);\n      c11.add(m7);\n      let c12 = AbstractMatrix.add(m3, m5);\n      let c21 = AbstractMatrix.add(m2, m4);\n      let c22 = AbstractMatrix.sub(m1, m2);\n      c22.add(m3);\n      c22.add(m6);\n\n      // Crop output to the desired size (undo dynamic padding).\n      let resultat = AbstractMatrix.zeros(2 * c11.rows, 2 * c11.columns);\n      resultat = resultat.setSubMatrix(c11, 0, 0);\n      resultat = resultat.setSubMatrix(c12, c11.rows, 0);\n      resultat = resultat.setSubMatrix(c21, 0, c11.columns);\n      resultat = resultat.setSubMatrix(c22, c11.rows, c11.columns);\n      return resultat.subMatrix(0, rows - 1, 0, cols - 1);\n    }\n    return blockMult(x, y, r, c);\n  }\n\n  scaleRows(options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { min = 0, max = 1 } = options;\n    if (!Number.isFinite(min)) throw new TypeError('min must be a number');\n    if (!Number.isFinite(max)) throw new TypeError('max must be a number');\n    if (min >= max) throw new RangeError('min must be smaller than max');\n    let newMatrix = new Matrix(this.rows, this.columns);\n    for (let i = 0; i < this.rows; i++) {\n      const row = this.getRow(i);\n      if (row.length > 0) {\n        rescale(row, { min, max, output: row });\n      }\n      newMatrix.setRow(i, row);\n    }\n    return newMatrix;\n  }\n\n  scaleColumns(options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { min = 0, max = 1 } = options;\n    if (!Number.isFinite(min)) throw new TypeError('min must be a number');\n    if (!Number.isFinite(max)) throw new TypeError('max must be a number');\n    if (min >= max) throw new RangeError('min must be smaller than max');\n    let newMatrix = new Matrix(this.rows, this.columns);\n    for (let i = 0; i < this.columns; i++) {\n      const column = this.getColumn(i);\n      if (column.length) {\n        rescale(column, {\n          min: min,\n          max: max,\n          output: column,\n        });\n      }\n      newMatrix.setColumn(i, column);\n    }\n    return newMatrix;\n  }\n\n  flipRows() {\n    const middle = Math.ceil(this.columns / 2);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < middle; j++) {\n        let first = this.get(i, j);\n        let last = this.get(i, this.columns - 1 - j);\n        this.set(i, j, last);\n        this.set(i, this.columns - 1 - j, first);\n      }\n    }\n    return this;\n  }\n\n  flipColumns() {\n    const middle = Math.ceil(this.rows / 2);\n    for (let j = 0; j < this.columns; j++) {\n      for (let i = 0; i < middle; i++) {\n        let first = this.get(i, j);\n        let last = this.get(this.rows - 1 - i, j);\n        this.set(i, j, last);\n        this.set(this.rows - 1 - i, j, first);\n      }\n    }\n    return this;\n  }\n\n  kroneckerProduct(other) {\n    other = Matrix.checkMatrix(other);\n\n    let m = this.rows;\n    let n = this.columns;\n    let p = other.rows;\n    let q = other.columns;\n\n    let result = new Matrix(m * p, n * q);\n    for (let i = 0; i < m; i++) {\n      for (let j = 0; j < n; j++) {\n        for (let k = 0; k < p; k++) {\n          for (let l = 0; l < q; l++) {\n            result.set(p * i + k, q * j + l, this.get(i, j) * other.get(k, l));\n          }\n        }\n      }\n    }\n    return result;\n  }\n\n  kroneckerSum(other) {\n    other = Matrix.checkMatrix(other);\n    if (!this.isSquare() || !other.isSquare()) {\n      throw new Error('Kronecker Sum needs two Square Matrices');\n    }\n    let m = this.rows;\n    let n = other.rows;\n    let AxI = this.kroneckerProduct(Matrix.eye(n, n));\n    let IxB = Matrix.eye(m, m).kroneckerProduct(other);\n    return AxI.add(IxB);\n  }\n\n  transpose() {\n    let result = new Matrix(this.columns, this.rows);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        result.set(j, i, this.get(i, j));\n      }\n    }\n    return result;\n  }\n\n  sortRows(compareFunction = compareNumbers) {\n    for (let i = 0; i < this.rows; i++) {\n      this.setRow(i, this.getRow(i).sort(compareFunction));\n    }\n    return this;\n  }\n\n  sortColumns(compareFunction = compareNumbers) {\n    for (let i = 0; i < this.columns; i++) {\n      this.setColumn(i, this.getColumn(i).sort(compareFunction));\n    }\n    return this;\n  }\n\n  subMatrix(startRow, endRow, startColumn, endColumn) {\n    checkRange(this, startRow, endRow, startColumn, endColumn);\n    let newMatrix = new Matrix(\n      endRow - startRow + 1,\n      endColumn - startColumn + 1,\n    );\n    for (let i = startRow; i <= endRow; i++) {\n      for (let j = startColumn; j <= endColumn; j++) {\n        newMatrix.set(i - startRow, j - startColumn, this.get(i, j));\n      }\n    }\n    return newMatrix;\n  }\n\n  subMatrixRow(indices, startColumn, endColumn) {\n    if (startColumn === undefined) startColumn = 0;\n    if (endColumn === undefined) endColumn = this.columns - 1;\n    if (\n      startColumn > endColumn ||\n      startColumn < 0 ||\n      startColumn >= this.columns ||\n      endColumn < 0 ||\n      endColumn >= this.columns\n    ) {\n      throw new RangeError('Argument out of range');\n    }\n\n    let newMatrix = new Matrix(indices.length, endColumn - startColumn + 1);\n    for (let i = 0; i < indices.length; i++) {\n      for (let j = startColumn; j <= endColumn; j++) {\n        if (indices[i] < 0 || indices[i] >= this.rows) {\n          throw new RangeError(`Row index out of range: ${indices[i]}`);\n        }\n        newMatrix.set(i, j - startColumn, this.get(indices[i], j));\n      }\n    }\n    return newMatrix;\n  }\n\n  subMatrixColumn(indices, startRow, endRow) {\n    if (startRow === undefined) startRow = 0;\n    if (endRow === undefined) endRow = this.rows - 1;\n    if (\n      startRow > endRow ||\n      startRow < 0 ||\n      startRow >= this.rows ||\n      endRow < 0 ||\n      endRow >= this.rows\n    ) {\n      throw new RangeError('Argument out of range');\n    }\n\n    let newMatrix = new Matrix(endRow - startRow + 1, indices.length);\n    for (let i = 0; i < indices.length; i++) {\n      for (let j = startRow; j <= endRow; j++) {\n        if (indices[i] < 0 || indices[i] >= this.columns) {\n          throw new RangeError(`Column index out of range: ${indices[i]}`);\n        }\n        newMatrix.set(j - startRow, i, this.get(j, indices[i]));\n      }\n    }\n    return newMatrix;\n  }\n\n  setSubMatrix(matrix, startRow, startColumn) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (matrix.isEmpty()) {\n      return this;\n    }\n    let endRow = startRow + matrix.rows - 1;\n    let endColumn = startColumn + matrix.columns - 1;\n    checkRange(this, startRow, endRow, startColumn, endColumn);\n    for (let i = 0; i < matrix.rows; i++) {\n      for (let j = 0; j < matrix.columns; j++) {\n        this.set(startRow + i, startColumn + j, matrix.get(i, j));\n      }\n    }\n    return this;\n  }\n\n  selection(rowIndices, columnIndices) {\n    let indices = checkIndices(this, rowIndices, columnIndices);\n    let newMatrix = new Matrix(rowIndices.length, columnIndices.length);\n    for (let i = 0; i < indices.row.length; i++) {\n      let rowIndex = indices.row[i];\n      for (let j = 0; j < indices.column.length; j++) {\n        let columnIndex = indices.column[j];\n        newMatrix.set(i, j, this.get(rowIndex, columnIndex));\n      }\n    }\n    return newMatrix;\n  }\n\n  trace() {\n    let min = Math.min(this.rows, this.columns);\n    let trace = 0;\n    for (let i = 0; i < min; i++) {\n      trace += this.get(i, i);\n    }\n    return trace;\n  }\n\n  clone() {\n    let newMatrix = new Matrix(this.rows, this.columns);\n    for (let row = 0; row < this.rows; row++) {\n      for (let column = 0; column < this.columns; column++) {\n        newMatrix.set(row, column, this.get(row, column));\n      }\n    }\n    return newMatrix;\n  }\n\n  sum(by) {\n    switch (by) {\n      case 'row':\n        return sumByRow(this);\n      case 'column':\n        return sumByColumn(this);\n      case undefined:\n        return sumAll(this);\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  product(by) {\n    switch (by) {\n      case 'row':\n        return productByRow(this);\n      case 'column':\n        return productByColumn(this);\n      case undefined:\n        return productAll(this);\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  mean(by) {\n    const sum = this.sum(by);\n    switch (by) {\n      case 'row': {\n        for (let i = 0; i < this.rows; i++) {\n          sum[i] /= this.columns;\n        }\n        return sum;\n      }\n      case 'column': {\n        for (let i = 0; i < this.columns; i++) {\n          sum[i] /= this.rows;\n        }\n        return sum;\n      }\n      case undefined:\n        return sum / this.size;\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  variance(by, options = {}) {\n    if (typeof by === 'object') {\n      options = by;\n      by = undefined;\n    }\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { unbiased = true, mean = this.mean(by) } = options;\n    if (typeof unbiased !== 'boolean') {\n      throw new TypeError('unbiased must be a boolean');\n    }\n    switch (by) {\n      case 'row': {\n        if (!Array.isArray(mean)) {\n          throw new TypeError('mean must be an array');\n        }\n        return varianceByRow(this, unbiased, mean);\n      }\n      case 'column': {\n        if (!Array.isArray(mean)) {\n          throw new TypeError('mean must be an array');\n        }\n        return varianceByColumn(this, unbiased, mean);\n      }\n      case undefined: {\n        if (typeof mean !== 'number') {\n          throw new TypeError('mean must be a number');\n        }\n        return varianceAll(this, unbiased, mean);\n      }\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  standardDeviation(by, options) {\n    if (typeof by === 'object') {\n      options = by;\n      by = undefined;\n    }\n    const variance = this.variance(by, options);\n    if (by === undefined) {\n      return Math.sqrt(variance);\n    } else {\n      for (let i = 0; i < variance.length; i++) {\n        variance[i] = Math.sqrt(variance[i]);\n      }\n      return variance;\n    }\n  }\n\n  center(by, options = {}) {\n    if (typeof by === 'object') {\n      options = by;\n      by = undefined;\n    }\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { center = this.mean(by) } = options;\n    switch (by) {\n      case 'row': {\n        if (!Array.isArray(center)) {\n          throw new TypeError('center must be an array');\n        }\n        centerByRow(this, center);\n        return this;\n      }\n      case 'column': {\n        if (!Array.isArray(center)) {\n          throw new TypeError('center must be an array');\n        }\n        centerByColumn(this, center);\n        return this;\n      }\n      case undefined: {\n        if (typeof center !== 'number') {\n          throw new TypeError('center must be a number');\n        }\n        centerAll(this, center);\n        return this;\n      }\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  scale(by, options = {}) {\n    if (typeof by === 'object') {\n      options = by;\n      by = undefined;\n    }\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    let scale = options.scale;\n    switch (by) {\n      case 'row': {\n        if (scale === undefined) {\n          scale = getScaleByRow(this);\n        } else if (!Array.isArray(scale)) {\n          throw new TypeError('scale must be an array');\n        }\n        scaleByRow(this, scale);\n        return this;\n      }\n      case 'column': {\n        if (scale === undefined) {\n          scale = getScaleByColumn(this);\n        } else if (!Array.isArray(scale)) {\n          throw new TypeError('scale must be an array');\n        }\n        scaleByColumn(this, scale);\n        return this;\n      }\n      case undefined: {\n        if (scale === undefined) {\n          scale = getScaleAll(this);\n        } else if (typeof scale !== 'number') {\n          throw new TypeError('scale must be a number');\n        }\n        scaleAll(this, scale);\n        return this;\n      }\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  toString(options) {\n    return inspectMatrixWithOptions(this, options);\n  }\n}\n\nAbstractMatrix.prototype.klass = 'Matrix';\nif (typeof Symbol !== 'undefined') {\n  AbstractMatrix.prototype[\n    Symbol.for('nodejs.util.inspect.custom')\n  ] = inspectMatrix;\n}\n\nfunction compareNumbers(a, b) {\n  return a - b;\n}\n\n// Synonyms\nAbstractMatrix.random = AbstractMatrix.rand;\nAbstractMatrix.randomInt = AbstractMatrix.randInt;\nAbstractMatrix.diagonal = AbstractMatrix.diag;\nAbstractMatrix.prototype.diagonal = AbstractMatrix.prototype.diag;\nAbstractMatrix.identity = AbstractMatrix.eye;\nAbstractMatrix.prototype.negate = AbstractMatrix.prototype.neg;\nAbstractMatrix.prototype.tensorProduct =\n  AbstractMatrix.prototype.kroneckerProduct;\n\nexport default class Matrix extends AbstractMatrix {\n  constructor(nRows, nColumns) {\n    super();\n    if (Matrix.isMatrix(nRows)) {\n      // eslint-disable-next-line no-constructor-return\n      return nRows.clone();\n    } else if (Number.isInteger(nRows) && nRows >= 0) {\n      // Create an empty matrix\n      this.data = [];\n      if (Number.isInteger(nColumns) && nColumns >= 0) {\n        for (let i = 0; i < nRows; i++) {\n          this.data.push(new Float64Array(nColumns));\n        }\n      } else {\n        throw new TypeError('nColumns must be a positive integer');\n      }\n    } else if (Array.isArray(nRows)) {\n      // Copy the values from the 2D array\n      const arrayData = nRows;\n      nRows = arrayData.length;\n      nColumns = nRows ? arrayData[0].length : 0;\n      if (typeof nColumns !== 'number') {\n        throw new TypeError(\n          'Data must be a 2D array with at least one element',\n        );\n      }\n      this.data = [];\n      for (let i = 0; i < nRows; i++) {\n        if (arrayData[i].length !== nColumns) {\n          throw new RangeError('Inconsistent array dimensions');\n        }\n        this.data.push(Float64Array.from(arrayData[i]));\n      }\n    } else {\n      throw new TypeError(\n        'First argument must be a positive number or an array',\n      );\n    }\n    this.rows = nRows;\n    this.columns = nColumns;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.data[rowIndex][columnIndex] = value;\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.data[rowIndex][columnIndex];\n  }\n\n  removeRow(index) {\n    checkRowIndex(this, index);\n    this.data.splice(index, 1);\n    this.rows -= 1;\n    return this;\n  }\n\n  addRow(index, array) {\n    if (array === undefined) {\n      array = index;\n      index = this.rows;\n    }\n    checkRowIndex(this, index, true);\n    array = Float64Array.from(checkRowVector(this, array));\n    this.data.splice(index, 0, array);\n    this.rows += 1;\n    return this;\n  }\n\n  removeColumn(index) {\n    checkColumnIndex(this, index);\n    for (let i = 0; i < this.rows; i++) {\n      const newRow = new Float64Array(this.columns - 1);\n      for (let j = 0; j < index; j++) {\n        newRow[j] = this.data[i][j];\n      }\n      for (let j = index + 1; j < this.columns; j++) {\n        newRow[j - 1] = this.data[i][j];\n      }\n      this.data[i] = newRow;\n    }\n    this.columns -= 1;\n    return this;\n  }\n\n  addColumn(index, array) {\n    if (typeof array === 'undefined') {\n      array = index;\n      index = this.columns;\n    }\n    checkColumnIndex(this, index, true);\n    array = checkColumnVector(this, array);\n    for (let i = 0; i < this.rows; i++) {\n      const newRow = new Float64Array(this.columns + 1);\n      let j = 0;\n      for (; j < index; j++) {\n        newRow[j] = this.data[i][j];\n      }\n      newRow[j++] = array[i];\n      for (; j < this.columns + 1; j++) {\n        newRow[j] = this.data[i][j - 1];\n      }\n      this.data[i] = newRow;\n    }\n    this.columns += 1;\n    return this;\n  }\n}\n\ninstallMathOperations(AbstractMatrix, Matrix);\n","import { newArray } from './util';\n\nexport function sumByRow(matrix) {\n  let sum = newArray(matrix.rows);\n  for (let i = 0; i < matrix.rows; ++i) {\n    for (let j = 0; j < matrix.columns; ++j) {\n      sum[i] += matrix.get(i, j);\n    }\n  }\n  return sum;\n}\n\nexport function sumByColumn(matrix) {\n  let sum = newArray(matrix.columns);\n  for (let i = 0; i < matrix.rows; ++i) {\n    for (let j = 0; j < matrix.columns; ++j) {\n      sum[j] += matrix.get(i, j);\n    }\n  }\n  return sum;\n}\n\nexport function sumAll(matrix) {\n  let v = 0;\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      v += matrix.get(i, j);\n    }\n  }\n  return v;\n}\n\nexport function productByRow(matrix) {\n  let sum = newArray(matrix.rows, 1);\n  for (let i = 0; i < matrix.rows; ++i) {\n    for (let j = 0; j < matrix.columns; ++j) {\n      sum[i] *= matrix.get(i, j);\n    }\n  }\n  return sum;\n}\n\nexport function productByColumn(matrix) {\n  let sum = newArray(matrix.columns, 1);\n  for (let i = 0; i < matrix.rows; ++i) {\n    for (let j = 0; j < matrix.columns; ++j) {\n      sum[j] *= matrix.get(i, j);\n    }\n  }\n  return sum;\n}\n\nexport function productAll(matrix) {\n  let v = 1;\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      v *= matrix.get(i, j);\n    }\n  }\n  return v;\n}\n\nexport function varianceByRow(matrix, unbiased, mean) {\n  const rows = matrix.rows;\n  const cols = matrix.columns;\n  const variance = [];\n\n  for (let i = 0; i < rows; i++) {\n    let sum1 = 0;\n    let sum2 = 0;\n    let x = 0;\n    for (let j = 0; j < cols; j++) {\n      x = matrix.get(i, j) - mean[i];\n      sum1 += x;\n      sum2 += x * x;\n    }\n    if (unbiased) {\n      variance.push((sum2 - (sum1 * sum1) / cols) / (cols - 1));\n    } else {\n      variance.push((sum2 - (sum1 * sum1) / cols) / cols);\n    }\n  }\n  return variance;\n}\n\nexport function varianceByColumn(matrix, unbiased, mean) {\n  const rows = matrix.rows;\n  const cols = matrix.columns;\n  const variance = [];\n\n  for (let j = 0; j < cols; j++) {\n    let sum1 = 0;\n    let sum2 = 0;\n    let x = 0;\n    for (let i = 0; i < rows; i++) {\n      x = matrix.get(i, j) - mean[j];\n      sum1 += x;\n      sum2 += x * x;\n    }\n    if (unbiased) {\n      variance.push((sum2 - (sum1 * sum1) / rows) / (rows - 1));\n    } else {\n      variance.push((sum2 - (sum1 * sum1) / rows) / rows);\n    }\n  }\n  return variance;\n}\n\nexport function varianceAll(matrix, unbiased, mean) {\n  const rows = matrix.rows;\n  const cols = matrix.columns;\n  const size = rows * cols;\n\n  let sum1 = 0;\n  let sum2 = 0;\n  let x = 0;\n  for (let i = 0; i < rows; i++) {\n    for (let j = 0; j < cols; j++) {\n      x = matrix.get(i, j) - mean;\n      sum1 += x;\n      sum2 += x * x;\n    }\n  }\n  if (unbiased) {\n    return (sum2 - (sum1 * sum1) / size) / (size - 1);\n  } else {\n    return (sum2 - (sum1 * sum1) / size) / size;\n  }\n}\n\nexport function centerByRow(matrix, mean) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) - mean[i]);\n    }\n  }\n}\n\nexport function centerByColumn(matrix, mean) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) - mean[j]);\n    }\n  }\n}\n\nexport function centerAll(matrix, mean) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) - mean);\n    }\n  }\n}\n\nexport function getScaleByRow(matrix) {\n  const scale = [];\n  for (let i = 0; i < matrix.rows; i++) {\n    let sum = 0;\n    for (let j = 0; j < matrix.columns; j++) {\n      sum += Math.pow(matrix.get(i, j), 2) / (matrix.columns - 1);\n    }\n    scale.push(Math.sqrt(sum));\n  }\n  return scale;\n}\n\nexport function scaleByRow(matrix, scale) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) / scale[i]);\n    }\n  }\n}\n\nexport function getScaleByColumn(matrix) {\n  const scale = [];\n  for (let j = 0; j < matrix.columns; j++) {\n    let sum = 0;\n    for (let i = 0; i < matrix.rows; i++) {\n      sum += Math.pow(matrix.get(i, j), 2) / (matrix.rows - 1);\n    }\n    scale.push(Math.sqrt(sum));\n  }\n  return scale;\n}\n\nexport function scaleByColumn(matrix, scale) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) / scale[j]);\n    }\n  }\n}\n\nexport function getScaleAll(matrix) {\n  const divider = matrix.size - 1;\n  let sum = 0;\n  for (let j = 0; j < matrix.columns; j++) {\n    for (let i = 0; i < matrix.rows; i++) {\n      sum += Math.pow(matrix.get(i, j), 2) / divider;\n    }\n  }\n  return Math.sqrt(sum);\n}\n\nexport function scaleAll(matrix, scale) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) / scale);\n    }\n  }\n}\n","export function installMathOperations(AbstractMatrix, Matrix) {\n  AbstractMatrix.prototype.add = function add(value) {\n    if (typeof value === 'number') return this.addS(value);\n    return this.addM(value);\n  };\n\n  AbstractMatrix.prototype.addS = function addS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) + value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.addM = function addM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) + matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.add = function add(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.add(value);\n  };\n\n  AbstractMatrix.prototype.sub = function sub(value) {\n    if (typeof value === 'number') return this.subS(value);\n    return this.subM(value);\n  };\n\n  AbstractMatrix.prototype.subS = function subS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) - value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.subM = function subM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) - matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sub = function sub(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sub(value);\n  };\n  AbstractMatrix.prototype.subtract = AbstractMatrix.prototype.sub;\n  AbstractMatrix.prototype.subtractS = AbstractMatrix.prototype.subS;\n  AbstractMatrix.prototype.subtractM = AbstractMatrix.prototype.subM;\n  AbstractMatrix.subtract = AbstractMatrix.sub;\n\n  AbstractMatrix.prototype.mul = function mul(value) {\n    if (typeof value === 'number') return this.mulS(value);\n    return this.mulM(value);\n  };\n\n  AbstractMatrix.prototype.mulS = function mulS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) * value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.mulM = function mulM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) * matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.mul = function mul(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.mul(value);\n  };\n  AbstractMatrix.prototype.multiply = AbstractMatrix.prototype.mul;\n  AbstractMatrix.prototype.multiplyS = AbstractMatrix.prototype.mulS;\n  AbstractMatrix.prototype.multiplyM = AbstractMatrix.prototype.mulM;\n  AbstractMatrix.multiply = AbstractMatrix.mul;\n\n  AbstractMatrix.prototype.div = function div(value) {\n    if (typeof value === 'number') return this.divS(value);\n    return this.divM(value);\n  };\n\n  AbstractMatrix.prototype.divS = function divS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) / value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.divM = function divM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) / matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.div = function div(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.div(value);\n  };\n  AbstractMatrix.prototype.divide = AbstractMatrix.prototype.div;\n  AbstractMatrix.prototype.divideS = AbstractMatrix.prototype.divS;\n  AbstractMatrix.prototype.divideM = AbstractMatrix.prototype.divM;\n  AbstractMatrix.divide = AbstractMatrix.div;\n\n  AbstractMatrix.prototype.mod = function mod(value) {\n    if (typeof value === 'number') return this.modS(value);\n    return this.modM(value);\n  };\n\n  AbstractMatrix.prototype.modS = function modS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) % value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.modM = function modM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) % matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.mod = function mod(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.mod(value);\n  };\n  AbstractMatrix.prototype.modulus = AbstractMatrix.prototype.mod;\n  AbstractMatrix.prototype.modulusS = AbstractMatrix.prototype.modS;\n  AbstractMatrix.prototype.modulusM = AbstractMatrix.prototype.modM;\n  AbstractMatrix.modulus = AbstractMatrix.mod;\n\n  AbstractMatrix.prototype.and = function and(value) {\n    if (typeof value === 'number') return this.andS(value);\n    return this.andM(value);\n  };\n\n  AbstractMatrix.prototype.andS = function andS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) & value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.andM = function andM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) & matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.and = function and(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.and(value);\n  };\n\n  AbstractMatrix.prototype.or = function or(value) {\n    if (typeof value === 'number') return this.orS(value);\n    return this.orM(value);\n  };\n\n  AbstractMatrix.prototype.orS = function orS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) | value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.orM = function orM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) | matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.or = function or(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.or(value);\n  };\n\n  AbstractMatrix.prototype.xor = function xor(value) {\n    if (typeof value === 'number') return this.xorS(value);\n    return this.xorM(value);\n  };\n\n  AbstractMatrix.prototype.xorS = function xorS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) ^ value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.xorM = function xorM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) ^ matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.xor = function xor(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.xor(value);\n  };\n\n  AbstractMatrix.prototype.leftShift = function leftShift(value) {\n    if (typeof value === 'number') return this.leftShiftS(value);\n    return this.leftShiftM(value);\n  };\n\n  AbstractMatrix.prototype.leftShiftS = function leftShiftS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) << value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.leftShiftM = function leftShiftM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) << matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.leftShift = function leftShift(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.leftShift(value);\n  };\n\n  AbstractMatrix.prototype.signPropagatingRightShift = function signPropagatingRightShift(value) {\n    if (typeof value === 'number') return this.signPropagatingRightShiftS(value);\n    return this.signPropagatingRightShiftM(value);\n  };\n\n  AbstractMatrix.prototype.signPropagatingRightShiftS = function signPropagatingRightShiftS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) >> value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.signPropagatingRightShiftM = function signPropagatingRightShiftM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) >> matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.signPropagatingRightShift = function signPropagatingRightShift(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.signPropagatingRightShift(value);\n  };\n\n  AbstractMatrix.prototype.rightShift = function rightShift(value) {\n    if (typeof value === 'number') return this.rightShiftS(value);\n    return this.rightShiftM(value);\n  };\n\n  AbstractMatrix.prototype.rightShiftS = function rightShiftS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) >>> value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.rightShiftM = function rightShiftM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) >>> matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.rightShift = function rightShift(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.rightShift(value);\n  };\n  AbstractMatrix.prototype.zeroFillRightShift = AbstractMatrix.prototype.rightShift;\n  AbstractMatrix.prototype.zeroFillRightShiftS = AbstractMatrix.prototype.rightShiftS;\n  AbstractMatrix.prototype.zeroFillRightShiftM = AbstractMatrix.prototype.rightShiftM;\n  AbstractMatrix.zeroFillRightShift = AbstractMatrix.rightShift;\n\n  AbstractMatrix.prototype.not = function not() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, ~(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.not = function not(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.not();\n  };\n\n  AbstractMatrix.prototype.abs = function abs() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.abs(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.abs = function abs(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.abs();\n  };\n\n  AbstractMatrix.prototype.acos = function acos() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.acos(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.acos = function acos(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.acos();\n  };\n\n  AbstractMatrix.prototype.acosh = function acosh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.acosh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.acosh = function acosh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.acosh();\n  };\n\n  AbstractMatrix.prototype.asin = function asin() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.asin(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.asin = function asin(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.asin();\n  };\n\n  AbstractMatrix.prototype.asinh = function asinh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.asinh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.asinh = function asinh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.asinh();\n  };\n\n  AbstractMatrix.prototype.atan = function atan() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.atan(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.atan = function atan(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.atan();\n  };\n\n  AbstractMatrix.prototype.atanh = function atanh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.atanh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.atanh = function atanh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.atanh();\n  };\n\n  AbstractMatrix.prototype.cbrt = function cbrt() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.cbrt(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.cbrt = function cbrt(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.cbrt();\n  };\n\n  AbstractMatrix.prototype.ceil = function ceil() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.ceil(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.ceil = function ceil(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.ceil();\n  };\n\n  AbstractMatrix.prototype.clz32 = function clz32() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.clz32(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.clz32 = function clz32(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.clz32();\n  };\n\n  AbstractMatrix.prototype.cos = function cos() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.cos(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.cos = function cos(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.cos();\n  };\n\n  AbstractMatrix.prototype.cosh = function cosh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.cosh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.cosh = function cosh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.cosh();\n  };\n\n  AbstractMatrix.prototype.exp = function exp() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.exp(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.exp = function exp(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.exp();\n  };\n\n  AbstractMatrix.prototype.expm1 = function expm1() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.expm1(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.expm1 = function expm1(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.expm1();\n  };\n\n  AbstractMatrix.prototype.floor = function floor() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.floor(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.floor = function floor(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.floor();\n  };\n\n  AbstractMatrix.prototype.fround = function fround() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.fround(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.fround = function fround(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.fround();\n  };\n\n  AbstractMatrix.prototype.log = function log() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.log(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.log = function log(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.log();\n  };\n\n  AbstractMatrix.prototype.log1p = function log1p() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.log1p(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.log1p = function log1p(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.log1p();\n  };\n\n  AbstractMatrix.prototype.log10 = function log10() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.log10(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.log10 = function log10(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.log10();\n  };\n\n  AbstractMatrix.prototype.log2 = function log2() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.log2(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.log2 = function log2(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.log2();\n  };\n\n  AbstractMatrix.prototype.round = function round() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.round(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.round = function round(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.round();\n  };\n\n  AbstractMatrix.prototype.sign = function sign() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.sign(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sign = function sign(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sign();\n  };\n\n  AbstractMatrix.prototype.sin = function sin() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.sin(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sin = function sin(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sin();\n  };\n\n  AbstractMatrix.prototype.sinh = function sinh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.sinh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sinh = function sinh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sinh();\n  };\n\n  AbstractMatrix.prototype.sqrt = function sqrt() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.sqrt(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sqrt = function sqrt(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sqrt();\n  };\n\n  AbstractMatrix.prototype.tan = function tan() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.tan(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.tan = function tan(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.tan();\n  };\n\n  AbstractMatrix.prototype.tanh = function tanh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.tanh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.tanh = function tanh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.tanh();\n  };\n\n  AbstractMatrix.prototype.trunc = function trunc() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.trunc(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.trunc = function trunc(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.trunc();\n  };\n\n  AbstractMatrix.pow = function pow(matrix, arg0) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.pow(arg0);\n  };\n\n  AbstractMatrix.prototype.pow = function pow(value) {\n    if (typeof value === 'number') return this.powS(value);\n    return this.powM(value);\n  };\n\n  AbstractMatrix.prototype.powS = function powS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.pow(this.get(i, j), value));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.powM = function powM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.pow(this.get(i, j), matrix.get(i, j)));\n      }\n    }\n    return this;\n  };\n}\n","import { AbstractMatrix } from '../matrix';\n\nexport default class BaseView extends AbstractMatrix {\n  constructor(matrix, rows, columns) {\n    super();\n    this.matrix = matrix;\n    this.rows = rows;\n    this.columns = columns;\n  }\n}\n","import BaseView from './base';\n\nexport default class MatrixTransposeView extends BaseView {\n  constructor(matrix) {\n    super(matrix, matrix.columns, matrix.rows);\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(columnIndex, rowIndex, value);\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.matrix.get(columnIndex, rowIndex);\n  }\n}\n","import { AbstractMatrix } from '../matrix';\n\nexport default class WrapperMatrix2D extends AbstractMatrix {\n  constructor(data) {\n    super();\n    this.data = data;\n    this.rows = data.length;\n    this.columns = data[0].length;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.data[rowIndex][columnIndex] = value;\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.data[rowIndex][columnIndex];\n  }\n}\n","import Matrix from '../matrix';\nimport WrapperMatrix2D from '../wrap/WrapperMatrix2D';\n\nexport default class LuDecomposition {\n  constructor(matrix) {\n    matrix = WrapperMatrix2D.checkMatrix(matrix);\n\n    let lu = matrix.clone();\n    let rows = lu.rows;\n    let columns = lu.columns;\n    let pivotVector = new Float64Array(rows);\n    let pivotSign = 1;\n    let i, j, k, p, s, t, v;\n    let LUcolj, kmax;\n\n    for (i = 0; i < rows; i++) {\n      pivotVector[i] = i;\n    }\n\n    LUcolj = new Float64Array(rows);\n\n    for (j = 0; j < columns; j++) {\n      for (i = 0; i < rows; i++) {\n        LUcolj[i] = lu.get(i, j);\n      }\n\n      for (i = 0; i < rows; i++) {\n        kmax = Math.min(i, j);\n        s = 0;\n        for (k = 0; k < kmax; k++) {\n          s += lu.get(i, k) * LUcolj[k];\n        }\n        LUcolj[i] -= s;\n        lu.set(i, j, LUcolj[i]);\n      }\n\n      p = j;\n      for (i = j + 1; i < rows; i++) {\n        if (Math.abs(LUcolj[i]) > Math.abs(LUcolj[p])) {\n          p = i;\n        }\n      }\n\n      if (p !== j) {\n        for (k = 0; k < columns; k++) {\n          t = lu.get(p, k);\n          lu.set(p, k, lu.get(j, k));\n          lu.set(j, k, t);\n        }\n\n        v = pivotVector[p];\n        pivotVector[p] = pivotVector[j];\n        pivotVector[j] = v;\n\n        pivotSign = -pivotSign;\n      }\n\n      if (j < rows && lu.get(j, j) !== 0) {\n        for (i = j + 1; i < rows; i++) {\n          lu.set(i, j, lu.get(i, j) / lu.get(j, j));\n        }\n      }\n    }\n\n    this.LU = lu;\n    this.pivotVector = pivotVector;\n    this.pivotSign = pivotSign;\n  }\n\n  isSingular() {\n    let data = this.LU;\n    let col = data.columns;\n    for (let j = 0; j < col; j++) {\n      if (data.get(j, j) === 0) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  solve(value) {\n    value = Matrix.checkMatrix(value);\n\n    let lu = this.LU;\n    let rows = lu.rows;\n\n    if (rows !== value.rows) {\n      throw new Error('Invalid matrix dimensions');\n    }\n    if (this.isSingular()) {\n      throw new Error('LU matrix is singular');\n    }\n\n    let count = value.columns;\n    let X = value.subMatrixRow(this.pivotVector, 0, count - 1);\n    let columns = lu.columns;\n    let i, j, k;\n\n    for (k = 0; k < columns; k++) {\n      for (i = k + 1; i < columns; i++) {\n        for (j = 0; j < count; j++) {\n          X.set(i, j, X.get(i, j) - X.get(k, j) * lu.get(i, k));\n        }\n      }\n    }\n    for (k = columns - 1; k >= 0; k--) {\n      for (j = 0; j < count; j++) {\n        X.set(k, j, X.get(k, j) / lu.get(k, k));\n      }\n      for (i = 0; i < k; i++) {\n        for (j = 0; j < count; j++) {\n          X.set(i, j, X.get(i, j) - X.get(k, j) * lu.get(i, k));\n        }\n      }\n    }\n    return X;\n  }\n\n  get determinant() {\n    let data = this.LU;\n    if (!data.isSquare()) {\n      throw new Error('Matrix must be square');\n    }\n    let determinant = this.pivotSign;\n    let col = data.columns;\n    for (let j = 0; j < col; j++) {\n      determinant *= data.get(j, j);\n    }\n    return determinant;\n  }\n\n  get lowerTriangularMatrix() {\n    let data = this.LU;\n    let rows = data.rows;\n    let columns = data.columns;\n    let X = new Matrix(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        if (i > j) {\n          X.set(i, j, data.get(i, j));\n        } else if (i === j) {\n          X.set(i, j, 1);\n        } else {\n          X.set(i, j, 0);\n        }\n      }\n    }\n    return X;\n  }\n\n  get upperTriangularMatrix() {\n    let data = this.LU;\n    let rows = data.rows;\n    let columns = data.columns;\n    let X = new Matrix(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        if (i <= j) {\n          X.set(i, j, data.get(i, j));\n        } else {\n          X.set(i, j, 0);\n        }\n      }\n    }\n    return X;\n  }\n\n  get pivotPermutationVector() {\n    return Array.from(this.pivotVector);\n  }\n}\n","export function hypotenuse(a, b) {\n  let r = 0;\n  if (Math.abs(a) > Math.abs(b)) {\n    r = b / a;\n    return Math.abs(a) * Math.sqrt(1 + r * r);\n  }\n  if (b !== 0) {\n    r = a / b;\n    return Math.abs(b) * Math.sqrt(1 + r * r);\n  }\n  return 0;\n}\n","import Matrix from '../matrix';\nimport WrapperMatrix2D from '../wrap/WrapperMatrix2D';\n\nimport { hypotenuse } from './util';\n\nexport default class QrDecomposition {\n  constructor(value) {\n    value = WrapperMatrix2D.checkMatrix(value);\n\n    let qr = value.clone();\n    let m = value.rows;\n    let n = value.columns;\n    let rdiag = new Float64Array(n);\n    let i, j, k, s;\n\n    for (k = 0; k < n; k++) {\n      let nrm = 0;\n      for (i = k; i < m; i++) {\n        nrm = hypotenuse(nrm, qr.get(i, k));\n      }\n      if (nrm !== 0) {\n        if (qr.get(k, k) < 0) {\n          nrm = -nrm;\n        }\n        for (i = k; i < m; i++) {\n          qr.set(i, k, qr.get(i, k) / nrm);\n        }\n        qr.set(k, k, qr.get(k, k) + 1);\n        for (j = k + 1; j < n; j++) {\n          s = 0;\n          for (i = k; i < m; i++) {\n            s += qr.get(i, k) * qr.get(i, j);\n          }\n          s = -s / qr.get(k, k);\n          for (i = k; i < m; i++) {\n            qr.set(i, j, qr.get(i, j) + s * qr.get(i, k));\n          }\n        }\n      }\n      rdiag[k] = -nrm;\n    }\n\n    this.QR = qr;\n    this.Rdiag = rdiag;\n  }\n\n  solve(value) {\n    value = Matrix.checkMatrix(value);\n\n    let qr = this.QR;\n    let m = qr.rows;\n\n    if (value.rows !== m) {\n      throw new Error('Matrix row dimensions must agree');\n    }\n    if (!this.isFullRank()) {\n      throw new Error('Matrix is rank deficient');\n    }\n\n    let count = value.columns;\n    let X = value.clone();\n    let n = qr.columns;\n    let i, j, k, s;\n\n    for (k = 0; k < n; k++) {\n      for (j = 0; j < count; j++) {\n        s = 0;\n        for (i = k; i < m; i++) {\n          s += qr.get(i, k) * X.get(i, j);\n        }\n        s = -s / qr.get(k, k);\n        for (i = k; i < m; i++) {\n          X.set(i, j, X.get(i, j) + s * qr.get(i, k));\n        }\n      }\n    }\n    for (k = n - 1; k >= 0; k--) {\n      for (j = 0; j < count; j++) {\n        X.set(k, j, X.get(k, j) / this.Rdiag[k]);\n      }\n      for (i = 0; i < k; i++) {\n        for (j = 0; j < count; j++) {\n          X.set(i, j, X.get(i, j) - X.get(k, j) * qr.get(i, k));\n        }\n      }\n    }\n\n    return X.subMatrix(0, n - 1, 0, count - 1);\n  }\n\n  isFullRank() {\n    let columns = this.QR.columns;\n    for (let i = 0; i < columns; i++) {\n      if (this.Rdiag[i] === 0) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  get upperTriangularMatrix() {\n    let qr = this.QR;\n    let n = qr.columns;\n    let X = new Matrix(n, n);\n    let i, j;\n    for (i = 0; i < n; i++) {\n      for (j = 0; j < n; j++) {\n        if (i < j) {\n          X.set(i, j, qr.get(i, j));\n        } else if (i === j) {\n          X.set(i, j, this.Rdiag[i]);\n        } else {\n          X.set(i, j, 0);\n        }\n      }\n    }\n    return X;\n  }\n\n  get orthogonalMatrix() {\n    let qr = this.QR;\n    let rows = qr.rows;\n    let columns = qr.columns;\n    let X = new Matrix(rows, columns);\n    let i, j, k, s;\n\n    for (k = columns - 1; k >= 0; k--) {\n      for (i = 0; i < rows; i++) {\n        X.set(i, k, 0);\n      }\n      X.set(k, k, 1);\n      for (j = k; j < columns; j++) {\n        if (qr.get(k, k) !== 0) {\n          s = 0;\n          for (i = k; i < rows; i++) {\n            s += qr.get(i, k) * X.get(i, j);\n          }\n\n          s = -s / qr.get(k, k);\n\n          for (i = k; i < rows; i++) {\n            X.set(i, j, X.get(i, j) + s * qr.get(i, k));\n          }\n        }\n      }\n    }\n    return X;\n  }\n}\n","import Matrix from '../matrix';\nimport WrapperMatrix2D from '../wrap/WrapperMatrix2D';\n\nimport { hypotenuse } from './util';\n\nexport default class SingularValueDecomposition {\n  constructor(value, options = {}) {\n    value = WrapperMatrix2D.checkMatrix(value);\n\n    if (value.isEmpty()) {\n      throw new Error('Matrix must be non-empty');\n    }\n\n    let m = value.rows;\n    let n = value.columns;\n\n    const {\n      computeLeftSingularVectors = true,\n      computeRightSingularVectors = true,\n      autoTranspose = false,\n    } = options;\n\n    let wantu = Boolean(computeLeftSingularVectors);\n    let wantv = Boolean(computeRightSingularVectors);\n\n    let swapped = false;\n    let a;\n    if (m < n) {\n      if (!autoTranspose) {\n        a = value.clone();\n        // eslint-disable-next-line no-console\n        console.warn(\n          'Computing SVD on a matrix with more columns than rows. Consider enabling autoTranspose',\n        );\n      } else {\n        a = value.transpose();\n        m = a.rows;\n        n = a.columns;\n        swapped = true;\n        let aux = wantu;\n        wantu = wantv;\n        wantv = aux;\n      }\n    } else {\n      a = value.clone();\n    }\n\n    let nu = Math.min(m, n);\n    let ni = Math.min(m + 1, n);\n    let s = new Float64Array(ni);\n    let U = new Matrix(m, nu);\n    let V = new Matrix(n, n);\n\n    let e = new Float64Array(n);\n    let work = new Float64Array(m);\n\n    let si = new Float64Array(ni);\n    for (let i = 0; i < ni; i++) si[i] = i;\n\n    let nct = Math.min(m - 1, n);\n    let nrt = Math.max(0, Math.min(n - 2, m));\n    let mrc = Math.max(nct, nrt);\n\n    for (let k = 0; k < mrc; k++) {\n      if (k < nct) {\n        s[k] = 0;\n        for (let i = k; i < m; i++) {\n          s[k] = hypotenuse(s[k], a.get(i, k));\n        }\n        if (s[k] !== 0) {\n          if (a.get(k, k) < 0) {\n            s[k] = -s[k];\n          }\n          for (let i = k; i < m; i++) {\n            a.set(i, k, a.get(i, k) / s[k]);\n          }\n          a.set(k, k, a.get(k, k) + 1);\n        }\n        s[k] = -s[k];\n      }\n\n      for (let j = k + 1; j < n; j++) {\n        if (k < nct && s[k] !== 0) {\n          let t = 0;\n          for (let i = k; i < m; i++) {\n            t += a.get(i, k) * a.get(i, j);\n          }\n          t = -t / a.get(k, k);\n          for (let i = k; i < m; i++) {\n            a.set(i, j, a.get(i, j) + t * a.get(i, k));\n          }\n        }\n        e[j] = a.get(k, j);\n      }\n\n      if (wantu && k < nct) {\n        for (let i = k; i < m; i++) {\n          U.set(i, k, a.get(i, k));\n        }\n      }\n\n      if (k < nrt) {\n        e[k] = 0;\n        for (let i = k + 1; i < n; i++) {\n          e[k] = hypotenuse(e[k], e[i]);\n        }\n        if (e[k] !== 0) {\n          if (e[k + 1] < 0) {\n            e[k] = 0 - e[k];\n          }\n          for (let i = k + 1; i < n; i++) {\n            e[i] /= e[k];\n          }\n          e[k + 1] += 1;\n        }\n        e[k] = -e[k];\n        if (k + 1 < m && e[k] !== 0) {\n          for (let i = k + 1; i < m; i++) {\n            work[i] = 0;\n          }\n          for (let i = k + 1; i < m; i++) {\n            for (let j = k + 1; j < n; j++) {\n              work[i] += e[j] * a.get(i, j);\n            }\n          }\n          for (let j = k + 1; j < n; j++) {\n            let t = -e[j] / e[k + 1];\n            for (let i = k + 1; i < m; i++) {\n              a.set(i, j, a.get(i, j) + t * work[i]);\n            }\n          }\n        }\n        if (wantv) {\n          for (let i = k + 1; i < n; i++) {\n            V.set(i, k, e[i]);\n          }\n        }\n      }\n    }\n\n    let p = Math.min(n, m + 1);\n    if (nct < n) {\n      s[nct] = a.get(nct, nct);\n    }\n    if (m < p) {\n      s[p - 1] = 0;\n    }\n    if (nrt + 1 < p) {\n      e[nrt] = a.get(nrt, p - 1);\n    }\n    e[p - 1] = 0;\n\n    if (wantu) {\n      for (let j = nct; j < nu; j++) {\n        for (let i = 0; i < m; i++) {\n          U.set(i, j, 0);\n        }\n        U.set(j, j, 1);\n      }\n      for (let k = nct - 1; k >= 0; k--) {\n        if (s[k] !== 0) {\n          for (let j = k + 1; j < nu; j++) {\n            let t = 0;\n            for (let i = k; i < m; i++) {\n              t += U.get(i, k) * U.get(i, j);\n            }\n            t = -t / U.get(k, k);\n            for (let i = k; i < m; i++) {\n              U.set(i, j, U.get(i, j) + t * U.get(i, k));\n            }\n          }\n          for (let i = k; i < m; i++) {\n            U.set(i, k, -U.get(i, k));\n          }\n          U.set(k, k, 1 + U.get(k, k));\n          for (let i = 0; i < k - 1; i++) {\n            U.set(i, k, 0);\n          }\n        } else {\n          for (let i = 0; i < m; i++) {\n            U.set(i, k, 0);\n          }\n          U.set(k, k, 1);\n        }\n      }\n    }\n\n    if (wantv) {\n      for (let k = n - 1; k >= 0; k--) {\n        if (k < nrt && e[k] !== 0) {\n          for (let j = k + 1; j < n; j++) {\n            let t = 0;\n            for (let i = k + 1; i < n; i++) {\n              t += V.get(i, k) * V.get(i, j);\n            }\n            t = -t / V.get(k + 1, k);\n            for (let i = k + 1; i < n; i++) {\n              V.set(i, j, V.get(i, j) + t * V.get(i, k));\n            }\n          }\n        }\n        for (let i = 0; i < n; i++) {\n          V.set(i, k, 0);\n        }\n        V.set(k, k, 1);\n      }\n    }\n\n    let pp = p - 1;\n    let iter = 0;\n    let eps = Number.EPSILON;\n    while (p > 0) {\n      let k, kase;\n      for (k = p - 2; k >= -1; k--) {\n        if (k === -1) {\n          break;\n        }\n        const alpha =\n          Number.MIN_VALUE + eps * Math.abs(s[k] + Math.abs(s[k + 1]));\n        if (Math.abs(e[k]) <= alpha || Number.isNaN(e[k])) {\n          e[k] = 0;\n          break;\n        }\n      }\n      if (k === p - 2) {\n        kase = 4;\n      } else {\n        let ks;\n        for (ks = p - 1; ks >= k; ks--) {\n          if (ks === k) {\n            break;\n          }\n          let t =\n            (ks !== p ? Math.abs(e[ks]) : 0) +\n            (ks !== k + 1 ? Math.abs(e[ks - 1]) : 0);\n          if (Math.abs(s[ks]) <= eps * t) {\n            s[ks] = 0;\n            break;\n          }\n        }\n        if (ks === k) {\n          kase = 3;\n        } else if (ks === p - 1) {\n          kase = 1;\n        } else {\n          kase = 2;\n          k = ks;\n        }\n      }\n\n      k++;\n\n      switch (kase) {\n        case 1: {\n          let f = e[p - 2];\n          e[p - 2] = 0;\n          for (let j = p - 2; j >= k; j--) {\n            let t = hypotenuse(s[j], f);\n            let cs = s[j] / t;\n            let sn = f / t;\n            s[j] = t;\n            if (j !== k) {\n              f = -sn * e[j - 1];\n              e[j - 1] = cs * e[j - 1];\n            }\n            if (wantv) {\n              for (let i = 0; i < n; i++) {\n                t = cs * V.get(i, j) + sn * V.get(i, p - 1);\n                V.set(i, p - 1, -sn * V.get(i, j) + cs * V.get(i, p - 1));\n                V.set(i, j, t);\n              }\n            }\n          }\n          break;\n        }\n        case 2: {\n          let f = e[k - 1];\n          e[k - 1] = 0;\n          for (let j = k; j < p; j++) {\n            let t = hypotenuse(s[j], f);\n            let cs = s[j] / t;\n            let sn = f / t;\n            s[j] = t;\n            f = -sn * e[j];\n            e[j] = cs * e[j];\n            if (wantu) {\n              for (let i = 0; i < m; i++) {\n                t = cs * U.get(i, j) + sn * U.get(i, k - 1);\n                U.set(i, k - 1, -sn * U.get(i, j) + cs * U.get(i, k - 1));\n                U.set(i, j, t);\n              }\n            }\n          }\n          break;\n        }\n        case 3: {\n          const scale = Math.max(\n            Math.abs(s[p - 1]),\n            Math.abs(s[p - 2]),\n            Math.abs(e[p - 2]),\n            Math.abs(s[k]),\n            Math.abs(e[k]),\n          );\n          const sp = s[p - 1] / scale;\n          const spm1 = s[p - 2] / scale;\n          const epm1 = e[p - 2] / scale;\n          const sk = s[k] / scale;\n          const ek = e[k] / scale;\n          const b = ((spm1 + sp) * (spm1 - sp) + epm1 * epm1) / 2;\n          const c = sp * epm1 * (sp * epm1);\n          let shift = 0;\n          if (b !== 0 || c !== 0) {\n            if (b < 0) {\n              shift = 0 - Math.sqrt(b * b + c);\n            } else {\n              shift = Math.sqrt(b * b + c);\n            }\n            shift = c / (b + shift);\n          }\n          let f = (sk + sp) * (sk - sp) + shift;\n          let g = sk * ek;\n          for (let j = k; j < p - 1; j++) {\n            let t = hypotenuse(f, g);\n            if (t === 0) t = Number.MIN_VALUE;\n            let cs = f / t;\n            let sn = g / t;\n            if (j !== k) {\n              e[j - 1] = t;\n            }\n            f = cs * s[j] + sn * e[j];\n            e[j] = cs * e[j] - sn * s[j];\n            g = sn * s[j + 1];\n            s[j + 1] = cs * s[j + 1];\n            if (wantv) {\n              for (let i = 0; i < n; i++) {\n                t = cs * V.get(i, j) + sn * V.get(i, j + 1);\n                V.set(i, j + 1, -sn * V.get(i, j) + cs * V.get(i, j + 1));\n                V.set(i, j, t);\n              }\n            }\n            t = hypotenuse(f, g);\n            if (t === 0) t = Number.MIN_VALUE;\n            cs = f / t;\n            sn = g / t;\n            s[j] = t;\n            f = cs * e[j] + sn * s[j + 1];\n            s[j + 1] = -sn * e[j] + cs * s[j + 1];\n            g = sn * e[j + 1];\n            e[j + 1] = cs * e[j + 1];\n            if (wantu && j < m - 1) {\n              for (let i = 0; i < m; i++) {\n                t = cs * U.get(i, j) + sn * U.get(i, j + 1);\n                U.set(i, j + 1, -sn * U.get(i, j) + cs * U.get(i, j + 1));\n                U.set(i, j, t);\n              }\n            }\n          }\n          e[p - 2] = f;\n          iter = iter + 1;\n          break;\n        }\n        case 4: {\n          if (s[k] <= 0) {\n            s[k] = s[k] < 0 ? -s[k] : 0;\n            if (wantv) {\n              for (let i = 0; i <= pp; i++) {\n                V.set(i, k, -V.get(i, k));\n              }\n            }\n          }\n          while (k < pp) {\n            if (s[k] >= s[k + 1]) {\n              break;\n            }\n            let t = s[k];\n            s[k] = s[k + 1];\n            s[k + 1] = t;\n            if (wantv && k < n - 1) {\n              for (let i = 0; i < n; i++) {\n                t = V.get(i, k + 1);\n                V.set(i, k + 1, V.get(i, k));\n                V.set(i, k, t);\n              }\n            }\n            if (wantu && k < m - 1) {\n              for (let i = 0; i < m; i++) {\n                t = U.get(i, k + 1);\n                U.set(i, k + 1, U.get(i, k));\n                U.set(i, k, t);\n              }\n            }\n            k++;\n          }\n          iter = 0;\n          p--;\n          break;\n        }\n        // no default\n      }\n    }\n\n    if (swapped) {\n      let tmp = V;\n      V = U;\n      U = tmp;\n    }\n\n    this.m = m;\n    this.n = n;\n    this.s = s;\n    this.U = U;\n    this.V = V;\n  }\n\n  solve(value) {\n    let Y = value;\n    let e = this.threshold;\n    let scols = this.s.length;\n    let Ls = Matrix.zeros(scols, scols);\n\n    for (let i = 0; i < scols; i++) {\n      if (Math.abs(this.s[i]) <= e) {\n        Ls.set(i, i, 0);\n      } else {\n        Ls.set(i, i, 1 / this.s[i]);\n      }\n    }\n\n    let U = this.U;\n    let V = this.rightSingularVectors;\n\n    let VL = V.mmul(Ls);\n    let vrows = V.rows;\n    let urows = U.rows;\n    let VLU = Matrix.zeros(vrows, urows);\n\n    for (let i = 0; i < vrows; i++) {\n      for (let j = 0; j < urows; j++) {\n        let sum = 0;\n        for (let k = 0; k < scols; k++) {\n          sum += VL.get(i, k) * U.get(j, k);\n        }\n        VLU.set(i, j, sum);\n      }\n    }\n\n    return VLU.mmul(Y);\n  }\n\n  solveForDiagonal(value) {\n    return this.solve(Matrix.diag(value));\n  }\n\n  inverse() {\n    let V = this.V;\n    let e = this.threshold;\n    let vrows = V.rows;\n    let vcols = V.columns;\n    let X = new Matrix(vrows, this.s.length);\n\n    for (let i = 0; i < vrows; i++) {\n      for (let j = 0; j < vcols; j++) {\n        if (Math.abs(this.s[j]) > e) {\n          X.set(i, j, V.get(i, j) / this.s[j]);\n        }\n      }\n    }\n\n    let U = this.U;\n\n    let urows = U.rows;\n    let ucols = U.columns;\n    let Y = new Matrix(vrows, urows);\n\n    for (let i = 0; i < vrows; i++) {\n      for (let j = 0; j < urows; j++) {\n        let sum = 0;\n        for (let k = 0; k < ucols; k++) {\n          sum += X.get(i, k) * U.get(j, k);\n        }\n        Y.set(i, j, sum);\n      }\n    }\n\n    return Y;\n  }\n\n  get condition() {\n    return this.s[0] / this.s[Math.min(this.m, this.n) - 1];\n  }\n\n  get norm2() {\n    return this.s[0];\n  }\n\n  get rank() {\n    let tol = Math.max(this.m, this.n) * this.s[0] * Number.EPSILON;\n    let r = 0;\n    let s = this.s;\n    for (let i = 0, ii = s.length; i < ii; i++) {\n      if (s[i] > tol) {\n        r++;\n      }\n    }\n    return r;\n  }\n\n  get diagonal() {\n    return Array.from(this.s);\n  }\n\n  get threshold() {\n    return (Number.EPSILON / 2) * Math.max(this.m, this.n) * this.s[0];\n  }\n\n  get leftSingularVectors() {\n    return this.U;\n  }\n\n  get rightSingularVectors() {\n    return this.V;\n  }\n\n  get diagonalMatrix() {\n    return Matrix.diag(this.s);\n  }\n}\n","import LuDecomposition from './dc/lu';\nimport QrDecomposition from './dc/qr';\nimport SingularValueDecomposition from './dc/svd';\nimport Matrix from './matrix';\nimport WrapperMatrix2D from './wrap/WrapperMatrix2D';\n\nexport function inverse(matrix, useSVD = false) {\n  matrix = WrapperMatrix2D.checkMatrix(matrix);\n  if (useSVD) {\n    return new SingularValueDecomposition(matrix).inverse();\n  } else {\n    return solve(matrix, Matrix.eye(matrix.rows));\n  }\n}\n\nexport function solve(leftHandSide, rightHandSide, useSVD = false) {\n  leftHandSide = WrapperMatrix2D.checkMatrix(leftHandSide);\n  rightHandSide = WrapperMatrix2D.checkMatrix(rightHandSide);\n  if (useSVD) {\n    return new SingularValueDecomposition(leftHandSide).solve(rightHandSide);\n  } else {\n    return leftHandSide.isSquare()\n      ? new LuDecomposition(leftHandSide).solve(rightHandSide)\n      : new QrDecomposition(leftHandSide).solve(rightHandSide);\n  }\n}\n","export function addStyle(serie, spectrum, options = {}) {\n    let { color = '#A9A9A9', opacity = 1, lineWidth = 1 } = options;\n    // eslint-disable-next-line @typescript-eslint/prefer-regexp-exec\n    if (color.match(/#[0-9A-F]{6}$/i)) {\n        color = (color + ((opacity * 255) >> 0).toString(16)).toUpperCase();\n    }\n    else {\n        color = color.replace(/rgb ?\\((.*)\\)/, `rgba($1,${opacity})`);\n    }\n    serie.style = [\n        {\n            name: 'unselected',\n            style: {\n                line: {\n                    color,\n                    width: lineWidth,\n                    dash: 1,\n                },\n            },\n        },\n        {\n            name: 'selected',\n            style: {\n                line: {\n                    color,\n                    width: lineWidth + 2,\n                    dash: 1,\n                },\n            },\n        },\n    ];\n    serie.name = spectrum.label || spectrum.id;\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWRkU3R5bGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvanNncmFwaC9hZGRTdHlsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFPQSxNQUFNLFVBQVUsUUFBUSxDQUN0QixLQUE4QixFQUM5QixRQUFrQixFQUNsQixVQUF3QixFQUFFO0lBRTFCLElBQUksRUFBRSxLQUFLLEdBQUcsU0FBUyxFQUFFLE9BQU8sR0FBRyxDQUFDLEVBQUUsU0FBUyxHQUFHLENBQUMsRUFBRSxHQUFHLE9BQU8sQ0FBQztJQUNoRSxpRUFBaUU7SUFDakUsSUFBSSxLQUFLLENBQUMsS0FBSyxDQUFDLGdCQUFnQixDQUFDLEVBQUU7UUFDakMsS0FBSyxHQUFHLENBQUMsS0FBSyxHQUFHLENBQUMsQ0FBQyxPQUFPLEdBQUcsR0FBRyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsV0FBVyxFQUFFLENBQUM7S0FDckU7U0FBTTtRQUNMLEtBQUssR0FBRyxLQUFLLENBQUMsT0FBTyxDQUFDLGVBQWUsRUFBRSxXQUFXLE9BQU8sR0FBRyxDQUFDLENBQUM7S0FDL0Q7SUFDRCxLQUFLLENBQUMsS0FBSyxHQUFHO1FBQ1o7WUFDRSxJQUFJLEVBQUUsWUFBWTtZQUNsQixLQUFLLEVBQUU7Z0JBQ0wsSUFBSSxFQUFFO29CQUNKLEtBQUs7b0JBQ0wsS0FBSyxFQUFFLFNBQVM7b0JBQ2hCLElBQUksRUFBRSxDQUFDO2lCQUNSO2FBQ0Y7U0FDRjtRQUNEO1lBQ0UsSUFBSSxFQUFFLFVBQVU7WUFDaEIsS0FBSyxFQUFFO2dCQUNMLElBQUksRUFBRTtvQkFDSixLQUFLO29CQUNMLEtBQUssRUFBRSxTQUFTLEdBQUcsQ0FBQztvQkFDcEIsSUFBSSxFQUFFLENBQUM7aUJBQ1I7YUFDRjtTQUNGO0tBQ0YsQ0FBQztJQUNGLEtBQUssQ0FBQyxJQUFJLEdBQUcsUUFBUSxDQUFDLEtBQUssSUFBSSxRQUFRLENBQUMsRUFBRSxDQUFDO0FBQzdDLENBQUMifQ==","export const COLORS = [\n    '#FFB300',\n    '#803E75',\n    '#FF6800',\n    '#A6BDD7',\n    '#C10020',\n    '#CEA262',\n    '#817066',\n    '#007D34',\n    '#F6768E',\n    '#00538A',\n    '#FF7A5C',\n    '#53377A',\n    '#FF8E00',\n    '#B32851',\n    '#F4C800',\n    '#7F180D',\n    '#93AA00',\n    '#593315',\n    '#F13A13',\n    '#232C16',\n];\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29sb3JzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2pzZ3JhcGgvY29sb3JzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE1BQU0sQ0FBQyxNQUFNLE1BQU0sR0FBRztJQUNwQixTQUFTO0lBQ1QsU0FBUztJQUNULFNBQVM7SUFDVCxTQUFTO0lBQ1QsU0FBUztJQUNULFNBQVM7SUFDVCxTQUFTO0lBQ1QsU0FBUztJQUNULFNBQVM7SUFDVCxTQUFTO0lBQ1QsU0FBUztJQUNULFNBQVM7SUFDVCxTQUFTO0lBQ1QsU0FBUztJQUNULFNBQVM7SUFDVCxTQUFTO0lBQ1QsU0FBUztJQUNULFNBQVM7SUFDVCxTQUFTO0lBQ1QsU0FBUztDQUNWLENBQUMifQ==","export function appendDistinctParameter(values, key, value) {\n    if (!values[key]) {\n        values[key] = {\n            key,\n            values: [],\n            count: 0,\n        };\n    }\n    if (!values[key].values.includes(value)) {\n        values[key].values.push(value);\n    }\n    values[key].count++;\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXBwZW5kRGlzdGluY3RQYXJhbWV0ZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvdXRpbC9hcHBlbmREaXN0aW5jdFBhcmFtZXRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQSxNQUFNLFVBQVUsdUJBQXVCLENBQ3JDLE1BQXFDLEVBQ3JDLEdBQVcsRUFDWCxLQUFhO0lBRWIsSUFBSSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsRUFBRTtRQUNoQixNQUFNLENBQUMsR0FBRyxDQUFDLEdBQUc7WUFDWixHQUFHO1lBQ0gsTUFBTSxFQUFFLEVBQUU7WUFDVixLQUFLLEVBQUUsQ0FBQztTQUNULENBQUM7S0FDSDtJQUNELElBQUksQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUMsRUFBRTtRQUN2QyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztLQUNoQztJQUNELE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQyxLQUFLLEVBQUUsQ0FBQztBQUN0QixDQUFDIn0=","export function appendDistinctValue(values, key) {\n    if (!values[key]) {\n        values[key] = {\n            key,\n            count: 0,\n        };\n    }\n    values[key].count++;\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXBwZW5kRGlzdGluY3RWYWx1ZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy91dGlsL2FwcGVuZERpc3RpbmN0VmFsdWUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsTUFBTSxVQUFVLG1CQUFtQixDQUNqQyxNQUFtQyxFQUNuQyxHQUFXO0lBRVgsSUFBSSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsRUFBRTtRQUNoQixNQUFNLENBQUMsR0FBRyxDQUFDLEdBQUc7WUFDWixHQUFHO1lBQ0gsS0FBSyxFQUFFLENBQUM7U0FDVCxDQUFDO0tBQ0g7SUFDRCxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUMsS0FBSyxFQUFFLENBQUM7QUFDdEIsQ0FBQyJ9","// Based on https://github.com/scijs/cholesky-solve\r\n\r\n/*\r\nThe MIT License (MIT)\r\n\r\nCopyright (c) 2013 Eric Arnebäck\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in\r\nall copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\nTHE SOFTWARE.\r\n*/\r\n\r\nfunction ldlSymbolic(\r\n  n /* A and L are n-by-n, where n >= 0 */,\r\n  Ap /* input of size n + 1, not modified */,\r\n  Ai /* input of size nz=Ap[n], not modified */,\r\n  Lp /* output of size n + 1, not defined on input */,\r\n  Parent /* output of size n, not defined on input */,\r\n  Lnz /* output of size n, not defined on input */,\r\n  Flag /* workspace of size n, not defn. on input or output */,\r\n) {\r\n  let i, k, p, kk, p2;\r\n\r\n  for (k = 0; k < n; k++) {\r\n    /* L(k,:) pattern: all nodes reachable in etree from nz in A(0:k-1,k) */\r\n    Parent[k] = -1; /* parent of k is not yet known */\r\n    Flag[k] = k; /* mark node k as visited */\r\n    Lnz[k] = 0; /* count of nonzeros in column k of L */\r\n    kk = k; /* kth original, or permuted, column */\r\n    p2 = Ap[kk + 1];\r\n    for (p = Ap[kk]; p < p2; p++) {\r\n      /* A (i,k) is nonzero (original or permuted A) */\r\n      i = Ai[p];\r\n\r\n      if (i < k) {\r\n        /* follow path from i to root of etree, stop at flagged node */\r\n        for (; Flag[i] !== k; i = Parent[i]) {\r\n          /* find parent of i if not yet determined */\r\n          if (Parent[i] === -1) Parent[i] = k;\r\n          Lnz[i]++; /* L (k,i) is nonzero */\r\n          Flag[i] = k; /* mark i as visited */\r\n        }\r\n      }\r\n    }\r\n  }\r\n  /* construct Lp index array from Lnz column counts */\r\n  Lp[0] = 0;\r\n  for (k = 0; k < n; k++) {\r\n    Lp[k + 1] = Lp[k] + Lnz[k];\r\n  }\r\n}\r\n\r\nfunction ldlNumeric(\r\n  n /* A and L are n-by-n, where n >= 0 */,\r\n  Ap /* input of size n+1, not modified */,\r\n  Ai /* input of size nz=Ap[n], not modified */,\r\n  Ax /* input of size nz=Ap[n], not modified */,\r\n  Lp /* input of size n+1, not modified */,\r\n  Parent /* input of size n, not modified */,\r\n  Lnz /* output of size n, not defn. on input */,\r\n  Li /* output of size lnz=Lp[n], not defined on input */,\r\n  Lx /* output of size lnz=Lp[n], not defined on input */,\r\n  D /* output of size n, not defined on input */,\r\n  Y /* workspace of size n, not defn. on input or output */,\r\n  Pattern /* workspace of size n, not defn. on input or output */,\r\n  Flag /* workspace of size n, not defn. on input or output */,\r\n) {\r\n  let yi, lKi;\r\n  let i, k, p, kk, p2, len, top;\r\n  for (k = 0; k < n; k++) {\r\n    /* compute nonzero Pattern of kth row of L, in topological order */\r\n    Y[k] = 0.0; /* Y(0:k) is now all zero */\r\n    top = n; /* stack for pattern is empty */\r\n    Flag[k] = k; /* mark node k as visited */\r\n    Lnz[k] = 0; /* count of nonzeros in column k of L */\r\n    kk = k; /* kth original, or permuted, column */\r\n    p2 = Ap[kk + 1];\r\n    for (p = Ap[kk]; p < p2; p++) {\r\n      i = Ai[p]; /* get A(i,k) */\r\n      if (i <= k) {\r\n        Y[i] += Ax[p]; /* scatter A(i,k) into Y (sum duplicates) */\r\n        for (len = 0; Flag[i] !== k; i = Parent[i]) {\r\n          Pattern[len++] = i; /* L(k,i) is nonzero */\r\n          Flag[i] = k; /* mark i as visited */\r\n        }\r\n        while (len > 0) Pattern[--top] = Pattern[--len];\r\n      }\r\n    }\r\n    /* compute numerical values kth row of L (a sparse triangular solve) */\r\n    D[k] = Y[k]; /* get D(k,k) and clear Y(k) */\r\n    Y[k] = 0.0;\r\n    for (; top < n; top++) {\r\n      i = Pattern[top]; /* Pattern[top:n-1] is pattern of L(:,k) */\r\n      yi = Y[i]; /* get and clear Y(i) */\r\n      Y[i] = 0.0;\r\n      p2 = Lp[i] + Lnz[i];\r\n      for (p = Lp[i]; p < p2; p++) {\r\n        Y[Li[p]] -= Lx[p] * yi;\r\n      }\r\n      lKi = yi / D[i]; /* the nonzero entry L(k,i) */\r\n      D[k] -= lKi * yi;\r\n      Li[p] = k; /* store L(k,i) in column form of L */\r\n      Lx[p] = lKi;\r\n      Lnz[i]++; /* increment count of nonzeros in col i */\r\n    }\r\n\r\n    if (D[k] === 0.0) return k; /* failure, D(k,k) is zero */\r\n  }\r\n\r\n  return n; /* success, diagonal of D is all nonzero */\r\n}\r\n\r\nfunction ldlLsolve(\r\n  n /* L is n-by-n, where n >= 0 */,\r\n  X /* size n. right-hand-side on input, soln. on output */,\r\n  Lp /* input of size n+1, not modified */,\r\n  Li /* input of size lnz=Lp[n], not modified */,\r\n  Lx /* input of size lnz=Lp[n], not modified */,\r\n) {\r\n  let j, p, p2;\r\n  for (j = 0; j < n; j++) {\r\n    p2 = Lp[j + 1];\r\n    for (p = Lp[j]; p < p2; p++) {\r\n      X[Li[p]] -= Lx[p] * X[j];\r\n    }\r\n  }\r\n}\r\nfunction ldlDsolve(\r\n  n /* D is n-by-n, where n >= 0 */,\r\n  X /* size n. right-hand-side on input, soln. on output */,\r\n  D /* input of size n, not modified */,\r\n) {\r\n  let j;\r\n  for (j = 0; j < n; j++) {\r\n    X[j] /= D[j];\r\n  }\r\n}\r\nfunction ldlLTsolve(\r\n  n /* L is n-by-n, where n >= 0 */,\r\n  X /* size n. right-hand-side on input, soln. on output */,\r\n  Lp /* input of size n+1, not modified */,\r\n  Li /* input of size lnz=Lp[n], not modified */,\r\n  Lx /* input of size lnz=Lp[n], not modified */,\r\n) {\r\n  let j, p, p2;\r\n  for (j = n - 1; j >= 0; j--) {\r\n    p2 = Lp[j + 1];\r\n    for (p = Lp[j]; p < p2; p++) {\r\n      X[j] -= Lx[p] * X[Li[p]];\r\n    }\r\n  }\r\n}\r\n\r\nfunction ldlPerm(\r\n  n /* size of X, B, and P */,\r\n  X /* output of size n. */,\r\n  B /* input of size n. */,\r\n  P /* input permutation array of size n. */,\r\n) {\r\n  let j;\r\n  for (j = 0; j < n; j++) {\r\n    X[j] = B[P[j]];\r\n  }\r\n}\r\n\r\nfunction ldlPermt(\r\n  n /* size of X, B, and P */,\r\n  X /* output of size n. */,\r\n  B /* input of size n. */,\r\n  P /* input permutation array of size n. */,\r\n) {\r\n  let j;\r\n  for (j = 0; j < n; j++) {\r\n    X[P[j]] = B[j];\r\n  }\r\n}\r\n\r\nfunction prepare(M, n, P) {\r\n  // if a permutation was specified, apply it.\r\n  if (P) {\r\n    let Pinv = new Array(n);\r\n\r\n    for (let k = 0; k < n; k++) {\r\n      Pinv[P[k]] = k;\r\n    }\r\n\r\n    let Mt = []; // scratch memory\r\n    // Apply permutation. We make M into P*M*P^T\r\n    for (let a = 0; a < M.length; ++a) {\r\n      let ar = Pinv[M[a][0]];\r\n      let ac = Pinv[M[a][1]];\r\n\r\n      // we only store the upper-diagonal elements(since we assume matrix is symmetric, we only need to store these)\r\n      // if permuted element is below diagonal, we simply transpose it.\r\n      if (ac < ar) {\r\n        let t = ac;\r\n        ac = ar;\r\n        ar = t;\r\n      }\r\n\r\n      Mt[a] = [];\r\n      Mt[a][0] = ar;\r\n      Mt[a][1] = ac;\r\n      Mt[a][2] = M[a][2];\r\n    }\r\n\r\n    M = Mt; // copy scratch memory.\r\n  } else {\r\n    // if P argument is null, we just use an identity permutation.\r\n    P = [];\r\n    for (let i = 0; i < n; ++i) {\r\n      P[i] = i;\r\n    }\r\n  }\r\n\r\n  // The sparse matrix we are decomposing is A.\r\n  // Now we shall create A from M.\r\n  let Ap = new Array(n + 1);\r\n  let Ai = new Array(M.length);\r\n  let Ax = new Array(M.length);\r\n\r\n  // count number of non-zero elements in columns.\r\n  let LNZ = [];\r\n  for (let i = 0; i < n; ++i) {\r\n    LNZ[i] = 0;\r\n  }\r\n  for (let a = 0; a < M.length; ++a) {\r\n    LNZ[M[a][1]]++;\r\n  }\r\n\r\n  Ap[0] = 0;\r\n  for (let i = 0; i < n; ++i) {\r\n    Ap[i + 1] = Ap[i] + LNZ[i];\r\n  }\r\n\r\n  let coloffset = [];\r\n  for (let a = 0; a < n; ++a) {\r\n    coloffset[a] = 0;\r\n  }\r\n\r\n  // go through all elements in M, and add them to sparse matrix A.\r\n  for (let i = 0; i < M.length; ++i) {\r\n    let e = M[i];\r\n    let col = e[1];\r\n\r\n    let adr = Ap[col] + coloffset[col];\r\n    Ai[adr] = e[0];\r\n    Ax[adr] = e[2];\r\n\r\n    coloffset[col]++;\r\n  }\r\n\r\n  let D = new Array(n);\r\n  let Y = new Array(n);\r\n  let Lp = new Array(n + 1);\r\n  let Parent = new Array(n);\r\n  let Lnz = new Array(n);\r\n  let Flag = new Array(n);\r\n  let Pattern = new Array(n);\r\n  let bp1 = new Array(n);\r\n  let x = new Array(n);\r\n  let d;\r\n\r\n  ldlSymbolic(n, Ap, Ai, Lp, Parent, Lnz, Flag);\r\n\r\n  let Lx = new Array(Lp[n]);\r\n  let Li = new Array(Lp[n]);\r\n\r\n  d = ldlNumeric(n, Ap, Ai, Ax, Lp, Parent, Lnz, Li, Lx, D, Y, Pattern, Flag);\r\n\r\n  if (d === n) {\r\n    return function (b) {\r\n      ldlPerm(n, bp1, b, P);\r\n      ldlLsolve(n, bp1, Lp, Li, Lx);\r\n      ldlDsolve(n, bp1, D);\r\n      ldlLTsolve(n, bp1, Lp, Li, Lx);\r\n      ldlPermt(n, x, bp1, P);\r\n\r\n      return x;\r\n    };\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport { prepare as default };\r\n","'use strict'\n\nmodule.exports = cuthillMckee\n\nfunction compareNum(a, b) { return a - b }\n\nfunction cuthillMckee(list, n) {\n  var adj = new Array(n)\n  var visited = new Array(n)\n  for(var i=0; i<n; ++i) {\n    adj[i]     = []\n    visited[i] = false\n  }\n\n  for(var i=0; i<list.length; ++i) {\n    var l = list[i]\n    adj[l[0]].push(l[1])\n  }\n\n  var toVisit = new Array(n)\n  var eol = 0\n  var ptr = 0\n  for(var i=0; i<n; ++i) {\n    if(visited[i]) {\n      continue\n    }\n    toVisit[eol++] = i\n    visited[i] = true\n    while(ptr < eol) {\n      var v = toVisit[ptr++]\n      var nbhd = adj[v]\n      nbhd.sort(compareNum)\n      for(var j=0; j<nbhd.length; ++j) {\n        var u = nbhd[j]\n        if(visited[u]) {\n          continue\n        }\n        visited[u] = true\n        toVisit[eol++] = u\n      }\n    }\n  }\n\n  var result = new Array(n)\n  for(var i=0; i<n; ++i) {\n    result[toVisit[i]] = i\n  }\n\n  return result\n}\n","import cuthillMckee from 'cuthill-mckee';\r\n\r\nconst getClosestNumber = (array = [], goal = 0) => {\r\n  const closest = array.reduce((prev, curr) => {\r\n    return Math.abs(curr - goal) < Math.abs(prev - goal) ? curr : prev;\r\n  });\r\n  return closest;\r\n};\r\n\r\nconst getCloseIndex = (array = [], goal = 0) => {\r\n  const closest = getClosestNumber(array, goal);\r\n  return array.indexOf(closest);\r\n};\r\n\r\nconst updateSystem = (matrix, y, weights) => {\r\n  let nbPoints = y.length;\r\n  let l = nbPoints - 1;\r\n  let newMatrix = new Array(matrix.length);\r\n  let newVector = new Float64Array(nbPoints);\r\n  for (let i = 0; i < l; i++) {\r\n    let w = weights[i];\r\n    let diag = i * 2;\r\n    let next = diag + 1;\r\n    newMatrix[diag] = matrix[diag].slice();\r\n    newMatrix[next] = matrix[next].slice();\r\n    if (w === 0) {\r\n      newVector[i] = 0;\r\n    } else {\r\n      newVector[i] = y[i] * w;\r\n      newMatrix[diag][2] += w;\r\n    }\r\n  }\r\n  newVector[l] = y[l] * weights[l];\r\n  newMatrix[l * 2] = matrix[l * 2].slice();\r\n  newMatrix[l * 2][2] += weights[l];\r\n\r\n  return [newMatrix, newVector];\r\n};\r\n\r\nconst getDeltaMatrix = (nbPoints, lambda) => {\r\n  let matrix = [];\r\n  let last = nbPoints - 1;\r\n  for (let i = 0; i < last; i++) {\r\n    matrix.push([i, i, lambda * 2]);\r\n    matrix.push([i + 1, i, -1 * lambda]);\r\n  }\r\n  matrix[0][2] = lambda;\r\n  matrix.push([last, last, lambda]);\r\n  return {\r\n    lowerTriangularNonZeros: matrix,\r\n    permutationEncodedArray: cuthillMckee(matrix, nbPoints),\r\n  };\r\n};\r\n\r\nexport { updateSystem, getDeltaMatrix, getCloseIndex, getClosestNumber };\r\n","import Cholesky from './choleskySolver';\r\nimport { updateSystem, getDeltaMatrix, getCloseIndex } from './utils';\r\n\r\n/**\r\n * Fit the baseline drift by iteratively changing weights of sum square error between the fitted baseline and original signals,\r\n * for further information about the parameters you can get the [paper of airPLS](https://github.com/zmzhang/airPLS/blob/master/airPLS_manuscript.pdf)\r\n * @param {Array<number>} x - x axis data useful when control points or zones are submitted\r\n * @param {Array<number>} y - Original data\r\n * @param {object} [options={}] - Options object\r\n * @param {number} [options.maxIterations = 100] - Maximal number of iterations if the method does not reach the stop criterion\r\n * @param {number} [options.factorCriterion = 0.001] - Factor of the sum of absolute value of original data, to compute stop criterion\r\n * @param {Array<number>} [options.weights = [1,1,...]] - Initial weights vector, default each point has the same weight\r\n * @param {number} [options.lambda = 100] - Factor of weights matrix in -> [I + lambda D'D]z = x\r\n * @param {Array<number>} [options.controlPoints = []] - Array of x axis values to force that baseline cross those points.\r\n * @param {Array<number>} [options.baseLineZones = []] - Array of x axis values (as from - to), to force that baseline cross those zones.\r\n * @returns {{corrected: Array<number>, error: number, iteration: number, baseline: Array<number>}}\r\n */\r\nfunction airPLS(x, y, options = {}) {\r\n  let {\r\n    maxIterations = 100,\r\n    lambda = 100,\r\n    factorCriterion = 0.001,\r\n    weights = new Array(y.length).fill(1),\r\n    controlPoints = [],\r\n    baseLineZones = [],\r\n  } = options;\r\n\r\n  if (controlPoints.length > 0) {\r\n    controlPoints.forEach((e, i, arr) => (arr[i] = getCloseIndex(x, e)));\r\n  }\r\n  if (baseLineZones.length > 0) {\r\n    baseLineZones.forEach((range) => {\r\n      let indexFrom = getCloseIndex(x, range.from);\r\n      let indexTo = getCloseIndex(x, range.to);\r\n      if (indexFrom > indexTo) [indexFrom, indexTo] = [indexTo, indexFrom];\r\n      for (let i = indexFrom; i < indexTo; i++) {\r\n        controlPoints.push(i);\r\n      }\r\n    });\r\n  }\r\n\r\n  let baseline, iteration;\r\n  let nbPoints = y.length;\r\n  let l = nbPoints - 1;\r\n  let sumNegDifferences = Number.MAX_SAFE_INTEGER;\r\n  let stopCriterion =\r\n    factorCriterion * y.reduce((sum, e) => Math.abs(e) + sum, 0);\r\n\r\n  let { lowerTriangularNonZeros, permutationEncodedArray } = getDeltaMatrix(\r\n    nbPoints,\r\n    lambda,\r\n  );\r\n\r\n  for (\r\n    iteration = 0;\r\n    iteration < maxIterations && Math.abs(sumNegDifferences) > stopCriterion;\r\n    iteration++\r\n  ) {\r\n    let [leftHandSide, rightHandSide] = updateSystem(\r\n      lowerTriangularNonZeros,\r\n      y,\r\n      weights,\r\n    );\r\n\r\n    let cho = Cholesky(leftHandSide, nbPoints, permutationEncodedArray);\r\n\r\n    baseline = cho(rightHandSide);\r\n\r\n    sumNegDifferences = 0;\r\n\r\n    let difference = y.map(calculateError);\r\n\r\n    let maxNegativeDiff = -1 * Number.MAX_SAFE_INTEGER;\r\n    for (let i = 1; i < l; i++) {\r\n      let diff = difference[i];\r\n      if (diff >= 0) {\r\n        weights[i] = 0;\r\n      } else {\r\n        weights[i] = Math.exp((iteration * diff) / sumNegDifferences);\r\n        if (maxNegativeDiff < diff) maxNegativeDiff = diff;\r\n      }\r\n    }\r\n\r\n    let value = Math.exp((iteration * maxNegativeDiff) / sumNegDifferences);\r\n    weights[0] = value;\r\n    weights[l] = value;\r\n    controlPoints.forEach((i) => (weights[i] = value));\r\n  }\r\n\r\n  return {\r\n    corrected: y.map((e, i) => e - baseline[i]),\r\n    baseline,\r\n    iteration,\r\n    error: sumNegDifferences,\r\n  };\r\n\r\n  function calculateError(e, i) {\r\n    let diff = e - baseline[i];\r\n    if (diff < 0) sumNegDifferences += diff;\r\n    return diff;\r\n  }\r\n}\r\n\r\nexport { airPLS as default };\r\n","import airpls from 'ml-airpls';\nimport sequentialFill from 'ml-array-sequential-fill';\n/**\n * Adaptive iteratively reweighted penalized least squares [1]\n *\n * This function calls ml-airpls\n *\n * References:\n * [1] Zhang, Z.-M.; Chen, S.; Liang, Y.-Z.\n * Baseline Correction Using Adaptive Iteratively Reweighted Penalized Least Squares.\n * Analyst 2010, 135 (5), 1138–1146. https://doi.org/10.1039/B922045C.\n * @export\n * @param {Array<number>} ys\n * @param {object} [options] - Options object\n * @param {Array<number>} [options.x] Optional, Independent axis variable. If not specified, we use a linear grid\n * @param {object} [options.regression] - Options for the regression\n * @param {number} [options.regression.maxIterations = 100] - Maximum number of allowed iterations\n * @param {function} [options.regression.§Regression = PolynomialRegression] - Regression class with a predict method\n * @param {*} [options.regression.regressionOptions] - Options for regressionFunction\n * @param {number} [options.regression.tolerance = 0.001] - Convergence error tolerance\n * @returns {BaselineOutput}\n */\nexport function airPLSBaseline(ys, options = {}) {\n  const numberPoints = ys.length;\n  let { x, regressionOptions } = options;\n  if (!x) {\n    x = sequentialFill({ from: 0, to: numberPoints - 1, size: numberPoints });\n  }\n  let output = airpls(x, ys, regressionOptions);\n\n  return { baseline: output.baseline, correctedSpectrum: output.corrected };\n}\n","export default function maybeToPrecision(value, digits) {\n  if (value < 0) {\n    value = 0 - value;\n    if (typeof digits === 'number') {\n      return `- ${value.toPrecision(digits)}`;\n    } else {\n      return `- ${value.toString()}`;\n    }\n  } else {\n    if (typeof digits === 'number') {\n      return value.toPrecision(digits);\n    } else {\n      return value.toString();\n    }\n  }\n}\n","import isAnyArray from 'is-any-array';\n\nexport { default as maybeToPrecision } from './maybeToPrecision';\nexport { default as checkArrayLength } from './checkArrayLength';\nexport default class BaseRegression {\n  constructor() {\n    if (new.target === BaseRegression) {\n      throw new Error('BaseRegression must be subclassed');\n    }\n  }\n\n  predict(x) {\n    if (typeof x === 'number') {\n      return this._predict(x);\n    } else if (isAnyArray(x)) {\n      const y = [];\n      for (let i = 0; i < x.length; i++) {\n        y.push(this._predict(x[i]));\n      }\n      return y;\n    } else {\n      throw new TypeError('x must be a number or array');\n    }\n  }\n\n  _predict() {\n    throw new Error('_predict must be implemented');\n  }\n\n  train() {\n    // Do nothing for this package\n  }\n\n  toString() {\n    return '';\n  }\n\n  toLaTeX() {\n    return '';\n  }\n\n  /**\n   * Return the correlation coefficient of determination (r) and chi-square.\n   * @param {Array<number>} x\n   * @param {Array<number>} y\n   * @return {object}\n   */\n  score(x, y) {\n    if (!isAnyArray(x) || !isAnyArray(y) || x.length !== y.length) {\n      throw new Error('x and y must be arrays of the same length');\n    }\n\n    const n = x.length;\n    const y2 = new Array(n);\n    for (let i = 0; i < n; i++) {\n      y2[i] = this._predict(x[i]);\n    }\n\n    let xSum = 0;\n    let ySum = 0;\n    let chi2 = 0;\n    let rmsd = 0;\n    let xSquared = 0;\n    let ySquared = 0;\n    let xY = 0;\n    for (let i = 0; i < n; i++) {\n      xSum += y2[i];\n      ySum += y[i];\n      xSquared += y2[i] * y2[i];\n      ySquared += y[i] * y[i];\n      xY += y2[i] * y[i];\n      if (y[i] !== 0) {\n        chi2 += ((y[i] - y2[i]) * (y[i] - y2[i])) / y[i];\n      }\n      rmsd += (y[i] - y2[i]) * (y[i] - y2[i]);\n    }\n\n    const r =\n      (n * xY - xSum * ySum) /\n      Math.sqrt((n * xSquared - xSum * xSum) * (n * ySquared - ySum * ySum));\n\n    return {\n      r: r,\n      r2: r * r,\n      chi2: chi2,\n      rmsd: Math.sqrt(rmsd / n),\n    };\n  }\n}\n","import { Matrix, MatrixTransposeView, solve } from 'ml-matrix';\nimport BaseRegression, {\n  checkArrayLength,\n  maybeToPrecision,\n} from 'ml-regression-base';\n\nexport default class PolynomialRegression extends BaseRegression {\n  constructor(x, y, degree) {\n    super();\n    if (x === true) {\n      this.degree = y.degree;\n      this.powers = y.powers;\n      this.coefficients = y.coefficients;\n    } else {\n      checkArrayLength(x, y);\n      regress(this, x, y, degree);\n    }\n  }\n\n  _predict(x) {\n    let y = 0;\n    for (let k = 0; k < this.powers.length; k++) {\n      y += this.coefficients[k] * Math.pow(x, this.powers[k]);\n    }\n    return y;\n  }\n\n  toJSON() {\n    return {\n      name: 'polynomialRegression',\n      degree: this.degree,\n      powers: this.powers,\n      coefficients: this.coefficients,\n    };\n  }\n\n  toString(precision) {\n    return this._toFormula(precision, false);\n  }\n\n  toLaTeX(precision) {\n    return this._toFormula(precision, true);\n  }\n\n  _toFormula(precision, isLaTeX) {\n    let sup = '^';\n    let closeSup = '';\n    let times = ' * ';\n    if (isLaTeX) {\n      sup = '^{';\n      closeSup = '}';\n      times = '';\n    }\n\n    let fn = '';\n    let str = '';\n    for (let k = 0; k < this.coefficients.length; k++) {\n      str = '';\n      if (this.coefficients[k] !== 0) {\n        if (this.powers[k] === 0) {\n          str = maybeToPrecision(this.coefficients[k], precision);\n        } else {\n          if (this.powers[k] === 1) {\n            str = `${maybeToPrecision(this.coefficients[k], precision) +\n              times}x`;\n          } else {\n            str = `${maybeToPrecision(this.coefficients[k], precision) +\n              times}x${sup}${this.powers[k]}${closeSup}`;\n          }\n        }\n\n        if (this.coefficients[k] > 0 && k !== this.coefficients.length - 1) {\n          str = ` + ${str}`;\n        } else if (k !== this.coefficients.length - 1) {\n          str = ` ${str}`;\n        }\n      }\n      fn = str + fn;\n    }\n    if (fn.charAt(0) === '+') {\n      fn = fn.slice(1);\n    }\n\n    return `f(x) = ${fn}`;\n  }\n\n  static load(json) {\n    if (json.name !== 'polynomialRegression') {\n      throw new TypeError('not a polynomial regression model');\n    }\n    return new PolynomialRegression(true, json);\n  }\n}\n\nfunction regress(pr, x, y, degree) {\n  const n = x.length;\n  let powers;\n  if (Array.isArray(degree)) {\n    powers = degree;\n    degree = powers.length;\n  } else {\n    degree++;\n    powers = new Array(degree);\n    for (let k = 0; k < degree; k++) {\n      powers[k] = k;\n    }\n  }\n  const F = new Matrix(n, degree);\n  const Y = new Matrix([y]);\n  for (let k = 0; k < degree; k++) {\n    for (let i = 0; i < n; i++) {\n      if (powers[k] === 0) {\n        F.set(i, k, 1);\n      } else {\n        F.set(i, k, Math.pow(x[i], powers[k]));\n      }\n    }\n  }\n\n  const FT = new MatrixTransposeView(F);\n  const A = FT.mmul(F);\n  const B = FT.mmul(new MatrixTransposeView(Y));\n\n  pr.degree = degree - 1;\n  pr.powers = powers;\n  pr.coefficients = solve(A, B).to1DArray();\n}\n","import isAnyArray from 'is-any-array';\n\nexport default function checkArraySize(x, y) {\n  if (!isAnyArray(x) || !isAnyArray(y)) {\n    throw new TypeError('x and y must be arrays');\n  }\n  if (x.length !== y.length) {\n    throw new RangeError('x and y arrays must have the same length');\n  }\n}\n","import sequentialFill from 'ml-array-sequential-fill';\nimport baselineCorrection from 'ml-baseline-correction-regression';\n\n/**\n * Iterative polynomial fitting [1]\n *\n * Implementation based on ml-baseline-correction-regression\n *\n * References:\n * [1] Gan, F.; Ruan, G.; Mo, J.\n * Baseline Correction by Improved Iterative Polynomial Fitting with Automatic Threshold.\n *  Chemometrics and Intelligent Laboratory Systems 2006, 82 (1), 59–65.\n * https://doi.org/10.1016/j.chemolab.2005.08.009.\n * @export\n * @param {Array<number>} ys\n * @param {object} [options] - Options object\n * @param {Array<number>} [options.x] Optional, Independent axis variable. If not specified, we use a linear grid\n * @param {Object} [options.regression]\n * @param {number} [options.regression.maxIterations = 100] - Maximum number of allowed iterations\n * @param {Object} [options.regression]\n * @param {function} [options.regression.Regression = PolynomialRegression] - Regression class with a predict method\n * @param {Object} [options.regression.regressionOptions] - Options for regressionFunction\n * @param {number} [options.regression.tolerance = 0.001] - Convergence error tolerance\n * @returns {BaselineOutput}\n */\nexport function iterativePolynomialBaseline(ys, options = {}) {\n  const numberPoints = ys.length;\n  let { x, regressionOptions } = options;\n  if (!x) {\n    x = sequentialFill({ from: 0, to: numberPoints - 1, size: numberPoints });\n  }\n\n  let output = baselineCorrection(x, ys, regressionOptions);\n\n  return { baseline: output.baseline, correctedSpectrum: output.corrected };\n}\n","import PolynomialRegression from 'ml-regression-polynomial';\r\n\r\n/**\r\n * Iterative regression-based baseline correction\r\n * @param {Array<number>} x - Independent axis variable\r\n * @param {Array<number>} y - Dependent axis variable\r\n * @param {object} [options] - Options object\r\n * @param {number} [options.maxIterations = 100] - Maximum number of allowed iterations\r\n * @param {function} [options.Regression = PolynomialRegression] - Regression class with a predict method\r\n * @param {*} [options.regressionOptions] - Options for regressionFunction\r\n * @param {number} [options.tolerance = 0.001] - Convergence error tolerance\r\n * @return {{corrected: Array<number>, delta: number, iteration: number, baseline: Array<number>}}\r\n */\r\nexport default function baselineCorrectionRegression(x, y, options = {}) {\r\n  let {\r\n    maxIterations = 100,\r\n    Regression = PolynomialRegression,\r\n    regressionOptions,\r\n    tolerance = 0.001,\r\n  } = options;\r\n\r\n  if (!regressionOptions && Regression === PolynomialRegression) {\r\n    regressionOptions = 3;\r\n  }\r\n\r\n  let baseline = y.slice();\r\n  let fitting = y.slice();\r\n  let oldFitting = y;\r\n  let iteration = 0;\r\n  let delta;\r\n  let regression;\r\n  while (iteration < maxIterations) {\r\n    // Calculate the fitting result\r\n    regression = new Regression(x, baseline, regressionOptions);\r\n\r\n    delta = 0;\r\n    for (let i = 0; i < baseline.length; i++) {\r\n      fitting[i] = regression.predict(x[i]);\r\n      if (baseline[i] > fitting[i]) {\r\n        baseline[i] = fitting[i];\r\n      }\r\n\r\n      delta += Math.abs((fitting[i] - oldFitting[i]) / oldFitting[i]);\r\n    }\r\n\r\n    // Stop criterion\r\n    if (delta < tolerance) {\r\n      break;\r\n    } else {\r\n      oldFitting = fitting.slice();\r\n      iteration++;\r\n    }\r\n  }\r\n\r\n  // removes baseline\r\n  let corrected = new Array(baseline.length);\r\n  for (let j = 0; j < baseline.length; j++) {\r\n    corrected[j] = y[j] - baseline[j];\r\n  }\r\n\r\n  return {\r\n    corrected,\r\n    delta,\r\n    iteration,\r\n    baseline,\r\n    regression: regression,\r\n  };\r\n}\r\n","import isArray from 'is-any-array';\n\n/**\n * Checks if input is valdi\n * @param {Array<number>} input\n\n */\nexport function xCheck(input) {\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n}\n\nexport function xCheckLengths(array1, array2) {\n  if (array1.length !== array2.length) {\n    throw new TypeError('Length of array1 and array2 must be identical');\n  }\n}\n","import { xCheck } from './xCheck';\nimport { xPadding } from './xPadding';\n/**\n * This function calculates a rolling average\n * @param {Array<Number>} array - the array that will be rotated\n * @param {function} fct callback function that from an array returns a value.\n * @param {object} [options={}]\n * @param {number} [options.window=5] rolling window\n * @param {string} [options.padding.size=0] none, value, circular, duplicate\n * @param {string} [options.padding.algorithm='value'] none, value, circular, duplicate\n * @param {number} [options.padding.value=0] value to use for padding (if algorithm='value')\n * @return {Array<Number>}\n */\nexport function xRolling(array, fct, options = {}) {\n  xCheck(array);\n  if (typeof fct !== 'function') throw Error('fct has to be a function');\n\n  const { window = 5, padding = {} } = options;\n  const { size = window - 1, algorithm, value } = padding;\n\n  array = xPadding(array, { size, algorithm, value }); // ensure we get a copy and it is float64\n\n  const newArray = [];\n  for (let i = 0; i < array.length - window + 1; i++) {\n    let subArray = new Float64Array(array.buffer, i * 8, window);\n    // we will send a view to the original buffer\n    newArray.push(fct(subArray));\n  }\n\n  return newArray;\n}\n","import { xCheck } from './xCheck';\n\n/**\n * This function pads an array\n * @param {Array} array - the array that will be padded\n * @param {object} [options={}]\n * @param {string} [options.algorithm=''] '', value, circular, duplicate\n * @param {number} [options.size=0] padding size before first element and after last element\n * @param {number} [options.value=0] value to use for padding (if algorithm='value')\n * @return {Array}\n */\nexport function xPadding(array, options = {}) {\n  const { size = 0, value = 0, algorithm = '' } = options;\n  xCheck(array);\n\n  if (!algorithm) {\n    if (array instanceof Float64Array) {\n      return array.slice();\n    } else {\n      return Float64Array.from(array);\n    }\n  }\n\n  let result = new Float64Array(array.length + size * 2);\n\n  for (let i = 0; i < array.length; i++) {\n    result[i + size] = array[i];\n  }\n\n  let fromEnd = size + array.length;\n  let toEnd = 2 * size + array.length;\n\n  switch (algorithm.toLowerCase()) {\n    case 'value':\n      for (let i = 0; i < size; i++) {\n        result[i] = value;\n      }\n      for (let i = fromEnd; i < toEnd; i++) {\n        result[i] = value;\n      }\n      break;\n    case 'duplicate':\n      for (let i = 0; i < size; i++) {\n        result[i] = array[0];\n      }\n      for (let i = fromEnd; i < toEnd; i++) {\n        result[i] = array[array.length - 1];\n      }\n      break;\n    case 'circular':\n      for (let i = 0; i < size; i++) {\n        result[i] =\n          array[(array.length - (size % array.length) + i) % array.length];\n      }\n      for (let i = 0; i < size; i++) {\n        result[i + fromEnd] = array[i % array.length];\n      }\n      break;\n    default:\n      throw Error('xPadding: unknown algorithm');\n  }\n\n  return result;\n}\n","import { xRollingAverage } from 'ml-spectra-processing';\n\n/**\n\n *\n * @export\n * @param {Array<number>} ys\n * @param {Object} [options={}]\n * @param {number} [options.window] rolling window size, defaults to 10% of the length of the spectrum\n * @param {string} [options.padding.size=window-1] none, value, circular, duplicate\n * @param {string} [options.padding.algorithm='duplicate'] none, value, circular, duplicate\n * @param {number} [options.padding.value=0] value to use for padding (if algorithm='value')\n * @returns {BaselineOutput}\n */\nexport function rollingAverageBaseline(ys, options = {}) {\n  let window = Math.max(Math.round(ys.length * 0.1), 2);\n  let defaults = {\n    window: window,\n    padding: {\n      size: window - 1,\n      algorithm: 'duplicate',\n      value: 0,\n    },\n  };\n  let actualOptions = Object.assign({}, defaults, options);\n  let baseline = xRollingAverage(ys, actualOptions);\n  let corrected = new Float64Array(ys.length);\n  for (let i = 0; i < corrected.length; i++) {\n    corrected[i] = ys[i] - baseline[i];\n  }\n\n  return { baseline: baseline, correctedSpectrum: corrected };\n}\n","import mean from 'ml-array-mean';\n\nimport { xRolling } from './xRolling';\n\n/**\n * This function calculates a rolling average\n * @param {Array<Number>} array - the array that will be rotated\n * @param {object} [options={}]\n * @param {number} [options.window=5] rolling window\n * @param {string} [options.padding.size=window-1] none, value, circular, duplicate\n * @param {string} [options.padding.algorithm=''] none, value, circular, duplicate\n * @param {number} [options.padding.value=0] value to use for padding (if algorithm='value')\n * @return {Array<Number>}\n */\nexport function xRollingAverage(array, options = {}) {\n  return xRolling(array, mean, options);\n}\n","import { rollingBall } from 'ml-rolling-ball-baseline';\n\n/**\n * Rolling ball baseline correction algorithm.\n * From the abstract of (1):\n * \"This algorithm behaves equivalently to traditional polynomial backgrounds in simple spectra,\n * [...] and is considerably more robust for multiple overlapping peaks, rapidly varying background [...]\n *\n * The baseline is the trace one gets by rolling a ball below a spectrum. Algorithm has three steps:\n * Finding the minima in each window, find maxima among minima and then smooth over them by averaging.\n *\n * Algorithm described in (1), but in the implementation here the window width does not change.\n *\n * Reference:\n * (1) Kneen, M. A.; Annegarn, H. J.\n *     Algorithm for Fitting XRF, SEM and PIXE X-Ray Spectra Backgrounds.\n *     Nuclear Instruments and Methods in Physics Research Section B: Beam Interactions with Materials and Atoms 1996, 109–110, 209–213.\n *     https://doi.org/10.1016/0168-583X(95)00908-6.\n * (2) Kristian Hovde Liland, Bjørn-Helge Mevik, Roberto Canteri: baseline.\n *     https://cran.r-project.org/web/packages/baseline/index.html\n *\n * @export\n * @param {Array<number>} ys\n * @param {Object} [options={}]\n * @param {Number} [options.windowM] - width of local window for minimization/maximization, defaults to 4% of the spectrum length\n * @param {Number} [options.windowS] - width of local window for smoothing, defaults to 8% of the specturm length\n * @returns {BaselineOutput}\n */\nexport function rollingBallBaseline(ys, options = {}) {\n  const baseline = rollingBall(ys, options);\n  let corrected = new Float64Array(ys.length);\n  for (let i = 0; i < corrected.length; i++) {\n    corrected[i] = ys[i] - baseline[i];\n  }\n\n  return { baseline: baseline, correctedSpectrum: corrected };\n}\n","import isAnyArray from 'is-any-array';\nimport max from 'ml-array-max';\nimport mean from 'ml-array-mean';\nimport min from 'ml-array-min';\n\n/**\n * Rolling ball baseline correction algorithm.\n * From the abstract of (1):\n * \"This algorithm behaves equivalently to traditional polynomial backgrounds in simple spectra,\n * [...] and is considerably more robust for multiple overlapping peaks, rapidly varying background [...]\n *\n * The baseline is the trace one gets by rolling a ball below a spectrum. Algorithm has three steps:\n * Finding the minima in each window, find maxima among minima and then smooth over them by averaging.\n *\n * Reference:\n * (1) Kneen, M. A.; Annegarn, H. J.\n *     Algorithm for Fitting XRF, SEM and PIXE X-Ray Spectra Backgrounds.\n *     Nuclear Instruments and Methods in Physics Research Section B: Beam Interactions with Materials and Atoms 1996, 109–110, 209–213.\n *     https://doi.org/10.1016/0168-583X(95)00908-6.\n * (2) Kristian Hovde Liland, Bjørn-Helge Mevik, Roberto Canteri: baseline.\n *     https://cran.r-project.org/web/packages/baseline/index.html\n * @export\n * @param {Array} spectrum\n * @param {Object} [options={}]\n * @param {Number} [options.windowM] - width of local window for minimization/maximization, defaults to 4% of the spectrum length\n * @param {Number} [options.windowS] - width of local window for smoothing, defaults to 8% of the specturm length\n */\nexport function rollingBall(spectrum, options = {}) {\n  if (!isAnyArray(spectrum)) {\n    throw new Error('Spectrum must be an array');\n  }\n\n  if (spectrum.length === 0) {\n    throw new TypeError('Spectrum must not be empty');\n  }\n\n  const numberPoints = spectrum.length;\n  const maxima = new Float64Array(numberPoints);\n  const minima = new Float64Array(numberPoints);\n  const baseline = new Float64Array(numberPoints);\n\n  // windowM 4 percent of spectrum length\n  // windowS 8 percent of spectrum length\n  const {\n    windowM = Math.round(numberPoints * 0.04),\n    windowS = Math.round(numberPoints * 0.08),\n  } = options;\n\n  // fi(1) in original paper\n  for (let i = 0; i < spectrum.length; i++) {\n    let windowLeft = max([0, i - windowM]);\n    let windowRight = min([i + windowM + 1, spectrum.length]);\n    minima[i] = min(spectrum.slice(windowLeft, windowRight));\n  }\n\n  // fi in original paper\n  for (let i = 0; i < minima.length; i++) {\n    let windowLeft = max([0, i - windowM]);\n    let windowRight = min([i + windowM + 1, minima.length]);\n    maxima[i] = max(minima.slice(windowLeft, windowRight));\n  }\n\n  for (let i = 0; i < minima.length; i++) {\n    let windowLeft = max([0, i - windowS]);\n    let windowRight = min([i + windowS + 1, maxima.length]);\n    baseline[i] = mean(maxima.slice(windowLeft, windowRight));\n  }\n\n  return baseline;\n}\n","import { xRollingMedian } from 'ml-spectra-processing';\n\n/**\n\n *\n * @export\n * @param {Array<number>} ys\n * @param {Object} [options={}]\n * @param {number} [options.window] rolling window size, defaults to 10% of the length of the spectrum\n * @param {string} [options.padding.size=window-1] none, value, circular, duplicate\n * @param {string} [options.padding.algorithm='duplicate'] none, value, circular, duplicate\n * @param {number} [options.padding.value=0] value to use for padding (if algorithm='value')\n * @returns {BaselineOutput}\n */\nexport function rollingMedianBaseline(ys, options = {}) {\n  let window = Math.max(Math.round(ys.length * 0.1), 2);\n  let defaults = {\n    window: window,\n    padding: {\n      size: window - 1,\n      algorithm: 'duplicate',\n      value: 0,\n    },\n  };\n  let actualOptions = Object.assign({}, defaults, options);\n  let baseline = xRollingMedian(ys, actualOptions);\n  let corrected = new Float64Array(ys.length);\n  for (let i = 0; i < corrected.length; i++) {\n    corrected[i] = ys[i] - baseline[i];\n  }\n\n  return { baseline: baseline, correctedSpectrum: corrected };\n}\n","import median from 'ml-array-median';\n\nimport { xRolling } from './xRolling';\n\n/**\n * This function calculates a rolling average\n * @param {Array<Number>} array - the array that will be rotated\n * @param {object} [options={}]\n * @param {number} [options.window=5] rolling window\n * @param {string} [options.padding.size=window-1] none, value, circular, duplicate\n * @param {string} [options.padding.algorithm=''] none, value, circular, duplicate\n * @param {number} [options.padding.value=0] value to use for padding (if algorithm='value')\n * @return {Array<Number>}\n */\nexport function xRollingMedian(array, options = {}) {\n  return xRolling(array, median, options);\n}\n","import isArray from 'is-any-array';\nimport max from 'ml-array-max';\nimport sum from 'ml-array-sum';\n\nfunction norm(input) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var _options$algorithm = options.algorithm,\n      algorithm = _options$algorithm === void 0 ? 'absolute' : _options$algorithm,\n      _options$sumValue = options.sumValue,\n      sumValue = _options$sumValue === void 0 ? 1 : _options$sumValue,\n      _options$maxValue = options.maxValue,\n      maxValue = _options$maxValue === void 0 ? 1 : _options$maxValue;\n\n  if (!isArray(input)) {\n    throw new Error('input must be an array');\n  }\n\n  var output;\n\n  if (options.output !== undefined) {\n    if (!isArray(options.output)) {\n      throw new TypeError('output option must be an array if specified');\n    }\n\n    output = options.output;\n  } else {\n    output = new Array(input.length);\n  }\n\n  if (input.length === 0) {\n    throw new Error('input must not be empty');\n  }\n\n  switch (algorithm.toLowerCase()) {\n    case 'absolute':\n      {\n        var absoluteSumValue = absoluteSum(input) / sumValue;\n        if (absoluteSumValue === 0) return input.slice(0);\n\n        for (var i = 0; i < input.length; i++) {\n          output[i] = input[i] / absoluteSumValue;\n        }\n\n        return output;\n      }\n\n    case 'max':\n      {\n        var currentMaxValue = max(input);\n        if (currentMaxValue === 0) return input.slice(0);\n        var factor = maxValue / currentMaxValue;\n\n        for (var _i = 0; _i < input.length; _i++) {\n          output[_i] = input[_i] * factor;\n        }\n\n        return output;\n      }\n\n    case 'sum':\n      {\n        var sumFactor = sum(input) / sumValue;\n        if (sumFactor === 0) return input.slice(0);\n\n        for (var _i2 = 0; _i2 < input.length; _i2++) {\n          output[_i2] = input[_i2] / sumFactor;\n        }\n\n        return output;\n      }\n\n    default:\n      throw new Error(\"norm: unknown algorithm: \".concat(algorithm));\n  }\n}\n\nfunction absoluteSum(input) {\n  var sumValue = 0;\n\n  for (var i = 0; i < input.length; i++) {\n    sumValue += Math.abs(input[i]);\n  }\n\n  return sumValue;\n}\n\nexport default norm;\n","/**\n * Normalize an array of zones:\n * - ensure than from < to\n * - merge overlapping zones\n *\n * The method will always check if from if lower than to and will swap if required.\n * @param {Array} [zones=[]]\n * @param {object} [options={}]\n * @param {number} [options.from=Number.NEGATIVE_INFINITY] Specify min value of a zone\n * @param {number} [options.to=Number.POSITIVE_INFINITY] Specify max value of a zone\n */\n\nexport function normalize(zones = [], options = {}) {\n  if (zones.length === 0) return [];\n  let {\n    from = Number.NEGATIVE_INFINITY,\n    to = Number.POSITIVE_INFINITY,\n  } = options;\n  if (from > to) [from, to] = [to, from];\n\n  zones = JSON.parse(JSON.stringify(zones)).map((zone) =>\n    zone.from > zone.to ? { from: zone.to, to: zone.from } : zone,\n  );\n  zones = zones.sort((a, b) => {\n    if (a.from !== b.from) return a.from - b.from;\n    return a.to - b.to;\n  });\n\n  zones.forEach((zone) => {\n    if (from > zone.from) zone.from = from;\n    if (to < zone.to) zone.to = to;\n  });\n\n  zones = zones.filter((zone) => zone.from <= zone.to);\n  if (zones.length === 0) return [];\n\n  let currentZone = zones[0];\n  let result = [currentZone];\n  for (let i = 1; i < zones.length; i++) {\n    let zone = zones[i];\n    if (zone.from <= currentZone.to) {\n      currentZone.to = zone.to;\n    } else {\n      currentZone = zone;\n      result.push(currentZone);\n    }\n  }\n  return result;\n}\n","/**\n * Function that calculates the integral of the line between two\n * x-coordinates, given the slope and intercept of the line.\n * @param {number} x0\n * @param {number} x1\n * @param {number} slope\n * @param {number} intercept\n * @return {number} integral value.\n */\nexport default function integral(x0, x1, slope, intercept) {\n  return (\n    0.5 * slope * x1 * x1 +\n    intercept * x1 -\n    (0.5 * slope * x0 * x0 + intercept * x0)\n  );\n}\n","import sequentialFill from 'ml-array-sequential-fill';\nimport { zonesWithPoints, invert } from 'ml-zones';\n\nimport equallySpacedSlot from './equallySpacedSlot';\nimport equallySpacedSmooth from './equallySpacedSmooth';\n\n/**\n * Function that returns a Number array of equally spaced numberOfPoints\n * containing a representation of intensities of the spectra arguments x\n * and y.\n *\n * The options parameter contains an object in the following form:\n * from: starting point\n * to: last point\n * numberOfPoints: number of points between from and to\n * variant: \"slot\" or \"smooth\" - smooth is the default option\n *\n * The slot variant consist that each point in the new array is calculated\n * averaging the existing points between the slot that belongs to the current\n * value. The smooth variant is the same but takes the integral of the range\n * of the slot and divide by the step size between two points in the new array.\n *\n * If exclusions zone are present, zones are ignored !\n * @param {object} [arrayXY={}] - object containing 2 properties x and y (both an array)\n * @param {object} [options={}]\n * @param {number} [options.from=x[0]]\n * @param {number} [options.to=x[x.length-1]]\n * @param {string} [options.variant='smooth']\n * @param {number} [options.numberOfPoints=100]\n * @param {Array} [options.exclusions=[]] array of from / to that should be skipped for the generation of the points\n * @param {Array} [options.zones=[]] array of from / to that should be kept\n * @return {object<x: Array, y:Array>} new object with x / y array with the equally spaced data.\n */\n\nexport default function equallySpaced(arrayXY = {}, options = {}) {\n  let { x, y } = arrayXY;\n  let xLength = x.length;\n  let reverse = false;\n  if (x.length > 1 && x[0] > x[1]) {\n    x = x.slice().reverse();\n    y = y.slice().reverse();\n    reverse = true;\n  }\n\n  let {\n    from = x[0],\n    to = x[xLength - 1],\n    variant = 'smooth',\n    numberOfPoints = 100,\n    exclusions = [],\n    zones = [],\n  } = options;\n\n  if (xLength !== y.length) {\n    throw new RangeError(\"the x and y vector doesn't have the same size.\");\n  }\n\n  if (typeof from !== 'number' || isNaN(from)) {\n    throw new RangeError(\"'from' option must be a number\");\n  }\n\n  if (typeof to !== 'number' || isNaN(to)) {\n    throw new RangeError(\"'to' option must be a number\");\n  }\n\n  if (typeof numberOfPoints !== 'number' || isNaN(numberOfPoints)) {\n    throw new RangeError(\"'numberOfPoints' option must be a number\");\n  }\n\n  if (numberOfPoints < 2) {\n    throw new RangeError(\"'numberOfPoints' option must be greater than 1\");\n  }\n\n  if (zones.length === 0) {\n    zones = invert(exclusions, { from, to });\n  }\n\n  zones = zonesWithPoints(zones, numberOfPoints, { from, to });\n\n  let xResult = [];\n  let yResult = [];\n  for (let zone of zones) {\n    let zoneResult = processZone(\n      x,\n      y,\n      zone.from,\n      zone.to,\n      zone.numberOfPoints,\n      variant,\n      reverse,\n    );\n\n    xResult = xResult.concat(zoneResult.x);\n    yResult = yResult.concat(zoneResult.y);\n  }\n  if (reverse) {\n    if (from < to) {\n      return { x: xResult.reverse(), y: yResult.reverse() };\n    } else {\n      return { x: xResult, y: yResult };\n    }\n  } else {\n    if (from < to) {\n      return { x: xResult, y: yResult };\n    } else {\n      return { x: xResult.reverse(), y: yResult.reverse() };\n    }\n  }\n}\n\nfunction processZone(x, y, from, to, numberOfPoints, variant) {\n  if (numberOfPoints < 1) {\n    throw new RangeError('the number of points must be at least 1');\n  }\n  let output =\n    variant === 'slot'\n      ? equallySpacedSlot(x, y, from, to, numberOfPoints)\n      : equallySpacedSmooth(x, y, from, to, numberOfPoints);\n\n  return {\n    x: sequentialFill({\n      from,\n      to,\n      size: numberOfPoints,\n    }),\n    y: output,\n  };\n}\n","import { normalize } from './normalize';\n\n/**\n * Convert an array of exclusions and keep only from / to\n *\n * The method will always check if from if lower than to and will swap if required.\n * @param {Array} [exclusions=[]]\n * @param {object} [options={}]\n * @param {number} [options.from=Number.NEGATIVE_INFINITY] Specify min value of zones (after inversion)\n * @param {number} [options.to=Number.POSITIVE_INFINITY] Specify max value of zones (after inversion)\n */\n\nexport function invert(exclusions = [], options = {}) {\n  let {\n    from = Number.NEGATIVE_INFINITY,\n    to = Number.POSITIVE_INFINITY,\n  } = options;\n  if (from > to) [from, to] = [to, from];\n\n  exclusions = normalize(exclusions, { from, to });\n  if (exclusions.length === 0) return [{ from, to }];\n\n  let zones = [];\n  for (let i = 0; i < exclusions.length; i++) {\n    let exclusion = exclusions[i];\n    let nextExclusion = exclusions[i + 1];\n    if (i === 0) {\n      if (exclusion.from > from) {\n        zones.push({ from, to: exclusion.from });\n      }\n    }\n    if (i === exclusions.length - 1) {\n      if (exclusion.to < to) {\n        zones.push({ from: exclusion.to, to });\n      }\n    } else {\n      zones.push({ from: exclusion.to, to: nextExclusion.from });\n    }\n  }\n\n  return zones;\n}\n","import { normalize } from './normalize';\n\n/**\n * Add the number of points per zone to reach a specified total\n * @param {Array} [zones=[]]\n * @param {number} [numberOfPoints] Total number of points to distribute between zones\n * @param {object} [options={}]\n * @param {number} [options.from=Number.NEGATIVE_INFINITY] Specify min value of a zone\n * @param {number} [options.to=Number.POSITIVE_INFINITY] Specify max value of a zone\n */\n\nexport function zonesWithPoints(zones, numberOfPoints, options = {}) {\n  if (zones.length === 0) return zones;\n  zones = normalize(zones, options);\n\n  const totalSize = zones.reduce((previous, current) => {\n    return previous + (current.to - current.from);\n  }, 0);\n\n  let unitsPerPoint = totalSize / numberOfPoints;\n  let currentTotal = 0;\n  for (let i = 0; i < zones.length - 1; i++) {\n    let zone = zones[i];\n    zone.numberOfPoints = Math.min(\n      Math.round((zone.to - zone.from) / unitsPerPoint),\n      numberOfPoints - currentTotal,\n    );\n    currentTotal += zone.numberOfPoints;\n  }\n\n  zones[zones.length - 1].numberOfPoints = numberOfPoints - currentTotal;\n\n  return zones;\n}\n","/**\n * function that retrieves the getEquallySpacedData with the variant \"slot\"\n *\n * @param {Array<number>} x\n * @param {Array<number>} y\n * @param {number} from - Initial point\n * @param {number} to - Final point\n * @param {number} numberOfPoints\n * @return {Array} - Array of y's equally spaced with the variant \"slot\"\n */\nexport default function equallySpacedSlot(x, y, from, to, numberOfPoints) {\n  let xLength = x.length;\n\n  let step = (to - from) / (numberOfPoints > 1 ? numberOfPoints - 1 : 1);\n  let halfStep = step / 2;\n  let lastStep = x[x.length - 1] - x[x.length - 2];\n\n  let start = from - halfStep;\n  let output = new Array(numberOfPoints);\n\n  // Init main variables\n  let min = start;\n  let max = start + step;\n\n  let previousX = -Number.MAX_VALUE;\n  let previousY = 0;\n  let nextX = x[0];\n  let nextY = y[0];\n  let frontOutsideSpectra = 0;\n  let backOutsideSpectra = true;\n\n  let currentValue = 0;\n\n  // for slot algorithm\n  let currentPoints = 0;\n\n  let i = 1; // index of input\n  let j = 0; // index of output\n\n  main: while (true) {\n    if (previousX >= nextX) throw new Error('x must be an increasing serie');\n    while (previousX - max > 0) {\n      // no overlap with original point, just consume current value\n      if (backOutsideSpectra) {\n        currentPoints++;\n        backOutsideSpectra = false;\n      }\n\n      output[j] = currentPoints <= 0 ? 0 : currentValue / currentPoints;\n      j++;\n\n      if (j === numberOfPoints) {\n        break main;\n      }\n\n      min = max;\n      max += step;\n      currentValue = 0;\n      currentPoints = 0;\n    }\n\n    if (previousX > min) {\n      currentValue += previousY;\n      currentPoints++;\n    }\n\n    if (previousX === -Number.MAX_VALUE || frontOutsideSpectra > 1) {\n      currentPoints--;\n    }\n\n    previousX = nextX;\n    previousY = nextY;\n\n    if (i < xLength) {\n      nextX = x[i];\n      nextY = y[i];\n      i++;\n    } else {\n      nextX += lastStep;\n      nextY = 0;\n      frontOutsideSpectra++;\n    }\n  }\n\n  return output;\n}\n","import integral from './integral';\n\n/**\n * function that retrieves the getEquallySpacedData with the variant \"smooth\"\n *\n * @param {Array<number>} x\n * @param {Array<number>} y\n * @param {number} from - Initial point\n * @param {number} to - Final point\n * @param {number} numberOfPoints\n * @return {Array} - Array of y's equally spaced with the variant \"smooth\"\n */\nexport default function equallySpacedSmooth(x, y, from, to, numberOfPoints) {\n  let xLength = x.length;\n\n  let step = (to - from) / (numberOfPoints > 1 ? numberOfPoints - 1 : 1);\n  let halfStep = step / 2;\n\n  let output = new Array(numberOfPoints);\n\n  let initialOriginalStep = x[1] - x[0];\n  let lastOriginalStep = x[xLength - 1] - x[xLength - 2];\n\n  // Init main variables\n  let min = from - halfStep;\n  let max = from + halfStep;\n\n  let previousX = Number.MIN_VALUE;\n  let previousY = 0;\n  let nextX = x[0] - initialOriginalStep;\n  let nextY = 0;\n\n  let currentValue = 0;\n  let slope = 0;\n  let intercept = 0;\n  let sumAtMin = 0;\n  let sumAtMax = 0;\n\n  let i = 0; // index of input\n  let j = 0; // index of output\n\n  function getSlope(x0, y0, x1, y1) {\n    return (y1 - y0) / (x1 - x0);\n  }\n\n  let add = 0;\n  main: while (true) {\n    if (previousX <= min && min <= nextX) {\n      add = integral(0, min - previousX, slope, previousY);\n      sumAtMin = currentValue + add;\n    }\n\n    while (nextX - max >= 0) {\n      // no overlap with original point, just consume current value\n      add = integral(0, max - previousX, slope, previousY);\n      sumAtMax = currentValue + add;\n\n      output[j++] = (sumAtMax - sumAtMin) / step;\n\n      if (j === numberOfPoints) {\n        break main;\n      }\n\n      min = max;\n      max += step;\n      sumAtMin = sumAtMax;\n    }\n\n    currentValue += integral(previousX, nextX, slope, intercept);\n\n    previousX = nextX;\n    previousY = nextY;\n\n    if (i < xLength) {\n      nextX = x[i];\n      nextY = y[i];\n      i++;\n    } else if (i === xLength) {\n      nextX += lastOriginalStep;\n      nextY = 0;\n    }\n\n    slope = getSlope(previousX, previousY, nextX, nextY);\n    intercept = -slope * previousX + previousY;\n  }\n\n  return output;\n}\n","import getZones from './getZones';\n\n/**\n * Filter an array x/y based on various criteria\n * x points are expected to be sorted\n *\n * @param {object} points\n * @param {object} [options={}]\n * @param {array} [options.from]\n * @param {array} [options.to]\n * @param {array} [options.exclusions=[]]\n * @return {{x: Array<number>, y: Array<number>}}\n */\n\nexport default function filterX(points, options = {}) {\n  const { x, y } = points;\n  const { from = x[0], to = x[x.length - 1], exclusions = [] } = options;\n\n  let zones = getZones(from, to, exclusions);\n\n  let currentZoneIndex = 0;\n  let newX = [];\n  let newY = [];\n  let position = 0;\n  while (position < x.length) {\n    if (\n      x[position] <= zones[currentZoneIndex].to &&\n      x[position] >= zones[currentZoneIndex].from\n    ) {\n      newX.push(x[position]);\n      newY.push(y[position]);\n    } else {\n      if (x[position] > zones[currentZoneIndex].to) {\n        currentZoneIndex++;\n        if (!zones[currentZoneIndex]) break;\n      }\n    }\n    position++;\n  }\n\n  return {\n    x: newX,\n    y: newY,\n  };\n}\n","export default function getZones(from, to, exclusions = []) {\n  if (from > to) {\n    [from, to] = [to, from];\n  }\n\n  // in exclusions from and to have to be defined\n  exclusions = exclusions.filter(\n    (exclusion) => exclusion.from !== undefined && exclusion.to !== undefined,\n  );\n\n  exclusions = JSON.parse(JSON.stringify(exclusions));\n  // we ensure that from before to\n  exclusions.forEach((exclusion) => {\n    if (exclusion.from > exclusion.to) {\n      [exclusion.to, exclusion.from] = [exclusion.from, exclusion.to];\n    }\n  });\n\n  exclusions.sort((a, b) => a.from - b.from);\n\n  // we will rework the exclusions in order to remove overlap and outside range (from / to)\n  exclusions.forEach((exclusion) => {\n    if (exclusion.from < from) exclusion.from = from;\n    if (exclusion.to > to) exclusion.to = to;\n  });\n  for (let i = 0; i < exclusions.length - 1; i++) {\n    if (exclusions[i].to > exclusions[i + 1].from) {\n      exclusions[i].to = exclusions[i + 1].from;\n    }\n  }\n  exclusions = exclusions.filter((exclusion) => exclusion.from < exclusion.to);\n\n  if (!exclusions || exclusions.length === 0) {\n    return [{ from, to }];\n  }\n\n  let zones = [];\n  let currentFrom = from;\n  for (let exclusion of exclusions) {\n    if (currentFrom < exclusion.from) {\n      zones.push({\n        from: currentFrom,\n        to: exclusion.from,\n      });\n    }\n\n    currentFrom = exclusion.to;\n  }\n  if (currentFrom < to) {\n    zones.push({\n      from: currentFrom,\n      to: to,\n    });\n  }\n\n  return zones;\n}\n","'use strict';\n\nvar defaultOptions = {\n  size: 1,\n  value: 0\n};\n\n/**\n * Case when the entry is an array\n * @param data\n * @param options\n * @returns {Array}\n */\nfunction arrayCase(data, options) {\n  var len = data.length;\n  if (typeof options.size === 'number') {\n    options.size = [options.size, options.size];\n  }\n\n  var cond = len + options.size[0] + options.size[1];\n\n  var output;\n  if (options.output) {\n    if (options.output.length !== cond) {\n      throw new RangeError('Wrong output size');\n    }\n    output = options.output;\n  } else {\n    output = new Array(cond);\n  }\n\n  var i;\n  if (options.value === 'circular') {\n    for (i = 0; i < cond; i++) {\n      if (i < options.size[0]) {\n        output[i] = data[(len - (options.size[0] % len) + i) % len];\n      } else if (i < options.size[0] + len) {\n        output[i] = data[i - options.size[0]];\n      } else {\n        output[i] = data[(i - options.size[0]) % len];\n      }\n    }\n  } else if (options.value === 'replicate') {\n    for (i = 0; i < cond; i++) {\n      if (i < options.size[0]) output[i] = data[0];\n      else if (i < options.size[0] + len) output[i] = data[i - options.size[0]];\n      else output[i] = data[len - 1];\n    }\n  } else if (options.value === 'symmetric') {\n    if (options.size[0] > len || options.size[1] > len) {\n      throw new RangeError(\n        'expanded value should not be bigger than the data length'\n      );\n    }\n    for (i = 0; i < cond; i++) {\n      if (i < options.size[0]) output[i] = data[options.size[0] - 1 - i];\n      else if (i < options.size[0] + len) output[i] = data[i - options.size[0]];\n      else output[i] = data[2 * len + options.size[0] - i - 1];\n    }\n  } else {\n    for (i = 0; i < cond; i++) {\n      if (i < options.size[0]) output[i] = options.value;\n      else if (i < options.size[0] + len) output[i] = data[i - options.size[0]];\n      else output[i] = options.value;\n    }\n  }\n\n  return output;\n}\n\n/**\n * Case when the entry is a matrix\n * @param data\n * @param options\n * @returns {Array}\n */\nfunction matrixCase(data, options) {\n  // var row = data.length;\n  // var col = data[0].length;\n  if (options.size[0] === undefined) {\n    options.size = [options.size, options.size, options.size, options.size];\n  }\n  throw new Error('matrix not supported yet, sorry');\n}\n\n/**\n * Pads and array\n * @param {Array <number>} data\n * @param {object} options\n */\nfunction padArray(data, options) {\n  options = Object.assign({}, defaultOptions, options);\n  if (Array.isArray(data)) {\n    if (Array.isArray(data[0])) return matrixCase(data, options);\n    else return arrayCase(data, options);\n  } else {\n    throw new TypeError('data should be an array');\n  }\n}\n\nmodule.exports = padArray;\n","import { Matrix, MatrixTransposeView, inverse } from 'ml-matrix';\nimport padArray from 'ml-pad-array';\n\n/**\n * Factorial of a number\n * @ignore\n * @param n\n * @return {number}\n */\nfunction factorial(n) {\n  let r = 1;\n  while (n > 0) r *= n--;\n  return r;\n}\n\nconst defaultOptions = {\n  windowSize: 5,\n  derivative: 1,\n  polynomial: 2,\n  pad: 'none',\n  padValue: 'replicate',\n};\n\n/**\n * Savitzky-Golay filter\n * @param {Array <number>} data\n * @param {number} h\n * @param {Object} options\n * @returns {Array}\n */\nexport default function savitzkyGolay(data, h, options) {\n  options = Object.assign({}, defaultOptions, options);\n  if (\n    options.windowSize % 2 === 0 ||\n    options.windowSize < 5 ||\n    !Number.isInteger(options.windowSize)\n  ) {\n    throw new RangeError(\n      'Invalid window size (should be odd and at least 5 integer number)',\n    );\n  }\n  if (options.derivative < 0 || !Number.isInteger(options.derivative)) {\n    throw new RangeError('Derivative should be a positive integer');\n  }\n  if (options.polynomial < 1 || !Number.isInteger(options.polynomial)) {\n    throw new RangeError('Polynomial should be a positive integer');\n  }\n\n  let C, norm;\n  let step = Math.floor(options.windowSize / 2);\n\n  if (options.pad === 'pre') {\n    data = padArray(data, { size: step, value: options.padValue });\n  }\n\n  let ans = new Array(data.length - 2 * step);\n\n  if (\n    options.windowSize === 5 &&\n    options.polynomial === 2 &&\n    (options.derivative === 1 || options.derivative === 2)\n  ) {\n    if (options.derivative === 1) {\n      C = [-2, -1, 0, 1, 2];\n      norm = 10;\n    } else {\n      C = [2, -1, -2, -1, 2];\n      norm = 7;\n    }\n  } else {\n    let J = Matrix.ones(options.windowSize, options.polynomial + 1);\n    let inic = -(options.windowSize - 1) / 2;\n    for (let i = 0; i < J.rows; i++) {\n      for (let j = 0; j < J.columns; j++) {\n        if (inic + 1 !== 0 || j !== 0) J.set(i, j, Math.pow(inic + i, j));\n      }\n    }\n    let Jtranspose = new MatrixTransposeView(J);\n    let Jinv = inverse(Jtranspose.mmul(J));\n    C = Jinv.mmul(Jtranspose);\n    C = C.getRow(options.derivative);\n    norm = 1 / factorial(options.derivative);\n  }\n  let det = norm * Math.pow(h, options.derivative);\n  for (let k = step; k < data.length - step; k++) {\n    let d = 0;\n    for (let l = 0; l < C.length; l++) d += (C[l] * data[l + k - step]) / det;\n    ans[k - step] = d;\n  }\n\n  if (options.pad === 'post') {\n    ans = padArray(ans, { size: step, value: options.padValue });\n  }\n\n  return ans;\n}\n","import { airPLSBaseline, rollingAverageBaseline, iterativePolynomialBaseline, rollingBallBaseline, rollingMedianBaseline, } from 'baselines';\nimport max from 'ml-array-max';\nimport min from 'ml-array-min';\nimport normed from 'ml-array-normed';\nimport rescale from 'ml-array-rescale';\nimport equallySpaced from 'ml-array-xy-equally-spaced';\nimport filterX from 'ml-array-xy-filter-x';\nimport savitzkyGolay from 'ml-savitzky-golay';\nimport { xDivide, xSubtract, xMultiply, xAdd, xIsMonotone, xyEnsureGrowingX, } from 'ml-spectra-processing';\nimport Stat from 'ml-stat/array';\nexport function getNormalizedSpectrum(spectrum, options = {}) {\n    var _a;\n    let data = {\n        x: spectrum.variables.x.data,\n        y: spectrum.variables.y.data,\n    };\n    let newSpectrum = {\n        variables: {\n            x: {\n                data: spectrum.variables.x.data,\n                units: spectrum.variables.x.units,\n                label: spectrum.variables.x.label,\n            },\n            y: {\n                data: spectrum.variables.y.data,\n                units: spectrum.variables.y.units,\n                label: spectrum.variables.y.label,\n            },\n        },\n    };\n    if (spectrum.title)\n        newSpectrum.title = spectrum.title;\n    if (spectrum.dataType)\n        newSpectrum.dataType = spectrum.dataType;\n    if (spectrum.meta)\n        newSpectrum.meta = spectrum.meta;\n    let { from = spectrum.variables.x.min, to = spectrum.variables.x.max, numberOfPoints, filters = [], exclusions = [], processing = '', keepYUnits = false, } = options;\n    let { x, y } = filterX(data, { from, to });\n    switch (processing) {\n        case 'firstDerivative':\n            if (options.processing) {\n                newSpectrum.variables.y.units = '';\n                newSpectrum.variables.y.label =\n                    newSpectrum.variables.y.label &&\n                        `1st derivative of ${newSpectrum.variables.y.label.replace(/\\s*\\[.*\\]/, '')}`;\n                y = savitzkyGolay(y, 1, {\n                    derivative: 1,\n                    polynomial: 2,\n                    windowSize: 5,\n                });\n                x = x.slice(2, x.length - 2);\n            }\n            break;\n        case 'secondDerivative':\n            if (options.processing) {\n                newSpectrum.variables.y.units = '';\n                newSpectrum.variables.y.label =\n                    newSpectrum.variables.y.label &&\n                        `2nd derivative of ${newSpectrum.variables.y.label.replace(/\\s*\\[.*\\]/, '')}`;\n                y = savitzkyGolay(y, 1, {\n                    derivative: 2,\n                    polynomial: 2,\n                    windowSize: 5,\n                });\n                x = x.slice(2, x.length - 2);\n            }\n            break;\n        case 'thirdDerivative':\n            if (options.processing) {\n                newSpectrum.variables.y.units = '';\n                newSpectrum.variables.y.label =\n                    newSpectrum.variables.y.label &&\n                        `3rd derivative of ${newSpectrum.variables.y.label.replace(/\\s*\\[.*\\]/, '')}`;\n                y = savitzkyGolay(y, 1, {\n                    derivative: 3,\n                    polynomial: 2,\n                    windowSize: 5,\n                });\n                x = x.slice(2, x.length - 2);\n            }\n            break;\n        default:\n    }\n    if (!keepYUnits && filters.length) {\n        // filters change the y axis, we get rid of the units\n        newSpectrum.variables.y.units = '';\n        newSpectrum.variables.y.label = (_a = newSpectrum.variables.y.label) === null || _a === void 0 ? void 0 : _a.replace(/\\s*\\[.*\\]/, '');\n    }\n    for (let filter of filters) {\n        let filterOptions = filter.options || {};\n        switch (filter.name.toLowerCase()) {\n            case 'centermean': {\n                let mean = Stat.mean(y);\n                y = xSubtract(y, mean);\n                break;\n            }\n            case 'dividebysd': {\n                let std = Stat.standardDeviation(y);\n                y = xDivide(y, std);\n                break;\n            }\n            case 'normalize': {\n                y = normed(y, {\n                    sumValue: filterOptions.value ? Number(filterOptions.value) : 1,\n                    algorithm: 'absolute',\n                });\n                break;\n            }\n            case 'rescale': {\n                y = rescale(y, {\n                    min: filterOptions.min ? Number(filterOptions.min) : 0,\n                    max: filterOptions.max ? Number(filterOptions.max) : 1,\n                });\n                break;\n            }\n            case 'dividebymax': {\n                let maxValue = max(y);\n                y = xDivide(y, maxValue);\n                break;\n            }\n            case 'multiply': {\n                y = xMultiply(y, filterOptions.value ? Number(filterOptions.value) : 1);\n                break;\n            }\n            case 'add': {\n                y = xAdd(y, filterOptions.value ? Number(filterOptions.value) : 0);\n                break;\n            }\n            case 'airplsbaseline': {\n                y = airPLSBaseline(y, filterOptions).correctedSpectrum;\n                break;\n            }\n            case 'rollingaveragebaseline': {\n                y = rollingAverageBaseline(y, filterOptions).correctedSpectrum;\n                break;\n            }\n            case 'iterativepolynomialbaseline': {\n                y = iterativePolynomialBaseline(y, undefined, filterOptions).correctedSpectrum;\n                break;\n            }\n            case 'rollingballbaseline': {\n                y = rollingBallBaseline(y, filterOptions).correctedSpectrum;\n                break;\n            }\n            case 'rollingmedianbaseline': {\n                y = rollingMedianBaseline(y, filterOptions).correctedSpectrum;\n                break;\n            }\n            case 'ensuregrowing': {\n                const ans = xyEnsureGrowingX({ x, y });\n                x = ans.x;\n                y = ans.y;\n                break;\n            }\n            case '':\n            case undefined:\n                break;\n            default:\n                throw new Error(`Unknown process kind: ${filter.name}`);\n        }\n    }\n    if (!numberOfPoints) {\n        data = filterX({ x, y }, { from, to, exclusions });\n    }\n    else {\n        data = equallySpaced({ x, y }, { from, to, numberOfPoints, exclusions });\n    }\n    newSpectrum.variables.x.data = x;\n    newSpectrum.variables.x.min = min(x);\n    newSpectrum.variables.x.max = max(x);\n    newSpectrum.variables.x.isMonotone = xIsMonotone(x);\n    newSpectrum.variables.y.data = y;\n    newSpectrum.variables.y.min = min(y);\n    newSpectrum.variables.y.max = max(y);\n    newSpectrum.variables.y.isMonotone = xIsMonotone(y);\n    return newSpectrum;\n}\n//# sourceMappingURL=data:application/json;base64,","'use strict';\n\nfunction compareNumbers(a, b) {\n    return a - b;\n}\n\n/**\n * Computes the sum of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.sum = function sum(values) {\n    var sum = 0;\n    for (var i = 0; i < values.length; i++) {\n        sum += values[i];\n    }\n    return sum;\n};\n\n/**\n * Computes the maximum of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.max = function max(values) {\n    var max = values[0];\n    var l = values.length;\n    for (var i = 1; i < l; i++) {\n        if (values[i] > max) max = values[i];\n    }\n    return max;\n};\n\n/**\n * Computes the minimum of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.min = function min(values) {\n    var min = values[0];\n    var l = values.length;\n    for (var i = 1; i < l; i++) {\n        if (values[i] < min) min = values[i];\n    }\n    return min;\n};\n\n/**\n * Computes the min and max of the given values\n * @param {Array} values\n * @returns {{min: number, max: number}}\n */\nexports.minMax = function minMax(values) {\n    var min = values[0];\n    var max = values[0];\n    var l = values.length;\n    for (var i = 1; i < l; i++) {\n        if (values[i] < min) min = values[i];\n        if (values[i] > max) max = values[i];\n    }\n    return {\n        min: min,\n        max: max\n    };\n};\n\n/**\n * Computes the arithmetic mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.arithmeticMean = function arithmeticMean(values) {\n    var sum = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        sum += values[i];\n    }\n    return sum / l;\n};\n\n/**\n * {@link arithmeticMean}\n */\nexports.mean = exports.arithmeticMean;\n\n/**\n * Computes the geometric mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.geometricMean = function geometricMean(values) {\n    var mul = 1;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        mul *= values[i];\n    }\n    return Math.pow(mul, 1 / l);\n};\n\n/**\n * Computes the mean of the log of the given values\n * If the return value is exponentiated, it gives the same result as the\n * geometric mean.\n * @param {Array} values\n * @returns {number}\n */\nexports.logMean = function logMean(values) {\n    var lnsum = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        lnsum += Math.log(values[i]);\n    }\n    return lnsum / l;\n};\n\n/**\n * Computes the weighted grand mean for a list of means and sample sizes\n * @param {Array} means - Mean values for each set of samples\n * @param {Array} samples - Number of original values for each set of samples\n * @returns {number}\n */\nexports.grandMean = function grandMean(means, samples) {\n    var sum = 0;\n    var n = 0;\n    var l = means.length;\n    for (var i = 0; i < l; i++) {\n        sum += samples[i] * means[i];\n        n += samples[i];\n    }\n    return sum / n;\n};\n\n/**\n * Computes the truncated mean of the given values using a given percentage\n * @param {Array} values\n * @param {number} percent - The percentage of values to keep (range: [0,1])\n * @param {boolean} [alreadySorted=false]\n * @returns {number}\n */\nexports.truncatedMean = function truncatedMean(values, percent, alreadySorted) {\n    if (alreadySorted === undefined) alreadySorted = false;\n    if (!alreadySorted) {\n        values = [].concat(values).sort(compareNumbers);\n    }\n    var l = values.length;\n    var k = Math.floor(l * percent);\n    var sum = 0;\n    for (var i = k; i < (l - k); i++) {\n        sum += values[i];\n    }\n    return sum / (l - 2 * k);\n};\n\n/**\n * Computes the harmonic mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.harmonicMean = function harmonicMean(values) {\n    var sum = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        if (values[i] === 0) {\n            throw new RangeError('value at index ' + i + 'is zero');\n        }\n        sum += 1 / values[i];\n    }\n    return l / sum;\n};\n\n/**\n * Computes the contraharmonic mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.contraHarmonicMean = function contraHarmonicMean(values) {\n    var r1 = 0;\n    var r2 = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        r1 += values[i] * values[i];\n        r2 += values[i];\n    }\n    if (r2 < 0) {\n        throw new RangeError('sum of values is negative');\n    }\n    return r1 / r2;\n};\n\n/**\n * Computes the median of the given values\n * @param {Array} values\n * @param {boolean} [alreadySorted=false]\n * @returns {number}\n */\nexports.median = function median(values, alreadySorted) {\n    if (alreadySorted === undefined) alreadySorted = false;\n    if (!alreadySorted) {\n        values = [].concat(values).sort(compareNumbers);\n    }\n    var l = values.length;\n    var half = Math.floor(l / 2);\n    if (l % 2 === 0) {\n        return (values[half - 1] + values[half]) * 0.5;\n    } else {\n        return values[half];\n    }\n};\n\n/**\n * Computes the variance of the given values\n * @param {Array} values\n * @param {boolean} [unbiased=true] - if true, divide by (n-1); if false, divide by n.\n * @returns {number}\n */\nexports.variance = function variance(values, unbiased) {\n    if (unbiased === undefined) unbiased = true;\n    var theMean = exports.mean(values);\n    var theVariance = 0;\n    var l = values.length;\n\n    for (var i = 0; i < l; i++) {\n        var x = values[i] - theMean;\n        theVariance += x * x;\n    }\n\n    if (unbiased) {\n        return theVariance / (l - 1);\n    } else {\n        return theVariance / l;\n    }\n};\n\n/**\n * Computes the standard deviation of the given values\n * @param {Array} values\n * @param {boolean} [unbiased=true] - if true, divide by (n-1); if false, divide by n.\n * @returns {number}\n */\nexports.standardDeviation = function standardDeviation(values, unbiased) {\n    return Math.sqrt(exports.variance(values, unbiased));\n};\n\nexports.standardError = function standardError(values) {\n    return exports.standardDeviation(values) / Math.sqrt(values.length);\n};\n\n/**\n * IEEE Transactions on biomedical engineering, vol. 52, no. 1, january 2005, p. 76-\n * Calculate the standard deviation via the Median of the absolute deviation\n *  The formula for the standard deviation only holds for Gaussian random variables.\n * @returns {{mean: number, stdev: number}}\n */\nexports.robustMeanAndStdev = function robustMeanAndStdev(y) {\n    var mean = 0, stdev = 0;\n    var length = y.length, i = 0;\n    for (i = 0; i < length; i++) {\n        mean += y[i];\n    }\n    mean /= length;\n    var averageDeviations = new Array(length);\n    for (i = 0; i < length; i++)\n        averageDeviations[i] = Math.abs(y[i] - mean);\n    averageDeviations.sort(compareNumbers);\n    if (length % 2 === 1) {\n        stdev = averageDeviations[(length - 1) / 2] / 0.6745;\n    } else {\n        stdev = 0.5 * (averageDeviations[length / 2] + averageDeviations[length / 2 - 1]) / 0.6745;\n    }\n\n    return {\n        mean: mean,\n        stdev: stdev\n    };\n};\n\nexports.quartiles = function quartiles(values, alreadySorted) {\n    if (typeof (alreadySorted) === 'undefined') alreadySorted = false;\n    if (!alreadySorted) {\n        values = [].concat(values).sort(compareNumbers);\n    }\n\n    var quart = values.length / 4;\n    var q1 = values[Math.ceil(quart) - 1];\n    var q2 = exports.median(values, true);\n    var q3 = values[Math.ceil(quart * 3) - 1];\n\n    return {q1: q1, q2: q2, q3: q3};\n};\n\nexports.pooledStandardDeviation = function pooledStandardDeviation(samples, unbiased) {\n    return Math.sqrt(exports.pooledVariance(samples, unbiased));\n};\n\nexports.pooledVariance = function pooledVariance(samples, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var sum = 0;\n    var length = 0, l = samples.length;\n    for (var i = 0; i < l; i++) {\n        var values = samples[i];\n        var vari = exports.variance(values);\n\n        sum += (values.length - 1) * vari;\n\n        if (unbiased)\n            length += values.length - 1;\n        else\n            length += values.length;\n    }\n    return sum / length;\n};\n\nexports.mode = function mode(values) {\n    var l = values.length,\n        itemCount = new Array(l),\n        i;\n    for (i = 0; i < l; i++) {\n        itemCount[i] = 0;\n    }\n    var itemArray = new Array(l);\n    var count = 0;\n\n    for (i = 0; i < l; i++) {\n        var index = itemArray.indexOf(values[i]);\n        if (index >= 0)\n            itemCount[index]++;\n        else {\n            itemArray[count] = values[i];\n            itemCount[count] = 1;\n            count++;\n        }\n    }\n\n    var maxValue = 0, maxIndex = 0;\n    for (i = 0; i < count; i++) {\n        if (itemCount[i] > maxValue) {\n            maxValue = itemCount[i];\n            maxIndex = i;\n        }\n    }\n\n    return itemArray[maxIndex];\n};\n\nexports.covariance = function covariance(vector1, vector2, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var mean1 = exports.mean(vector1);\n    var mean2 = exports.mean(vector2);\n\n    if (vector1.length !== vector2.length)\n        throw 'Vectors do not have the same dimensions';\n\n    var cov = 0, l = vector1.length;\n    for (var i = 0; i < l; i++) {\n        var x = vector1[i] - mean1;\n        var y = vector2[i] - mean2;\n        cov += x * y;\n    }\n\n    if (unbiased)\n        return cov / (l - 1);\n    else\n        return cov / l;\n};\n\nexports.skewness = function skewness(values, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var theMean = exports.mean(values);\n\n    var s2 = 0, s3 = 0, l = values.length;\n    for (var i = 0; i < l; i++) {\n        var dev = values[i] - theMean;\n        s2 += dev * dev;\n        s3 += dev * dev * dev;\n    }\n    var m2 = s2 / l;\n    var m3 = s3 / l;\n\n    var g = m3 / (Math.pow(m2, 3 / 2.0));\n    if (unbiased) {\n        var a = Math.sqrt(l * (l - 1));\n        var b = l - 2;\n        return (a / b) * g;\n    } else {\n        return g;\n    }\n};\n\nexports.kurtosis = function kurtosis(values, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var theMean = exports.mean(values);\n    var n = values.length, s2 = 0, s4 = 0;\n\n    for (var i = 0; i < n; i++) {\n        var dev = values[i] - theMean;\n        s2 += dev * dev;\n        s4 += dev * dev * dev * dev;\n    }\n    var m2 = s2 / n;\n    var m4 = s4 / n;\n\n    if (unbiased) {\n        var v = s2 / (n - 1);\n        var a = (n * (n + 1)) / ((n - 1) * (n - 2) * (n - 3));\n        var b = s4 / (v * v);\n        var c = ((n - 1) * (n - 1)) / ((n - 2) * (n - 3));\n\n        return a * b - 3 * c;\n    } else {\n        return m4 / (m2 * m2) - 3;\n    }\n};\n\nexports.entropy = function entropy(values, eps) {\n    if (typeof (eps) === 'undefined') eps = 0;\n    var sum = 0, l = values.length;\n    for (var i = 0; i < l; i++)\n        sum += values[i] * Math.log(values[i] + eps);\n    return -sum;\n};\n\nexports.weightedMean = function weightedMean(values, weights) {\n    var sum = 0, l = values.length;\n    for (var i = 0; i < l; i++)\n        sum += values[i] * weights[i];\n    return sum;\n};\n\nexports.weightedStandardDeviation = function weightedStandardDeviation(values, weights) {\n    return Math.sqrt(exports.weightedVariance(values, weights));\n};\n\nexports.weightedVariance = function weightedVariance(values, weights) {\n    var theMean = exports.weightedMean(values, weights);\n    var vari = 0, l = values.length;\n    var a = 0, b = 0;\n\n    for (var i = 0; i < l; i++) {\n        var z = values[i] - theMean;\n        var w = weights[i];\n\n        vari += w * (z * z);\n        b += w;\n        a += w * w;\n    }\n\n    return vari * (b / (b * b - a));\n};\n\nexports.center = function center(values, inPlace) {\n    if (typeof (inPlace) === 'undefined') inPlace = false;\n\n    var result = values;\n    if (!inPlace)\n        result = [].concat(values);\n\n    var theMean = exports.mean(result), l = result.length;\n    for (var i = 0; i < l; i++)\n        result[i] -= theMean;\n};\n\nexports.standardize = function standardize(values, standardDev, inPlace) {\n    if (typeof (standardDev) === 'undefined') standardDev = exports.standardDeviation(values);\n    if (typeof (inPlace) === 'undefined') inPlace = false;\n    var l = values.length;\n    var result = inPlace ? values : new Array(l);\n    for (var i = 0; i < l; i++)\n        result[i] = values[i] / standardDev;\n    return result;\n};\n\nexports.cumulativeSum = function cumulativeSum(array) {\n    var l = array.length;\n    var result = new Array(l);\n    result[0] = array[0];\n    for (var i = 1; i < l; i++)\n        result[i] = result[i - 1] + array[i];\n    return result;\n};\n","/*\nThe MIT License (MIT)\nCopyright © 2006-2007 Kevin C. Olbrich\nCopyright © 2010-2016 LIM SAS (http://lim.eu) - Julien Sanchez\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\nof the Software, and to permit persons to whom the Software is furnished to do\nso, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n*/\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.Qty = factory());\n}(this, (function () { 'use strict';\n\n  /**\n   * Tests if a value is a string\n   *\n   * @param {*} value - Value to test\n   *\n   * @returns {boolean} true if value is a string, false otherwise\n   */\n  function isString(value) {\n    return typeof value === \"string\" || value instanceof String;\n  }\n\n  /*\n   * Prefer stricter Number.isFinite if currently supported.\n   * To be dropped when ES6 is finalized. Obsolete browsers will\n   * have to use ES6 polyfills.\n   */\n  var isFiniteImpl = Number.isFinite || window.isFinite;\n  /**\n   * Tests if a value is a number\n   *\n   * @param {*} value - Value to test\n   *\n   * @returns {boolean} true if value is a number, false otherwise\n   */\n  function isNumber(value) {\n    // Number.isFinite allows not to consider NaN or '1' as numbers\n    return isFiniteImpl(value);\n  }\n\n  /*\n   * Identity function\n   */\n  function identity(value) {\n    return value;\n  }\n\n  /**\n   * Returns unique strings from list\n   *\n   * @param {string[]} strings - array of strings\n   *\n   *\n   * @returns {string[]} a new array of strings without duplicates\n   */\n  function uniq(strings) {\n    var seen = {};\n    return strings.filter(function(item) {\n      return seen.hasOwnProperty(item) ? false : (seen[item] = true);\n    });\n  }\n\n  function compareArray(array1, array2) {\n    if (array2.length !== array1.length) {\n      return false;\n    }\n    for (var i = 0; i < array1.length; i++) {\n      if (array2[i].compareArray) {\n        if (!array2[i].compareArray(array1[i])) {\n          return false;\n        }\n      }\n      if (array2[i] !== array1[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  function assign(target, properties) {\n    Object.keys(properties).forEach(function(key) {\n      target[key] = properties[key];\n    });\n  }\n\n  /**\n   * Safely multiplies numbers while avoiding floating errors\n   * like 0.1 * 0.1 => 0.010000000000000002\n   *\n   * @param {...number} numbers - numbers to multiply\n   *\n   * @returns {number} result\n   */\n  function mulSafe() {\n    var result = 1, decimals = 0;\n    for (var i = 0; i < arguments.length; i++) {\n      var arg = arguments[i];\n      decimals = decimals + getFractional(arg);\n      result *= arg;\n    }\n\n    return decimals !== 0 ? round(result, decimals) : result;\n  }\n\n  /**\n   * Safely divides two numbers while avoiding floating errors\n   * like 0.3 / 0.05 => 5.999999999999999\n   *\n   * @returns {number} result\n   * @param {number} num Numerator\n   * @param {number} den Denominator\n   */\n  function divSafe(num, den) {\n    if (den === 0) {\n      throw new Error(\"Divide by zero\");\n    }\n\n    var factor = Math.pow(10, getFractional(den));\n    var invDen = factor / (factor * den);\n\n    return mulSafe(num, invDen);\n  }\n\n  /**\n   * Rounds value at the specified number of decimals\n   *\n   * @param {number} val - value to round\n   * @param {number} decimals - number of decimals\n   *\n   * @returns {number} rounded number\n   */\n  function round(val, decimals) {\n    return Math.round(val * Math.pow(10, decimals)) / Math.pow(10, decimals);\n  }\n\n  function getFractional(num) {\n    // Check for NaNs or Infinities\n    if (!isFinite(num)) {\n      return 0;\n    }\n\n    // Faster than parsing strings\n    // http://jsperf.com/count-decimals/2\n    var count = 0;\n    while (num % 1 !== 0) {\n      num *= 10;\n      count++;\n    }\n    return count;\n  }\n\n  /**\n   * Custom error type definition\n   * @constructor\n   */\n  function QtyError() {\n    var err;\n    if (!this) { // Allows to instantiate QtyError without new()\n      err = Object.create(QtyError.prototype);\n      QtyError.apply(err, arguments);\n      return err;\n    }\n    err = Error.apply(this, arguments);\n    this.name = \"QtyError\";\n    this.message = err.message;\n    this.stack = err.stack;\n  }\n  QtyError.prototype = Object.create(Error.prototype, {constructor: { value: QtyError }});\n\n  /*\n   * Throws incompatible units error\n   * @param {string} left - units\n   * @param {string} right - units incompatible with first argument\n   * @throws \"Incompatible units\" error\n   */\n  function throwIncompatibleUnits(left, right) {\n    throw new QtyError(\"Incompatible units: \" + left + \" and \" + right);\n  }\n\n  var UNITS = {\n    /* prefixes */\n    \"<googol>\" : [[\"googol\"], 1e100, \"prefix\"],\n    \"<kibi>\"  :  [[\"Ki\",\"Kibi\",\"kibi\"], Math.pow(2,10), \"prefix\"],\n    \"<mebi>\"  :  [[\"Mi\",\"Mebi\",\"mebi\"], Math.pow(2,20), \"prefix\"],\n    \"<gibi>\"  :  [[\"Gi\",\"Gibi\",\"gibi\"], Math.pow(2,30), \"prefix\"],\n    \"<tebi>\"  :  [[\"Ti\",\"Tebi\",\"tebi\"], Math.pow(2,40), \"prefix\"],\n    \"<pebi>\"  :  [[\"Pi\",\"Pebi\",\"pebi\"], Math.pow(2,50), \"prefix\"],\n    \"<exi>\"   :  [[\"Ei\",\"Exi\",\"exi\"], Math.pow(2,60), \"prefix\"],\n    \"<zebi>\"  :  [[\"Zi\",\"Zebi\",\"zebi\"], Math.pow(2,70), \"prefix\"],\n    \"<yebi>\"  :  [[\"Yi\",\"Yebi\",\"yebi\"], Math.pow(2,80), \"prefix\"],\n    \"<yotta>\" :  [[\"Y\",\"Yotta\",\"yotta\"], 1e24, \"prefix\"],\n    \"<zetta>\" :  [[\"Z\",\"Zetta\",\"zetta\"], 1e21, \"prefix\"],\n    \"<exa>\"   :  [[\"E\",\"Exa\",\"exa\"], 1e18, \"prefix\"],\n    \"<peta>\"  :  [[\"P\",\"Peta\",\"peta\"], 1e15, \"prefix\"],\n    \"<tera>\"  :  [[\"T\",\"Tera\",\"tera\"], 1e12, \"prefix\"],\n    \"<giga>\"  :  [[\"G\",\"Giga\",\"giga\"], 1e9, \"prefix\"],\n    \"<mega>\"  :  [[\"M\",\"Mega\",\"mega\"], 1e6, \"prefix\"],\n    \"<kilo>\"  :  [[\"k\",\"kilo\"], 1e3, \"prefix\"],\n    \"<hecto>\" :  [[\"h\",\"Hecto\",\"hecto\"], 1e2, \"prefix\"],\n    \"<deca>\"  :  [[\"da\",\"Deca\",\"deca\",\"deka\"], 1e1, \"prefix\"],\n    \"<deci>\"  :  [[\"d\",\"Deci\",\"deci\"], 1e-1, \"prefix\"],\n    \"<centi>\"  : [[\"c\",\"Centi\",\"centi\"], 1e-2, \"prefix\"],\n    \"<milli>\" :  [[\"m\",\"Milli\",\"milli\"], 1e-3, \"prefix\"],\n    \"<micro>\"  : [\n      [\"u\",\"\\u03BC\"/*µ as greek letter*/,\"\\u00B5\"/*µ as micro sign*/,\"Micro\",\"mc\",\"micro\"],\n      1e-6,\n      \"prefix\"\n    ],\n    \"<nano>\"  :  [[\"n\",\"Nano\",\"nano\"], 1e-9, \"prefix\"],\n    \"<pico>\"  :  [[\"p\",\"Pico\",\"pico\"], 1e-12, \"prefix\"],\n    \"<femto>\" :  [[\"f\",\"Femto\",\"femto\"], 1e-15, \"prefix\"],\n    \"<atto>\"  :  [[\"a\",\"Atto\",\"atto\"], 1e-18, \"prefix\"],\n    \"<zepto>\" :  [[\"z\",\"Zepto\",\"zepto\"], 1e-21, \"prefix\"],\n    \"<yocto>\" :  [[\"y\",\"Yocto\",\"yocto\"], 1e-24, \"prefix\"],\n\n    \"<1>\"     :  [[\"1\", \"<1>\"], 1, \"\"],\n    /* length units */\n    \"<meter>\" :  [[\"m\",\"meter\",\"meters\",\"metre\",\"metres\"], 1.0, \"length\", [\"<meter>\"] ],\n    \"<inch>\"  :  [[\"in\",\"inch\",\"inches\",\"\\\"\"], 0.0254, \"length\", [\"<meter>\"]],\n    \"<foot>\"  :  [[\"ft\",\"foot\",\"feet\",\"'\"], 0.3048, \"length\", [\"<meter>\"]],\n    \"<yard>\"  :  [[\"yd\",\"yard\",\"yards\"], 0.9144, \"length\", [\"<meter>\"]],\n    \"<mile>\"  :  [[\"mi\",\"mile\",\"miles\"], 1609.344, \"length\", [\"<meter>\"]],\n    \"<naut-mile>\" : [[\"nmi\",\"naut-mile\"], 1852, \"length\", [\"<meter>\"]],\n    \"<league>\":  [[\"league\",\"leagues\"], 4828, \"length\", [\"<meter>\"]],\n    \"<furlong>\": [[\"furlong\",\"furlongs\"], 201.2, \"length\", [\"<meter>\"]],\n    \"<rod>\"   :  [[\"rd\",\"rod\",\"rods\"], 5.029, \"length\", [\"<meter>\"]],\n    \"<mil>\"   :  [[\"mil\",\"mils\"], 0.0000254, \"length\", [\"<meter>\"]],\n    \"<angstrom>\"  :[[\"ang\",\"angstrom\",\"angstroms\"], 1e-10, \"length\", [\"<meter>\"]],\n    \"<fathom>\" : [[\"fathom\",\"fathoms\"], 1.829, \"length\", [\"<meter>\"]],\n    \"<pica>\"  : [[\"pica\",\"picas\"], 0.00423333333, \"length\", [\"<meter>\"]],\n    \"<point>\" : [[\"pt\",\"point\",\"points\"], 0.000352777778, \"length\", [\"<meter>\"]],\n    \"<redshift>\" : [[\"z\",\"red-shift\", \"redshift\"], 1.302773e26, \"length\", [\"<meter>\"]],\n    \"<AU>\"    : [[\"AU\",\"astronomical-unit\"], 149597900000, \"length\", [\"<meter>\"]],\n    \"<light-second>\":[[\"ls\",\"light-second\"], 299792500, \"length\", [\"<meter>\"]],\n    \"<light-minute>\":[[\"lmin\",\"light-minute\"], 17987550000, \"length\", [\"<meter>\"]],\n    \"<light-year>\" : [[\"ly\",\"light-year\"], 9460528000000000, \"length\", [\"<meter>\"]],\n    \"<parsec>\"  : [[\"pc\",\"parsec\",\"parsecs\"], 30856780000000000, \"length\", [\"<meter>\"]],\n    \"<datamile>\"  :  [[\"DM\",\"datamile\"], 1828.8, \"length\", [\"<meter>\"]],\n\n    /* mass */\n    \"<kilogram>\" : [[\"kg\",\"kilogram\",\"kilograms\"], 1.0, \"mass\", [\"<kilogram>\"]],\n    \"<AMU>\" : [[\"u\",\"AMU\",\"amu\"], 1.660538921e-27, \"mass\", [\"<kilogram>\"]],\n    \"<dalton>\" : [[\"Da\",\"Dalton\",\"Daltons\",\"dalton\",\"daltons\"], 1.660538921e-27, \"mass\", [\"<kilogram>\"]],\n    \"<slug>\" : [[\"slug\",\"slugs\"], 14.5939029, \"mass\", [\"<kilogram>\"]],\n    \"<short-ton>\" : [[\"tn\",\"ton\",\"short-ton\"], 907.18474, \"mass\", [\"<kilogram>\"]],\n    \"<metric-ton>\":[[\"tonne\",\"metric-ton\"], 1000, \"mass\", [\"<kilogram>\"]],\n    \"<carat>\" : [[\"ct\",\"carat\",\"carats\"], 0.0002, \"mass\", [\"<kilogram>\"]],\n    \"<pound>\" : [[\"lbs\",\"lb\",\"pound\",\"pounds\",\"#\"], 0.45359237, \"mass\", [\"<kilogram>\"]],\n    \"<ounce>\" : [[\"oz\",\"ounce\",\"ounces\"], 0.0283495231, \"mass\", [\"<kilogram>\"]],\n    \"<gram>\"    :  [[\"g\",\"gram\",\"grams\",\"gramme\",\"grammes\"], 1e-3, \"mass\", [\"<kilogram>\"]],\n    \"<grain>\" : [[\"grain\",\"grains\",\"gr\"], 6.479891e-5, \"mass\", [\"<kilogram>\"]],\n    \"<dram>\"  : [[\"dram\",\"drams\",\"dr\"], 0.0017718452, \"mass\",[\"<kilogram>\"]],\n    \"<stone>\" : [[\"stone\",\"stones\",\"st\"],6.35029318, \"mass\",[\"<kilogram>\"]],\n\n    /* area */\n    \"<hectare>\":[[\"hectare\"], 10000, \"area\", [\"<meter>\",\"<meter>\"]],\n    \"<acre>\":[[\"acre\",\"acres\"], 4046.85642, \"area\", [\"<meter>\",\"<meter>\"]],\n    \"<sqft>\":[[\"sqft\"], 1, \"area\", [\"<foot>\",\"<foot>\"]],\n\n    /* volume */\n    \"<liter>\" : [[\"l\",\"L\",\"liter\",\"liters\",\"litre\",\"litres\"], 0.001, \"volume\", [\"<meter>\",\"<meter>\",\"<meter>\"]],\n    \"<gallon>\":  [[\"gal\",\"gallon\",\"gallons\"], 0.0037854118, \"volume\", [\"<meter>\",\"<meter>\",\"<meter>\"]],\n    \"<gallon-imp>\":  [[\"galimp\",\"gallon-imp\",\"gallons-imp\"], 0.0045460900, \"volume\", [\"<meter>\",\"<meter>\",\"<meter>\"]],\n    \"<quart>\":  [[\"qt\",\"quart\",\"quarts\"], 0.00094635295, \"volume\", [\"<meter>\",\"<meter>\",\"<meter>\"]],\n    \"<pint>\":  [[\"pt\",\"pint\",\"pints\"], 0.000473176475, \"volume\", [\"<meter>\",\"<meter>\",\"<meter>\"]],\n    \"<pint-imp>\":  [[\"ptimp\",\"pint-imp\",\"pints-imp\"], 5.6826125e-4, \"volume\", [\"<meter>\",\"<meter>\",\"<meter>\"]],\n    \"<cup>\":  [[\"cu\",\"cup\",\"cups\"], 0.000236588238, \"volume\", [\"<meter>\",\"<meter>\",\"<meter>\"]],\n    \"<fluid-ounce>\":  [[\"floz\",\"fluid-ounce\",\"fluid-ounces\"], 2.95735297e-5, \"volume\", [\"<meter>\",\"<meter>\",\"<meter>\"]],\n    \"<fluid-ounce-imp>\":  [[\"flozimp\", \"floz-imp\",\"fluid-ounce-imp\",\"fluid-ounces-imp\"], 2.84130625e-5, \"volume\", [\"<meter>\",\"<meter>\",\"<meter>\"]],\n    \"<tablespoon>\":  [[\"tb\",\"tbsp\",\"tbs\",\"tablespoon\",\"tablespoons\"], 1.47867648e-5, \"volume\", [\"<meter>\",\"<meter>\",\"<meter>\"]],\n    \"<teaspoon>\":  [[\"tsp\",\"teaspoon\",\"teaspoons\"], 4.92892161e-6, \"volume\", [\"<meter>\",\"<meter>\",\"<meter>\"]],\n    \"<bushel>\":  [[\"bu\",\"bsh\",\"bushel\",\"bushels\"], 0.035239072, \"volume\", [\"<meter>\",\"<meter>\",\"<meter>\"]],\n    \"<oilbarrel>\":  [[\"bbl\",\"oilbarrel\", \"oilbarrels\", \"oil-barrel\",\"oil-barrels\"], 0.158987294928, \"volume\", [\"<meter>\",\"<meter>\",\"<meter>\"]],\n    \"<beerbarrel>\":  [[\"bl\",\"bl-us\",\"beerbarrel\", \"beerbarrels\", \"beer-barrel\",\"beer-barrels\"], 0.1173477658, \"volume\", [\"<meter>\",\"<meter>\",\"<meter>\"]],\n    \"<beerbarrel-imp>\":  [[\"blimp\",\"bl-imp\",\"beerbarrel-imp\", \"beerbarrels-imp\", \"beer-barrel-imp\",\"beer-barrels-imp\"], 0.16365924, \"volume\", [\"<meter>\",\"<meter>\",\"<meter>\"]],\n\n    /* speed */\n    \"<kph>\" : [[\"kph\"], 0.277777778, \"speed\", [\"<meter>\"], [\"<second>\"]],\n    \"<mph>\" : [[\"mph\"], 0.44704, \"speed\", [\"<meter>\"], [\"<second>\"]],\n    \"<knot>\" : [[\"kt\",\"kn\",\"kts\",\"knot\",\"knots\"], 0.514444444, \"speed\", [\"<meter>\"], [\"<second>\"]],\n    \"<fps>\"  : [[\"fps\"], 0.3048, \"speed\", [\"<meter>\"], [\"<second>\"]],\n\n    /* acceleration */\n    \"<gee>\" : [[\"gee\"], 9.80665, \"acceleration\", [\"<meter>\"], [\"<second>\",\"<second>\"]],\n    \"<Gal>\" : [[\"Gal\"], 1e-2, \"acceleration\", [\"<meter>\"], [\"<second>\",\"<second>\"]],\n\n    /* temperature_difference */\n    \"<kelvin>\" : [[\"degK\",\"kelvin\"], 1.0, \"temperature\", [\"<kelvin>\"]],\n    \"<celsius>\" : [[\"degC\",\"celsius\",\"celsius\",\"centigrade\"], 1.0, \"temperature\", [\"<kelvin>\"]],\n    \"<fahrenheit>\" : [[\"degF\",\"fahrenheit\"], 5 / 9, \"temperature\", [\"<kelvin>\"]],\n    \"<rankine>\" : [[\"degR\",\"rankine\"], 5 / 9, \"temperature\", [\"<kelvin>\"]],\n    \"<temp-K>\"  : [[\"tempK\",\"temp-K\"], 1.0, \"temperature\", [\"<temp-K>\"]],\n    \"<temp-C>\"  : [[\"tempC\",\"temp-C\"], 1.0, \"temperature\", [\"<temp-K>\"]],\n    \"<temp-F>\"  : [[\"tempF\",\"temp-F\"], 5 / 9, \"temperature\", [\"<temp-K>\"]],\n    \"<temp-R>\"  : [[\"tempR\",\"temp-R\"], 5 / 9, \"temperature\", [\"<temp-K>\"]],\n\n    /* time */\n    \"<second>\":  [[\"s\",\"sec\",\"secs\",\"second\",\"seconds\"], 1.0, \"time\", [\"<second>\"]],\n    \"<minute>\":  [[\"min\",\"mins\",\"minute\",\"minutes\"], 60.0, \"time\", [\"<second>\"]],\n    \"<hour>\":  [[\"h\",\"hr\",\"hrs\",\"hour\",\"hours\"], 3600.0, \"time\", [\"<second>\"]],\n    \"<day>\":  [[\"d\",\"day\",\"days\"], 3600 * 24, \"time\", [\"<second>\"]],\n    \"<week>\":  [[\"wk\",\"week\",\"weeks\"], 7 * 3600 * 24, \"time\", [\"<second>\"]],\n    \"<fortnight>\": [[\"fortnight\",\"fortnights\"], 1209600, \"time\", [\"<second>\"]],\n    \"<year>\":  [[\"y\",\"yr\",\"year\",\"years\",\"annum\"], 31556926, \"time\", [\"<second>\"]],\n    \"<decade>\":[[\"decade\",\"decades\"], 315569260, \"time\", [\"<second>\"]],\n    \"<century>\":[[\"century\",\"centuries\"], 3155692600, \"time\", [\"<second>\"]],\n\n    /* pressure */\n    \"<pascal>\" : [[\"Pa\",\"pascal\",\"Pascal\"], 1.0, \"pressure\", [\"<kilogram>\"],[\"<meter>\",\"<second>\",\"<second>\"]],\n    \"<bar>\" : [[\"bar\",\"bars\"], 100000, \"pressure\", [\"<kilogram>\"],[\"<meter>\",\"<second>\",\"<second>\"]],\n    \"<mmHg>\" : [[\"mmHg\"], 133.322368, \"pressure\", [\"<kilogram>\"],[\"<meter>\",\"<second>\",\"<second>\"]],\n    \"<inHg>\" : [[\"inHg\"], 3386.3881472, \"pressure\", [\"<kilogram>\"],[\"<meter>\",\"<second>\",\"<second>\"]],\n    \"<torr>\" : [[\"torr\"], 133.322368, \"pressure\", [\"<kilogram>\"],[\"<meter>\",\"<second>\",\"<second>\"]],\n    \"<atm>\" : [[\"atm\",\"ATM\",\"atmosphere\",\"atmospheres\"], 101325, \"pressure\", [\"<kilogram>\"],[\"<meter>\",\"<second>\",\"<second>\"]],\n    \"<psi>\" : [[\"psi\"], 6894.76, \"pressure\", [\"<kilogram>\"],[\"<meter>\",\"<second>\",\"<second>\"]],\n    \"<cmh2o>\" : [[\"cmH2O\",\"cmh2o\"], 98.0638, \"pressure\", [\"<kilogram>\"],[\"<meter>\",\"<second>\",\"<second>\"]],\n    \"<inh2o>\" : [[\"inH2O\",\"inh2o\"], 249.082052, \"pressure\", [\"<kilogram>\"],[\"<meter>\",\"<second>\",\"<second>\"]],\n\n    /* viscosity */\n    \"<poise>\"  : [[\"P\",\"poise\"], 0.1, \"viscosity\", [\"<kilogram>\"],[\"<meter>\",\"<second>\"] ],\n    \"<stokes>\" : [[\"St\",\"stokes\"], 1e-4, \"viscosity\", [\"<meter>\",\"<meter>\"], [\"<second>\"]],\n\n    /* substance */\n    \"<mole>\"  :  [[\"mol\",\"mole\"], 1.0, \"substance\", [\"<mole>\"]],\n\n    /* concentration */\n    \"<molar>\" : [[\"M\",\"molar\"], 1000, \"concentration\", [\"<mole>\"], [\"<meter>\",\"<meter>\",\"<meter>\"]],\n    \"<wtpercent>\"  : [[\"wt%\",\"wtpercent\"], 10, \"concentration\", [\"<kilogram>\"], [\"<meter>\",\"<meter>\",\"<meter>\"]],\n\n    /* activity */\n    \"<katal>\" :  [[\"kat\",\"katal\",\"Katal\"], 1.0, \"activity\", [\"<mole>\"], [\"<second>\"]],\n    \"<unit>\"  :  [[\"U\",\"enzUnit\",\"unit\"], 16.667e-16, \"activity\", [\"<mole>\"], [\"<second>\"]],\n\n    /* capacitance */\n    \"<farad>\" :  [[\"F\",\"farad\",\"Farad\"], 1.0, \"capacitance\", [\"<second>\",\"<second>\",\"<second>\",\"<second>\",\"<ampere>\",\"<ampere>\"], [\"<meter>\", \"<meter>\", \"<kilogram>\"]],\n\n    /* charge */\n    \"<coulomb>\" :  [[\"C\",\"coulomb\",\"Coulomb\"], 1.0, \"charge\", [\"<ampere>\",\"<second>\"]],\n    \"<Ah>\" :  [[\"Ah\"], 3600, \"charge\", [\"<ampere>\",\"<second>\"]],\n\n    /* current */\n    \"<ampere>\"  :  [[\"A\",\"Ampere\",\"ampere\",\"amp\",\"amps\"], 1.0, \"current\", [\"<ampere>\"]],\n\n    /* conductance */\n    \"<siemens>\" : [[\"S\",\"Siemens\",\"siemens\"], 1.0, \"conductance\", [\"<second>\",\"<second>\",\"<second>\",\"<ampere>\",\"<ampere>\"], [\"<kilogram>\",\"<meter>\",\"<meter>\"]],\n\n    /* inductance */\n    \"<henry>\" :  [[\"H\",\"Henry\",\"henry\"], 1.0, \"inductance\", [\"<meter>\",\"<meter>\",\"<kilogram>\"], [\"<second>\",\"<second>\",\"<ampere>\",\"<ampere>\"]],\n\n    /* potential */\n    \"<volt>\"  :  [[\"V\",\"Volt\",\"volt\",\"volts\"], 1.0, \"potential\", [\"<meter>\",\"<meter>\",\"<kilogram>\"], [\"<second>\",\"<second>\",\"<second>\",\"<ampere>\"]],\n\n    /* resistance */\n    \"<ohm>\" :  [\n      [\"Ohm\",\"ohm\",\"\\u03A9\"/*Ω as greek letter*/,\"\\u2126\"/*Ω as ohm sign*/],\n      1.0,\n      \"resistance\",\n      [\"<meter>\",\"<meter>\",\"<kilogram>\"],[\"<second>\",\"<second>\",\"<second>\",\"<ampere>\",\"<ampere>\"]\n    ],\n    /* magnetism */\n    \"<weber>\" : [[\"Wb\",\"weber\",\"webers\"], 1.0, \"magnetism\", [\"<meter>\",\"<meter>\",\"<kilogram>\"], [\"<second>\",\"<second>\",\"<ampere>\"]],\n    \"<tesla>\"  : [[\"T\",\"tesla\",\"teslas\"], 1.0, \"magnetism\", [\"<kilogram>\"], [\"<second>\",\"<second>\",\"<ampere>\"]],\n    \"<gauss>\" : [[\"G\",\"gauss\"], 1e-4, \"magnetism\",  [\"<kilogram>\"], [\"<second>\",\"<second>\",\"<ampere>\"]],\n    \"<maxwell>\" : [[\"Mx\",\"maxwell\",\"maxwells\"], 1e-8, \"magnetism\", [\"<meter>\",\"<meter>\",\"<kilogram>\"], [\"<second>\",\"<second>\",\"<ampere>\"]],\n    \"<oersted>\"  : [[\"Oe\",\"oersted\",\"oersteds\"], 250.0 / Math.PI, \"magnetism\", [\"<ampere>\"], [\"<meter>\"]],\n\n    /* energy */\n    \"<joule>\" :  [[\"J\",\"joule\",\"Joule\",\"joules\"], 1.0, \"energy\", [\"<meter>\",\"<meter>\",\"<kilogram>\"], [\"<second>\",\"<second>\"]],\n    \"<erg>\"   :  [[\"erg\",\"ergs\"], 1e-7, \"energy\", [\"<meter>\",\"<meter>\",\"<kilogram>\"], [\"<second>\",\"<second>\"]],\n    \"<btu>\"   :  [[\"BTU\",\"btu\",\"BTUs\"], 1055.056, \"energy\", [\"<meter>\",\"<meter>\",\"<kilogram>\"], [\"<second>\",\"<second>\"]],\n    \"<calorie>\" :  [[\"cal\",\"calorie\",\"calories\"], 4.18400, \"energy\",[\"<meter>\",\"<meter>\",\"<kilogram>\"], [\"<second>\",\"<second>\"]],\n    \"<Calorie>\" :  [[\"Cal\",\"Calorie\",\"Calories\"], 4184.00, \"energy\",[\"<meter>\",\"<meter>\",\"<kilogram>\"], [\"<second>\",\"<second>\"]],\n    \"<therm-US>\" : [[\"th\",\"therm\",\"therms\",\"Therm\",\"therm-US\"], 105480400, \"energy\",[\"<meter>\",\"<meter>\",\"<kilogram>\"], [\"<second>\",\"<second>\"]],\n    \"<Wh>\" : [[\"Wh\"], 3600, \"energy\",[\"<meter>\",\"<meter>\",\"<kilogram>\"], [\"<second>\",\"<second>\"]],\n\n    /* force */\n    \"<newton>\"  : [[\"N\",\"Newton\",\"newton\"], 1.0, \"force\", [\"<kilogram>\",\"<meter>\"], [\"<second>\",\"<second>\"]],\n    \"<dyne>\"  : [[\"dyn\",\"dyne\"], 1e-5, \"force\", [\"<kilogram>\",\"<meter>\"], [\"<second>\",\"<second>\"]],\n    \"<pound-force>\"  : [[\"lbf\",\"pound-force\"], 4.448222, \"force\", [\"<kilogram>\",\"<meter>\"], [\"<second>\",\"<second>\"]],\n\n    /* frequency */\n    \"<hertz>\" : [[\"Hz\",\"hertz\",\"Hertz\"], 1.0, \"frequency\", [\"<1>\"], [\"<second>\"]],\n\n    /* angle */\n    \"<radian>\" :[[\"rad\",\"radian\",\"radians\"], 1.0, \"angle\", [\"<radian>\"]],\n    \"<degree>\" :[[\"deg\",\"degree\",\"degrees\"], Math.PI / 180.0, \"angle\", [\"<radian>\"]],\n    \"<gradian>\"   :[[\"gon\",\"grad\",\"gradian\",\"grads\"], Math.PI / 200.0, \"angle\", [\"<radian>\"]],\n    \"<steradian>\"  : [[\"sr\",\"steradian\",\"steradians\"], 1.0, \"solid_angle\", [\"<steradian>\"]],\n\n    /* rotation */\n    \"<rotation>\" : [[\"rotation\"], 2.0 * Math.PI, \"angle\", [\"<radian>\"]],\n    \"<rpm>\"   :[[\"rpm\"], 2.0 * Math.PI / 60.0, \"angular_velocity\", [\"<radian>\"], [\"<second>\"]],\n\n    /* information */\n    \"<byte>\"  :[[\"B\",\"byte\",\"bytes\"], 1.0, \"information\", [\"<byte>\"]],\n    \"<bit>\"  :[[\"b\",\"bit\",\"bits\"], 0.125, \"information\", [\"<byte>\"]],\n\n    /* information rate */\n    \"<Bps>\" : [[\"Bps\"], 1.0, \"information_rate\", [\"<byte>\"], [\"<second>\"]],\n    \"<bps>\" : [[\"bps\"], 0.125, \"information_rate\", [\"<byte>\"], [\"<second>\"]],\n\n    /* currency */\n    \"<dollar>\":[[\"USD\",\"dollar\"], 1.0, \"currency\", [\"<dollar>\"]],\n    \"<cents>\" :[[\"cents\"], 0.01, \"currency\", [\"<dollar>\"]],\n\n    /* luminosity */\n    \"<candela>\" : [[\"cd\",\"candela\"], 1.0, \"luminosity\", [\"<candela>\"]],\n    \"<lumen>\" : [[\"lm\",\"lumen\"], 1.0, \"luminous_power\", [\"<candela>\",\"<steradian>\"]],\n    \"<lux>\" :[[\"lux\"], 1.0, \"illuminance\", [\"<candela>\",\"<steradian>\"], [\"<meter>\",\"<meter>\"]],\n\n    /* power */\n    \"<watt>\"  : [[\"W\",\"watt\",\"watts\"], 1.0, \"power\", [\"<kilogram>\",\"<meter>\",\"<meter>\"], [\"<second>\",\"<second>\",\"<second>\"]],\n    \"<volt-ampere>\"  : [[\"VA\",\"volt-ampere\"], 1.0, \"power\", [\"<kilogram>\",\"<meter>\",\"<meter>\"], [\"<second>\",\"<second>\",\"<second>\"]],\n    \"<volt-ampere-reactive>\"  : [[\"var\",\"Var\",\"VAr\",\"VAR\",\"volt-ampere-reactive\"], 1.0, \"power\", [\"<kilogram>\",\"<meter>\",\"<meter>\"], [\"<second>\",\"<second>\",\"<second>\"]],\n    \"<horsepower>\"  :  [[\"hp\",\"horsepower\"], 745.699872, \"power\", [\"<kilogram>\",\"<meter>\",\"<meter>\"], [\"<second>\",\"<second>\",\"<second>\"]],\n\n    /* radiation */\n    \"<gray>\" : [[\"Gy\",\"gray\",\"grays\"], 1.0, \"radiation\", [\"<meter>\",\"<meter>\"], [\"<second>\",\"<second>\"]],\n    \"<roentgen>\" : [[\"R\",\"roentgen\"], 0.009330, \"radiation\", [\"<meter>\",\"<meter>\"], [\"<second>\",\"<second>\"]],\n    \"<sievert>\" : [[\"Sv\",\"sievert\",\"sieverts\"], 1.0, \"radiation\", [\"<meter>\",\"<meter>\"], [\"<second>\",\"<second>\"]],\n    \"<becquerel>\" : [[\"Bq\",\"becquerel\",\"becquerels\"], 1.0, \"radiation\", [\"<1>\"],[\"<second>\"]],\n    \"<curie>\" : [[\"Ci\",\"curie\",\"curies\"], 3.7e10, \"radiation\", [\"<1>\"],[\"<second>\"]],\n\n    /* rate */\n    \"<cpm>\" : [[\"cpm\"], 1.0 / 60.0, \"rate\", [\"<count>\"],[\"<second>\"]],\n    \"<dpm>\" : [[\"dpm\"], 1.0 / 60.0, \"rate\", [\"<count>\"],[\"<second>\"]],\n    \"<bpm>\" : [[\"bpm\"], 1.0 / 60.0, \"rate\", [\"<count>\"],[\"<second>\"]],\n\n    /* resolution / typography */\n    \"<dot>\" : [[\"dot\",\"dots\"], 1, \"resolution\", [\"<each>\"]],\n    \"<pixel>\" : [[\"pixel\",\"px\"], 1, \"resolution\", [\"<each>\"]],\n    \"<ppi>\" : [[\"ppi\"], 1, \"resolution\", [\"<pixel>\"], [\"<inch>\"]],\n    \"<dpi>\" : [[\"dpi\"], 1, \"typography\", [\"<dot>\"], [\"<inch>\"]],\n\n    /* other */\n    \"<cell>\" : [[\"cells\",\"cell\"], 1, \"counting\", [\"<each>\"]],\n    \"<each>\" : [[\"each\"], 1.0, \"counting\", [\"<each>\"]],\n    \"<count>\" : [[\"count\"], 1.0, \"counting\", [\"<each>\"]],\n    \"<base-pair>\"  : [[\"bp\",\"base-pair\"], 1.0, \"counting\", [\"<each>\"]],\n    \"<nucleotide>\" : [[\"nt\",\"nucleotide\"], 1.0, \"counting\", [\"<each>\"]],\n    \"<molecule>\" : [[\"molecule\",\"molecules\"], 1.0, \"counting\", [\"<1>\"]],\n    \"<dozen>\" :  [[\"doz\",\"dz\",\"dozen\"],12.0,\"prefix_only\", [\"<each>\"]],\n    \"<percent>\": [[\"%\",\"percent\"], 0.01, \"prefix_only\", [\"<1>\"]],\n    \"<ppm>\" :  [[\"ppm\"],1e-6, \"prefix_only\", [\"<1>\"]],\n    \"<ppt>\" :  [[\"ppt\"],1e-9, \"prefix_only\", [\"<1>\"]],\n    \"<gross>\" :  [[\"gr\",\"gross\"],144.0, \"prefix_only\", [\"<dozen>\",\"<dozen>\"]],\n    \"<decibel>\"  : [[\"dB\",\"decibel\",\"decibels\"], 1.0, \"logarithmic\", [\"<decibel>\"]]\n  };\n\n  var BASE_UNITS = [\"<meter>\",\"<kilogram>\",\"<second>\",\"<mole>\", \"<ampere>\",\"<radian>\",\"<kelvin>\",\"<temp-K>\",\"<byte>\",\"<dollar>\",\"<candela>\",\"<each>\",\"<steradian>\",\"<decibel>\"];\n\n  var UNITY = \"<1>\";\n  var UNITY_ARRAY = [UNITY];\n\n  // Setup\n\n  /**\n   * Asserts unit definition is valid\n   *\n   * @param {string} unitDef - Name of unit to test\n   * @param {Object} definition - Definition of unit to test\n   *\n   * @returns {void}\n   * @throws {QtyError} if unit definition is not valid\n   */\n  function validateUnitDefinition(unitDef, definition) {\n    var scalar = definition[1];\n    var numerator = definition[3] || [];\n    var denominator = definition[4] || [];\n    if (!isNumber(scalar)) {\n      throw new QtyError(unitDef + \": Invalid unit definition. \" +\n                         \"'scalar' must be a number\");\n    }\n\n    numerator.forEach(function(unit) {\n      if (UNITS[unit] === undefined) {\n        throw new QtyError(unitDef + \": Invalid unit definition. \" +\n                           \"Unit \" + unit + \" in 'numerator' is not recognized\");\n      }\n    });\n\n    denominator.forEach(function(unit) {\n      if (UNITS[unit] === undefined) {\n        throw new QtyError(unitDef + \": Invalid unit definition. \" +\n                           \"Unit \" + unit + \" in 'denominator' is not recognized\");\n      }\n    });\n  }\n\n  var PREFIX_VALUES = {};\n  var PREFIX_MAP = {};\n  var UNIT_VALUES = {};\n  var UNIT_MAP = {};\n  var OUTPUT_MAP = {};\n  for (var unitDef in UNITS) {\n    if (UNITS.hasOwnProperty(unitDef)) {\n      var definition = UNITS[unitDef];\n      if (definition[2] === \"prefix\") {\n        PREFIX_VALUES[unitDef] = definition[1];\n        for (var i = 0; i < definition[0].length; i++) {\n          PREFIX_MAP[definition[0][i]] = unitDef;\n        }\n      }\n      else {\n        validateUnitDefinition(unitDef, definition);\n        UNIT_VALUES[unitDef] = {\n          scalar: definition[1],\n          numerator: definition[3],\n          denominator: definition[4]\n        };\n        for (var j = 0; j < definition[0].length; j++) {\n          UNIT_MAP[definition[0][j]] = unitDef;\n        }\n      }\n      OUTPUT_MAP[unitDef] = definition[0][0];\n    }\n  }\n\n  /**\n   * Returns a list of available units of kind\n   *\n   * @param {string} [kind] - kind of units\n   * @returns {array} names of units\n   * @throws {QtyError} if kind is unknown\n   */\n  function getUnits(kind) {\n    var i;\n    var units = [];\n    var unitKeys = Object.keys(UNITS);\n    if (typeof kind === \"undefined\") {\n      for (i = 0; i < unitKeys.length; i++) {\n        if ([\"\", \"prefix\"].indexOf(UNITS[unitKeys[i]][2]) === -1) {\n          units.push(unitKeys[i].substr(1, unitKeys[i].length - 2));\n        }\n      }\n    }\n    else if (this.getKinds().indexOf(kind) === -1) {\n      throw new QtyError(\"Kind not recognized\");\n    }\n    else {\n      for (i = 0; i < unitKeys.length; i++) {\n        if (UNITS[unitKeys[i]][2] === kind) {\n          units.push(unitKeys[i].substr(1, unitKeys[i].length - 2));\n        }\n      }\n    }\n\n    return units.sort(function(a, b) {\n      if (a.toLowerCase() < b.toLowerCase()) {\n        return -1;\n      }\n      if (a.toLowerCase() > b.toLowerCase()) {\n        return 1;\n      }\n      return 0;\n    });\n  }\n\n  /**\n   * Returns a list of alternative names for a unit\n   *\n   * @param {string} unitName - name of unit\n   * @returns {string[]} aliases for unit\n   * @throws {QtyError} if unit is unknown\n   */\n  function getAliases(unitName) {\n    if (!UNIT_MAP[unitName]) {\n      throw new QtyError(\"Unit not recognized\");\n    }\n    return UNITS[UNIT_MAP[unitName]][0];\n  }\n\n  var SIGNATURE_VECTOR = [\"length\", \"time\", \"temperature\", \"mass\", \"current\", \"substance\", \"luminosity\", \"currency\", \"information\", \"angle\"];\n\n  /*\n  calculates the unit signature id for use in comparing compatible units and simplification\n  the signature is based on a simple classification of units and is based on the following publication\n\n  Novak, G.S., Jr. \"Conversion of units of measurement\", IEEE Transactions on Software Engineering,\n  21(8), Aug 1995, pp.651-661\n  doi://10.1109/32.403789\n  http://ieeexplore.ieee.org/Xplore/login.jsp?url=/iel1/32/9079/00403789.pdf?isnumber=9079&prod=JNL&arnumber=403789&arSt=651&ared=661&arAuthor=Novak%2C+G.S.%2C+Jr.\n  */\n  function unitSignature() {\n    if (this.signature) {\n      return this.signature;\n    }\n    var vector = unitSignatureVector.call(this);\n    for (var i = 0; i < vector.length; i++) {\n      vector[i] *= Math.pow(20, i);\n    }\n\n    return vector.reduce(\n      function(previous, current) {\n        return previous + current;\n      },\n      0\n    );\n  }\n\n  // calculates the unit signature vector used by unit_signature\n  function unitSignatureVector() {\n    if (!this.isBase()) {\n      return unitSignatureVector.call(this.toBase());\n    }\n\n    var vector = new Array(SIGNATURE_VECTOR.length);\n    for (var i = 0; i < vector.length; i++) {\n      vector[i] = 0;\n    }\n    var r, n;\n    for (var j = 0; j < this.numerator.length; j++) {\n      if ((r = UNITS[this.numerator[j]])) {\n        n = SIGNATURE_VECTOR.indexOf(r[2]);\n        if (n >= 0) {\n          vector[n] = vector[n] + 1;\n        }\n      }\n    }\n\n    for (var k = 0; k < this.denominator.length; k++) {\n      if ((r = UNITS[this.denominator[k]])) {\n        n = SIGNATURE_VECTOR.indexOf(r[2]);\n        if (n >= 0) {\n          vector[n] = vector[n] - 1;\n        }\n      }\n    }\n    return vector;\n  }\n\n  var SIGN = \"[+-]\";\n  var INTEGER = \"\\\\d+\";\n  var SIGNED_INTEGER = SIGN + \"?\" + INTEGER;\n  var FRACTION = \"\\\\.\" + INTEGER;\n  var FLOAT = \"(?:\" + INTEGER + \"(?:\" + FRACTION + \")?\" + \")\" +\n              \"|\" +\n              \"(?:\" + FRACTION + \")\";\n  var EXPONENT = \"[Ee]\" + SIGNED_INTEGER;\n  var SCI_NUMBER = \"(?:\" + FLOAT + \")(?:\" + EXPONENT + \")?\";\n  var SIGNED_NUMBER = SIGN + \"?\\\\s*\" + SCI_NUMBER;\n  var QTY_STRING = \"(\" + SIGNED_NUMBER + \")?\" + \"\\\\s*([^/]*)(?:\\/(.+))?\";\n  var QTY_STRING_REGEX = new RegExp(\"^\" + QTY_STRING + \"$\");\n\n  var POWER_OP = \"\\\\^|\\\\*{2}\";\n  // Allow unit powers representing scalar, length, area, volume; 4 is for some\n  // special case representations in SI base units.\n  var SAFE_POWER = \"[01234]\";\n  var TOP_REGEX = new RegExp (\"([^ \\\\*\\\\d]+?)(?:\" + POWER_OP + \")?(-?\" + SAFE_POWER + \"(?![a-zA-Z]))\");\n  var BOTTOM_REGEX = new RegExp(\"([^ \\\\*\\\\d]+?)(?:\" + POWER_OP + \")?(\" + SAFE_POWER + \"(?![a-zA-Z]))\");\n\n  /* parse a string into a unit object.\n   * Typical formats like :\n   * \"5.6 kg*m/s^2\"\n   * \"5.6 kg*m*s^-2\"\n   * \"5.6 kilogram*meter*second^-2\"\n   * \"2.2 kPa\"\n   * \"37 degC\"\n   * \"1\"  -- creates a unitless constant with value 1\n   * \"GPa\"  -- creates a unit with scalar 1 with units 'GPa'\n   * 6'4\"  -- recognized as 6 feet + 4 inches\n   * 8 lbs 8 oz -- recognized as 8 lbs + 8 ounces\n   */\n  function parse(val) {\n    if (!isString(val)) {\n      val = val.toString();\n    }\n    val = val.trim();\n\n    var result = QTY_STRING_REGEX.exec(val);\n    if (!result) {\n      throw new QtyError(val + \": Quantity not recognized\");\n    }\n\n    var scalarMatch = result[1];\n    if (scalarMatch) {\n      // Allow whitespaces between sign and scalar for loose parsing\n      scalarMatch = scalarMatch.replace(/\\s/g, \"\");\n      this.scalar = parseFloat(scalarMatch);\n    }\n    else {\n      this.scalar = 1;\n    }\n    var top = result[2];\n    var bottom = result[3];\n\n    var n, x, nx;\n    // TODO DRY me\n    while ((result = TOP_REGEX.exec(top))) {\n      n = parseFloat(result[2]);\n      if (isNaN(n)) {\n        // Prevents infinite loops\n        throw new QtyError(\"Unit exponent is not a number\");\n      }\n      // Disallow unrecognized unit even if exponent is 0\n      if (n === 0 && !UNIT_TEST_REGEX.test(result[1])) {\n        throw new QtyError(\"Unit not recognized\");\n      }\n      x = result[1] + \" \";\n      nx = \"\";\n      for (var i = 0; i < Math.abs(n) ; i++) {\n        nx += x;\n      }\n      if (n >= 0) {\n        top = top.replace(result[0], nx);\n      }\n      else {\n        bottom = bottom ? bottom + nx : nx;\n        top = top.replace(result[0], \"\");\n      }\n    }\n\n    while ((result = BOTTOM_REGEX.exec(bottom))) {\n      n = parseFloat(result[2]);\n      if (isNaN(n)) {\n        // Prevents infinite loops\n        throw new QtyError(\"Unit exponent is not a number\");\n      }\n      // Disallow unrecognized unit even if exponent is 0\n      if (n === 0 && !UNIT_TEST_REGEX.test(result[1])) {\n        throw new QtyError(\"Unit not recognized\");\n      }\n      x = result[1] + \" \";\n      nx = \"\";\n      for (var j = 0; j < n ; j++) {\n        nx += x;\n      }\n\n      bottom = bottom.replace(result[0], nx);\n    }\n\n    if (top) {\n      this.numerator = parseUnits(top.trim());\n    }\n    if (bottom) {\n      this.denominator = parseUnits(bottom.trim());\n    }\n  }\n\n  var PREFIX_REGEX = Object.keys(PREFIX_MAP).sort(function(a, b) {\n    return b.length - a.length;\n  }).join(\"|\");\n  var UNIT_REGEX = Object.keys(UNIT_MAP).sort(function(a, b) {\n    return b.length - a.length;\n  }).join(\"|\");\n  /*\n   * Minimal boundary regex to support units with Unicode characters\n   * \\b only works for ASCII\n   */\n  var BOUNDARY_REGEX = \"\\\\b|$\";\n  var UNIT_MATCH = \"(\" + PREFIX_REGEX + \")??(\" +\n                   UNIT_REGEX +\n                   \")(?:\" + BOUNDARY_REGEX + \")\";\n  var UNIT_TEST_REGEX = new RegExp(\"^\\\\s*(\" + UNIT_MATCH + \"[\\\\s\\\\*]*)+$\");\n  var UNIT_MATCH_REGEX = new RegExp(UNIT_MATCH, \"g\"); // g flag for multiple occurences\n  var parsedUnitsCache = {};\n  /**\n   * Parses and converts units string to normalized unit array.\n   * Result is cached to speed up next calls.\n   *\n   * @param {string} units Units string\n   * @returns {string[]} Array of normalized units\n   *\n   * @example\n   * // Returns [\"<second>\", \"<meter>\", \"<second>\"]\n   * parseUnits(\"s m s\");\n   *\n   */\n  function parseUnits(units) {\n    var cached = parsedUnitsCache[units];\n    if (cached) {\n      return cached;\n    }\n\n    var unitMatch, normalizedUnits = [];\n\n    // Scan\n    if (!UNIT_TEST_REGEX.test(units)) {\n      throw new QtyError(\"Unit not recognized\");\n    }\n\n    while ((unitMatch = UNIT_MATCH_REGEX.exec(units))) {\n      normalizedUnits.push(unitMatch.slice(1));\n    }\n\n    normalizedUnits = normalizedUnits.map(function(item) {\n      return PREFIX_MAP[item[0]] ? [PREFIX_MAP[item[0]], UNIT_MAP[item[1]]] : [UNIT_MAP[item[1]]];\n    });\n\n    // Flatten and remove null elements\n    normalizedUnits = normalizedUnits.reduce(function(a,b) {\n      return a.concat(b);\n    }, []);\n    normalizedUnits = normalizedUnits.filter(function(item) {\n      return item;\n    });\n\n    parsedUnitsCache[units] = normalizedUnits;\n\n    return normalizedUnits;\n  }\n\n  /**\n   * Parses a string as a quantity\n   * @param {string} value - quantity as text\n   * @throws if value is not a string\n   * @returns {Qty|null} Parsed quantity or null if unrecognized\n   */\n  function globalParse(value) {\n    if (!isString(value)) {\n      throw new QtyError(\"Argument should be a string\");\n    }\n\n    try {\n      return this(value);\n    }\n    catch (e) {\n      return null;\n    }\n  }\n\n  /**\n   * Tests if a value is a Qty instance\n   *\n   * @param {*} value - Value to test\n   *\n   * @returns {boolean} true if value is a Qty instance, false otherwise\n   */\n  function isQty(value) {\n    return value instanceof Qty;\n  }\n\n  function Qty(initValue, initUnits) {\n    assertValidConstructorArgs.apply(null, arguments);\n\n    if (!(isQty(this))) {\n      return new Qty(initValue, initUnits);\n    }\n\n    this.scalar = null;\n    this.baseScalar = null;\n    this.signature = null;\n    this._conversionCache = {};\n    this.numerator = UNITY_ARRAY;\n    this.denominator = UNITY_ARRAY;\n\n    if (isDefinitionObject(initValue)) {\n      this.scalar = initValue.scalar;\n      this.numerator = (initValue.numerator && initValue.numerator.length !== 0) ? initValue.numerator : UNITY_ARRAY;\n      this.denominator = (initValue.denominator && initValue.denominator.length !== 0) ? initValue.denominator : UNITY_ARRAY;\n    }\n    else if (initUnits) {\n      parse.call(this, initUnits);\n      this.scalar = initValue;\n    }\n    else {\n      parse.call(this, initValue);\n    }\n\n    // math with temperatures is very limited\n    if (this.denominator.join(\"*\").indexOf(\"temp\") >= 0) {\n      throw new QtyError(\"Cannot divide with temperatures\");\n    }\n    if (this.numerator.join(\"*\").indexOf(\"temp\") >= 0) {\n      if (this.numerator.length > 1) {\n        throw new QtyError(\"Cannot multiply by temperatures\");\n      }\n      if (!compareArray(this.denominator, UNITY_ARRAY)) {\n        throw new QtyError(\"Cannot divide with temperatures\");\n      }\n    }\n\n    this.initValue = initValue;\n    updateBaseScalar.call(this);\n\n    if (this.isTemperature() && this.baseScalar < 0) {\n      throw new QtyError(\"Temperatures must not be less than absolute zero\");\n    }\n  }\n\n  Qty.prototype = {\n    // Properly set up constructor\n    constructor: Qty,\n  };\n\n  /**\n   * Asserts constructor arguments are valid\n   *\n   * @param {*} value - Value to test\n   * @param {string} [units] - Optional units when value is passed as a number\n   *\n   * @returns {void}\n   * @throws {QtyError} if constructor arguments are invalid\n   */\n  function assertValidConstructorArgs(value, units) {\n    if (units) {\n      if (!(isNumber(value) && isString(units))) {\n        throw new QtyError(\"Only number accepted as initialization value \" +\n                           \"when units are explicitly provided\");\n      }\n    }\n    else {\n      if (!(isString(value) ||\n            isNumber(value) ||\n            isQty(value)    ||\n            isDefinitionObject(value))) {\n        throw new QtyError(\"Only string, number or quantity accepted as \" +\n                           \"single initialization value\");\n      }\n    }\n  }\n\n  /**\n   * Tests if a value is a Qty definition object\n   *\n   * @param {*} value - Value to test\n   *\n   * @returns {boolean} true if value is a definition object, false otherwise\n   */\n  function isDefinitionObject(value) {\n    return value && typeof value === \"object\" && value.hasOwnProperty(\"scalar\");\n  }\n\n  function updateBaseScalar() {\n    if (this.baseScalar) {\n      return this.baseScalar;\n    }\n    if (this.isBase()) {\n      this.baseScalar = this.scalar;\n      this.signature = unitSignature.call(this);\n    }\n    else {\n      var base = this.toBase();\n      this.baseScalar = base.scalar;\n      this.signature = base.signature;\n    }\n  }\n\n  var KINDS = {\n    \"-312078\": \"elastance\",\n    \"-312058\": \"resistance\",\n    \"-312038\": \"inductance\",\n    \"-152058\": \"potential\",\n    \"-152040\": \"magnetism\",\n    \"-152038\": \"magnetism\",\n    \"-7997\": \"specific_volume\",\n    \"-79\": \"snap\",\n    \"-59\": \"jolt\",\n    \"-39\": \"acceleration\",\n    \"-38\": \"radiation\",\n    \"-20\": \"frequency\",\n    \"-19\": \"speed\",\n    \"-18\": \"viscosity\",\n    \"-17\": \"volumetric_flow\",\n    \"-1\": \"wavenumber\",\n    \"0\": \"unitless\",\n    \"1\": \"length\",\n    \"2\": \"area\",\n    \"3\": \"volume\",\n    \"20\": \"time\",\n    \"400\": \"temperature\",\n    \"7941\": \"yank\",\n    \"7942\": \"power\",\n    \"7959\": \"pressure\",\n    \"7961\": \"force\",\n    \"7962\": \"energy\",\n    \"7979\": \"viscosity\",\n    \"7981\": \"momentum\",\n    \"7982\": \"angular_momentum\",\n    \"7997\": \"density\",\n    \"7998\": \"area_density\",\n    \"8000\": \"mass\",\n    \"152020\": \"radiation_exposure\",\n    \"159999\": \"magnetism\",\n    \"160000\": \"current\",\n    \"160020\": \"charge\",\n    \"312058\": \"conductance\",\n    \"312078\": \"capacitance\",\n    \"3199980\": \"activity\",\n    \"3199997\": \"molar_concentration\",\n    \"3200000\": \"substance\",\n    \"63999998\": \"illuminance\",\n    \"64000000\": \"luminous_power\",\n    \"1280000000\": \"currency\",\n    \"25599999980\": \"information_rate\",\n    \"25600000000\": \"information\",\n    \"511999999980\": \"angular_velocity\",\n    \"512000000000\": \"angle\"\n  };\n\n  /**\n   * Returns the list of available well-known kinds of units, e.g.\n   * \"radiation\" or \"length\".\n   *\n   * @returns {string[]} names of kinds of units\n   */\n  function getKinds() {\n    return uniq(Object.keys(KINDS).map(function(knownSignature) {\n      return KINDS[knownSignature];\n    }));\n  }\n\n  Qty.prototype.kind = function() {\n    return KINDS[this.signature.toString()];\n  };\n\n  assign(Qty.prototype, {\n    isDegrees: function() {\n      // signature may not have been calculated yet\n      return (this.signature === null || this.signature === 400) &&\n        this.numerator.length === 1 &&\n        compareArray(this.denominator, UNITY_ARRAY) &&\n        (this.numerator[0].match(/<temp-[CFRK]>/) || this.numerator[0].match(/<(kelvin|celsius|rankine|fahrenheit)>/));\n    },\n\n    isTemperature: function() {\n      return this.isDegrees() && this.numerator[0].match(/<temp-[CFRK]>/);\n    }\n  });\n\n  function subtractTemperatures(lhs,rhs) {\n    var lhsUnits = lhs.units();\n    var rhsConverted = rhs.to(lhsUnits);\n    var dstDegrees = Qty(getDegreeUnits(lhsUnits));\n    return Qty({\"scalar\": lhs.scalar - rhsConverted.scalar, \"numerator\": dstDegrees.numerator, \"denominator\": dstDegrees.denominator});\n  }\n\n  function subtractTempDegrees(temp,deg) {\n    var tempDegrees = deg.to(getDegreeUnits(temp.units()));\n    return Qty({\"scalar\": temp.scalar - tempDegrees.scalar, \"numerator\": temp.numerator, \"denominator\": temp.denominator});\n  }\n\n  function addTempDegrees(temp,deg) {\n    var tempDegrees = deg.to(getDegreeUnits(temp.units()));\n    return Qty({\"scalar\": temp.scalar + tempDegrees.scalar, \"numerator\": temp.numerator, \"denominator\": temp.denominator});\n  }\n\n  function getDegreeUnits(units) {\n    if (units === \"tempK\") {\n      return \"degK\";\n    }\n    else if (units === \"tempC\") {\n      return \"degC\";\n    }\n    else if (units === \"tempF\") {\n      return \"degF\";\n    }\n    else if (units === \"tempR\") {\n      return \"degR\";\n    }\n    else {\n      throw new QtyError(\"Unknown type for temp conversion from: \" + units);\n    }\n  }\n\n  function toDegrees(src,dst) {\n    var srcDegK = toDegK(src);\n    var dstUnits = dst.units();\n    var dstScalar;\n\n    if (dstUnits === \"degK\") {\n      dstScalar = srcDegK.scalar;\n    }\n    else if (dstUnits === \"degC\") {\n      dstScalar = srcDegK.scalar ;\n    }\n    else if (dstUnits === \"degF\") {\n      dstScalar = srcDegK.scalar * 9 / 5;\n    }\n    else if (dstUnits === \"degR\") {\n      dstScalar = srcDegK.scalar * 9 / 5;\n    }\n    else {\n      throw new QtyError(\"Unknown type for degree conversion to: \" + dstUnits);\n    }\n\n    return Qty({\"scalar\": dstScalar, \"numerator\": dst.numerator, \"denominator\": dst.denominator});\n  }\n\n  function toDegK(qty) {\n    var units = qty.units();\n    var q;\n    if (units.match(/(deg)[CFRK]/)) {\n      q = qty.baseScalar;\n    }\n    else if (units === \"tempK\") {\n      q = qty.scalar;\n    }\n    else if (units === \"tempC\") {\n      q = qty.scalar;\n    }\n    else if (units === \"tempF\") {\n      q = qty.scalar * 5 / 9;\n    }\n    else if (units === \"tempR\") {\n      q = qty.scalar * 5 / 9;\n    }\n    else {\n      throw new QtyError(\"Unknown type for temp conversion from: \" + units);\n    }\n\n    return Qty({\"scalar\": q, \"numerator\": [\"<kelvin>\"], \"denominator\": UNITY_ARRAY});\n  }\n\n  function toTemp(src,dst) {\n    var dstUnits = dst.units();\n    var dstScalar;\n\n    if (dstUnits === \"tempK\") {\n      dstScalar = src.baseScalar;\n    }\n    else if (dstUnits === \"tempC\") {\n      dstScalar = src.baseScalar - 273.15;\n    }\n    else if (dstUnits === \"tempF\") {\n      dstScalar = (src.baseScalar * 9 / 5) - 459.67;\n    }\n    else if (dstUnits === \"tempR\") {\n      dstScalar = src.baseScalar * 9 / 5;\n    }\n    else {\n      throw new QtyError(\"Unknown type for temp conversion to: \" + dstUnits);\n    }\n\n    return Qty({\"scalar\": dstScalar, \"numerator\": dst.numerator, \"denominator\": dst.denominator});\n  }\n\n  function toTempK(qty) {\n    var units = qty.units();\n    var q;\n    if (units.match(/(deg)[CFRK]/)) {\n      q = qty.baseScalar;\n    }\n    else if (units === \"tempK\") {\n      q = qty.scalar;\n    }\n    else if (units === \"tempC\") {\n      q = qty.scalar + 273.15;\n    }\n    else if (units === \"tempF\") {\n      q = (qty.scalar + 459.67) * 5 / 9;\n    }\n    else if (units === \"tempR\") {\n      q = qty.scalar * 5 / 9;\n    }\n    else {\n      throw new QtyError(\"Unknown type for temp conversion from: \" + units);\n    }\n\n    return Qty({\"scalar\": q, \"numerator\": [\"<temp-K>\"], \"denominator\": UNITY_ARRAY});\n  }\n\n  assign(Qty.prototype, {\n    /**\n     * Converts to other compatible units.\n     * Instance's converted quantities are cached for faster subsequent calls.\n     *\n     * @param {(string|Qty)} other - Target units as string or retrieved from\n     *                               other Qty instance (scalar is ignored)\n     *\n     * @returns {Qty} New converted Qty instance with target units\n     *\n     * @throws {QtyError} if target units are incompatible\n     *\n     * @example\n     * var weight = Qty(\"25 kg\");\n     * weight.to(\"lb\"); // => Qty(\"55.11556554621939 lbs\");\n     * weight.to(Qty(\"3 g\")); // => Qty(\"25000 g\"); // scalar of passed Qty is ignored\n     */\n    to: function(other) {\n      var cached, target;\n\n      if (other === undefined || other === null) {\n        return this;\n      }\n\n      if (!isString(other)) {\n        return this.to(other.units());\n      }\n\n      cached = this._conversionCache[other];\n      if (cached) {\n        return cached;\n      }\n\n      // Instantiating target to normalize units\n      target = Qty(other);\n      if (target.units() === this.units()) {\n        return this;\n      }\n\n      if (!this.isCompatible(target)) {\n        if (this.isInverse(target)) {\n          target = this.inverse().to(other);\n        }\n        else {\n          throwIncompatibleUnits(this.units(), target.units());\n        }\n      }\n      else {\n        if (target.isTemperature()) {\n          target = toTemp(this,target);\n        }\n        else if (target.isDegrees()) {\n          target = toDegrees(this,target);\n        }\n        else {\n          var q = divSafe(this.baseScalar, target.baseScalar);\n          target = Qty({\"scalar\": q, \"numerator\": target.numerator, \"denominator\": target.denominator});\n        }\n      }\n\n      this._conversionCache[other] = target;\n      return target;\n    },\n\n    // convert to base SI units\n    // results of the conversion are cached so subsequent calls to this will be fast\n    toBase: function() {\n      if (this.isBase()) {\n        return this;\n      }\n\n      if (this.isTemperature()) {\n        return toTempK(this);\n      }\n\n      var cached = baseUnitCache[this.units()];\n      if (!cached) {\n        cached = toBaseUnits(this.numerator,this.denominator);\n        baseUnitCache[this.units()] = cached;\n      }\n      return cached.mul(this.scalar);\n    },\n\n    // Converts the unit back to a float if it is unitless.  Otherwise raises an exception\n    toFloat: function() {\n      if (this.isUnitless()) {\n        return this.scalar;\n      }\n      throw new QtyError(\"Can't convert to Float unless unitless.  Use Unit#scalar\");\n    },\n\n    /**\n     * Returns the nearest multiple of quantity passed as\n     * precision\n     *\n     * @param {(Qty|string|number)} precQuantity - Quantity, string formated\n     *   quantity or number as expected precision\n     *\n     * @returns {Qty} Nearest multiple of precQuantity\n     *\n     * @example\n     * Qty('5.5 ft').toPrec('2 ft'); // returns 6 ft\n     * Qty('0.8 cu').toPrec('0.25 cu'); // returns 0.75 cu\n     * Qty('6.3782 m').toPrec('cm'); // returns 6.38 m\n     * Qty('1.146 MPa').toPrec('0.1 bar'); // returns 1.15 MPa\n     *\n     */\n    toPrec: function(precQuantity) {\n      if (isString(precQuantity)) {\n        precQuantity = Qty(precQuantity);\n      }\n      if (isNumber(precQuantity)) {\n        precQuantity = Qty(precQuantity + \" \" + this.units());\n      }\n\n      if (!this.isUnitless()) {\n        precQuantity = precQuantity.to(this.units());\n      }\n      else if (!precQuantity.isUnitless()) {\n        throwIncompatibleUnits(this.units(), precQuantity.units());\n      }\n\n      if (precQuantity.scalar === 0) {\n        throw new QtyError(\"Divide by zero\");\n      }\n\n      var precRoundedResult = mulSafe(\n        Math.round(this.scalar / precQuantity.scalar),\n        precQuantity.scalar\n      );\n\n      return Qty(precRoundedResult + this.units());\n    }\n  });\n\n  /**\n   * Configures and returns a fast function to convert\n   * Number values from units to others.\n   * Useful to efficiently convert large array of values\n   * with same units into others with iterative methods.\n   * Does not take care of rounding issues.\n   *\n   * @param {string} srcUnits Units of values to convert\n   * @param {string} dstUnits Units to convert to\n   *\n   * @returns {Function} Converting function accepting Number value\n   *   and returning converted value\n   *\n   * @throws \"Incompatible units\" if units are incompatible\n   *\n   * @example\n   * // Converting large array of numbers with the same units\n   * // into other units\n   * var converter = Qty.swiftConverter(\"m/h\", \"ft/s\");\n   * var convertedSerie = largeSerie.map(converter);\n   *\n   */\n  function swiftConverter(srcUnits, dstUnits) {\n    var srcQty = Qty(srcUnits);\n    var dstQty = Qty(dstUnits);\n\n    if (srcQty.eq(dstQty)) {\n      return identity;\n    }\n\n    var convert;\n    if (!srcQty.isTemperature()) {\n      convert = function(value) {\n        return value * srcQty.baseScalar / dstQty.baseScalar;\n      };\n    }\n    else {\n      convert = function(value) {\n        // TODO Not optimized\n        return srcQty.mul(value).to(dstQty).scalar;\n      };\n    }\n\n    return function converter(value) {\n      var i, length, result;\n      if (!Array.isArray(value)) {\n        return convert(value);\n      }\n      else {\n        length = value.length;\n        result = [];\n        for (i = 0; i < length; i++) {\n          result.push(convert(value[i]));\n        }\n        return result;\n      }\n    };\n  }\n\n  var baseUnitCache = {};\n\n  function toBaseUnits(numerator,denominator) {\n    var num = [];\n    var den = [];\n    var q = 1;\n    var unit;\n    for (var i = 0; i < numerator.length; i++) {\n      unit = numerator[i];\n      if (PREFIX_VALUES[unit]) {\n        // workaround to fix\n        // 0.1 * 0.1 => 0.010000000000000002\n        q = mulSafe(q, PREFIX_VALUES[unit]);\n      }\n      else {\n        if (UNIT_VALUES[unit]) {\n          q *= UNIT_VALUES[unit].scalar;\n\n          if (UNIT_VALUES[unit].numerator) {\n            num.push(UNIT_VALUES[unit].numerator);\n          }\n          if (UNIT_VALUES[unit].denominator) {\n            den.push(UNIT_VALUES[unit].denominator);\n          }\n        }\n      }\n    }\n    for (var j = 0; j < denominator.length; j++) {\n      unit = denominator[j];\n      if (PREFIX_VALUES[unit]) {\n        q /= PREFIX_VALUES[unit];\n      }\n      else {\n        if (UNIT_VALUES[unit]) {\n          q /= UNIT_VALUES[unit].scalar;\n\n          if (UNIT_VALUES[unit].numerator) {\n            den.push(UNIT_VALUES[unit].numerator);\n          }\n          if (UNIT_VALUES[unit].denominator) {\n            num.push(UNIT_VALUES[unit].denominator);\n          }\n        }\n      }\n    }\n\n    // Flatten\n    num = num.reduce(function(a,b) {\n      return a.concat(b);\n    }, []);\n    den = den.reduce(function(a,b) {\n      return a.concat(b);\n    }, []);\n\n    return Qty({\"scalar\": q, \"numerator\": num, \"denominator\": den});\n  }\n\n  Qty.parse = globalParse;\n\n  Qty.getUnits = getUnits;\n  Qty.getAliases = getAliases;\n\n  Qty.mulSafe = mulSafe;\n  Qty.divSafe = divSafe;\n\n  Qty.getKinds = getKinds;\n\n  Qty.swiftConverter = swiftConverter;\n\n  Qty.Error = QtyError;\n\n  assign(Qty.prototype, {\n    // Returns new instance with units of this\n    add: function(other) {\n      if (isString(other)) {\n        other = Qty(other);\n      }\n\n      if (!this.isCompatible(other)) {\n        throwIncompatibleUnits(this.units(), other.units());\n      }\n\n      if (this.isTemperature() && other.isTemperature()) {\n        throw new QtyError(\"Cannot add two temperatures\");\n      }\n      else if (this.isTemperature()) {\n        return addTempDegrees(this, other);\n      }\n      else if (other.isTemperature()) {\n        return addTempDegrees(other, this);\n      }\n\n      return Qty({\"scalar\": this.scalar + other.to(this).scalar, \"numerator\": this.numerator, \"denominator\": this.denominator});\n    },\n\n    sub: function(other) {\n      if (isString(other)) {\n        other = Qty(other);\n      }\n\n      if (!this.isCompatible(other)) {\n        throwIncompatibleUnits(this.units(), other.units());\n      }\n\n      if (this.isTemperature() && other.isTemperature()) {\n        return subtractTemperatures(this,other);\n      }\n      else if (this.isTemperature()) {\n        return subtractTempDegrees(this,other);\n      }\n      else if (other.isTemperature()) {\n        throw new QtyError(\"Cannot subtract a temperature from a differential degree unit\");\n      }\n\n      return Qty({\"scalar\": this.scalar - other.to(this).scalar, \"numerator\": this.numerator, \"denominator\": this.denominator});\n    },\n\n    mul: function(other) {\n      if (isNumber(other)) {\n        return Qty({\"scalar\": mulSafe(this.scalar, other), \"numerator\": this.numerator, \"denominator\": this.denominator});\n      }\n      else if (isString(other)) {\n        other = Qty(other);\n      }\n\n      if ((this.isTemperature() || other.isTemperature()) && !(this.isUnitless() || other.isUnitless())) {\n        throw new QtyError(\"Cannot multiply by temperatures\");\n      }\n\n      // Quantities should be multiplied with same units if compatible, with base units else\n      var op1 = this;\n      var op2 = other;\n\n      // so as not to confuse results, multiplication and division between temperature degrees will maintain original unit info in num/den\n      // multiplication and division between deg[CFRK] can never factor each other out, only themselves: \"degK*degC/degC^2\" == \"degK/degC\"\n      if (op1.isCompatible(op2) && op1.signature !== 400) {\n        op2 = op2.to(op1);\n      }\n      var numdenscale = cleanTerms(op1.numerator, op1.denominator, op2.numerator, op2.denominator);\n\n      return Qty({\"scalar\": mulSafe(op1.scalar, op2.scalar, numdenscale[2]), \"numerator\": numdenscale[0], \"denominator\": numdenscale[1]});\n    },\n\n    div: function(other) {\n      if (isNumber(other)) {\n        if (other === 0) {\n          throw new QtyError(\"Divide by zero\");\n        }\n        return Qty({\"scalar\": this.scalar / other, \"numerator\": this.numerator, \"denominator\": this.denominator});\n      }\n      else if (isString(other)) {\n        other = Qty(other);\n      }\n\n      if (other.scalar === 0) {\n        throw new QtyError(\"Divide by zero\");\n      }\n\n      if (other.isTemperature()) {\n        throw new QtyError(\"Cannot divide with temperatures\");\n      }\n      else if (this.isTemperature() && !other.isUnitless()) {\n        throw new QtyError(\"Cannot divide with temperatures\");\n      }\n\n      // Quantities should be multiplied with same units if compatible, with base units else\n      var op1 = this;\n      var op2 = other;\n\n      // so as not to confuse results, multiplication and division between temperature degrees will maintain original unit info in num/den\n      // multiplication and division between deg[CFRK] can never factor each other out, only themselves: \"degK*degC/degC^2\" == \"degK/degC\"\n      if (op1.isCompatible(op2) && op1.signature !== 400) {\n        op2 = op2.to(op1);\n      }\n      var numdenscale = cleanTerms(op1.numerator, op1.denominator, op2.denominator, op2.numerator);\n\n      return Qty({\"scalar\": mulSafe(op1.scalar, numdenscale[2]) / op2.scalar, \"numerator\": numdenscale[0], \"denominator\": numdenscale[1]});\n    },\n\n    // Returns a Qty that is the inverse of this Qty,\n    inverse: function() {\n      if (this.isTemperature()) {\n        throw new QtyError(\"Cannot divide with temperatures\");\n      }\n      if (this.scalar === 0) {\n        throw new QtyError(\"Divide by zero\");\n      }\n      return Qty({\"scalar\": 1 / this.scalar, \"numerator\": this.denominator, \"denominator\": this.numerator});\n    }\n  });\n\n  function cleanTerms(num1, den1, num2, den2) {\n    function notUnity(val) {\n      return val !== UNITY;\n    }\n\n    num1 = num1.filter(notUnity);\n    num2 = num2.filter(notUnity);\n    den1 = den1.filter(notUnity);\n    den2 = den2.filter(notUnity);\n\n    var combined = {};\n\n    function combineTerms(terms, direction) {\n      var k;\n      var prefix;\n      var prefixValue;\n      for (var i = 0; i < terms.length; i++) {\n        if (PREFIX_VALUES[terms[i]]) {\n          k = terms[i + 1];\n          prefix = terms[i];\n          prefixValue = PREFIX_VALUES[prefix];\n          i++;\n        }\n        else {\n          k = terms[i];\n          prefix = null;\n          prefixValue = 1;\n        }\n        if (k && k !== UNITY) {\n          if (combined[k]) {\n            combined[k][0] += direction;\n            var combinedPrefixValue = combined[k][2] ? PREFIX_VALUES[combined[k][2]] : 1;\n            combined[k][direction === 1 ? 3 : 4] *= divSafe(prefixValue, combinedPrefixValue);\n          }\n          else {\n            combined[k] = [direction, k, prefix, 1, 1];\n          }\n        }\n      }\n    }\n\n    combineTerms(num1, 1);\n    combineTerms(den1, -1);\n    combineTerms(num2, 1);\n    combineTerms(den2, -1);\n\n    var num = [];\n    var den = [];\n    var scale = 1;\n\n    for (var prop in combined) {\n      if (combined.hasOwnProperty(prop)) {\n        var item = combined[prop];\n        var n;\n        if (item[0] > 0) {\n          for (n = 0; n < item[0]; n++) {\n            num.push(item[2] === null ? item[1] : [item[2], item[1]]);\n          }\n        }\n        else if (item[0] < 0) {\n          for (n = 0; n < -item[0]; n++) {\n            den.push(item[2] === null ? item[1] : [item[2], item[1]]);\n          }\n        }\n        scale *= divSafe(item[3], item[4]);\n      }\n    }\n\n    if (num.length === 0) {\n      num = UNITY_ARRAY;\n    }\n    if (den.length === 0) {\n      den = UNITY_ARRAY;\n    }\n\n    // Flatten\n    num = num.reduce(function(a,b) {\n      return a.concat(b);\n    }, []);\n    den = den.reduce(function(a,b) {\n      return a.concat(b);\n    }, []);\n\n    return [num, den, scale];\n  }\n\n  assign(Qty.prototype, {\n    eq: function(other) {\n      return this.compareTo(other) === 0;\n    },\n\n    lt: function(other) {\n      return this.compareTo(other) === -1;\n    },\n\n    lte: function(other) {\n      return this.eq(other) || this.lt(other);\n    },\n\n    gt: function(other) {\n      return this.compareTo(other) === 1;\n    },\n\n    gte: function(other) {\n      return this.eq(other) || this.gt(other);\n    },\n\n    // Compare two Qty objects. Throws an exception if they are not of compatible types.\n    // Comparisons are done based on the value of the quantity in base SI units.\n    //\n    // NOTE: We cannot compare inverses as that breaks the general compareTo contract:\n    //   if a.compareTo(b) < 0 then b.compareTo(a) > 0\n    //   if a.compareTo(b) == 0 then b.compareTo(a) == 0\n    //\n    //   Since \"10S\" == \".1ohm\" (10 > .1) and \"10ohm\" == \".1S\" (10 > .1)\n    //     Qty(\"10S\").inverse().compareTo(\"10ohm\") == -1\n    //     Qty(\"10ohm\").inverse().compareTo(\"10S\") == -1\n    //\n    //   If including inverses in the sort is needed, I suggest writing: Qty.sort(qtyArray,units)\n    compareTo: function(other) {\n      if (isString(other)) {\n        return this.compareTo(Qty(other));\n      }\n      if (!this.isCompatible(other)) {\n        throwIncompatibleUnits(this.units(), other.units());\n      }\n      if (this.baseScalar < other.baseScalar) {\n        return -1;\n      }\n      else if (this.baseScalar === other.baseScalar) {\n        return 0;\n      }\n      else if (this.baseScalar > other.baseScalar) {\n        return 1;\n      }\n    },\n\n    // Return true if quantities and units match\n    // Unit(\"100 cm\").same(Unit(\"100 cm\"))  # => true\n    // Unit(\"100 cm\").same(Unit(\"1 m\"))     # => false\n    same: function(other) {\n      return (this.scalar === other.scalar) && (this.units() === other.units());\n    }\n  });\n\n  assign(Qty.prototype, {\n    // returns true if no associated units\n    // false, even if the units are \"unitless\" like 'radians, each, etc'\n    isUnitless: function() {\n      return [this.numerator, this.denominator].every(function(item) {\n        return compareArray(item, UNITY_ARRAY);\n      });\n    },\n\n    /*\n    check to see if units are compatible, but not the scalar part\n    this check is done by comparing signatures for performance reasons\n    if passed a string, it will create a unit object with the string and then do the comparison\n    this permits a syntax like:\n    unit =~ \"mm\"\n    if you want to do a regexp on the unit string do this ...\n    unit.units =~ /regexp/\n    */\n    isCompatible: function(other) {\n      if (isString(other)) {\n        return this.isCompatible(Qty(other));\n      }\n\n      if (!(isQty(other))) {\n        return false;\n      }\n\n      if (other.signature !== undefined) {\n        return this.signature === other.signature;\n      }\n      else {\n        return false;\n      }\n    },\n\n    /*\n    check to see if units are inverse of each other, but not the scalar part\n    this check is done by comparing signatures for performance reasons\n    if passed a string, it will create a unit object with the string and then do the comparison\n    this permits a syntax like:\n    unit =~ \"mm\"\n    if you want to do a regexp on the unit string do this ...\n    unit.units =~ /regexp/\n    */\n    isInverse: function(other) {\n      return this.inverse().isCompatible(other);\n    },\n\n    // Returns 'true' if the Unit is represented in base units\n    isBase: function() {\n      if (this._isBase !== undefined) {\n        return this._isBase;\n      }\n      if (this.isDegrees() && this.numerator[0].match(/<(kelvin|temp-K)>/)) {\n        this._isBase = true;\n        return this._isBase;\n      }\n\n      this.numerator.concat(this.denominator).forEach(function(item) {\n        if (item !== UNITY && BASE_UNITS.indexOf(item) === -1 ) {\n          this._isBase = false;\n        }\n      }, this);\n      if (this._isBase === false) {\n        return this._isBase;\n      }\n      this._isBase = true;\n      return this._isBase;\n    }\n  });\n\n  function NestedMap() {}\n\n  NestedMap.prototype.get = function(keys) {\n\n    // Allows to pass key1, key2, ... instead of [key1, key2, ...]\n    if (arguments.length > 1) {\n      // Slower with Firefox but faster with Chrome than\n      // Array.prototype.slice.call(arguments)\n      // See http://jsperf.com/array-apply-versus-array-prototype-slice-call\n      keys = Array.apply(null, arguments);\n    }\n\n    return keys.reduce(function(map, key, index) {\n      if (map) {\n\n        var childMap = map[key];\n\n        if (index === keys.length - 1) {\n          return childMap ? childMap.data : undefined;\n        }\n        else {\n          return childMap;\n        }\n      }\n    },\n    this);\n  };\n\n  NestedMap.prototype.set = function(keys, value) {\n\n    if (arguments.length > 2) {\n      keys = Array.prototype.slice.call(arguments, 0, -1);\n      value = arguments[arguments.length - 1];\n    }\n\n    return keys.reduce(function(map, key, index) {\n\n      var childMap = map[key];\n      if (childMap === undefined) {\n        childMap = map[key] = {};\n      }\n\n      if (index === keys.length - 1) {\n        childMap.data = value;\n        return value;\n      }\n      else {\n        return childMap;\n      }\n    }, this);\n  };\n\n  /**\n   * Default formatter\n   *\n   * @param {number} scalar - scalar value\n   * @param {string} units - units as string\n   *\n   * @returns {string} formatted result\n   */\n  function defaultFormatter(scalar, units) {\n    return (scalar + \" \" + units).trim();\n  }\n\n  /**\n   *\n   * Configurable Qty default formatter\n   *\n   * @type {function}\n   *\n   * @param {number} scalar\n   * @param {string} units\n   *\n   * @returns {string} formatted result\n   */\n  Qty.formatter = defaultFormatter;\n\n  assign(Qty.prototype, {\n\n    // returns the 'unit' part of the Unit object without the scalar\n    units: function() {\n      if (this._units !== undefined) {\n        return this._units;\n      }\n\n      var numIsUnity = compareArray(this.numerator, UNITY_ARRAY);\n      var denIsUnity = compareArray(this.denominator, UNITY_ARRAY);\n      if (numIsUnity && denIsUnity) {\n        this._units = \"\";\n        return this._units;\n      }\n\n      var numUnits = stringifyUnits(this.numerator);\n      var denUnits = stringifyUnits(this.denominator);\n      this._units = numUnits + (denIsUnity ? \"\" : (\"/\" + denUnits));\n      return this._units;\n    },\n\n    /**\n     * Stringifies the quantity\n     * Deprecation notice: only units parameter is supported.\n     *\n     * @param {(number|string|Qty)} targetUnitsOrMaxDecimalsOrPrec -\n     *                              target units if string,\n     *                              max number of decimals if number,\n     *                              passed to #toPrec before converting if Qty\n     *\n     * @param {number=} maxDecimals - Maximum number of decimals of\n     *                                formatted output\n     *\n     * @returns {string} reparseable quantity as string\n     */\n    toString: function(targetUnitsOrMaxDecimalsOrPrec, maxDecimals) {\n      var targetUnits;\n      if (isNumber(targetUnitsOrMaxDecimalsOrPrec)) {\n        targetUnits = this.units();\n        maxDecimals = targetUnitsOrMaxDecimalsOrPrec;\n      }\n      else if (isString(targetUnitsOrMaxDecimalsOrPrec)) {\n        targetUnits = targetUnitsOrMaxDecimalsOrPrec;\n      }\n      else if (isQty(targetUnitsOrMaxDecimalsOrPrec)) {\n        return this.toPrec(targetUnitsOrMaxDecimalsOrPrec).toString(maxDecimals);\n      }\n\n      var out = this.to(targetUnits);\n\n      var outScalar = maxDecimals !== undefined ? round(out.scalar, maxDecimals) : out.scalar;\n      out = (outScalar + \" \" + out.units()).trim();\n      return out;\n    },\n\n    /**\n     * Format the quantity according to optional passed target units\n     * and formatter\n     *\n     * @param {string} [targetUnits=current units] -\n     *                 optional units to convert to before formatting\n     *\n     * @param {function} [formatter=Qty.formatter] -\n     *                   delegates formatting to formatter callback.\n     *                   formatter is called back with two parameters (scalar, units)\n     *                   and should return formatted result.\n     *                   If unspecified, formatting is delegated to default formatter\n     *                   set to Qty.formatter\n     *\n     * @example\n     * var roundingAndLocalizingFormatter = function(scalar, units) {\n     *   // localize or limit scalar to n max decimals for instance\n     *   // return formatted result\n     * };\n     * var qty = Qty('1.1234 m');\n     * qty.format(); // same units, default formatter => \"1.234 m\"\n     * qty.format(\"cm\"); // converted to \"cm\", default formatter => \"123.45 cm\"\n     * qty.format(roundingAndLocalizingFormatter); // same units, custom formatter => \"1,2 m\"\n     * qty.format(\"cm\", roundingAndLocalizingFormatter); // convert to \"cm\", custom formatter => \"123,4 cm\"\n     *\n     * @returns {string} quantity as string\n     */\n    format: function(targetUnits, formatter) {\n      if (arguments.length === 1) {\n        if (typeof targetUnits === \"function\") {\n          formatter = targetUnits;\n          targetUnits = undefined;\n        }\n      }\n\n      formatter = formatter || Qty.formatter;\n      var targetQty = this.to(targetUnits);\n      return formatter.call(this, targetQty.scalar, targetQty.units());\n    }\n  });\n\n  var stringifiedUnitsCache = new NestedMap();\n  /**\n   * Returns a string representing a normalized unit array\n   *\n   * @param {string[]} units Normalized unit array\n   * @returns {string} String representing passed normalized unit array and\n   *   suitable for output\n   *\n   */\n  function stringifyUnits(units) {\n\n    var stringified = stringifiedUnitsCache.get(units);\n    if (stringified) {\n      return stringified;\n    }\n\n    var isUnity = compareArray(units, UNITY_ARRAY);\n    if (isUnity) {\n      stringified = \"1\";\n    }\n    else {\n      stringified = simplify(getOutputNames(units)).join(\"*\");\n    }\n\n    // Cache result\n    stringifiedUnitsCache.set(units, stringified);\n\n    return stringified;\n  }\n\n  function getOutputNames(units) {\n    var unitNames = [], token, tokenNext;\n    for (var i = 0; i < units.length; i++) {\n      token = units[i];\n      tokenNext = units[i + 1];\n      if (PREFIX_VALUES[token]) {\n        unitNames.push(OUTPUT_MAP[token] + OUTPUT_MAP[tokenNext]);\n        i++;\n      }\n      else {\n        unitNames.push(OUTPUT_MAP[token]);\n      }\n    }\n    return unitNames;\n  }\n\n  function simplify(units) {\n    // this turns ['s','m','s'] into ['s2','m']\n\n    var unitCounts = units.reduce(function(acc, unit) {\n      var unitCounter = acc[unit];\n      if (!unitCounter) {\n        acc.push(unitCounter = acc[unit] = [unit, 0]);\n      }\n\n      unitCounter[1]++;\n\n      return acc;\n    }, []);\n\n    return unitCounts.map(function(unitCount) {\n      return unitCount[0] + (unitCount[1] > 1 ? unitCount[1] : \"\");\n    });\n  }\n\n  Qty.version = \"1.7.6\";\n\n  return Qty;\n\n})));\n","import Qty from 'js-quantities';\nexport function convertUnit(array, fromUnit, toUnit) {\n    fromUnit = normalize(fromUnit);\n    toUnit = normalize(toUnit);\n    if (fromUnit === toUnit)\n        return array;\n    try {\n        const convert = Qty.swiftConverter(fromUnit, toUnit); // Configures converter\n        return convert(array);\n    }\n    catch (e) {\n        return undefined;\n    }\n}\nfunction normalize(unit) {\n    unit = unit.replace(/°C/g, 'tempC');\n    unit = unit.replace(/°F/g, 'tempF');\n    unit = unit.replace(/(^|\\W)K(\\W|$)/g, '$1tempK$2');\n    return unit;\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29udmVydFVuaXQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvdXRpbC9jb252ZXJ0VW5pdC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEdBQUcsTUFBTSxlQUFlLENBQUM7QUFjaEMsTUFBTSxVQUFVLFdBQVcsQ0FDekIsS0FBVSxFQUNWLFFBQWdCLEVBQ2hCLE1BQWM7SUFFZCxRQUFRLEdBQUcsU0FBUyxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQy9CLE1BQU0sR0FBRyxTQUFTLENBQUMsTUFBTSxDQUFDLENBQUM7SUFFM0IsSUFBSSxRQUFRLEtBQUssTUFBTTtRQUFFLE9BQU8sS0FBSyxDQUFDO0lBRXRDLElBQUk7UUFDRixNQUFNLE9BQU8sR0FBRyxHQUFHLENBQUMsY0FBYyxDQUFDLFFBQVEsRUFBRSxNQUFNLENBQUMsQ0FBQyxDQUFDLHVCQUF1QjtRQUM3RSxPQUFPLE9BQU8sQ0FBQyxLQUFLLENBQUMsQ0FBQztLQUN2QjtJQUFDLE9BQU8sQ0FBQyxFQUFFO1FBQ1YsT0FBTyxTQUFTLENBQUM7S0FDbEI7QUFDSCxDQUFDO0FBRUQsU0FBUyxTQUFTLENBQUMsSUFBWTtJQUM3QixJQUFJLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxLQUFLLEVBQUUsT0FBTyxDQUFDLENBQUM7SUFDcEMsSUFBSSxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsS0FBSyxFQUFFLE9BQU8sQ0FBQyxDQUFDO0lBQ3BDLElBQUksR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLGdCQUFnQixFQUFFLFdBQVcsQ0FBQyxDQUFDO0lBQ25ELE9BQU8sSUFBSSxDQUFDO0FBQ2QsQ0FBQyJ9","const testRegExp = /^\\/((?:\\\\\\/|[^/])+)\\/([migyu]{0,5})?$/;\nexport function ensureRegexp(string) {\n    const parts = testRegExp.exec(string);\n    if (parts) {\n        try {\n            return new RegExp(parts[1], parts[2]);\n        }\n        catch (err) {\n            return stringToRegexp(string);\n        }\n    }\n    else {\n        return stringToRegexp(string);\n    }\n}\nfunction stringToRegexp(string, flags = 'i') {\n    return new RegExp(string.replace(/[[\\]\\\\{}()+*?.$^|]/g, function (match) {\n        return `\\\\${match}`;\n    }), flags);\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZW5zdXJlUmVnZXhwLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL3V0aWwvZW5zdXJlUmVnZXhwLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE1BQU0sVUFBVSxHQUFHLHVDQUF1QyxDQUFDO0FBRTNELE1BQU0sVUFBVSxZQUFZLENBQUMsTUFBVztJQUN0QyxNQUFNLEtBQUssR0FBRyxVQUFVLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQ3RDLElBQUksS0FBSyxFQUFFO1FBQ1QsSUFBSTtZQUNGLE9BQU8sSUFBSSxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxFQUFFLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1NBQ3ZDO1FBQUMsT0FBTyxHQUFHLEVBQUU7WUFDWixPQUFPLGNBQWMsQ0FBQyxNQUFNLENBQUMsQ0FBQztTQUMvQjtLQUNGO1NBQU07UUFDTCxPQUFPLGNBQWMsQ0FBQyxNQUFNLENBQUMsQ0FBQztLQUMvQjtBQUNILENBQUM7QUFFRCxTQUFTLGNBQWMsQ0FBQyxNQUFXLEVBQUUsS0FBSyxHQUFHLEdBQUc7SUFDOUMsT0FBTyxJQUFJLE1BQU0sQ0FDZixNQUFNLENBQUMsT0FBTyxDQUFDLHFCQUFxQixFQUFFLFVBQVUsS0FBYTtRQUMzRCxPQUFPLEtBQUssS0FBSyxFQUFFLENBQUM7SUFDdEIsQ0FBQyxDQUFDLEVBQ0YsS0FBSyxDQUNOLENBQUM7QUFDSixDQUFDIn0=","import max from 'ml-array-max';\nimport min from 'ml-array-min';\nimport { xIsMonotone } from 'ml-spectra-processing';\nimport { convertUnit } from './convertUnit';\nexport function getConvertedVariable(variable, newUnits) {\n    const data = variable.units !== undefined && variable.units !== newUnits // would be nice if convertUnit would allow typedArray\n        ? convertUnit(Array.from(variable.data), variable.units, newUnits)\n        : variable.data;\n    return {\n        units: newUnits,\n        label: variable.label.replace(`[${variable.units || ''}]`, `[${newUnits}]`),\n        data: data || [],\n        min: data ? min(data) : undefined,\n        max: data ? max(data) : undefined,\n        isMonotone: xIsMonotone(data),\n    };\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2V0Q29udmVydGVkVmFyaWFibGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvdXRpbC9nZXRDb252ZXJ0ZWRWYXJpYWJsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEdBQUcsTUFBTSxjQUFjLENBQUM7QUFDL0IsT0FBTyxHQUFHLE1BQU0sY0FBYyxDQUFDO0FBQy9CLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUlwRCxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRTVDLE1BQU0sVUFBVSxvQkFBb0IsQ0FDbEMsUUFBc0IsRUFDdEIsUUFBZ0I7SUFFaEIsTUFBTSxJQUFJLEdBQ1IsUUFBUSxDQUFDLEtBQUssS0FBSyxTQUFTLElBQUksUUFBUSxDQUFDLEtBQUssS0FBSyxRQUFRLENBQUMsc0RBQXNEO1FBQ2hILENBQUMsQ0FBQyxXQUFXLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLEVBQUUsUUFBUSxDQUFDLEtBQUssRUFBRSxRQUFRLENBQUM7UUFDbEUsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUM7SUFDcEIsT0FBTztRQUNMLEtBQUssRUFBRSxRQUFRO1FBQ2YsS0FBSyxFQUFFLFFBQVEsQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLElBQUksUUFBUSxDQUFDLEtBQUssSUFBSSxFQUFFLEdBQUcsRUFBRSxJQUFJLFFBQVEsR0FBRyxDQUFDO1FBQzNFLElBQUksRUFBRSxJQUFJLElBQUksRUFBRTtRQUNoQixHQUFHLEVBQUUsSUFBSSxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLFNBQVM7UUFDakMsR0FBRyxFQUFFLElBQUksQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxTQUFTO1FBQ2pDLFVBQVUsRUFBRSxXQUFXLENBQUMsSUFBSSxDQUFDO0tBQzlCLENBQUM7QUFDSixDQUFDIn0=","import { convertUnit } from './convertUnit';\nimport { ensureRegexp } from './ensureRegexp';\nimport { getConvertedVariable } from './getConvertedVariable';\n/**\n * Retrieve the spectrum with only X/Y data that match all the selectors\n * If more than one variable match the selector the 'x' or 'y' variable will be\n * taken\n */\nexport function getXYSpectrum(spectra = [], selector = {}) {\n    if (spectra.length < 1)\n        return;\n    for (let spectrum of spectra) {\n        let variableNames = Object.keys(spectrum.variables);\n        if (!(variableNames.length > 1))\n            continue;\n        let { dataType, title, xUnits, yUnits, variables, xVariable = 'x', yVariable = 'y', units, labels, xLabel, yLabel, meta, } = selector;\n        // we filter on general spectrum information\n        if (dataType) {\n            dataType = ensureRegexp(dataType);\n            if (!spectrum.dataType || !spectrum.dataType.match(dataType))\n                continue;\n        }\n        if (title) {\n            title = ensureRegexp(title);\n            if (!spectrum.title || !spectrum.title.match(title))\n                continue;\n        }\n        if (meta && typeof meta === 'object') {\n            if (!spectrum.meta)\n                continue;\n            for (let key in spectrum.meta) {\n                if (!spectrum.meta[key])\n                    continue;\n                let value = ensureRegexp(spectrum.meta[key]);\n                if (!spectrum.meta[key].match(value))\n                    continue;\n            }\n        }\n        if (units && !xUnits && !yUnits)\n            [yUnits, xUnits] = units.split(/\\s*vs\\s*/);\n        if (labels && !xLabel && !yLabel) {\n            [yLabel, xLabel] = labels.split(/\\s*vs\\s*/);\n        }\n        if (variables)\n            [yVariable, xVariable] = variables.split(/\\s*vs\\s*/);\n        if (xLabel)\n            xLabel = ensureRegexp(xLabel);\n        if (yLabel)\n            yLabel = ensureRegexp(yLabel);\n        let x = getPossibleVariable(spectrum.variables, {\n            units: xUnits,\n            label: xLabel,\n            variableName: xVariable,\n        });\n        let y = getPossibleVariable(spectrum.variables, {\n            units: yUnits,\n            label: yLabel,\n            variableName: yVariable,\n        });\n        if (x && y) {\n            return {\n                title: spectrum.title,\n                dataType: spectrum.dataType,\n                meta: spectrum.meta,\n                variables: { x, y },\n            };\n        }\n    }\n    return;\n}\nfunction getPossibleVariable(variables, selector = {}) {\n    const { units, label, variableName } = selector;\n    let possible = { ...variables };\n    if (units !== undefined) {\n        for (let key in possible) {\n            let converted = convertUnit(1, variables[key].units || '', units);\n            if (converted) {\n                possible[key] = getConvertedVariable(variables[key], units);\n            }\n            else {\n                possible[key] = undefined;\n            }\n        }\n    }\n    if (label !== undefined) {\n        for (let key in possible) {\n            if (!variables[key].label.match(label)) {\n                possible[key] = undefined;\n            }\n        }\n    }\n    if (variableName !== undefined) {\n        if (possible[variableName])\n            return possible[variableName];\n        if (possible[variableName.toUpperCase()]) {\n            return possible[variableName.toUpperCase()];\n        }\n        if (possible[variableName.toLowerCase()]) {\n            return possible[variableName.toLowerCase()];\n        }\n    }\n    const possibleFiltered = Object.values(possible).filter((val) => val !== undefined);\n    if (possibleFiltered.length > 0) {\n        return possibleFiltered[0];\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2V0WFlTcGVjdHJ1bS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy91dGlsL2dldFhZU3BlY3RydW0udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBR0EsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUM1QyxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFDOUMsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFFOUQ7Ozs7R0FJRztBQUNILE1BQU0sVUFBVSxhQUFhLENBQzNCLFVBQStCLEVBQUUsRUFDakMsV0FBeUIsRUFBRTtJQUUzQixJQUFJLE9BQU8sQ0FBQyxNQUFNLEdBQUcsQ0FBQztRQUFFLE9BQU87SUFFL0IsS0FBSyxJQUFJLFFBQVEsSUFBSSxPQUFPLEVBQUU7UUFDNUIsSUFBSSxhQUFhLEdBQUcsTUFBTSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsU0FBUyxDQUFDLENBQUM7UUFDcEQsSUFBSSxDQUFDLENBQUMsYUFBYSxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUM7WUFBRSxTQUFTO1FBQzFDLElBQUksRUFDRixRQUFRLEVBQ1IsS0FBSyxFQUNMLE1BQU0sRUFDTixNQUFNLEVBQ04sU0FBUyxFQUNULFNBQVMsR0FBRyxHQUFHLEVBQ2YsU0FBUyxHQUFHLEdBQUcsRUFDZixLQUFLLEVBQ0wsTUFBTSxFQUNOLE1BQU0sRUFDTixNQUFNLEVBQ04sSUFBSSxHQUNMLEdBQUcsUUFBUSxDQUFDO1FBRWIsNENBQTRDO1FBQzVDLElBQUksUUFBUSxFQUFFO1lBQ1osUUFBUSxHQUFHLFlBQVksQ0FBQyxRQUFRLENBQUMsQ0FBQztZQUNsQyxJQUFJLENBQUMsUUFBUSxDQUFDLFFBQVEsSUFBSSxDQUFDLFFBQVEsQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLFFBQVEsQ0FBQztnQkFBRSxTQUFTO1NBQ3hFO1FBRUQsSUFBSSxLQUFLLEVBQUU7WUFDVCxLQUFL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","import isAnyArray from 'is-any-array';\nimport max from 'ml-array-max';\nimport min from 'ml-array-min';\nimport { xIsMonotone } from 'ml-spectra-processing';\nimport { getNormalizedSpectrum } from './util/getNormalizedSpectrum';\nimport { getXYSpectrum } from './util/getXYSpectrum';\n/**\n * Class allowing to store and manipulate an analysis.\n * An analysis may contain one or more spectra that can be selected\n * based on their units\n */\nexport class Analysis {\n    constructor(options = {}) {\n        this.id = options.id || Math.random().toString(36).substring(2, 10);\n        this.label = options.label || this.id;\n        this.spectrumCallback = options.spectrumCallback;\n        this.spectra = [];\n        this.cache = {};\n    }\n    /**\n     * Add a spectrum in the internal spectra variable\n     */\n    pushSpectrum(variables, options = {}) {\n        this.spectra.push(standardizeData(variables, options, {\n            spectrumCallback: this.spectrumCallback,\n        }));\n        this.cache = {};\n    }\n    /**\n     * Retrieve a Spectrum based on x/y units\n     * @param selector.units Units separated by vs like for example \"g vs °C\"\n     * @param selector.xUnits if undefined takes the first variable\n     * @param selector.yUnits if undefined takes the second variable\n     */\n    getXYSpectrum(selector = {}) {\n        let id = JSON.stringify(selector);\n        if (!this.cache[id]) {\n            this.cache[id] = getXYSpectrum(this.spectra, selector);\n        }\n        return this.cache[id];\n    }\n    /**\n     * Retrieve a xy object\n     * @param selector.units Units separated by vs like for example \"g vs °C\"\n     * @param selector.xUnits if undefined takes the first variable\n     * @param selector.yUnits if undefined takes the second variable\n     */\n    getXY(selector = {}) {\n        let spectrum = this.getXYSpectrum(selector);\n        if (!spectrum)\n            return undefined;\n        return {\n            x: spectrum.variables.x.data,\n            y: spectrum.variables.y.data,\n        };\n    }\n    /**\n     * Return the data object for specific x/y units with possibly some\n     * normalization options\n     * @param options.selector.xUnits // if undefined takes the first variable\n     * @param options.selector.yUnits // if undefined takes the second variable\n     */\n    getNormalizedSpectrum(options = {}) {\n        const { normalization, selector } = options;\n        const spectrum = this.getXYSpectrum(selector);\n        if (!spectrum)\n            return undefined;\n        return getNormalizedSpectrum(spectrum, normalization);\n    }\n    /**\n     * Returns the first spectrum. This method could be improved in the future\n     * @returns\n     */\n    getSpectrum() {\n        return this.spectra[0];\n    }\n    /**\n     * Returns the xLabel\n     * @param selector.xUnits // if undefined takes the first variable\n     * @param selector.yUnits // if undefined takes the second variable\n     */\n    getXLabel(selector) {\n        var _a;\n        return (_a = this.getXYSpectrum(selector)) === null || _a === void 0 ? void 0 : _a.variables.x.label;\n    }\n    /**\n     * Returns the yLabel\n     * @param selector.xUnits // if undefined takes the first variable\n     * @param selector.yUnits // if undefined takes the second variable\n     */\n    getYLabel(selector) {\n        var _a;\n        return (_a = this.getXYSpectrum(selector)) === null || _a === void 0 ? void 0 : _a.variables.y.label;\n    }\n}\n/**\n * Internal function that ensure the order of x / y array\n */\nfunction standardizeData(variables, options, analysisOptions) {\n    let { meta = {}, tmp = {}, dataType = '', title = '' } = options;\n    const { spectrumCallback } = analysisOptions;\n    if (spectrumCallback) {\n        spectrumCallback(variables);\n    }\n    let xVariable = variables.x;\n    let yVariable = variables.y;\n    if (!xVariable || !yVariable) {\n        throw Error('A spectrum must contain at least x and y variables');\n    }\n    if (!isAnyArray(xVariable.data) || !isAnyArray(yVariable.data)) {\n        throw Error('x and y variables must contain an array data');\n    }\n    let x = xVariable.data;\n    let reverse = x && x.length > 1 && x[0] > x[x.length - 1];\n    for (let key in variables) {\n        let variable = variables[key];\n        if (reverse)\n            variable.data = variable.data.reverse();\n        variable.label = variable.label || key;\n        variable.units =\n            variable.units ||\n                variable.label.replace(/^.*[([](?<units>.*)[)\\]].*$/, '$<units>');\n        variable.min = min(variable.data);\n        variable.max = max(variable.data);\n        variable.isMonotone = xIsMonotone(variable.data);\n    }\n    return {\n        variables,\n        title,\n        dataType,\n        meta,\n        tmp,\n    };\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQW5hbHlzaXMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvQW5hbHlzaXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxVQUFVLE1BQU0sY0FBYyxDQUFDO0FBQ3RDLE9BQU8sR0FBRyxNQUFNLGNBQWMsQ0FBQztBQUMvQixPQUFPLEdBQUcsTUFBTSxjQUFjLENBQUM7QUFDL0IsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBUXBELE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLDhCQUE4QixDQUFDO0FBQ3JFLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQWdCckQ7Ozs7R0FJRztBQUNILE1BQU0sT0FBTyxRQUFRO0lBT25CLFlBQW1CLFVBQTJCLEVBQUU7UUFDOUMsSUFBSSxDQUFDLEVBQUUsR0FBRyxPQUFPLENBQUMsRUFBRSxJQUFJLElBQUksQ0FBQyxNQUFNLEVBQUUsQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDLENBQUMsU0FBUyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQztRQUNwRSxJQUFJLENBQUMsS0FBSyxHQUFHLE9BQU8sQ0FBQyxLQUFLLElBQUksSUFBSSxDQUFDLEVBQUUsQ0FBQztRQUN0QyxJQUFJLENBQUMsZ0JBQWdCLEdBQUcsT0FBTyxDQUFDLGdCQUFnQixDQUFDO1FBQ2pELElBQUksQ0FBQyxPQUFPLEdBQUcsRUFBRSxDQUFDO1FBQ2xCLElBQUksQ0FBQyxLQUFLLEdBQUcsRUFBRSxDQUFDO0lBQ2xCLENBQUM7SUFFRDs7T0FFRztJQUNJLFlBQVksQ0FDakIsU0FBdUMsRUFDdkMsVUFBMkMsRUFBRTtRQUU3QyxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FDZixlQUFlLENBQUMsU0FBUyxFQUFFLE9BQU8sRUFBRTtZQUNsQyxnQkFBZ0IsRUFBRSxJQUFJLENBQUMsZ0JBQWdCO1NBQ3hDLENBQUMsQ0FDSCxDQUFDO1FBQ0YsSUFBSSxD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","const GC_MS_FIELDS = ['TIC', '.RIC', 'SCANNUMBER'];\n\nexport function complexChromatogram(result) {\n  let spectra = result.spectra;\n  let length = spectra.length;\n  let chromatogram = {\n    times: new Array(length),\n    series: {\n      ms: {\n        dimension: 2,\n        data: new Array(length),\n      },\n    },\n  };\n\n  let existingGCMSFields = [];\n  for (let i = 0; i < GC_MS_FIELDS.length; i++) {\n    let label = convertMSFieldToLabel(GC_MS_FIELDS[i]);\n    if (spectra[0][label]) {\n      existingGCMSFields.push(label);\n      chromatogram.series[label] = {\n        dimension: 1,\n        data: new Array(length),\n      };\n    }\n  }\n\n  for (let i = 0; i < length; i++) {\n    let spectrum = spectra[i];\n    chromatogram.times[i] = spectrum.pageValue;\n    for (let j = 0; j < existingGCMSFields.length; j++) {\n      chromatogram.series[existingGCMSFields[j]].data[i] = parseFloat(\n        spectrum[existingGCMSFields[j]],\n      );\n    }\n    if (spectrum.data) {\n      chromatogram.series.ms.data[i] = [spectrum.data.x, spectrum.data.y];\n    }\n  }\n  result.chromatogram = chromatogram;\n}\n\nexport function isMSField(canonicDataLabel) {\n  return GC_MS_FIELDS.indexOf(canonicDataLabel) !== -1;\n}\n\nexport function convertMSFieldToLabel(value) {\n  return value.toLowerCase().replace(/[^a-z0-9]/g, '');\n}\n","export default function convertToFloatArray(stringArray) {\n  let floatArray = [];\n  for (let i = 0; i < stringArray.length; i++) {\n    floatArray.push(parseFloat(stringArray[i]));\n  }\n  return floatArray;\n}\n","export default function fastParseXYData(spectrum, value) {\n  // TODO need to deal with result\n  //  console.log(value);\n  // we check if deltaX is defined otherwise we calculate it\n\n  let yFactor = spectrum.yFactor;\n  let deltaX = spectrum.deltaX;\n\n  spectrum.isXYdata = true;\n  let currentData = { x: [], y: [] };\n  spectrum.data = currentData;\n\n  let currentX = spectrum.firstX;\n  let currentY = spectrum.firstY;\n\n  // we skip the first line\n  //\n  let endLine = false;\n  let ascii;\n  let i = 0;\n  for (; i < value.length; i++) {\n    ascii = value.charCodeAt(i);\n    if (ascii === 13 || ascii === 10) {\n      endLine = true;\n    } else {\n      if (endLine) break;\n    }\n  }\n\n  // we proceed taking the i after the first line\n  let newLine = true;\n  let isDifference = false;\n  let isLastDifference = false;\n  let lastDifference = 0;\n  let isDuplicate = false;\n  let inComment = false;\n  let currentValue = 0; // can be a difference or a duplicate\n  let lastValue = 0; // must be the real last value\n  let isNegative = false;\n  let inValue = false;\n  let skipFirstValue = false;\n  let decimalPosition = 0;\n  for (; i <= value.length; i++) {\n    if (i === value.length) ascii = 13;\n    else ascii = value.charCodeAt(i);\n    if (inComment) {\n      // we should ignore the text if we are after $$\n      if (ascii === 13 || ascii === 10) {\n        newLine = true;\n        inComment = false;\n      }\n    } else {\n      // when is it a new value ?\n      // when it is not a digit, . or comma\n      // it is a number that is either new or we continue\n      if (ascii <= 57 && ascii >= 48) {\n        // a number\n        inValue = true;\n        if (decimalPosition > 0) {\n          currentValue += (ascii - 48) / Math.pow(10, decimalPosition++);\n        } else {\n          currentValue *= 10;\n          currentValue += ascii - 48;\n        }\n      } else if (ascii === 44 || ascii === 46) {\n        // a \",\" or \".\"\n        inValue = true;\n        decimalPosition++;\n      } else {\n        if (inValue) {\n          // need to process the previous value\n          if (newLine) {\n            newLine = false; // we don't check the X value\n            // console.log(\"NEW LINE\",isDifference, lastDifference);\n            // if new line and lastDifference, the first value is just a check !\n            // that we don't check ...\n            if (isLastDifference) skipFirstValue = true;\n          } else {\n            // need to deal with duplicate and differences\n            if (skipFirstValue) {\n              skipFirstValue = false;\n            } else {\n              if (isDifference) {\n                lastDifference = isNegative ? 0 - currentValue : currentValue;\n                isLastDifference = true;\n                isDifference = false;\n              } else if (!isDuplicate) {\n                lastValue = isNegative ? 0 - currentValue : currentValue;\n              }\n              let duplicate = isDuplicate ? currentValue - 1 : 1;\n              for (let j = 0; j < duplicate; j++) {\n                if (isLastDifference) {\n                  currentY += lastDifference;\n                } else {\n                  currentY = lastValue;\n                }\n                currentData.x.push(currentX);\n                currentData.y.push(currentY * yFactor);\n                currentX += deltaX;\n              }\n            }\n          }\n          isNegative = false;\n          currentValue = 0;\n          decimalPosition = 0;\n          inValue = false;\n          isDuplicate = false;\n        }\n\n        // positive SQZ digits @ A B C D E F G H I (ascii 64-73)\n        if (ascii < 74 && ascii > 63) {\n          inValue = true;\n          isLastDifference = false;\n          currentValue = ascii - 64;\n        } else if (ascii > 96 && ascii < 106) {\n          // negative SQZ digits a b c d e f g h i (ascii 97-105)\n          inValue = true;\n          isLastDifference = false;\n          currentValue = ascii - 96;\n          isNegative = true;\n        } else if (ascii === 115) {\n          // DUP digits S T U V W X Y Z s (ascii 83-90, 115)\n          inValue = true;\n          isDuplicate = true;\n          currentValue = 9;\n        } else if (ascii > 82 && ascii < 91) {\n          inValue = true;\n          isDuplicate = true;\n          currentValue = ascii - 82;\n        } else if (ascii > 73 && ascii < 83) {\n          // positive DIF digits % J K L M N O P Q R (ascii 37, 74-82)\n          inValue = true;\n          isDifference = true;\n          currentValue = ascii - 73;\n        } else if (ascii > 105 && ascii < 115) {\n          // negative DIF digits j k l m n o p q r (ascii 106-114)\n          inValue = true;\n          isDifference = true;\n          currentValue = ascii - 105;\n          isNegative = true;\n        } else if (ascii === 36 && value.charCodeAt(i + 1) === 36) {\n          // $ sign, we need to check the next one\n          inValue = true;\n          inComment = true;\n        } else if (ascii === 37) {\n          // positive DIF digits % J K L M N O P Q R (ascii 37, 74-82)\n          inValue = true;\n          isDifference = true;\n          currentValue = 0;\n          isNegative = false;\n        } else if (ascii === 45) {\n          // a \"-\"\n          // check if after there is a number, decimal or comma\n          let ascii2 = value.charCodeAt(i + 1);\n          if (\n            (ascii2 >= 48 && ascii2 <= 57) ||\n            ascii2 === 44 ||\n            ascii2 === 46\n          ) {\n            inValue = true;\n            if (!newLine) isLastDifference = false;\n            isNegative = true;\n          }\n        } else if (ascii === 13 || ascii === 10) {\n          newLine = true;\n          inComment = false;\n        }\n        // and now analyse the details ... space or tabulation\n        // if \"+\" we just don't care\n      }\n    }\n  }\n}\n","const removeCommentRegExp = /\\$\\$.*/;\nconst peakTableSplitRegExp = /[,\\t ]+/;\n\nexport default function parsePeakTable(spectrum, value, result) {\n  spectrum.isPeaktable = true;\n\n  if (!spectrum.variables || Object.keys(spectrum.variables) === 2) {\n    parseXY(spectrum, value, result);\n  } else {\n    parseXYZ(spectrum, value, result);\n  }\n\n  // we will add the data in the variables\n  if (spectrum.variables) {\n    for (let key in spectrum.variables) {\n      spectrum.variables[key].data = spectrum.data[key];\n    }\n  }\n}\n\nfunction parseXY(spectrum, value, result) {\n  let currentData = { x: [], y: [] };\n  spectrum.data = currentData;\n\n  // counts for around 20% of the time\n  let lines = value.split(/,? *,?[;\\r\\n]+ */);\n\n  for (let i = 1; i < lines.length; i++) {\n    let values = lines[i]\n      .trim()\n      .replace(removeCommentRegExp, '')\n      .split(peakTableSplitRegExp);\n    if (values.length % 2 === 0) {\n      for (let j = 0; j < values.length; j = j + 2) {\n        // takes around 40% of the time to add and parse the 2 values nearly exclusively because of parseFloat\n        currentData.x.push(parseFloat(values[j]) * spectrum.xFactor);\n        currentData.y.push(parseFloat(values[j + 1]) * spectrum.yFactor);\n      }\n    } else {\n      result.logs.push(`Format error: ${values}`);\n    }\n  }\n}\n\nfunction parseXYZ(spectrum, value, result) {\n  let currentData = {};\n  let variables = Object.keys(spectrum.variables);\n  let numberOfVariables = variables.length;\n  variables.forEach((variable) => (currentData[variable] = []));\n  spectrum.data = currentData;\n\n  // counts for around 20% of the time\n  let lines = value.split(/,? *,?[;\\r\\n]+ */);\n\n  for (let i = 1; i < lines.length; i++) {\n    let values = lines[i]\n      .trim()\n      .replace(removeCommentRegExp, '')\n      .split(peakTableSplitRegExp);\n    if (values.length % numberOfVariables === 0) {\n      for (let j = 0; j < values.length; j++) {\n        // todo should try to find a xFactor (y, ...)\n        currentData[variables[j % numberOfVariables]].push(\n          parseFloat(values[j]),\n        );\n      }\n    } else {\n      result.logs.push(`Format error: ${values}`);\n    }\n  }\n}\n","export default function parseXYA(spectrum, value) {\n  let removeSymbolRegExp = /(\\(+|\\)+|<+|>+|\\s+)/g;\n\n  spectrum.isXYAdata = true;\n  let values;\n  let currentData = { x: [], y: [] };\n  spectrum.data = currentData;\n\n  let lines = value.split(/,? *,?[;\\r\\n]+ */);\n\n  for (let i = 1; i < lines.length; i++) {\n    values = lines[i].trim().replace(removeSymbolRegExp, '').split(',');\n    currentData.x.push(parseFloat(values[0]));\n    currentData.y.push(parseFloat(values[1]));\n  }\n}\n","import convertTo3DZ from './convertTo3DZ';\nimport generateContourLines from './generateContourLines';\n\nexport default function add2D(result, options) {\n  let zData = convertTo3DZ(result.spectra);\n  if (!options.noContour) {\n    result.contourLines = generateContourLines(zData, options);\n    delete zData.z;\n  }\n  result.minMax = zData;\n}\n","import getMedian from 'ml-array-median';\n\nexport default function convertTo3DZ(spectra) {\n  let minZ = spectra[0].data.y[0];\n  let maxZ = minZ;\n  let ySize = spectra.length;\n  let xSize = spectra[0].data.x.length;\n\n  let z = new Array(ySize);\n  for (let i = 0; i < ySize; i++) {\n    z[i] = spectra[i].data.y;\n    for (let j = 0; j < xSize; j++) {\n      let value = z[i][j];\n      if (value < minZ) minZ = value;\n      if (value > maxZ) maxZ = value;\n    }\n  }\n\n  const firstX = spectra[0].data.x[0];\n  const lastX = spectra[0].data.x[spectra[0].data.x.length - 1]; // has to be -2 because it is a 1D array [x,y,x,y,...]\n  const firstY = spectra[0].pageValue;\n  const lastY = spectra[ySize - 1].pageValue;\n\n  // Because the min / max value are the only information about the matrix if we invert\n  // min and max we need to invert the array\n  if (firstX > lastX) {\n    for (let spectrum of z) {\n      spectrum.reverse();\n    }\n  }\n  if (firstY > lastY) {\n    z.reverse();\n  }\n\n  const medians = [];\n  for (let i = 0; i < z.length; i++) {\n    const row = Float64Array.from(z[i]);\n    for (let i = 0; i < row.length; i++) {\n      if (row[i] < 0) row[i] = -row[i];\n    }\n    medians.push(getMedian(row));\n  }\n  const median = getMedian(medians);\n\n  return {\n    z: z,\n    minX: Math.min(firstX, lastX),\n    maxX: Math.max(firstX, lastX),\n    minY: Math.min(firstY, lastY),\n    maxY: Math.max(firstY, lastY),\n    minZ: minZ,\n    maxZ: maxZ,\n    noise: median,\n  };\n}\n","export default function generateContourLines(zData, options) {\n  let noise = zData.noise;\n  let z = zData.z;\n  let povarHeight0, povarHeight1, povarHeight2, povarHeight3;\n  let isOver0, isOver1, isOver2, isOver3;\n  let nbSubSpectra = z.length;\n  let nbPovars = z[0].length;\n  let pAx, pAy, pBx, pBy;\n\n  let x0 = zData.minX;\n  let xN = zData.maxX;\n  let dx = (xN - x0) / (nbPovars - 1);\n  let y0 = zData.minY;\n  let yN = zData.maxY;\n  let dy = (yN - y0) / (nbSubSpectra - 1);\n  let minZ = zData.minZ;\n  let maxZ = zData.maxZ;\n\n  // System.out.prvarln('y0 '+y0+' yN '+yN);\n  // -------------------------\n  // Povars attribution\n  //\n  // 0----1\n  // |  / |\n  // | /  |\n  // 2----3\n  //\n  // ---------------------d------\n\n  let iter = options.nbContourLevels * 2;\n  let contourLevels = new Array(iter);\n  let lineZValue;\n  for (let level = 0; level < iter; level++) {\n    // multiply by 2 for positif and negatif\n    let contourLevel = {};\n    contourLevels[level] = contourLevel;\n    let side = level % 2;\n    let factor =\n      (maxZ - options.noiseMultiplier * noise) *\n      Math.exp((level >> 1) - options.nbContourLevels);\n    if (side === 0) {\n      lineZValue = factor + options.noiseMultiplier * noise;\n    } else {\n      lineZValue = 0 - factor - options.noiseMultiplier * noise;\n    }\n    let lines = [];\n    contourLevel.zValue = lineZValue;\n    contourLevel.lines = lines;\n\n    if (lineZValue <= minZ || lineZValue >= maxZ) continue;\n\n    for (let iSubSpectra = 0; iSubSpectra < nbSubSpectra - 1; iSubSpectra++) {\n      let subSpectra = z[iSubSpectra];\n      let subSpectraAfter = z[iSubSpectra + 1];\n      for (let povar = 0; povar < nbPovars - 1; povar++) {\n        povarHeight0 = subSpectra[povar];\n        povarHeight1 = subSpectra[povar + 1];\n        povarHeight2 = subSpectraAfter[povar];\n        povarHeight3 = subSpectraAfter[povar + 1];\n\n        isOver0 = povarHeight0 > lineZValue;\n        isOver1 = povarHeight1 > lineZValue;\n        isOver2 = povarHeight2 > lineZValue;\n        isOver3 = povarHeight3 > lineZValue;\n\n        // Example povar0 is over the plane and povar1 and\n        // povar2 are below, we find the varersections and add\n        // the segment\n        if (isOver0 !== isOver1 && isOver0 !== isOver2) {\n          pAx =\n            povar + (lineZValue - povarHeight0) / (povarHeight1 - povarHeight0);\n          pAy = iSubSpectra;\n          pBx = povar;\n          pBy =\n            iSubSpectra +\n            (lineZValue - povarHeight0) / (povarHeight2 - povarHeight0);\n          lines.push(pAx * dx + x0);\n          lines.push(pAy * dy + y0);\n          lines.push(pBx * dx + x0);\n          lines.push(pBy * dy + y0);\n        }\n        // remove push does not help !!!!\n        if (isOver3 !== isOver1 && isOver3 !== isOver2) {\n          pAx = povar + 1;\n          pAy =\n            iSubSpectra +\n            1 -\n            (lineZValue - povarHeight3) / (povarHeight1 - povarHeight3);\n          pBx =\n            povar +\n            1 -\n            (lineZValue - povarHeight3) / (povarHeight2 - povarHeight3);\n          pBy = iSubSpectra + 1;\n          lines.push(pAx * dx + x0);\n          lines.push(pAy * dy + y0);\n          lines.push(pBx * dx + x0);\n          lines.push(pBy * dy + y0);\n        }\n        // test around the diagonal\n        if (isOver1 !== isOver2) {\n          pAx =\n            (povar +\n              1 -\n              (lineZValue - povarHeight1) / (povarHeight2 - povarHeight1)) *\n              dx +\n            x0;\n          pAy =\n            (iSubSpectra +\n              (lineZValue - povarHeight1) / (povarHeight2 - povarHeight1)) *\n              dy +\n            y0;\n          if (isOver1 !== isOver0) {\n            pBx =\n              povar +\n              1 -\n              (lineZValue - povarHeight1) / (povarHeight0 - povarHeight1);\n            pBy = iSubSpectra;\n            lines.push(pAx);\n            lines.push(pAy);\n            lines.push(pBx * dx + x0);\n            lines.push(pBy * dy + y0);\n          }\n          if (isOver2 !== isOver0) {\n            pBx = povar;\n            pBy =\n              iSubSpectra +\n              1 -\n              (lineZValue - povarHeight2) / (povarHeight0 - povarHeight2);\n            lines.push(pAx);\n            lines.push(pAy);\n            lines.push(pBx * dx + x0);\n            lines.push(pBy * dy + y0);\n          }\n          if (isOver1 !== isOver3) {\n            pBx = povar + 1;\n            pBy =\n              iSubSpectra +\n              (lineZValue - povarHeight1) / (povarHeight3 - povarHeight1);\n            lines.push(pAx);\n            lines.push(pAy);\n            lines.push(pBx * dx + x0);\n            lines.push(pBy * dy + y0);\n          }\n          if (isOver2 !== isOver3) {\n            pBx =\n              povar +\n              (lineZValue - povarHeight2) / (povarHeight3 - povarHeight2);\n            pBy = iSubSpectra + 1;\n            lines.push(pAx);\n            lines.push(pAy);\n            lines.push(pBx * dx + x0);\n            lines.push(pBy * dy + y0);\n          }\n        }\n      }\n    }\n  }\n\n  return {\n    minX: zData.minX,\n    maxX: zData.maxX,\n    minY: zData.minY,\n    maxY: zData.maxY,\n    segments: contourLevels,\n  };\n}\n","// sources:\n// https://en.wikipedia.org/wiki/Gyromagnetic_ratio\n\n// TODO: #13 can we have a better source and more digits ? @jwist\n\nexport const gyromagneticRatio = {\n  '1H': 267.52218744e6,\n  '2H': 41.065e6,\n  '3H': 285.3508e6,\n  '3He': -203.789e6,\n  '7Li': 103.962e6,\n  '13C': 67.28284e6,\n  '14N': 19.331e6,\n  '15N': -27.116e6,\n  '17O': -36.264e6,\n  '19F': 251.662e6,\n  '23Na': 70.761e6,\n  '27Al': 69.763e6,\n  '29Si': -53.19e6,\n  '31P': 108.291e6,\n  '57Fe': 8.681e6,\n  '63Cu': 71.118e6,\n  '67Zn': 16.767e6,\n  '129Xe': -73.997e6,\n};\n","export default function profiling(result, action, options) {\n  if (result.profiling) {\n    result.profiling.push({\n      action,\n      time: Date.now() - options.start,\n    });\n  }\n}\n","export default function simpleChromatogram(result) {\n  let data = result.spectra[0].data;\n  result.chromatogram = {\n    times: data.x.slice(),\n    series: {\n      intensity: {\n        dimension: 1,\n        data: data.y.slice(),\n      },\n    },\n  };\n}\n","import add2D from './2d/add2D';\nimport { complexChromatogram } from './complexChromatogram';\nimport postProcessingNMR from './postProcessingNMR';\nimport profiling from './profiling';\nimport simpleChromatogram from './simpleChromatogram';\n\nexport default function postProcessing(entriesFlat, result, options) {\n  // converting Hz to ppm\n  postProcessingNMR(entriesFlat);\n\n  for (let entry of entriesFlat) {\n    if (Object.keys(entry.ntuples).length > 0) {\n      let newNtuples = [];\n      let keys = Object.keys(entry.ntuples);\n      for (let i = 0; i < keys.length; i++) {\n        let key = keys[i];\n        let values = entry.ntuples[key];\n        for (let j = 0; j < values.length; j++) {\n          if (!newNtuples[j]) newNtuples[j] = {};\n          newNtuples[j][key] = values[j];\n        }\n      }\n      entry.ntuples = newNtuples;\n    }\n\n    if (entry.twoD && options.wantXY) {\n      add2D(entry, options);\n\n      profiling(result, 'Finished countour plot calculation', options);\n\n      if (!options.keepSpectra) {\n        delete entry.spectra;\n      }\n    }\n\n    // maybe it is a GC (HPLC) / MS. In this case we add a new format\n    if (options.chromatogram) {\n      if (entry.spectra.length > 1) {\n        complexChromatogram(entry);\n      } else {\n        simpleChromatogram(entry);\n      }\n      profiling(result, 'Finished chromatogram calculation', options);\n    }\n\n    delete entry.tmp;\n  }\n}\n","import { gyromagneticRatio } from 'nmr-processing';\n\nexport default function postProcessingNMR(entriesFlat) {\n  // specific NMR functions\n\n  for (let entry of entriesFlat) {\n    let observeFrequency = 0;\n    let shiftOffsetVal = 0;\n    for (let spectrum of entry.spectra) {\n      if (entry.ntuples && entry.ntuples.symbol) {\n        if (!observeFrequency && spectrum.observeFrequency) {\n          observeFrequency = spectrum.observeFrequency;\n        }\n        if (!shiftOffsetVal && spectrum.shiftOffsetVal) {\n          shiftOffsetVal = spectrum.shiftOffsetVal;\n        }\n      } else {\n        observeFrequency = spectrum.observeFrequency;\n        shiftOffsetVal = spectrum.shiftOffsetVal;\n      }\n\n      if (observeFrequency) {\n        if (spectrum.xUnits && spectrum.xUnits.toUpperCase().includes('HZ')) {\n          spectrum.xUnits = 'PPM';\n          spectrum.xFactor = spectrum.xFactor / observeFrequency;\n          spectrum.firstX = spectrum.firstX / observeFrequency;\n          spectrum.lastX = spectrum.lastX / observeFrequency;\n          spectrum.deltaX = spectrum.deltaX / observeFrequency;\n          for (let i = 0; i < spectrum.data.x.length; i++) {\n            spectrum.data.x[i] /= observeFrequency;\n          }\n        }\n      }\n      if (shiftOffsetVal) {\n        let shift = spectrum.firstX - shiftOffsetVal;\n        spectrum.firstX = spectrum.firstX - shift;\n        spectrum.lastX = spectrum.lastX - shift;\n        for (let i = 0; i < spectrum.data.x.length; i++) {\n          spectrum.data.x[i] -= shift;\n        }\n      }\n\n      // we will check if some nucleus are missing ...\n      if (entry.ntuples && entry.ntuples.nucleus && entry.ntuples.symbol) {\n        for (let i = 0; i < entry.ntuples.nucleus.length; i++) {\n          let symbol = entry.ntuples.symbol[i];\n          let nucleus = entry.ntuples.nucleus[i];\n          if (symbol.startsWith('F') && !nucleus) {\n            if (symbol === 'F1') {\n              // if F1 is defined we will use F2\n              if (entry.tmp.$NUC2) {\n                entry.ntuples.nucleus[i] = entry.tmp.$NUC2;\n              } else {\n                let f2index = entry.ntuples.symbol.indexOf('F2');\n                if (f2index && entry.ntuples.nucleus[f2index]) {\n                  entry.ntuples.nucleus[i] = entry.ntuples.nucleus[f2index];\n                }\n              }\n            }\n            if (symbol === 'F2') entry.ntuples.nucleus[i] = entry.tmp.$NUC1;\n          }\n          if (symbol === 'F2') {\n            entry.yType = entry.ntuples.nucleus[0];\n          }\n        }\n      }\n\n      if (\n        observeFrequency &&\n        entry.ntuples &&\n        entry.ntuples.symbol &&\n        entry.ntuples.nucleus\n      ) {\n        let unit = '';\n        let pageSymbolIndex = entry.ntuples.symbol.indexOf(spectrum.pageSymbol);\n        if (entry.ntuples.units && entry.ntuples.units[pageSymbolIndex]) {\n          unit = entry.ntuples.units[pageSymbolIndex];\n        }\n        if (unit !== 'PPM') {\n          if (pageSymbolIndex !== 0) {\n            throw Error('Not sure about this ntuples format');\n          }\n\n          let ratio0 = gyromagneticRatio[entry.ntuples.nucleus[0]];\n          let ratio1 = gyromagneticRatio[entry.ntuples.nucleus[1]];\n          if (!ratio0 || !ratio1) {\n            throw Error('Problem with determination of gyromagnetic ratio');\n          }\n          let ratio = (ratio0 / ratio1) * observeFrequency;\n          spectrum.pageValue /= ratio;\n        }\n      }\n    }\n  }\n}\n","export default function prepareNtuplesDatatable(currentEntry, spectrum, kind) {\n  let xIndex = -1;\n  let yIndex = -1;\n  let firstVariable = '';\n  let secondVariable = '';\n  if (kind.indexOf('++') > 0) {\n    firstVariable = kind.replace(/.*\\(([a-zA-Z0-9]+)\\+\\+.*/, '$1');\n    secondVariable = kind.replace(/.*\\.\\.([a-zA-Z0-9]+).*/, '$1');\n  } else {\n    kind = kind.replace(/[^a-zA-Z]/g, '');\n    firstVariable = kind.charAt(0);\n    secondVariable = kind.charAt(1);\n    spectrum.variables = {};\n    for (let symbol of kind) {\n      let lowerCaseSymbol = symbol.toLowerCase();\n      let index = currentEntry.ntuples.symbol.indexOf(symbol);\n      if (index === -1) throw Error(`Symbol undefined: ${symbol}`);\n      spectrum.variables[lowerCaseSymbol] = {};\n      for (let key in currentEntry.ntuples) {\n        if (currentEntry.ntuples[key][index]) {\n          spectrum.variables[lowerCaseSymbol][key.replace(/^var/, '')] =\n            currentEntry.ntuples[key][index];\n        }\n      }\n    }\n  }\n  xIndex = currentEntry.ntuples.symbol.indexOf(firstVariable);\n  yIndex = currentEntry.ntuples.symbol.indexOf(secondVariable);\n\n  if (xIndex === -1) xIndex = 0;\n  if (yIndex === -1) yIndex = 0;\n\n  if (currentEntry.ntuples.first) {\n    if (currentEntry.ntuples.first.length > xIndex) {\n      spectrum.firstX = currentEntry.ntuples.first[xIndex];\n    }\n    if (currentEntry.ntuples.first.length > yIndex) {\n      spectrum.firstY = currentEntry.ntuples.first[yIndex];\n    }\n  }\n  if (currentEntry.ntuples.last) {\n    if (currentEntry.ntuples.last.length > xIndex) {\n      spectrum.lastX = currentEntry.ntuples.last[xIndex];\n    }\n    if (currentEntry.ntuples.last.length > yIndex) {\n      spectrum.lastY = currentEntry.ntuples.last[yIndex];\n    }\n  }\n  if (\n    currentEntry.ntuples.vardim &&\n    currentEntry.ntuples.vardim.length > xIndex\n  ) {\n    spectrum.nbPoints = currentEntry.ntuples.vardim[xIndex];\n  }\n  if (currentEntry.ntuples.factor) {\n    if (currentEntry.ntuples.factor.length > xIndex) {\n      spectrum.xFactor = currentEntry.ntuples.factor[xIndex];\n    }\n    if (currentEntry.ntuples.factor.length > yIndex) {\n      spectrum.yFactor = currentEntry.ntuples.factor[yIndex];\n    }\n  }\n  if (currentEntry.ntuples.units) {\n    if (currentEntry.ntuples.units.length > xIndex) {\n      if (\n        currentEntry.ntuples.varname &&\n        currentEntry.ntuples.varname[xIndex]\n      ) {\n        spectrum.xUnits = `${currentEntry.ntuples.varname[xIndex]} [${currentEntry.ntuples.units[xIndex]}]`;\n      } else {\n        spectrum.xUnits = currentEntry.ntuples.units[xIndex];\n      }\n    }\n    if (currentEntry.ntuples.units.length > yIndex) {\n      if (\n        currentEntry.ntuples.varname &&\n        currentEntry.ntuples.varname[yIndex]\n      ) {\n        spectrum.yUnits = `${currentEntry.ntuples.varname[yIndex]} [${currentEntry.ntuples.units[yIndex]}]`;\n      } else {\n        spectrum.yUnits = currentEntry.ntuples.units[yIndex];\n      }\n    }\n  }\n}\n","export default function prepareSpectrum(spectrum) {\n  if (!spectrum.xFactor) spectrum.xFactor = 1;\n  if (!spectrum.yFactor) spectrum.yFactor = 1;\n}\n","import { ensureString } from 'ensure-string';\n\nimport { isMSField, convertMSFieldToLabel } from './complexChromatogram';\nimport convertToFloatArray from './convertToFloatArray';\nimport fastParseXYData from './parse/fastParseXYData';\nimport parsePeakTable from './parse/parsePeakTable';\nimport parseXYA from './parse/parseXYA';\nimport postProcessing from './postProcessing';\nimport prepareNtuplesDatatable from './prepareNtuplesDatatable';\nimport prepareSpectrum from './prepareSpectrum';\nimport profiling from './profiling';\n\n// the following RegExp can only be used for XYdata, some peakTables have values with a \"E-5\" ...\nconst ntuplesSeparatorRegExp = /[ \\t]*,[ \\t]*/;\n\nclass Spectrum {}\n\nconst defaultOptions = {\n  keepRecordsRegExp: /^$/,\n  canonicDataLabels: true,\n  canonicMetadataLabels: false,\n  dynamicTyping: true,\n  withoutXY: false,\n  chromatogram: false,\n  keepSpectra: false,\n  noContour: false,\n  nbContourLevels: 7,\n  noiseMultiplier: 5,\n  profiling: false,\n};\n\n/**\n *\n * @param {string|ArrayBuffer} jcamp\n * @param {object} [options]\n * @param {number} [options.keepRecordsRegExp=/^$/] By default we don't keep meta information\n * @param {number} [options.canonicDataLabels=true] Canonize the Labels (uppercase without symbol)\n * @param {number} [options.canonicMetadataLabels=false] Canonize the metadata Labels (uppercase without symbol)\n * @param {number} [options.dynamicTyping=false] Convert numbers to Number\n * @param {number} [options.withoutXY=false] Remove the XY data\n * @param {number} [options.chromatogram=false] Special post-processing for GC / HPLC / MS\n * @param {number} [options.keepSpectra=false] Force to keep the spectra in case of 2D\n * @param {number} [options.noContour=false] Don't calculate countour in case of 2D\n * @param {number} [options.nbContourLevels=7] Number of positive / negative contour levels to calculate\n * @param {number} [options.noiseMultiplier=5] Define for 2D the level as 5 times the median as default\n * @param {number} [options.profiling=false] Add profiling information\n */\n\nexport default function convert(jcamp, options = {}) {\n  jcamp = ensureString(jcamp);\n  options = { ...defaultOptions, ...options };\n  options.wantXY = !options.withoutXY;\n  options.start = Date.now();\n\n  let entriesFlat = [];\n\n  let result = {\n    profiling: options.profiling ? [] : false,\n    logs: [],\n    entries: [],\n  };\n\n  let tmpResult = { children: [] };\n  let currentEntry = tmpResult;\n  let parentsStack = [];\n\n  let spectrum = new Spectrum();\n\n  if (typeof jcamp !== 'string') {\n    throw new TypeError('the JCAMP should be a string');\n  }\n\n  profiling(result, 'Before split to LDRS', options);\n\n  let ldrs = jcamp.replace(/[\\r\\n]+##/g, '\\n##').split('\\n##');\n\n  profiling(result, 'Split to LDRS', options);\n\n  if (ldrs[0]) ldrs[0] = ldrs[0].replace(/^[\\r\\n ]*##/, '');\n\n  for (let ldr of ldrs) {\n    // This is a new LDR\n    let position = ldr.indexOf('=');\n    let dataLabel = position > 0 ? ldr.substring(0, position) : ldr;\n    let dataValue = position > 0 ? ldr.substring(position + 1).trim() : '';\n\n    let canonicDataLabel = dataLabel.replace(/[_ -]/g, '').toUpperCase();\n\n    if (canonicDataLabel === 'DATATABLE') {\n      let endLine = dataValue.indexOf('\\n');\n      if (endLine === -1) endLine = dataValue.indexOf('\\r');\n      if (endLine > 0) {\n        // ##DATA TABLE= (X++(I..I)), XYDATA\n        // We need to find the variables\n\n        let infos = dataValue.substring(0, endLine).split(/[ ,;\\t]+/);\n        prepareNtuplesDatatable(currentEntry, spectrum, infos[0]);\n\n        spectrum.datatable = infos[0];\n        if (infos[1] && infos[1].indexOf('PEAKS') > -1) {\n          canonicDataLabel = 'PEAKTABLE';\n        } else if (\n          infos[1] &&\n          (infos[1].indexOf('XYDATA') || infos[0].indexOf('++') > 0)\n        ) {\n          canonicDataLabel = 'XYDATA';\n          spectrum.deltaX =\n            (spectrum.lastX - spectrum.firstX) / (spectrum.nbPoints - 1);\n        }\n      }\n    }\n\n    if (canonicDataLabel === 'XYDATA') {\n      if (options.wantXY) {\n        prepareSpectrum(spectrum);\n        // well apparently we should still consider it is a PEAK TABLE if there are no '++' after\n        if (dataValue.match(/.*\\+\\+.*/)) {\n          // ex: (X++(Y..Y))\n          spectrum.deltaX =\n            (spectrum.lastX - spectrum.firstX) / (spectrum.nbPoints - 1);\n\n          fastParseXYData(spectrum, dataValue, result);\n        } else {\n          parsePeakTable(spectrum, dataValue, result);\n        }\n        currentEntry.spectra.push(spectrum);\n        spectrum = new Spectrum();\n      }\n      continue;\n    } else if (canonicDataLabel === 'PEAKTABLE') {\n      if (options.wantXY) {\n        prepareSpectrum(spectrum);\n        parsePeakTable(spectrum, dataValue, result);\n        currentEntry.spectra.push(spectrum);\n        spectrum = new Spectrum();\n      }\n      continue;\n    }\n    if (canonicDataLabel === 'PEAKASSIGNMENTS') {\n      if (options.wantXY) {\n        if (dataValue.match(/.*(XYA).*/)) {\n          // ex: (XYA)\n          parseXYA(spectrum, dataValue);\n        }\n        currentEntry.spectra.push(spectrum);\n        spectrum = new Spectrum();\n      }\n      continue;\n    }\n\n    if (canonicDataLabel === 'TITLE') {\n      let parentEntry = currentEntry;\n      if (!parentEntry.children) {\n        parentEntry.children = [];\n      }\n      currentEntry = {\n        spectra: [],\n        ntuples: {},\n        info: {},\n        meta: {},\n        tmp: {}, // tmp information we need to keep for postprocessing\n      };\n      parentEntry.children.push(currentEntry);\n      parentsStack.push(parentEntry);\n      entriesFlat.push(currentEntry);\n      currentEntry.title = dataValue;\n    } else if (canonicDataLabel === 'DATATYPE') {\n      currentEntry.dataType = dataValue;\n      if (dataValue.match(/(^nd|\\snd\\s)/i)) {\n        currentEntry.twoD = true;\n      }\n    } else if (canonicDataLabel === 'NTUPLES') {\n      if (dataValue.match(/(^nd|\\snd\\s)/i)) {\n        currentEntry.twoD = true;\n      }\n    } else if (canonicDataLabel === 'DATACLASS') {\n      currentEntry.dataClass = dataValue;\n    } else if (canonicDataLabel === 'XUNITS') {\n      spectrum.xUnits = dataValue;\n    } else if (canonicDataLabel === 'YUNITS') {\n      spectrum.yUnits = dataValue;\n    } else if (canonicDataLabel === 'FIRSTX') {\n      spectrum.firstX = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'LASTX') {\n      spectrum.lastX = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'FIRSTY') {\n      spectrum.firstY = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'LASTY') {\n      spectrum.lastY = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'NPOINTS') {\n      spectrum.nbPoints = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'XFACTOR') {\n      spectrum.xFactor = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'YFACTOR') {\n      spectrum.yFactor = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'MAXX') {\n      spectrum.maxX = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'MINX') {\n      spectrum.minX = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'MAXY') {\n      spectrum.maxY = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'MINY') {\n      spectrum.minY = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'DELTAX') {\n      spectrum.deltaX = parseFloat(dataValue);\n    } else if (\n      canonicDataLabel === '.OBSERVEFREQUENCY' ||\n      canonicDataLabel === '$SFO1'\n    ) {\n      if (!spectrum.observeFrequency) {\n        spectrum.observeFrequency = parseFloat(dataValue);\n      }\n    } else if (canonicDataLabel === '.OBSERVENUCLEUS') {\n      if (!spectrum.xType) {\n        currentEntry.xType = dataValue.replace(/[^a-zA-Z0-9]/g, '');\n      }\n    } else if (canonicDataLabel === '$OFFSET') {\n      // OFFSET for Bruker spectra\n      currentEntry.shiftOffsetNum = 0;\n      if (!spectrum.shiftOffsetVal) {\n        spectrum.shiftOffsetVal = parseFloat(dataValue);\n      }\n    } else if (canonicDataLabel === '$REFERENCEPOINT') {\n      // OFFSET for Varian spectra\n      // if we activate this part it does not work for ACD specmanager\n      //         } else if (canonicDataLabel=='.SHIFTREFERENCE') {   // OFFSET FOR Bruker Spectra\n      //                 var parts = dataValue.split(/ *, */);\n      //                 currentEntry.shiftOffsetNum = parseInt(parts[2].trim());\n      //                 spectrum.shiftOffsetVal = parseFloat(parts[3].trim());\n    } else if (canonicDataLabel === 'VARNAME') {\n      currentEntry.ntuples.varname = dataValue.split(ntuplesSeparatorRegExp);\n    } else if (canonicDataLabel === 'SYMBOL') {\n      currentEntry.ntuples.symbol = dataValue.split(ntuplesSeparatorRegExp);\n    } else if (canonicDataLabel === 'VARTYPE') {\n      currentEntry.ntuples.vartype = dataValue.split(ntuplesSeparatorRegExp);\n    } else if (canonicDataLabel === 'VARFORM') {\n      currentEntry.ntuples.varform = dataValue.split(ntuplesSeparatorRegExp);\n    } else if (canonicDataLabel === 'VARDIM') {\n      currentEntry.ntuples.vardim = convertToFloatArray(\n        dataValue.split(ntuplesSeparatorRegExp),\n      );\n    } else if (canonicDataLabel === 'UNITS') {\n      currentEntry.ntuples.units = dataValue.split(ntuplesSeparatorRegExp);\n    } else if (canonicDataLabel === 'FACTOR') {\n      currentEntry.ntuples.factor = convertToFloatArray(\n        dataValue.split(ntuplesSeparatorRegExp),\n      );\n    } else if (canonicDataLabel === 'FIRST') {\n      currentEntry.ntuples.first = convertToFloatArray(\n        dataValue.split(ntuplesSeparatorRegExp),\n      );\n    } else if (canonicDataLabel === 'LAST') {\n      currentEntry.ntuples.last = convertToFloatArray(\n        dataValue.split(ntuplesSeparatorRegExp),\n      );\n    } else if (canonicDataLabel === 'MIN') {\n      currentEntry.ntuples.min = convertToFloatArray(\n        dataValue.split(ntuplesSeparatorRegExp),\n      );\n    } else if (canonicDataLabel === 'MAX') {\n      currentEntry.ntuples.max = convertToFloatArray(\n        dataValue.split(ntuplesSeparatorRegExp),\n      );\n    } else if (canonicDataLabel === '.NUCLEUS') {\n      if (currentEntry.ntuples) {\n        currentEntry.ntuples.nucleus = dataValue.split(ntuplesSeparatorRegExp);\n      }\n    } else if (canonicDataLabel === 'PAGE') {\n      spectrum.page = dataValue.trim();\n      spectrum.pageValue = parseFloat(dataValue.replace(/^.*=/, ''));\n      spectrum.pageSymbol = spectrum.page.replace(/[=].*/, '');\n    } else if (canonicDataLabel === 'RETENTIONTIME') {\n      spectrum.pageValue = parseFloat(dataValue);\n    } else if (isMSField(canonicDataLabel)) {\n      spectrum[convertMSFieldToLabel(canonicDataLabel)] = dataValue;\n    } else if (canonicDataLabel === 'SAMPLEDESCRIPTION') {\n      spectrum.sampleDescription = dataValue;\n    } else if (canonicDataLabel.startsWith('$NUC')) {\n      if (!currentEntry.tmp[canonicDataLabel] && !dataValue.includes('off')) {\n        currentEntry.tmp[canonicDataLabel] = dataValue.replace(/[<>]/g, '');\n      }\n    } else if (canonicDataLabel === 'END') {\n      currentEntry = parentsStack.pop();\n    }\n\n    if (\n      currentEntry &&\n      currentEntry.info &&\n      currentEntry.meta &&\n      canonicDataLabel.match(options.keepRecordsRegExp)\n    ) {\n      let value = dataValue.trim();\n      let target, label;\n      if (dataLabel.startsWith('$')) {\n        label = options.canonicMetadataLabels\n          ? canonicDataLabel.substring(1)\n          : dataLabel.substring(1);\n        target = currentEntry.meta;\n      } else {\n        label = options.canonicDataLabels ? canonicDataLabel : dataLabel;\n        target = currentEntry.info;\n      }\n\n      if (options.dynamicTyping) {\n        if (value === 'true' || value === 'TRUE') {\n          value = true;\n        } else if (value === 'false' || value === 'FALSE') {\n          value = false;\n        } else if (value !== '' && !isNaN(value)) {\n          value = parseFloat(value);\n        }\n      }\n      if (target[label]) {\n        if (!Array.isArray(target[label])) {\n          target[label] = [target[label]];\n        }\n        target[label].push(value);\n      } else {\n        target[label] = value;\n      }\n    }\n  }\n\n  profiling(result, 'Finished parsing', options);\n\n  postProcessing(entriesFlat, result, options);\n\n  profiling(result, 'Total time', options);\n\n  /*\n  if (result.children && result.children.length>0) {\n    result = { ...result, ...result.children[0] };\n  }\n  */\n  result.entries = tmpResult.children;\n  result.flatten = entriesFlat;\n\n  return result;\n}\n","/**\n * Ensure that the data is string. If it is an ArrayBuffer it will be converted to string using TextDecoder.\n * @param {string|ArrayBuffer} blob\n * @param {object} [options={}]\n * @param {string} [options.encoding='utf8']\n * @returns {string}\n */\n\nexport function ensureString(blob, options = {}) {\n  const { encoding = 'utf8' } = options;\n  if (ArrayBuffer.isView(blob) || blob instanceof ArrayBuffer) {\n    const decoder = new TextDecoder(encoding);\n    return decoder.decode(blob);\n  }\n  return blob;\n}\n","import { convert } from 'jcampconverter';\nimport { Analysis } from '../Analysis';\n/**\n * Creates a new Analysis from a JCAMP string\n * @param {string} jcamp - String containing the JCAMP data\n * @param {object} [options={}]\n * @param {object} [options.id=Math.random()]\n * @param {string} [options.label=options.id] human redeable label\n * @param {string} [options.spectrumCallback] a callback to apply on variables when creating spectrum\n * @return {Analysis} - New class element with the given data\n */\nexport function fromJcamp(jcamp, options = {}) {\n    let analysis = new Analysis(options);\n    addJcamp(analysis, jcamp);\n    return analysis;\n}\nfunction addJcamp(analysis, jcamp) {\n    let converted = convert(jcamp, {\n        keepRecordsRegExp: /.*/,\n    });\n    for (let entry of converted.flatten) {\n        let currentSpectrum = entry.spectra[0];\n        // we ensure variables\n        if (!currentSpectrum.variables) {\n            const variables = {};\n            currentSpectrum.variables = variables;\n            variables.x = {\n                label: currentSpectrum.xUnits,\n                symbol: 'X',\n                data: currentSpectrum.data.x || currentSpectrum.data.X,\n            };\n            variables.y = {\n                label: currentSpectrum.yUnits,\n                symbol: 'Y',\n                data: currentSpectrum.data.y || currentSpectrum.data.Y,\n            };\n        }\n        else {\n            for (let key in currentSpectrum.variables) {\n                const variable = currentSpectrum.variables[key];\n                if (variable.label)\n                    continue;\n                variable.label = variable.name || variable.symbol || key;\n                if (variable.units && !variable.label.includes(variable.units)) {\n                    variable.label += ` [${variable.units}]`;\n                }\n            }\n        }\n        analysis.pushSpectrum(currentSpectrum.variables, {\n            dataType: entry.dataType,\n            title: entry.title,\n            meta: entry.meta,\n        });\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZnJvbUpjYW1wLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2Zyb20vZnJvbUpjYW1wLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUV6QyxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sYUFBYSxDQUFDO0FBR3ZDOzs7Ozs7OztHQVFHO0FBQ0gsTUFBTSxVQUFVLFNBQVMsQ0FBQyxLQUEyQixFQUFFLE9BQU8sR0FBRyxFQUFFO0lBQ2pFLElBQUksUUFBUSxHQUFHLElBQUksUUFBUSxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQ3JDLFFBQVEsQ0FBQyxRQUFRLEVBQUUsS0FBSyxDQUFDLENBQUM7SUFDMUIsT0FBTyxRQUFRLENBQUM7QUFDbEIsQ0FBQztBQUVELFNBQVMsUUFBUSxDQUFDLFFBQWtCLEVBQUUsS0FBMkI7SUFDL0QsSUFBSSxTQUFTLEdBQUcsT0FBTyxDQUFDLEtBQUssRUFBRTtRQUM3QixpQkFBaUIsRUFBRSxJQUFJO0tBQ3hCLENBQUMsQ0FBQztJQUVILEtBQUssSUFBSSxLQUFLLElBQUksU0FBUyxDQUFDLE9BQU8sRUFBRTtRQUNuQyxJQUFJLGVBQWUsR0FBRyxLQUFLLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBRXZDLHNCQUFzQjtRQUN0QixJQUFJLENBQUMsZUFBZSxDQUFDLFNBQVMsRUFBRTtZQUM5QixNQUFNLFNBQVMsR0FBaUMsRUFBRSxDQUFDO1lBQ25ELGVBQWUsQ0FBQyxTQUFTLEdBQUcsU0FBUyxDQUFDO1lBQ3RDLFNBQVMsQ0FBQyxDQUFDLEdBQUc7Z0JBQ1osS0FBSyxFQUFFLGVBQWUsQ0FBQyxNQUFNO2dCQUM3QixNQUFNLEVBQUUsR0FBRztnQkFDWCxJQUFJLEVBQUUsZUFBZSxDQUFDLElBQUksQ0FBQyxDQUFDLElBQUksZUFBZSxDQUFDLElBQUksQ0FBQyxDQUFDO2FBQ3ZELENBQUM7WUFDRixTQUFTLENBQUMsQ0FBQyxHQUFHO2dCQUNaLEtBQUssRUFBRSxlQUFlLENBQUMsTUFBTTtnQkFDN0IsTUFBTSxFQUFFLEdBQUc7Z0JBQ1gsSUFBSSxFQUFFLGVBQWUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxJQUFJLGVBQWUsQ0FBQyxJQUFJLENBQUMsQ0FBQzthQUN2RCxDQUFDO1NBQ0g7YUFBTTtZQUNMLEtBQUssSUFBSSxHQUFHLElBQUksZUFBZSxDQUFDLFNBQVMsRUFBRTtnQkFDekMsTUFBTSxRQUFRLEdBQUcsZUFBZSxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsQ0FBQztnQkFDaEQsSUFBSSxRQUFRLENBQUMsS0FBSztvQkFBRSxTQUFTO2dCQUM3QixRQUFRLENBQUMsS0FBSyxHQUFHLFFBQVEsQ0FBQyxJQUFJLElBQUksUUFBUSxDQUFDLE1BQU0sSUFBSSxHQUFHLENBQUM7Z0JBQ3pELElBQUksUUFBUSxDQUFDLEtBQUssSUFBSSxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUMsRUFBRTtvQkFDOUQsUUFBUSxDQUFDLEtBQUssSUFBSSxLQUFLLFFBQVEsQ0FBQyxLQUFLLEdBQUcsQ0FBQztpQkFDMUM7YUFDRjtTQUNGO1FBRUQsUUFBUSxDQUFDLFlBQVksQ0FBQyxlQUFlLENBQUMsU0FBUyxFQUFFO1lBQy9DLFFBQVEsRUFBRSxLQUFLLENBQUMsUUFBUTtZQUN4QixLQUFLLEVBQUUsS0FBSyxDQUFDLEtBQUs7WUFDbEIsSUFBSSxFQUFFLEtBQUssQ0FBQyxJQUFJO1NBQ2pCLENBQUMsQ0FBQztLQUNKO0FBQ0gsQ0FBQyJ9","import creatorNtuples from './creatorNtuples';\nimport { fromJSON } from './fromJSON';\n\n/**\n * Create a jcamp from variables\n * @param {Array<Variable} [variables={}] - object of variables\n * @param {string} [options.info={}] - metadata of the file\n * @param {string} [options.info.title = ''] - title of the file\n * @param {string} [options.info.owner = ''] - owner of the file\n * @param {string} [options.info.origin = ''] - origin of the file\n * @param {string} [options.info.dataType = ''] - type of data\n * @param {object} [options.meta = {}] - comments to add to the file\n * @param {object} [options.forceNtuples = false] - force the ntuples format even if there is only x and y variables\n */\nexport function fromVariables(variables = {}, options = {}) {\n  const { info, meta, forceNtuples } = options;\n\n  let jcampOptions = {\n    info,\n    meta,\n  };\n\n  let keys = Object.keys(variables).map((key) => key.toLowerCase());\n  if (\n    keys.length === 2 &&\n    keys.includes('x') &&\n    keys.includes('y') &&\n    !forceNtuples\n  ) {\n    let x = variables.x;\n    let xLabel = x.label || x.name || 'x';\n\n    jcampOptions.info.xUnits = xLabel.includes(variables.x.units)\n      ? xLabel\n      : `${xLabel} [${variables.x.units}]`;\n\n    let y = variables.y;\n    let yLabel = y.label || y.name || 'y';\n\n    jcampOptions.info.yUnits = yLabel.includes(variables.y.units)\n      ? yLabel\n      : `${yLabel} [${variables.y.units}]`;\n    return fromJSON({ x: variables.x.data, y: variables.y.data }, jcampOptions);\n  } else {\n    return creatorNtuples(variables, options);\n  }\n}\n","/**\n * Create a jcamp\n * @param {object} data - object of array\n * @param {object} [options={}] - metadata object\n * @param {string} [options.info={}] - metadata of the file\n * @param {string} [options.info.title = ''] - title of the file\n * @param {string} [options.info.owner = ''] - owner of the file\n * @param {string} [options.info.origin = ''] - origin of the file\n * @param {string} [options.info.dataType = ''] - type of data\n * @param {string} [options.info.xUnits = ''] - units for the x axis for variables===undefined\n * @param {string} [options.info.yUnits = ''] - units for the y axis for variables===undefined\n * @param {object} [options.meta = {}] - comments to add to the file\n * @return {string} JCAMP of the input\n */\nexport function fromJSON(data, options = {}) {\n  const { meta = {}, info = {} } = options;\n\n  const {\n    title = '',\n    owner = '',\n    origin = '',\n    dataType = '',\n    xUnits = '',\n    yUnits = '',\n  } = info;\n  let firstX = Number.POSITIVE_INFINITY;\n  let lastX = Number.NEGATIVE_INFINITY;\n  let firstY = Number.POSITIVE_INFINITY;\n  let lastY = Number.NEGATIVE_INFINITY;\n  let points = [];\n\n  for (let i = 0; i < data.x.length; i++) {\n    let x = data.x[i];\n    let y = data.y[i];\n    if (firstX > x) {\n      firstX = x;\n    }\n    if (lastX < x) {\n      lastX = x;\n    }\n    if (firstY > y) {\n      firstY = y;\n    }\n    if (lastY < y) {\n      lastY = y;\n    }\n    points.push(`${x} ${y}`);\n  }\n\n  let header = `##TITLE=${title}\n##JCAMP-DX=4.24\n##DATA TYPE=${dataType}\n##ORIGIN=${origin}\n##OWNER=${owner}\n##XUNITS=${xUnits}\n##YUNITS=${yUnits}\n##FIRSTX=${firstX}\n##LASTX=${lastX}\n##FIRSTY=${firstY}\n##LASTY=${lastY}\\n`;\n\n  for (const key in meta) {\n    header +=\n      key.toLowerCase() === 'cheminfo'\n        ? `##$${key}=${JSON.stringify(meta[key])}\\n`\n        : `##$${key}=${meta[key]}\\n`;\n  }\n\n  // we leave the header and utf8 fonts ${header.replace(/[^\\t\\r\\n\\x20-\\x7F]/g, '')\n\n  return `${header}##NPOINTS=${points.length}\n##PEAK TABLE=(XY..XY)\n${points.join('\\n')}\n##END`;\n}\n","import maxFct from 'ml-array-max';\nimport minFct from 'ml-array-min';\n\n/**\n * Parse from a xyxy data array\n * @param {Array<Array<number>>} variables\n * @param {object} [meta] - same metadata object format that the fromText\n * @return {string} JCAMP of the input\n */\nexport default function creatorNtuples(variables, options) {\n  const { meta = {}, info = {} } = options;\n\n  const { title = '', owner = '', origin = '', dataType = '' } = info;\n\n  const symbol = [];\n  const varName = [];\n  const varType = [];\n  const varDim = [];\n  const units = [];\n  const first = [];\n  const last = [];\n  const min = [];\n  const max = [];\n  const factor = [];\n\n  const keys = Object.keys(variables);\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    let variable = variables[key];\n\n    let name = variable.label && variable.label.replace(/ *\\[.*/, '');\n    let unit = variable.label && variable.label.replace(/.*\\[(.*)\\].*/, '$1');\n\n    symbol.push(variable.symbol || key);\n    varName.push(variable.name || name || key);\n    varDim.push(variables[key].data.length);\n\n    varType.push(\n      variable.type\n        ? variable.type.toUpperCase()\n        : i === 0\n        ? 'INDEPENDENT'\n        : 'DEPENDENT',\n    );\n    units.push(variable.units || unit || '');\n    first.push(variables[key][0]);\n    last.push(variables[key][variables[key].length - 1]);\n    min.push(minFct(variables[key].data));\n    max.push(maxFct(variables[key].data));\n    factor.push(1);\n  }\n\n  let header = `##TITLE=${title}\n##JCAMP-DX=6.00\n##DATA TYPE=${dataType}\n##ORIGIN=${origin}\n##OWNER=${owner}\\n`;\n\n  for (const key in meta) {\n    header +=\n      typeof meta[key] === 'object'\n        ? `##$${key}=${JSON.stringify(meta[key])}\\n`\n        : `##$${key}=${meta[key]}\\n`;\n  }\n\n  header += `##NTUPLES= ${dataType}\n##VAR_NAME=  ${varName.join()}\n##SYMBOL=    ${symbol.join()}\n##VAR_TYPE=  ${varType.join()}\n##VAR_DIM=   ${varDim.join()}\n##UNITS=     ${units.join()}\n##PAGE= N=1\\n`;\n\n  header += `##DATA TABLE= (${symbol.join('')}..${symbol.join('')}), PEAKS\\n`;\n\n  for (let i = 0; i < variables[keys[0]].data.length; i++) {\n    let point = [];\n    for (let key of keys) {\n      point.push(variables[key].data[i]);\n    }\n    header += `${point.join('\\t')}\\n`;\n  }\n\n  header += '##END';\n  return header;\n}\n","import { fromVariables } from 'convert-to-jcamp';\nexport function toJcamps(analysis, options = {}) {\n    let jcamps = [];\n    for (let spectrum of analysis.spectra) {\n        jcamps.push(getJcamp(spectrum, options));\n    }\n    return jcamps;\n}\nfunction getJcamp(spectrum, options) {\n    const { info = {}, meta = {} } = options;\n    let jcampOptions = {\n        options: {},\n        info: {\n            title: spectrum.title,\n            dataType: spectrum.dataType,\n            ...info,\n        },\n        meta: { ...spectrum.meta, ...meta },\n    };\n    return fromVariables(spectrum.variables, jcampOptions);\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG9KY2FtcHMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvdG8vdG9KY2FtcHMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBU2pELE1BQU0sVUFBVSxRQUFRLENBQUMsUUFBa0IsRUFBRSxVQUEyQixFQUFFO0lBQ3hFLElBQUksTUFBTSxHQUFHLEVBQUUsQ0FBQztJQUNoQixLQUFLLElBQUksUUFBUSxJQUFJLFFBQVEsQ0FBQyxPQUFPLEVBQUU7UUFDckMsTUFBTSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsUUFBUSxFQUFFLE9BQU8sQ0FBQyxDQUFDLENBQUM7S0FDMUM7SUFDRCxPQUFPLE1BQU0sQ0FBQztBQUNoQixDQUFDO0FBRUQsU0FBUyxRQUFRLENBQUMsUUFBc0IsRUFBRSxPQUF3QjtJQUNoRSxNQUFNLEVBQUUsSUFBSSxHQUFHLEVBQUUsRUFBRSxJQUFJLEdBQUcsRUFBRSxFQUFFLEdBQUcsT0FBTyxDQUFDO0lBRXpDLElBQUksWUFBWSxHQUFHO1FBQ2pCLE9BQU8sRUFBRSxFQUFFO1FBQ1gsSUFBSSxFQUFFO1lBQ0osS0FBSyxFQUFFLFFBQVEsQ0FBQyxLQUFLO1lBQ3JCLFFBQVEsRUFBRSxRQUFRLENBQUMsUUFBUTtZQUMzQixHQUFHLElBQUk7U0FDUjtRQUNELElBQUksRUFBRSxFQUFFLEdBQUcsUUFBUSxDQUFDLElBQUksRUFBRSxHQUFHLElBQUksRUFBRTtLQUNwQyxDQUFDO0lBRUYsT0FBTyxhQUFhLENBQUMsUUFBUSxDQUFDLFNBQVMsRUFBRSxZQUFZLENBQUMsQ0FBQztBQUN6RCxDQUFDIn0=","/**\n * @typedef {Object} Peak\n * @property {number} wavenumber\n * @property {number} transmittance\n * @property {number} absorbance\n * @property {number} kind\n * @property {number} assignment\n */\n\n/**\n * Creates annotations for jsgraph that allows to display the result of peak picking\n * @param {array<Peak>} peaks\n * @param {object} [options={}]\n * @param {string} [options.fillColor='green']\n * @param {string} [options.strokeColor='red']\n * @param {string} [options.showKind=true] Display the kind, 'm', 'w', 'S'\n * @param {string} [options.showAssignment=true] Display the assignment\n * @param {function} [options.createFct] (annotation, peak) => {}: callback allowing to add properties\n * @param {string} [options.mode='t100'] 't100'=transmittance in %, 't'=transmittance, 'a'=absorbance\n * @returns array\n */\n\nexport function getAnnotations(peaks, options = {}) {\n  const {\n    fillColor = 'green',\n    strokeColor = 'red',\n    creationFct,\n    mode = 't100',\n  } = options;\n  let annotations = peaks.map((peak) => {\n    let annotation = {\n      line: 1,\n      type: 'rect',\n      strokeColor: strokeColor,\n      strokeWidth: 0,\n      fillColor: fillColor,\n    };\n    if (creationFct) {\n      creationFct(annotation, peak);\n    }\n    switch (mode) {\n      case 'a':\n        annotationAbsorbance(annotation, peak, options);\n        break;\n      case 't':\n        annotationTransmittance(annotation, peak, 1, options);\n        break;\n      case 't100':\n        annotationTransmittance(annotation, peak, 100, options);\n        break;\n      default:\n    }\n    return annotation;\n  });\n  return annotations;\n}\n\nfunction annotationTransmittance(annotation, peak, factor = 1, options = {}) {\n  const { showKind = true, showAssignment = true } = options;\n  let labels = [];\n  let line = 0;\n\n  if (showKind) {\n    labels.push({\n      text: peak.kind,\n      size: '18px',\n      anchor: 'middle',\n      color: 'red',\n      position: {\n        x: peak.wavenumber,\n        y: peak.transmittance * factor,\n        dy: `${23 + line * 14}px`,\n      },\n    });\n    line++;\n  }\n\n  if (showAssignment) {\n    labels.push({\n      text: peak.assignment,\n      size: '18px',\n      anchor: 'middle',\n      color: 'darkred',\n      position: {\n        x: peak.wavenumber,\n        y: peak.transmittance * factor,\n        dy: `${23 + line * 14}px`,\n      },\n    });\n    line++;\n  }\n\n  annotation.labels = labels;\n  annotation.position = [\n    {\n      x: peak.wavenumber,\n      y: peak.transmittance * factor,\n      dy: '10px',\n      dx: '-1px',\n    },\n    {\n      x: peak.wavenumber,\n      y: peak.transmittance * factor,\n      dy: '5px',\n      dx: '1px',\n    },\n  ];\n}\n\nfunction annotationAbsorbance(annotation, peak, options = {}) {\n  const {\n    showKind = true,\n    showAssignment = true,\n    assignmentAngle = -45,\n  } = options;\n  let labels = [];\n  let line = 0;\n\n  if (showKind) {\n    labels.push({\n      text: peak.kind,\n      size: '18px',\n      anchor: 'middle',\n      color: 'red',\n      position: {\n        x: peak.wavenumber,\n        y: peak.absorbance,\n        dy: `${-15 - line * 14}px`,\n      },\n    });\n    line++;\n  }\n\n  if (showAssignment) {\n    labels.push({\n      text: peak.assignment,\n      size: '18px',\n      angle: assignmentAngle,\n      anchor: 'left',\n      color: 'darkred',\n      position: {\n        x: peak.wavenumber,\n        y: peak.absorbance,\n        dy: `${-15 - line * 14}px`,\n      },\n    });\n    line++;\n  }\n\n  annotation.labels = labels;\n\n  annotation.position = [\n    {\n      x: peak.wavenumber,\n      y: peak.absorbance,\n      dy: '-10px',\n      dx: '-1px',\n    },\n    {\n      x: peak.wavenumber,\n      y: peak.absorbance,\n      dy: '-5px',\n      dx: '1px',\n    },\n  ];\n}\n","import { fromJcamp as commonFromJcamp } from 'common-spectrum';\n\nexport function fromJcamp(jcamp, options) {\n  return commonFromJcamp(jcamp, { ...options, spectrumCallback });\n}\n\nfunction spectrumCallback(variables) {\n  // we add missing absorbance / transmittance\n  // variable a = absorbance\n  // variable t = transmittance\n  let yVariable = variables.y;\n  let absorbance = true;\n  if (yVariable.label.toLowerCase().includes('trans')) {\n    absorbance = false;\n  }\n\n  if (absorbance) {\n    variables.a = { ...yVariable };\n    variables.a.data = variables.a.data.slice();\n    variables.t = {\n      data: yVariable.data.map((absorbance) => 10 ** -absorbance * 100),\n      label: 'Transmittance (%)',\n      units: '',\n    };\n  } else {\n    const factor =\n      yVariable.label.includes('%') ||\n      yVariable.label.toLowerCase().includes('percent')\n        ? 100\n        : 1;\n    variables.a = {\n      data: yVariable.data.map(\n        (transmittance) => -Math.log10(transmittance / factor),\n      ),\n      label: 'Absorbance',\n      units: '',\n    };\n    if (factor === 100) {\n      variables.t = { ...yVariable };\n      variables.t.data = variables.t.data.slice();\n    } else {\n      variables.t = {\n        units: '',\n        label: 'Transmittance (%)',\n        data: yVariable.data.map((transmittance) => transmittance * 100),\n      };\n    }\n  }\n}\n","import { JSGraph as OriginalJSGraph } from 'common-spectrum';\n\nimport { getAnnotations } from './jsgraph/getAnnotations';\n\nexport {\n  Analysis,\n  AnalysesManager,\n  toJcamp,\n  peakPicking,\n  autoPeakPicking,\n} from 'common-spectrum';\n\nexport { fromJcamp } from './from/fromJcamp';\n\nexport const JSGraph = { ...OriginalJSGraph, getAnnotations };\n","import { getJSGraph } from './jsgraph/getJSGraph';\nimport { getNormalizationAnnotations } from './jsgraph/getNormalizationAnnotations';\nexport * from './AnalysesManager';\nexport * from './Analysis';\nexport * from './from/fromJcamp';\nexport * from './to/toJcamp';\nexport * from './to/toJcamps';\nexport * from './to/toText';\nexport * from './util/getNormalizedSpectrum';\nexport * from './util/peakPicking';\nexport * from './util/autoPeakPicking';\nexport { getReactPlotJSON } from './reactPlot/getReactPlotJSON';\nexport const JSGraph = {\n    getJSGraph,\n    getNormalizationAnnotations,\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBQ2xELE9BQU8sRUFBRSwyQkFBMkIsRUFBRSxNQUFNLHVDQUF1QyxDQUFDO0FBRXBGLGNBQWMsbUJBQW1CLENBQUM7QUFDbEMsY0FBYyxZQUFZLENBQUM7QUFDM0IsY0FBYyxrQkFBa0IsQ0FBQztBQUNqQyxjQUFjLGNBQWMsQ0FBQztBQUM3QixjQUFjLGVBQWUsQ0FBQztBQUM5QixjQUFjLGFBQWEsQ0FBQztBQUM1QixjQUFjLDhCQUE4QixDQUFDO0FBRTdDLGNBQWMsb0JBQW9CLENBQUM7QUFDbkMsY0FBYyx3QkFBd0IsQ0FBQztBQUV2QyxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSw4QkFBOEIsQ0FBQztBQUVoRSxNQUFNLENBQUMsTUFBTSxPQUFPLEdBQUc7SUFDckIsVUFBVTtJQUNWLDJCQUEyQjtDQUM1QixDQUFDIn0=","import { xyFilterXPositive } from 'ml-spectra-processing';\nimport { addStyle } from './addStyle';\nimport { COLORS } from './colors';\n/**\n * Generate a jsgraph chart format from an array of Analysis\n */\nexport function getJSGraph(analyses, options = {}) {\n    const { colors = COLORS, opacities = [1], linesWidth = [1], selector = {}, normalization, xAxis = {}, yAxis = {}, } = options;\n    let series = [];\n    let xLabel = '';\n    let yLabel = '';\n    for (let i = 0; i < analyses.length; i++) {\n        const analysis = analyses[i];\n        let serie = {};\n        let currentData = analysis.getNormalizedSpectrum({\n            selector,\n            normalization,\n        });\n        if (!currentData)\n            continue;\n        if (!xLabel)\n            xLabel = currentData.variables.x.label;\n        if (!yLabel)\n            yLabel = currentData.variables.y.label;\n        addStyle(serie, analysis, {\n            color: colors[i % colors.length],\n            opacity: opacities[i % opacities.length],\n            lineWidth: linesWidth[i % linesWidth.length],\n        });\n        serie.data = {\n            x: currentData.variables.x.data,\n            y: currentData.variables.y.data,\n        };\n        if (xAxis.logScale) {\n            serie.data = xyFilterXPositive(serie.data);\n        }\n        series.push(serie);\n    }\n    return {\n        axes: {\n            x: {\n                label: xLabel,\n                unit: '',\n                flipped: false,\n                display: true,\n                ...xAxis,\n            },\n            y: {\n                label: yLabel,\n                unit: '',\n                flipped: false,\n                display: true,\n                ...yAxis,\n            },\n        },\n        series,\n    };\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2V0SlNHcmFwaC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9qc2dyYXBoL2dldEpTR3JhcGgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFLMUQsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLFlBQVksQ0FBQztBQUN0QyxPQUFPLEVBQUUsTUFBTSxFQUFFLE1BQU0sVUFBVSxDQUFDO0FBdUJsQzs7R0FFRztBQUNILE1BQU0sVUFBVSxVQUFVLENBQUMsUUFBb0IsRUFBRSxVQUEwQixFQUFFO0lBQzNFLE1BQU0sRUFDSixNQUFNLEdBQUcsTUFBTSxFQUNmLFNBQVMsR0FBRyxDQUFDLENBQUMsQ0FBQyxFQUNmLFVBQVUsR0FBRyxDQUFDLENBQUMsQ0FBQyxFQUNoQixRQUFRLEdBQUcsRUFBRSxFQUNiLGFBQWEsRUFDYixLQUFLLEdBQUcsRUFBRSxFQUNWLEtBQUssR0FBRyxFQUFFLEdBQ1gsR0FBRyxPQUFPLENBQUM7SUFDWixJQUFJLE1BQU0sR0FBRyxFQUFFLENBQUM7SUFFaEIsSUFBSSxNQUFNLEdBQUcsRUFBRSxDQUFDO0lBQ2hCLElBQUksTUFBTSxHQUFHLEVBQUUsQ0FBQztJQUVoQixLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsUUFBUSxDQUFDLE1BQU0sRUFBRSxDQUFDLEVBQUUsRUFBRTtRQUN4QyxNQUFNLFFBQVEsR0FBRyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDN0IsSUFBSSxLQUFLLEdBQTRCLEVBQUUsQ0FBQztRQUN4QyxJQUFJLFdBQVcsR0FBRyxRQUFRLENBQUMscUJBQXFCLENBQUM7WUFDL0MsUUFBUTtZQUNSLGFBQWE7U0FDZCxDQUFDLENBQUM7UUFDSCxJQUFJLENBQUMsV0FBVztZQUFFLFNBQVM7UUFDM0IsSUFBSSxDQUFDLE1BQU07WUFBRSxNQUFNLEdBQUcsV0FBVyxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDO1FBQ3BELElBQUksQ0FBQyxNQUFNO1lBQUUsTUFBTSxHQUFHLFdBQVcsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQztRQUNwRCxRQUFRLENBQUMsS0FBSyxFQUFFLFFBQVEsRUFBRTtZQUN4QixLQUFLLEVBQUUsTUFBTSxDQUFDLENBQUMsR0FBRyxNQUFNLENBQUMsTUFBTSxDQUFDO1lBQ2hDLE9BQU8sRUFBRSxTQUFTLENBQUMsQ0FBQyxHQUFHLFNBQVMsQ0FBQyxNQUFNLENBQUM7WUFDeEMsU0FBUyxFQUFFLFVBQVUsQ0FBQyxDQUFDLEdBQUcsVUFBVSxDQUFDLE1BQU0sQ0FBQztTQUM3QyxDQUFDLENBQUM7UUFDSCxLQUFLLENBQUMsSUFBSSxHQUFHO1lBQ1gsQ0FBQyxFQUFFLFdBQVcsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLElBQUk7WUFDL0IsQ0FBQyxFQUFFLFdBQVcsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLElBQUk7U0FDaEMsQ0FBQztRQUVGLElBQUksS0FBSyxDQUFDLFFBQVEsRUFBRTtZQUNsQixLQUFLLENBQUMsSUFBSSxHQUFHLGlCQUFpQixDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsQ0FBQztTQUM1QztRQUVELE1BQU0sQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7S0FDcEI7SUFDRCxPQUFPO1FBQ0wsSUFBSSxFQUFFO1lBQ0osQ0FBQyxFQUFFO2dCQUNELEtBQUssRUFBRSxNQUFNO2dCQUNiLElBQUksRUFBRSxFQUFFO2dCQUNSLE9BQU8sRUFBRSxLQUFLO2dCQUNkLE9BQU8sRUFBRSxJQUFJO2dCQUNiLEdBQUcsS0FBSzthQUNUO1lBQ0QsQ0FBQyxFQUFFO2dCQUNELEtBQUssRUFBRSxNQUFNO2dCQUNiLElBQUksRUFBRSxFQUFFO2dCQUNSLE9BQU8sRUFBRSxLQUFLO2dCQUNkLE9BQU8sRUFBRSxJQUFJO2dCQUNiLEdBQUcsS0FBSzthQUNUO1NBQ0Y7UUFDRCxNQUFNO0tBQ1AsQ0FBQztBQUNKLENBQUMifQ==","export function getNormalizationAnnotations(filter = {}, boundary = { y: { min: '0px', max: '2000px' } }) {\n    let { exclusions = [] } = filter;\n    let annotations = [];\n    exclusions = exclusions.filter((exclusion) => !exclusion.ignore);\n    annotations = exclusions.map((exclusion) => {\n        let annotation = {\n            type: 'rect',\n            position: [\n                { x: exclusion.from, y: boundary.y.min },\n                { x: exclusion.to, y: boundary.y.max },\n            ],\n            strokeWidth: 0,\n            fillColor: 'rgba(255,255,224,1)',\n        };\n        return annotation;\n    });\n    if (filter.from !== undefined) {\n        annotations.push({\n            type: 'rect',\n            position: [\n                { x: Number.MIN_SAFE_INTEGER, y: boundary.y.min },\n                { x: filter.from, y: boundary.y.max },\n            ],\n            strokeWidth: 0,\n            fillColor: 'rgba(255,255,224,1)',\n        });\n    }\n    if (filter.to !== undefined) {\n        annotations.push({\n            type: 'rect',\n            position: [\n                { x: filter.to, y: boundary.y.min },\n                { x: Number.MAX_SAFE_INTEGER, y: boundary.y.max },\n            ],\n            strokeWidth: 0,\n            fillColor: 'rgba(255,255,224,1)',\n        });\n    }\n    return annotations;\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2V0Tm9ybWFsaXphdGlvbkFubm90YXRpb25zLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2pzZ3JhcGgvZ2V0Tm9ybWFsaXphdGlvbkFubm90YXRpb25zLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQVdBLE1BQU0sVUFBVSwyQkFBMkIsQ0FDekMsU0FBNEIsRUFBRSxFQUM5QixRQUFRLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxHQUFHLEVBQUUsS0FBSyxFQUFFLEdBQUcsRUFBRSxRQUFRLEVBQUUsRUFBRTtJQUUvQyxJQUFJLEVBQUUsVUFBVSxHQUFHLEVBQUUsRUFBRSxHQUFHLE1BQU0sQ0FBQztJQUVqQyxJQUFJLFdBQVcsR0FBRyxFQUFFLENBQUM7SUFDckIsVUFBVSxHQUFHLFVBQVUsQ0FBQyxNQUFNLENBQUMsQ0FBQyxTQUFTLEVBQUUsRUFBRSxDQUFDLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQ2pFLFdBQVcsR0FBRyxVQUFVLENBQUMsR0FBRyxDQUFDLENBQUMsU0FBUyxFQUFFLEVBQUU7UUFDekMsSUFBSSxVQUFVLEdBQUc7WUFDZixJQUFJLEVBQUUsTUFBTTtZQUNaLFFBQVEsRUFBRTtnQkFDUixFQUFFLENBQUMsRUFBRSxTQUFTLENBQUMsSUFBSSxFQUFFLENBQUMsRUFBRSxRQUFRLENBQUMsQ0FBQyxDQUFDLEdBQUcsRUFBRTtnQkFDeEMsRUFBRSxDQUFDLEVBQUUsU0FBUyxDQUFDLEVBQUUsRUFBRSxDQUFDLEVBQUUsUUFBUSxDQUFDLENBQUMsQ0FBQyxHQUFHLEVBQUU7YUFDdkM7WUFDRCxXQUFXLEVBQUUsQ0FBQztZQUNkLFNBQVMsRUFBRSxxQkFBcUI7U0FDakMsQ0FBQztRQUNGLE9BQU8sVUFBVSxDQUFDO0lBQ3BCLENBQUMsQ0FBQyxDQUFDO0lBQ0gsSUFBSSxNQUFNLENBQUMsSUFBSSxLQUFLLFNBQVMsRUFBRTtRQUM3QixXQUFXLENBQUMsSUFBSSxDQUFDO1lBQ2YsSUFBSSxFQUFFLE1BQU07WUFDWixRQUFRLEVBQUU7Z0JBQ1IsRUFBRSxDQUFDLEVBQUUsTUFBTSxDQUFDLGdCQUFnQixFQUFFLENBQUMsRUFBRSxRQUFRLENBQUMsQ0FBQyxDQUFDLEdBQUcsRUFBRTtnQkFDakQsRUFBRSxDQUFDLEVBQUUsTUFBTSxDQUFDLElBQUksRUFBRSxDQUFDLEVBQUUsUUFBUSxDQUFDLENBQUMsQ0FBQyxHQUFHLEVBQUU7YUFDdEM7WUFDRCxXQUFXLEVBQUUsQ0FBQztZQUNkLFNBQVMsRUFBRSxxQkFBcUI7U0FDakMsQ0FBQyxDQUFDO0tBQ0o7SUFDRCxJQUFJLE1BQU0sQ0FBQyxFQUFFLEtBQUssU0FBUyxFQUFFO1FBQzNCLFdBQVcsQ0FBQyxJQUFJLENBQUM7WUFDZixJQUFJLEVBQUUsTUFBTTtZQUNaLFFBQVEsRUFBRTtnQkFDUixFQUFFLENBQUMsRUFBRSxNQUFNLENBQUMsRUFBRSxFQUFFLENBQUMsRUFBRSxRQUFRLENBQUMsQ0FBQyxDQUFDLEdBQUcsRUFBRTtnQkFDbkMsRUFBRSxDQUFDLEVBQUUsTUFBTSxDQUFDLGdCQUFnQixFQUFFLENBQUMsRUFBRSxRQUFRLENBQUMsQ0FBQyxDQUFDLEdBQUcsRUFBRTthQUNsRDtZQUNELFdBQVcsRUFBRSxDQUFDO1lBQ2QsU0FBUyxFQUFFLHFCQUFxQjtTQUNqQyxDQUFDLENBQUM7S0FDSjtJQUNELE9BQU8sV0FBVyxDQUFDO0FBQ3JCLENBQUMifQ==","import { appendDistinctParameter } from './util/appendDistinctParameter';\nimport { appendDistinctValue } from './util/appendDistinctValue';\nexport class AnalysesManager {\n    constructor() {\n        this.analyses = [];\n    }\n    addAnalysis(analysis) {\n        let index = this.getAnalysisIndex(analysis.id);\n        if (index === undefined) {\n            this.analyses.push(analysis);\n        }\n        else {\n            this.analyses[index] = analysis;\n        }\n    }\n    getAnalyses(options = {}) {\n        const { ids } = options;\n        let analyses = [];\n        for (const analysis of this.analyses) {\n            if (!ids || ids.includes(analysis.id)) {\n                analyses.push(analysis);\n            }\n        }\n        return analyses;\n    }\n    getSpectra() {\n        const spectra = [];\n        for (const analysis of this.analyses) {\n            spectra.push(...analysis.spectra);\n        }\n        return spectra;\n    }\n    /**\n     * Get an array of objects (key + count) of all the titles\n     */\n    getDistinctTitles() {\n        let values = {};\n        for (let spectrum of this.getSpectra()) {\n            if (spectrum.title) {\n                appendDistinctValue(values, spectrum.title);\n            }\n        }\n        return Object.keys(values).map((key) => values[key]);\n    }\n    /**\n     * Get an array of objects (key + count) of all the units\n     */\n    getDistinctUnits() {\n        var _a;\n        let values = {};\n        for (let spectrum of this.getSpectra()) {\n            if (spectrum.variables) {\n                for (let key in spectrum.variables) {\n                    const units = (_a = spectrum.variables[key].units) === null || _a === void 0 ? void 0 : _a.replace(/\\s+\\[.*/, '');\n                    if (units) {\n                        appendDistinctValue(values, units);\n                    }\n                }\n            }\n        }\n        return Object.keys(values).map((key) => values[key]);\n    }\n    /**\n     * Get an array of objects (key + count) of all the labels\n     */\n    getDistinctLabels() {\n        let values = {};\n        for (let spectrum of this.getSpectra()) {\n            if (spectrum.variables) {\n                for (let key in spectrum.variables) {\n                    appendDistinctValue(values, spectrum.variables[key].label.replace(/\\s+\\[.*/, ''));\n                }\n            }\n        }\n        return Object.keys(values).map((key) => values[key]);\n    }\n    /**\n     * Get an array of objects (key + count) of all the dataTypes\n     */\n    getDistinctDataTypes() {\n        let values = {};\n        for (let spectrum of this.getSpectra()) {\n            if (spectrum.dataType) {\n                appendDistinctValue(values, spectrum.dataType);\n            }\n        }\n        return Object.keys(values).map((key) => values[key]);\n    }\n    /**\n     * Get an array of objects (key + count) of all the meta\n     */\n    getDistinctMeta() {\n        let values = {};\n        for (let spectrum of this.getSpectra()) {\n            if (spectrum.meta) {\n                for (let key in spectrum.meta) {\n                    appendDistinctParameter(values, key, spectrum.meta[key]);\n                }\n            }\n        }\n        return Object.keys(values).map((key) => values[key]);\n    }\n    removeAllAnalyses() {\n        this.analyses.splice(0);\n    }\n    /**\n     * Remove the analysis from the AnalysesManager for the specified id\n     */\n    removeAnalysis(id) {\n        let index = this.getAnalysisIndex(id);\n        if (index === undefined)\n            return undefined;\n        return this.analyses.splice(index, 1);\n    }\n    /**\n     * Returns the index of the analysis in the analyses array\n     */\n    getAnalysisIndex(id) {\n        if (!id)\n            return undefined;\n        for (let i = 0; i < this.analyses.length; i++) {\n            let analysis = this.analyses[i];\n            if (analysis.id === id)\n                return i;\n        }\n        return undefined;\n    }\n    /**\n     * Checks if the ID of an analysis exists in the AnalysesManager\n     */\n    includes(id) {\n        const index = this.getAnalysisIndex(id);\n        return index === undefined ? false : !isNaN(index);\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQW5hbHlzZXNNYW5hZ2VyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL0FuYWx5c2VzTWFuYWdlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQSxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSxnQ0FBZ0MsQ0FBQztBQUN6RSxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQztBQU1qRSxNQUFNLE9BQU8sZUFBZTtJQUcxQjtRQUNFLElBQUksQ0FBQyxRQUFRLEdBQUcsRUFBRSxDQUFDO0lBQ3JCLENBQUM7SUFFTSxXQUFXLENBQUMsUUFBa0I7UUFDbkMsSUFBSSxLQUFLLEdBQUcsSUFBSSxDQUFDLGdCQUFnQixDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQUMsQ0FBQztRQUMvQyxJQUFJLEtBQUssS0FBSyxTQUFTLEVBQUU7WUFDdkIsSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7U0FDOUI7YUFBTTtZQUNMLElBQUksQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLEdBQUcsUUFBUSxDQUFDO1NBQ2pDO0lBQ0gsQ0FBQztJQUVNLFdBQVcsQ0FBQyxVQUE4QixFQUFFO1FBQ2pELE1BQU0sRUFBRSxHQUFHLEVBQUUsR0FBRyxPQUFPLENBQUM7UUFDeEIsSUFBSSxRQUFRLEdBQWUsRUFBRSxDQUFDO1FBQzlCLEtBQUssTUFBTSxRQUFRLElBQUksSUFBSSxDQUFDLFFBQVEsRUFBRTtZQUNwQyxJQUFJLENBQUMsR0FBRyxJQUFJLEdBQUcsQ0FBQyxRQUFRLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxFQUFFO2dCQUNyQyxRQUFRLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO2FBQ3pCO1NBQ0Y7UUFDRCxPQUFPLFFBQVEsQ0FBQztJQUNsQixDQUFDO0lBRU0sVUFBVTtRQUNmLE1BQU0sT0FBTyxHQUFHLEVBQUUsQ0FBQztRQUNuQixLQUFLLE1BQU0sUUFBUSxJQUFJLElBQUks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","// @ts-ignore\nimport { gsd } from 'ml-gsd';\nimport { xyMaxClosestYPoint, xyMinClosestYPoint } from 'ml-spectra-processing';\nimport { getNormalizedSpectrum } from './getNormalizedSpectrum';\n/** Based on a x value we will return a peak*/\nexport function autoPeakPicking(spectrum, options = {}) {\n    var _a, _b;\n    const { xVariable = 'x', yVariable = 'y', normalizationOptions, minPeakWidth, } = options;\n    let x = (_a = spectrum.variables[xVariable]) === null || _a === void 0 ? void 0 : _a.data;\n    let y = (_b = spectrum.variables[yVariable]) === null || _b === void 0 ? void 0 : _b.data;\n    if (normalizationOptions) {\n        const tempSpectrum = {\n            variables: {\n                x: { data: x, label: '' },\n                y: { data: y, label: '' },\n            },\n        };\n        const normalizedSpectrum = getNormalizedSpectrum(tempSpectrum, normalizationOptions);\n        x = normalizedSpectrum.variables.x.data;\n        y = normalizedSpectrum.variables.y.data;\n    }\n    if (!x || !y)\n        return;\n    let { from, to } = options;\n    let peaks = gsd({ x, y }, options);\n    if (normalizationOptions) {\n        // we need to recalculate the real count\n        const xyClosestYPoint = options.maxCriteria === undefined || options.maxCriteria\n            ? xyMaxClosestYPoint\n            : xyMinClosestYPoint;\n        for (let peak of peaks) {\n            const closest = xyClosestYPoint({ x: spectrum.variables.x.data, y: spectrum.variables.y.data }, { target: peak.x });\n            peak.x = closest.x;\n            peak.y = closest.y;\n        }\n    }\n    if (from !== undefined) {\n        peaks = peaks.filter((peak) => peak.x >= from);\n    }\n    if (to !== undefined) {\n        peaks = peaks.filter((peak) => peak.x <= to);\n    }\n    if (minPeakWidth) {\n        peaks = peaks.filter((peak) => peak.width >= minPeakWidth);\n    }\n    return peaks.map((peak) => {\n        const result = {};\n        for (let key in spectrum.variables) {\n            result[key] = spectrum.variables[key].data[peak.index];\n        }\n        result.width = peak.width;\n        return result;\n    });\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXV0b1BlYWtQaWNraW5nLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL3V0aWwvYXV0b1BlYWtQaWNraW5nLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLGFBQWE7QUFDYixPQUFPLEVBQUUsR0FBRyxFQUFFLE1BQU0sUUFBUSxDQUFDO0FBQzdCLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxrQkFBa0IsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBSS9FLE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBRWhFLDhDQUE4QztBQUM5QyxNQUFNLFVBQVUsZUFBZSxDQUM3QixRQUFzQixFQUN0QixVQUFrQyxFQUFFOztJQUVwQyxNQUFNLEVBQ0osU0FBUyxHQUFHLEdBQUcsRUFDZixTQUFTLEdBQUcsR0FBRyxFQUNmLG9CQUFvQixFQUNwQixZQUFZLEdBQ2IsR0FBRyxPQUFPLENBQUM7SUFFWixJQUFJLENBQUMsR0FBRyxNQUFBLFFBQVEsQ0FBQyxTQUFTLENBQUMsU0FBUyxDQUFDLDBDQUFFLElBQUksQ0FBQztJQUM1QyxJQUFJLENBQUMsR0FBRyxNQUFBLFFBQVEsQ0FBQyxTQUFTLENBQUMsU0FBUyxDQUFDLDBDQUFFLElBQUksQ0FBQztJQUU1QyxJQUFJLG9CQUFvQixFQUFFO1FBQ3hCLE1BQU0sWUFBWSxHQUFpQjtZQUNqQyxTQUFTLEVBQUU7Z0JBQ1QsQ0FBQyxFQUFFLEVBQUUsSUFBSSxFQUFFLENBQUMsRUFBRSxLQUFLLEVBQUUsRUFBRSxFQUFFO2dCQUN6QixDQUFDLEVBQUUsRUFBRSxJQUFJLEVBQUUsQ0FBQyxFQUFFLEtBQUssRUFBRSxFQUFFLEVBQUU7YUFDMUI7U0FDRixDQUFDO1FBQ0YsTUFBTSxrQkFBa0IsR0FBRyxxQkFBcUIsQ0FDOUMsWUFBWSxFQUNaLG9CQUFvQixDQUNyQixDQUFDO1FBQ0YsQ0FBQyxHQUFHLGtCQUFrQixDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDO1FBQ3hDLENBQUMsR0FBRyxrQkFBa0IsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQztLQUN6QztJQUVELElBQUksQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQUUsT0FBTztJQUNyQixJQUFJLEVBQUUsSUFBSSxFQUFFLEVBQUUsRUFBRSxHQUFHLE9BQU8sQ0FBQztJQUUzQixJQUFJLEtBQUssR0FDUCxHQUFHLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsT0FBTyxDQUFDLENBQUM7SUFFekIsSUFBSSxvQkFBb0IsRUFBRTtRQUN4Qix3Q0FBd0M7UUFDeEMsTUFBTSxlQUFlLEdBQ25CLE9BQU8sQ0FBQyxXQUFXLEtBQUssU0FBUyxJQUFJLE9BQU8sQ0FBQyxXQUFXO1lBQ3RELENBQUMsQ0FBQyxrQkFBa0I7WUFDcEIsQ0FBQyxDQUFDLGtCQUFrQixDQUFDO1FBQ3pCLEtBQUssSUFBSSxJQUFJLElBQUksS0FBSyxFQUFFO1lBQ3RCLE1BQU0sT0FBTyxHQUFHLGVBQWUsQ0FDN0IsRUFBRSxDQUFDLEVBQUUsUUFBUSxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsSUFBSSxFQUFFLENBQUMsRUFBRSxRQUFRLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxJQUFJLEVBQUUsRUFDOUQsRUFBRSxNQUFNLEVBQUUsSUFBSSxDQUFDLENBQUMsRUFBRSxDQUNuQixDQUFDO1lBQ0YsSUFBSSxDQUFDLENBQUMsR0FBRyxPQUFPLENBQUMsQ0FBQyxDQUFDO1lBQ25CLElBQUksQ0FBQyxDQUFDLEdBQUcsT0FBTyxDQUFDLENBQUMsQ0FBQztTQUNwQjtLQUNGO0lBRUQsSUFBSSxJQUFJLEtBQUssU0FBUyxFQUFFO1FBQ3RCLEtBQUssR0FBRyxLQUFLLENBQUMsTUFBTSxDQUFDLENBQUMsSUFBSSxFQUFFLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxJQUFLLElBQWUsQ0FBQyxDQUFDO0tBQzVEO0lBQ0QsSUFBSSxFQUFFLEtBQUssU0FBUyxFQUFFO1FBQ3BCLEtBQUssR0FBRyxLQUFLLENBQUMsTUFBTSxDQUFDLENBQUMsSUFBSSxFQUFFLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxJQUFLLEVBQWEsQ0FBQyxDQUFDO0tBQzFEO0lBQ0QsSUFBSSxZQUFZLEVBQUU7UUFDaEIsS0FBSyxHQUFHLEtBQUssQ0FBQyxNQUFNLENBQUMsQ0FBQyxJQUFJLEVBQUUsRUFBRSxDQUFDLElBQUksQ0FBQyxLQUFLLElBQUksWUFBWSxDQUFDLENBQUM7S0FDNUQ7SUFFRCxPQUFPLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQyxJQUFJLEVBQUUsRUFBRTtRQUN4QixNQUFNLE1BQU0sR0FBMkIsRUFBRSxDQUFDO1FBQzFDLEtBQUssSUFBSSxHQUFHLElBQUksUUFBUSxDQUFDLFNBQVMsRUFBRTtZQUNsQyxNQUFNLENBQUMsR0FBRyxDQUFDLEdBQUcsUUFBUSxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO1NBQ3hEO1FBQ0QsTUFBTSxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDO1FBQzFCLE9BQU8sTUFBTSxDQUFDO0lBQ2hCLENBQUMsQ0FBQyxDQUFDO0FBQ0wsQ0FBQyJ9","import { xyMinClosestYPoint, xyMaxClosestYPoint, xFindClosestIndex, } from 'ml-spectra-processing';\n/** Based on a x value we will return a peak*/\nexport function peakPicking(spectrum, \n/** value to search (on x axis) */\ntarget, options = {}) {\n    var _a, _b;\n    const { xVariable = 'x', yVariable = 'y', optimize = false, max = true, } = options;\n    const x = (_a = spectrum.variables[xVariable]) === null || _a === void 0 ? void 0 : _a.data;\n    const y = (_b = spectrum.variables[yVariable]) === null || _b === void 0 ? void 0 : _b.data;\n    if (!x || !y)\n        return;\n    let targetIndex;\n    if (optimize) {\n        targetIndex = max\n            ? xyMaxClosestYPoint({ x, y }, { target }).index\n            : xyMinClosestYPoint({ x, y }, { target }).index;\n    }\n    else {\n        targetIndex = xFindClosestIndex(x, target);\n    }\n    const result = {};\n    for (let key in spectrum.variables) {\n        result[key] = spectrum.variables[key].data[targetIndex];\n    }\n    return result;\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGVha1BpY2tpbmcuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvdXRpbC9wZWFrUGlja2luZy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQ0wsa0JBQWtCLEVBQ2xCLGtCQUFrQixFQUNsQixpQkFBaUIsR0FDbEIsTUFBTSx1QkFBdUIsQ0FBQztBQUkvQiw4Q0FBOEM7QUFDOUMsTUFBTSxVQUFVLFdBQVcsQ0FDekIsUUFBc0I7QUFDdEIsa0NBQWtDO0FBQ2xDLE1BQWMsRUFDZCxVQUE4QixFQUFFOztJQUVoQyxNQUFNLEVBQ0osU0FBUyxHQUFHLEdBQUcsRUFDZixTQUFTLEdBQUcsR0FBRyxFQUNmLFFBQVEsR0FBRyxLQUFLLEVBQ2hCLEdBQUcsR0FBRyxJQUFJLEdBQ1gsR0FBRyxPQUFPLENBQUM7SUFFWixNQUFNLENBQUMsR0FBRyxNQUFBLFFBQVEsQ0FBQyxTQUFTLENBQUMsU0FBUyxDQUFDLDBDQUFFLElBQUksQ0FBQztJQUM5QyxNQUFNLENBQUMsR0FBRyxNQUFBLFFBQVEsQ0FBQyxTQUFTLENBQUMsU0FBUyxDQUFDLDBDQUFFLElBQUksQ0FBQztJQUM5QyxJQUFJLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUFFLE9BQU87SUFDckIsSUFBSSxXQUFXLENBQUM7SUFDaEIsSUFBSSxRQUFRLEVBQUU7UUFDWixXQUFXLEdBQUcsR0FBRztZQUNmLENBQUMsQ0FBQyxrQkFBa0IsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLE1BQU0sRUFBRSxDQUFDLENBQUMsS0FBSztZQUNoRCxDQUFDLENBQUMsa0JBQWtCLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxNQUFNLEVBQUUsQ0FBQyxDQUFDLEtBQUssQ0FBQztLQUNwRDtTQUFNO1FBQ0wsV0FBVyxHQUFHLGlCQUFpQixDQUFDLENBQUMsRUFBRSxNQUFNLENBQUMsQ0FBQztLQUM1QztJQUNELE1BQU0sTUFBTSxHQUEyQixFQUFFLENBQUM7SUFDMUMsS0FBSyxJQUFJLEdBQUcsSUFBSSxRQUFRLENBQUMsU0FBUyxFQUFFO1FBQ2xDLE1BQU0sQ0FBQyxHQUFHLENBQUMsR0FBRyxRQUFRLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQyxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQztLQUN6RDtJQUNELE9BQU8sTUFBTSxDQUFDO0FBQ2hCLENBQUMifQ==","import { toJcamps } from './toJcamps';\nexport function toJcamp(analysis, options = {}) {\n    return toJcamps(analysis, options).join('\\n');\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG9KY2FtcC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy90by90b0pjYW1wLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxZQUFZLENBQUM7QUFNdEMsTUFBTSxVQUFVLE9BQU8sQ0FBQyxRQUFrQixFQUFFLFVBQTJCLEVBQUU7SUFDdkUsT0FBTyxRQUFRLENBQUMsUUFBUSxFQUFFLE9BQU8sQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztBQUNoRCxDQUFDIn0="],"names":["toString","Object","prototype","isAnyArray","object","call","endsWith","a","d","e","f","length","g","h","i","j","c","b","_ref","module","exports","window","median","input","isArray","TypeError","quickSelectMedian","slice","xAdd","array1","array2","constant","isConstant","Error","Number","array3","Array","xMultiply","Float64Array","xDivide","xFindClosestIndex","array","target","low","high","middle","Math","abs","_typeof","obj","Symbol","iterator","constructor","sequentialFill","arguments","undefined","options","_options","_options$from","from","_options$to","to","_options$size","size","step","floor","push","_i","xIsMonotone","sum","sumValue","mean","min","_options$fromIndex","fromIndex","_options$toIndex","toIndex","isInteger","minValue","max","maxValue","xSubtract","xyCheck","data","x","y","xyEnsureGrowingX","prevX","Infinity","ansX","ansY","index","xyFilterXPositive","newX","newY","xyMaxClosestYPoint","targetIndex","previousIndex","MIN_SAFE_INTEGER","currentIndex","xyMaxY","xyMinClosestYPoint","minY","GAUSSIAN_EXP_FACTOR","LN2","ROOT_PI_OVER_LN2","sqrt","PI","ROOT_THREE","ROOT_2LN2","ROOT_2LN2_MINUS_ONE","erfinv","ln1MinusXSqrd","log","lnEtcBy2Plus2","firstSqrt","Gaussian","fwhm","sd","widthToFWHM","height","this","getData","factor","getFactor","ceil","pow","center","fct","area","getArea","width","fwhmToWidth","setFWHM","setHeight","exp","Lorentzian","squareFWHM","tan","PseudoVoigt","mu","setMu","axis","Gaussian2D","globalFWHM","xLength","xFactor","yLength","yFactor","xCenter","yCenter","volume","getVolume","axisLabel","axisName","toLowerCase","SavitzkyGolay","ys","xs","windowSize","derivative","polynomial","RangeError","console","warn","half","np","ans","weights","m","n","s","t","Weight","fullWeights","hs","constantH","wg1","wg2","d1","d2","l","getHs","wg","count","GramPoly","k","Grampoly","GenFact","gf","gsd","noiseLevel","sgOptions","shape","smoothY","heightFactor","broadRatio","maxCriteria","minMaxRatio","derivativeThreshold","realTopDetection","yIn","equalSpaced","isEqualSpaced","getNoiseLevel","dY","ddY","yData","SG","xData","dX","maxDdy","maxY","lastMax","lastMin","minddY","intervalL","intervalR","broadMask","possible","frequency","distanceJ","minDistance","gettingCloser","widthProcessor","kind","shapeOptions","replace","getShapeGenerator","signals","lastK","MAX_VALUE","soft","left","right","yLeft","yRight","determineRealTop","base","sort","xFWHM","yFWHM","tmp","maxDx","minDx","MAX_SAFE_INTEGER","stddev","averageDeviations","peakList","alpha","beta","gamma","p","currentPoint","log10","rescale","output","currentMin","currentMax","_options$min","autoMinMax","_options$max","indent","repeat","indentData","inspectMatrixWithOptions","matrix","maxRows","maxColumns","maxNumSize","name","rows","columns","maxI","maxJ","result","line","formatNumber","get","join","inspectData","num","numStr","String","padEnd","precise","toPrecision","exponential","toExponential","eIndex","indexOf","checkRowIndex","outer","checkColumnIndex","checkRowVector","vector","to1DArray","checkColumnVector","checkRowIndices","rowIndices","some","r","checkColumnIndices","columnIndices","checkRange","startRow","endRow","startColumn","endColumn","checkNumber","newArray","value","checkNonEmpty","isEmpty","AbstractMatrix","newRows","newColumns","newData","newMatrix","Matrix","row","column","set","fill","random","interval","round","zeros","matrix1","matrix2","checkMatrix","isMatrix","klass","apply","callback","to2DArray","copy","toJSON","isRowVector","isColumnVector","isVector","isSquare","isSymmetric","isEchelonForm","previousColumn","checked","isReducedEchelonForm","echelonForm","clone","iMax","swapRows","reducedEchelonForm","maxRow","pivot","setSubMatrix","neg","mulS","getRow","getRowVector","rowVector","setRow","row1","row2","temp","getColumn","getColumnVector","columnVector","setColumn","swapColumns","column1","column2","addRowVector","subRowVector","mulRowVector","divRowVector","addColumnVector","subColumnVector","mulColumnVector","divColumnVector","mulRow","mulColumn","NaN","v","maxIndex","idx","minIndex","maxRowIndex","minRow","minRowIndex","maxColumn","maxColumnIndex","minColumn","minColumnIndex","diag","norm","type","cumulativeSum","dot","vector2","vector1","mmul","other","Bcolj","strassen2x2","a11","b11","a12","b12","a21","b21","a22","b22","m1","m2","m3","m4","m5","c00","c01","c10","c11","strassen3x3","a00","a01","a02","a10","a20","b00","b01","b02","b10","b20","m6","m7","m8","m9","m12","m13","m14","m15","m16","m17","m18","c02","c12","c20","c21","c22","mmulStrassen","r1","c1","r2","c2","embed","mat","cols","resultat","blockMult","halfRows","parseInt","halfCols","subMatrix","add","sub","scaleRows","isFinite","scaleColumns","flipRows","first","last","flipColumns","kroneckerProduct","q","kroneckerSum","AxI","eye","IxB","transpose","sortRows","compareFunction","compareNumbers","sortColumns","subMatrixRow","indices","subMatrixColumn","selection","checkIndices","rowIndex","columnIndex","trace","by","sumByRow","sumByColumn","sumAll","product","productByRow","productByColumn","productAll","variance","unbiased","sum1","sum2","varianceByRow","varianceByColumn","varianceAll","standardDeviation","centerByRow","centerByColumn","centerAll","scale","getScaleByRow","scaleByRow","getScaleByColumn","scaleByColumn","divider","getScaleAll","scaleAll","for","rand","randomInt","randInt","diagonal","identity","negate","tensorProduct","nRows","nColumns","arrayData","removeRow","splice","addRow","removeColumn","newRow","addColumn","addS","addM","subS","subM","subtract","subtractS","subtractM","mul","mulM","multiply","multiplyS","multiplyM","div","divS","divM","divide","divideS","divideM","mod","modS","modM","modulus","modulusS","modulusM","and","andS","andM","or","orS","orM","xor","xorS","xorM","leftShift","leftShiftS","leftShiftM","signPropagatingRightShift","signPropagatingRightShiftS","signPropagatingRightShiftM","rightShift","rightShiftS","rightShiftM","zeroFillRightShift","zeroFillRightShiftS","zeroFillRightShiftM","not","acos","acosh","asin","asinh","atan","atanh","cbrt","clz32","cos","cosh","expm1","fround","log1p","log2","sign","sin","sinh","tanh","trunc","arg0","powS","powM","installMathOperations","BaseView","MatrixTransposeView","WrapperMatrix2D","LuDecomposition","LUcolj","kmax","lu","pivotVector","pivotSign","LU","isSingular","col","solve","X","determinant","hypotenuse","QrDecomposition","qr","rdiag","nrm","QR","Rdiag","isFullRank","SingularValueDecomposition","computeLeftSingularVectors","computeRightSingularVectors","autoTranspose","wantu","Boolean","wantv","swapped","aux","nu","ni","U","V","work","si","nct","nrt","mrc","pp","eps","EPSILON","kase","MIN_VALUE","isNaN","ks","cs","sn","sp","spm1","epm1","sk","ek","shift","Y","threshold","scols","Ls","rightSingularVectors","VL","vrows","urows","VLU","solveForDiagonal","inverse","vcols","ucols","tol","ii","leftHandSide","rightHandSide","useSVD","addStyle","serie","spectrum","color","opacity","lineWidth","match","toUpperCase","style","dash","label","id","COLORS","appendDistinctParameter","values","key","includes","appendDistinctValue","prepare","M","P","Pinv","Mt","ar","ac","Ap","Ai","Ax","LNZ","coloffset","adr","D","Lp","Parent","Lnz","Flag","Pattern","bp1","kk","p2","ldlSymbolic","Lx","Li","yi","lKi","len","top","ldlNumeric","B","ldlPerm","ldlLsolve","ldlDsolve","ldlLTsolve","ldlPermt","cuthillMckee_1","list","adj","visited","toVisit","eol","ptr","nbhd","compareNum","u","getCloseIndex","goal","closest","reduce","prev","curr","getClosestNumber","updateSystem","nbPoints","newVector","w","next","airPLS","baseline","iteration","maxIterations","lambda","factorCriterion","controlPoints","baseLineZones","forEach","arr","range","indexFrom","indexTo","sumNegDifferences","stopCriterion","lowerTriangularNonZeros","permutationEncodedArray","cuthillMckee","getDeltaMatrix","cho","Cholesky","difference","map","calculateError","maxNegativeDiff","diff","corrected","error","airPLSBaseline","numberPoints","regressionOptions","airpls","correctedSpectrum","maybeToPrecision","digits","BaseRegression","predict","_predict","train","toLaTeX","score","y2","xSum","ySum","chi2","rmsd","xSquared","ySquared","xY","PolynomialRegression","degree","powers","coefficients","checkArrayLength","pr","F","FT","A","regress","precision","_toFormula","isLaTeX","sup","closeSup","times","fn","str","charAt","json","iterativePolynomialBaseline","Regression","tolerance","delta","regression","fitting","oldFitting","baselineCorrection","xCheck","xRolling","padding","algorithm","fromEnd","toEnd","xPadding","subArray","buffer","rollingAverageBaseline","defaults","xRollingAverage","assign","rollingBallBaseline","maxima","minima","windowM","windowS","windowLeft","windowRight","rollingBall","rollingMedianBaseline","xRollingMedian","_options$algorithm","_options$sumValue","_options$maxValue","absoluteSumValue","absoluteSum","currentMaxValue","sumFactor","_i2","concat","normalize","zones","NEGATIVE_INFINITY","POSITIVE_INFINITY","JSON","parse","stringify","zone","filter","currentZone","integral","x0","x1","slope","intercept","equallySpaced","arrayXY","reverse","variant","numberOfPoints","exclusions","exclusion","nextExclusion","invert","unitsPerPoint","previous","current","currentTotal","zonesWithPoints","xResult","yResult","zoneResult","processZone","halfStep","lastStep","start","previousX","previousY","nextX","nextY","frontOutsideSpectra","backOutsideSpectra","currentValue","currentPoints","main","equallySpacedSlot","initialOriginalStep","lastOriginalStep","sumAtMin","sumAtMax","equallySpacedSmooth","filterX","points","currentFrom","getZones","currentZoneIndex","position","defaultOptions","src","matrixCase","cond","arrayCase","pad","padValue","savitzkyGolay","C","padArray","J","ones","inic","Jtranspose","factorial","det","getNormalizedSpectrum","variables","newSpectrum","units","title","dataType","meta","filters","processing","keepYUnits","_a","filterOptions","Stat","normed","isMonotone","arithmeticMean","lnsum","means","samples","percent","alreadySorted","theMean","theVariance","stdev","quart","q1","q2","q3","pooledVariance","vari","itemCount","itemArray","mean1","mean2","cov","s2","s3","dev","s4","weightedVariance","weightedMean","z","inPlace","standardDev","isString","isFiniteImpl","isNumber","uniq","strings","seen","item","hasOwnProperty","compareArray","properties","keys","mulSafe","decimals","arg","getFractional","divSafe","den","val","QtyError","err","create","message","stack","throwIncompatibleUnits","UNITS","BASE_UNITS","UNITY","UNITY_ARRAY","validateUnitDefinition","unitDef","definition","scalar","numerator","denominator","unit","PREFIX_VALUES","PREFIX_MAP","UNIT_VALUES","UNIT_MAP","OUTPUT_MAP","getUnits","unitKeys","substr","getKinds","getAliases","unitName","SIGNATURE_VECTOR","unitSignature","signature","unitSignatureVector","isBase","toBase","SIGN","INTEGER","FRACTION","QTY_STRING_REGEX","RegExp","POWER_OP","SAFE_POWER","TOP_REGEX","BOTTOM_REGEX","trim","exec","scalarMatch","parseFloat","nx","bottom","UNIT_TEST_REGEX","test","parseUnits","PREFIX_REGEX","UNIT_REGEX","UNIT_MATCH","UNIT_MATCH_REGEX","parsedUnitsCache","cached","unitMatch","normalizedUnits","globalParse","isQty","Qty","initValue","initUnits","assertValidConstructorArgs","baseScalar","_conversionCache","isDefinitionObject","updateBaseScalar","isTemperature","KINDS","knownSignature","subtractTemperatures","lhs","rhs","lhsUnits","rhsConverted","dstDegrees","getDegreeUnits","subtractTempDegrees","deg","tempDegrees","addTempDegrees","toDegrees","dst","dstScalar","srcDegK","toDegK","dstUnits","qty","toTemp","toTempK","swiftConverter","srcUnits","convert","srcQty","dstQty","eq","isDegrees","isCompatible","isInverse","baseUnitCache","toBaseUnits","toFloat","isUnitless","toPrec","precQuantity","cleanTerms","num1","den1","num2","den2","notUnity","combined","combineTerms","terms","direction","prefix","prefixValue","combinedPrefixValue","prop","NestedMap","defaultFormatter","op1","op2","numdenscale","compareTo","lt","lte","gt","gte","same","every","_isBase","childMap","formatter","_units","numIsUnity","denIsUnity","numUnits","stringifyUnits","denUnits","targetUnitsOrMaxDecimalsOrPrec","maxDecimals","targetUnits","out","format","targetQty","stringifiedUnitsCache","stringified","simplify","getOutputNames","token","tokenNext","unitNames","acc","unitCounter","unitCount","version","factory","convertUnit","fromUnit","toUnit","testRegExp","ensureRegexp","string","parts","stringToRegexp","flags","getConvertedVariable","variable","newUnits","getPossibleVariable","selector","variableName","converted","possibleFiltered","Analysis","substring","spectrumCallback","spectra","cache","pushSpectrum","analysisOptions","xVariable","yVariable","standardizeData","getXYSpectrum","xUnits","yUnits","labels","xLabel","yLabel","split","getXY","normalization","getSpectrum","getXLabel","getYLabel","GC_MS_FIELDS","complexChromatogram","chromatogram","series","ms","dimension","existingGCMSFields","convertMSFieldToLabel","pageValue","isMSField","canonicDataLabel","convertToFloatArray","stringArray","floatArray","fastParseXYData","deltaX","isXYdata","currentData","ascii","currentX","firstX","currentY","firstY","endLine","charCodeAt","newLine","isDifference","isLastDifference","lastDifference","isDuplicate","inComment","lastValue","isNegative","inValue","skipFirstValue","decimalPosition","duplicate","ascii2","removeCommentRegExp","peakTableSplitRegExp","parsePeakTable","isPeaktable","numberOfVariables","lines","logs","parseXYZ","parseXY","parseXYA","removeSymbolRegExp","isXYAdata","add2D","zData","minZ","maxZ","ySize","xSize","lastX","lastY","medians","getMedian","minX","maxX","noise","convertTo3DZ","noContour","contourLines","povarHeight0","povarHeight1","povarHeight2","povarHeight3","isOver0","isOver1","isOver2","isOver3","pAx","pAy","pBx","pBy","lineZValue","nbSubSpectra","nbPovars","dx","y0","dy","iter","nbContourLevels","contourLevels","level","contourLevel","side","noiseMultiplier","zValue","iSubSpectra","subSpectra","subSpectraAfter","povar","segments","generateContourLines","minMax","gyromagneticRatio","profiling","action","time","Date","now","simpleChromatogram","intensity","postProcessing","entriesFlat","entry","observeFrequency","shiftOffsetVal","ntuples","symbol","nucleus","startsWith","$NUC2","f2index","$NUC1","yType","pageSymbolIndex","pageSymbol","ratio0","ratio1","ratio","postProcessingNMR","newNtuples","twoD","wantXY","keepSpectra","prepareNtuplesDatatable","currentEntry","xIndex","yIndex","firstVariable","secondVariable","lowerCaseSymbol","vardim","varname","prepareSpectrum","ntuplesSeparatorRegExp","Spectrum","keepRecordsRegExp","canonicDataLabels","canonicMetadataLabels","dynamicTyping","withoutXY","jcamp","blob","encoding","ArrayBuffer","isView","TextDecoder","decode","ensureString","entries","tmpResult","children","parentsStack","ldrs","ldr","dataLabel","dataValue","infos","datatable","parentEntry","info","dataClass","xType","shiftOffsetNum","vartype","varform","page","sampleDescription","pop","flatten","fromJcamp","analysis","currentSpectrum","addJcamp","fromVariables","forceNtuples","jcampOptions","owner","origin","header","fromJSON","varName","varType","varDim","minFct","maxFct","point","creatorNtuples","getJcamp","annotationTransmittance","annotation","peak","showKind","showAssignment","text","anchor","wavenumber","transmittance","assignment","absorbance","JSGraph","getJSGraph","analyses","colors","opacities","linesWidth","xAxis","yAxis","logScale","axes","flipped","display","getNormalizationAnnotations","boundary","annotations","ignore","strokeWidth","fillColor","getAnnotations","peaks","strokeColor","creationFct","mode","assignmentAngle","angle","annotationAbsorbance","addAnalysis","getAnalysisIndex","getAnalyses","ids","getSpectra","getDistinctTitles","getDistinctUnits","getDistinctLabels","getDistinctDataTypes","getDistinctMeta","removeAllAnalyses","removeAnalysis","normalizationOptions","minPeakWidth","_b","normalizedSpectrum","xyClosestYPoint","commonFromJcamp","optimize","jcamps","toJcamps"],"mappings":"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"}