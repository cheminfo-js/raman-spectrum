{"version":3,"sources":["webpack://RamanSpectrum/webpack/universalModuleDefinition","webpack://RamanSpectrum/webpack/bootstrap","webpack://RamanSpectrum/./node_modules/ml-matrix/src/matrix.js","webpack://RamanSpectrum/./node_modules/ml-matrix/src/views/base.js","webpack://RamanSpectrum/./node_modules/ml-matrix/src/index.js","webpack://RamanSpectrum/./node_modules/ml-matrix/src/util.js","webpack://RamanSpectrum/./node_modules/is-any-array/src/index.js","webpack://RamanSpectrum/./node_modules/ml-matrix/src/dc/util.js","webpack://RamanSpectrum/./node_modules/ml-savitzky-golay-generalized/node_modules/ml-stat/array.js","webpack://RamanSpectrum/./node_modules/ml-optimize-lorentzian/src/index.js","webpack://RamanSpectrum/./node_modules/ml-matrix/src/abstractMatrix.js","webpack://RamanSpectrum/./node_modules/ml-matrix/src/dc/lu.js","webpack://RamanSpectrum/./node_modules/ml-matrix/src/dc/svd.js","webpack://RamanSpectrum/./node_modules/ml-stat/index.js","webpack://RamanSpectrum/./node_modules/ml-stat/array.js","webpack://RamanSpectrum/./node_modules/ml-curve-fitting/src/algebra.js","webpack://RamanSpectrum/./node_modules/ml-arrayxy-uniquex/src/index.js","webpack://RamanSpectrum/./lib/index.js","webpack://RamanSpectrum/./node_modules/ml-array-min/lib-es6/index.js","webpack://RamanSpectrum/./node_modules/ml-array-max/lib-es6/index.js","webpack://RamanSpectrum/./node_modules/ml-gsd/src/index.js","webpack://RamanSpectrum/./node_modules/ml-gsd/src/gsd.js","webpack://RamanSpectrum/./node_modules/ml-savitzky-golay-generalized/src/index.js","webpack://RamanSpectrum/./node_modules/extend/index.js","webpack://RamanSpectrum/./node_modules/ml-savitzky-golay-generalized/node_modules/ml-stat/index.js","webpack://RamanSpectrum/./node_modules/ml-savitzky-golay-generalized/node_modules/ml-stat/matrix.js","webpack://RamanSpectrum/./node_modules/ml-gsd/src/post/optimizePeaks.js","webpack://RamanSpectrum/./node_modules/ml-curve-fitting/src/index.js","webpack://RamanSpectrum/./node_modules/ml-curve-fitting/src/LM.js","webpack://RamanSpectrum/./node_modules/ml-matrix/src/symbol-species.js","webpack://RamanSpectrum/./node_modules/ml-matrix/node_modules/ml-array-utils/src/index.js","webpack://RamanSpectrum/./node_modules/ml-matrix/node_modules/ml-array-utils/src/ArrayUtils.js","webpack://RamanSpectrum/./node_modules/ml-stat/matrix.js","webpack://RamanSpectrum/./node_modules/ml-matrix/node_modules/ml-array-utils/src/getEquallySpaced.js","webpack://RamanSpectrum/./node_modules/ml-matrix/node_modules/ml-array-utils/src/snv.js","webpack://RamanSpectrum/./node_modules/ml-matrix/src/views/transpose.js","webpack://RamanSpectrum/./node_modules/ml-matrix/src/views/row.js","webpack://RamanSpectrum/./node_modules/ml-matrix/src/views/sub.js","webpack://RamanSpectrum/./node_modules/ml-matrix/src/views/selection.js","webpack://RamanSpectrum/./node_modules/ml-matrix/src/views/column.js","webpack://RamanSpectrum/./node_modules/ml-matrix/src/views/flipRow.js","webpack://RamanSpectrum/./node_modules/ml-matrix/src/views/flipColumn.js","webpack://RamanSpectrum/./node_modules/ml-matrix/src/decompositions.js","webpack://RamanSpectrum/./node_modules/ml-matrix/src/dc/evd.js","webpack://RamanSpectrum/./node_modules/ml-matrix/src/dc/qr.js","webpack://RamanSpectrum/./node_modules/ml-matrix/src/dc/cholesky.js","webpack://RamanSpectrum/./node_modules/ml-gsd/src/post/joinBroadPeaks.js","webpack://RamanSpectrum/./node_modules/ml-gsd/src/post/broadenPeaks.js","webpack://RamanSpectrum/./node_modules/jcampconverter/src/index.js","webpack://RamanSpectrum/./node_modules/ml-array-xy-sort-x/src/index.js","webpack://RamanSpectrum/./node_modules/xy-parser/src/index.js"],"names":["root","factory","exports","module","define","amd","self","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","abstractMatrix","util","Matrix","Array","constructor","nRows","nColumns","arguments","length","isMatrix","clone","Number","isInteger","super","TypeError","isArray","matrix","RangeError","concat","rows","columns","set","rowIndex","columnIndex","newMatrix","species","row","column","removeRow","index","checkRowIndex","splice","addRow","array","undefined","checkRowVector","removeColumn","checkColumnIndex","addColumn","checkColumnVector","static","Decompositions","DC","outer","max","vector","to1DArray","checkIndices","rowIndices","columnIndices","rowOut","some","columnOut","from","checkRange","startRow","endRow","startColumn","endColumn","slice","arg","getRange","to","arr","sumByRow","sum","zeros","j","sumByColumn","sumAll","v","toString","endsWith","hypotenuse","a","b","Math","abs","sqrt","getEmpty2DArray","getFilled2DArray","compareNumbers","values","Infinity","min","minMax","arithmeticMean","mean","geometricMean","mul","pow","logMean","lnsum","log","grandMean","means","samples","truncatedMean","percent","alreadySorted","sort","k","floor","harmonicMean","contraHarmonicMean","r1","r2","median","half","variance","unbiased","theMean","theVariance","x","standardDeviation","standardError","quartiles","quart","q1","ceil","q2","q3","pooledStandardDeviation","pooledVariance","vari","itemCount","itemArray","count","indexOf","maxValue","maxIndex","covariance","vector1","vector2","mean1","mean2","cov","skewness","s2","s3","dev","m2","g","kurtosis","s4","entropy","eps","weightedMean","weights","weightedStandardDeviation","weightedVariance","z","w","center","inPlace","result","standardize","standardDev","cumulativeSum","LM","math","algebra","sumOfLorentzians","factor","p2","nL","cols","singleLorentzian","singleGaussian","factor2","exp","optimizeSingleLorentzian","xy","peak","opts","xy2","parseData","percentage","y_data","maxY","weight","dot","dt","LMOptions","dx","p_init","width","p_min","p_max","p_fit","optimize","optimizeSingleGaussian","threshold","y","nbSeries","nbPoints","transpose","optimizeLorentzianSum","group","optimizeGaussianSum","optimizeGaussianTrain","nextX","tI","yI","current","currentIndex","push","opt","optimizeLorentzianTrain","LuDecomposition","SvDecomposition","arrayUtils","MatrixTransposeView","MatrixRowView","MatrixSubView","MatrixSelectionView","MatrixColumnView","MatrixFlipRowView","MatrixFlipColumnView","superCtor","[object Object]","newRows","newColumns","newData","empty","fill","rng","random","data","matrix1","matrix2","checkMatrix","klass","size","apply","callback","ii","jj","to2DArray","copy","isRowVector","isColumnVector","isVector","isSquare","isSymmetric","Error","repeat","rowRep","colRep","setSubMatrix","neg","mulS","getRow","getRowVector","rowVector","setRow","swapRows","row1","row2","temp","getColumn","getColumnVector","columnVector","setColumn","swapColumns","column1","column2","addRowVector","subRowVector","mulRowVector","divRowVector","addColumnVector","subColumnVector","mulColumnVector","divColumnVector","mulRow","mulColumn","idx","minIndex","maxRow","maxRowIndex","minRow","minRowIndex","maxColumn","maxColumnIndex","minColumn","minColumnIndex","diag","by","prod","mmul","other","console","warn","Bcolj","strassen2x2","a11","b11","a12","b12","a21","b21","a22","b22","m1","m3","m4","m5","c00","c01","c10","c11","strassen3x3","a00","a01","a02","a10","a20","b00","b01","b02","b10","b20","m6","m7","m8","m9","m12","m13","m14","m15","m16","m17","m18","c02","c12","c20","c21","c22","mmulStrassen","c1","c2","embed","mat","resultat","blockMult","halfRows","parseInt","halfCols","subMatrix","add","sub","scaleRows","scaled","scale","scaleColumns","kroneckerProduct","q","sortRows","compareFunction","sortColumns","subMatrixRow","indices","subMatrixColumn","selection","trace","transposeView","rowView","columnView","flipRowView","flipColumnView","subMatrixView","selectionView","det","subMatrix0","subMatrix1","subMatrix2","determinant","pseudoInverse","EPSILON","svdSolution","autoTranspose","U","leftSingularVectors","V","rightSingularVectors","diagonal","checkDimensions","otherMatrix","rand","identity","eye","negate","tensorProduct","inplaceOperator","inplaceOperatorScalar","inplaceOperatorMatrix","staticOperator","inplaceMethod","staticMethod","inplaceMethodWithArgs","staticMethodWithArgs","inplaceMethodWithOneArgScalar","inplaceMethodWithOneArgMatrix","inplaceMethodWithOneArg","staticMethodWithOneArg","operators","operator","inplaceOp","eval","fillTemplateFunction","op","inplaceOpS","inplaceOpM","staticOp","methods","method","forEach","mathMethod","inplaceMeth","staticMeth","methodsWithArgs","methodWithArg","args","inplaceMethWithArgs","staticMethWithArgs","tmplVar","inplaceMethod2","inplaceMethodS","inplaceMethodM","staticMethod2","template","replace","RegExp","LUrowi","LUcolj","kmax","lu","pivotVector","pivotSign","LU","isSingular","col","lowerTriangularMatrix","X","upperTriangularMatrix","pivotPermutationVector","solve","SingularValueDecomposition","options","nu","wantu","wantv","computeLeftSingularVectors","computeRightSingularVectors","swapped","aux","ks","f","cs","sn","kase","sp","spm1","epm1","sk","ek","shift","e","work","nct","nrt","pp","tmp","condition","norm2","rank","tol","diagonalMatrix","Y","scols","Ls","VL","vrows","urows","VLU","solveForDiagonal","inverse","vcols","ucols","robustMeanAndStdev","averageDeviations","stdev","A","B","subtract","multiply","dotMultiply","dotDivide","div","inv","dotPow","ones","xs","ys","counter","_interopDefault","ex","mlGsd","jcampconverter","sortX","xyParser","addPeak","spectrum","wavelength","intensity","existing","peaks","kind","minIntensity","maxIntensity","position","getPeakKind","peakPicking","targetWavelength","_options$range","range","_options$optimize","bestPeak","error","newError","setBestPeak","getClosest","previousIndex","findClosest","bestInRange","Spectrum","json","minWavelength","maxWavelength","check","setPeaks","getData","getAnnotations","_options$fillColor","fillColor","_options$strokeColor","strokeColor","creationFct","map","annotation","line","type","strokeWidth","label","text","anchor","color","dy","oneAnnotation","autoPeakPicking","_options$noiseLevel","noiseLevel","_options$minMaxRatio","minMaxRatio","_options$fromWaveleng","fromWavelength","_options$toWavelength","toWavelength","_options$replaceExist","replaceExisting","gsd","realTopDetection","maxCriteria","smoothY","sgOptions","windowSize","polynomial","filter","pop","peakLoop","fromJcamp","jcamp","convert","spectra","fromText","assign","arrayType","parseXY","__webpack_exports__","is_any_array__WEBPACK_IMPORTED_MODULE_0__","is_any_array__WEBPACK_IMPORTED_MODULE_0___default","input","post","optimizePeaks","joinBroadPeaks","broadenPeaks","SG","defaultOptions","broadRatio","heightFactor","boundaries","derivativeThreshold","yIn","maxDx","minDx","MAX_VALUE","getNoiseLevel","yCorrection","dY","ddY","derivative","maxDdy","lastMax","lastMin","minddY","intervalL","intervalR","broadMask","minddYLen","intervalLLen","intervalRLen","broadMaskLen","possible","frequency","distanceJ","minDistance","gettingCloser","signals","signalsLen","lastK","soft","left","right","yLeft","yRight","height","peakList","alpha","beta","gamma","currentPoint","log10","base","extend","getHs","h","hs","GramPoly","GenFact","gf","Weight","np","ans","fullWeights","constantH","wg1","wg2","d1","d2","wg","hasOwn","toStr","gOPD","getOwnPropertyDescriptor","isPlainObject","obj","hasOwnConstructor","hasIsPrototypeOf","setProperty","target","configurable","newValue","writable","getProperty","src","copyIsArray","deep","arrayStat","dimension","N","sum1","sum2","scatter","divisor","zScores","standardDeviations","resultRow","sourceRow","isNaN","weightSum","weightedScatter","l1","l2","medians","modes","skew","kurt","standardErrors","sqrtN","correlation","scores","cor","weightedCovariance","s1","sampleFunction","lastIndex","sampleX","sampleY","direction","sign","delta","mid","stop","fnType","sampling","groups","upperLimit","lowerLimit","limits","groupPeaks","optPeaks","optPeak","func","y_dat","dp","iteration","Npar","Npnt","p_old","y_old","X2","X2_old","J","MaxIter","epsilon_1","epsilon_4","lambda_0","lambda_UP_fac","lambda_DN_fac","Update_Type","dp_array","Nfit","weight_sq","lm_matx","JtWJ","JtWdy","y_hat","Chi_sq","lambda","hidx","p_try","delta_y","X2_try","JtWdy_th","rho","dX2","length_t","length_y_dat","lm_FD_J","ps","del","y1","lm_Broyden_J","h_t","Jt","for","getEquallySpacedData","SNV","Stat","resultMatrix","coordArrayToPoints","dimensions","pointsArr","point","coordArrayToCoordMatrix","coordinatesArray","points","coordMatrixToCoordArray","coordMatrix","coodinatesArray","coordMatrixToPoints","pointsToCoordArray","pointsToCoordMatrix","applyDotProduct","firstVector","secondVector","largestVector","smallestVector","difference","dotProductApplied","theSum","product","theProduct","integral","x0","x1","slope","intercept","reverse","isFinite","numberOfPoints","output","variant","xLength","step","halfStep","lastStep","start","previousX","previousY","nextY","frontOutsideSpectra","backOutsideSpectra","currentValue","currentPoints","main","getEquallySpacedSlot","initialOriginalStep","lastOriginalStep","MIN_VALUE","sumAtMin","sumAtMax","getEquallySpacedSmooth","std","BaseView","EigenvalueDecomposition","QrDecomposition","CholeskyDecomposition","leftHandSide","rightHandSide","SVD","EVD","QR","CHO","assumeSymmetric","hh","tred2","dl1","c3","el1","tst1","tql2","H","ort","high","low","orthes","nn","ra","sa","vr","vi","notlast","cdivres","exshift","norm","iter","cdiv","hqr2","xr","xi","yr","yi","realEigenvalues","imaginaryEigenvalues","eigenvectorMatrix","qr","rdiag","nrm","Rdiag","isFullRank","orthogonalMatrix","positiveDefinite","Lrowj","Lrowk","L","Opt","broadLines","maxI","candidates","indexes","fitted","_options$factor","_options$overlap","overlap","nextPeak","getConverter","ntuplesSeparator","GC_MS_FIELDS","convertToFloatArray","stringArray","floatArray","parseFloat","keepRecordsRegExp","withoutXY","chromatogram","keepSpectra","noContour","nbContourLevels","noiseMultiplier","profiling","convertMSFieldToLabel","toLowerCase","isMSField","dataLabel","prepareSpectrum","xFactor","yFactor","observeFrequency","xUnit","toUpperCase","firstX","lastX","deltaX","shiftOffsetVal","fastParseXYData","isXYdata","currentData","ascii","currentX","currentY","firstY","endLine","charCodeAt","newLine","isDifference","isLastDifference","lastDifference","isDuplicate","inComment","lastValue","isNegative","inValue","skipFirstValue","decimalPosition","duplicate","ascii2","parseXYA","removeSymbolRegExp","isXYAdata","lines","split","trim","parsePeakTable","removeCommentRegExp","peakTableSplitRegExp","isPeaktable","logs","ldr","dataValue","ldrs","infos","wantXY","Date","now","ntuples","info","action","time","substring","xIndex","yIndex","firstVariable","secondVariable","symbol","first","last","lastY","vardim","units","yUnit","datatable","title","dataType","twoD","maxX","minX","minY","xType","indirectFrequency","shiftOffsetNum","varname","vartype","varform","yType","page","pageValue","pageSymbol","pageSymbolIndex","unit","sampleDescription","match","keys","newNtuples","zData","minZ","maxZ","ySize","xSize","xVector","noise","convertTo3DZ","contourLines","povarHeight0","povarHeight1","povarHeight2","povarHeight3","isOver0","isOver1","isOver2","isOver3","pAx","pAy","pBx","pBy","lineZValue","nbSubSpectra","nbPovars","y0","contourLevels","level","contourLevel","side","zValue","iSubSpectra","subSpectra","subSpectraAfter","povar","segments","generateContourLines","add2D","times","series","ms","existingGCMSFields","complexChromatogram","simpleChromatogram","worker","stamps","useWorker","workerURL","URL","createObjectURL","Blob","Worker","revokeObjectURL","addEventListener","event","JSON","parse","stamp","Promise","resolve","postMessage","stringify","postToWorker","createTree","_options$flatten","flatten","flat","stack","ntupleLevel","spaces","includes","labelLine","startsWith","join","children","finished","entry","_options$reverse","sortFunc","grouped","val","response","ml_arrayxy_uniquex__WEBPACK_IMPORTED_MODULE_0__","ml_arrayxy_uniquex__WEBPACK_IMPORTED_MODULE_0___default","_options$normalize","normalize","_options$uniqueX","uniqueX","_options$arrayType","_options$xColumn","xColumn","_options$yColumn","yColumn","_options$keepInfo","keepInfo","_options$maxNumberCol","maxNumberColumns","_options$minNumberCol","minNumberColumns","fields","uniqueXFunction","newResult"],"mappings":"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","file":"raman-spectrum.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"RamanSpectrum\"] = factory();\n\telse\n\t\troot[\"RamanSpectrum\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 15);\n","'use strict';\n\nrequire('./symbol-species');\nvar abstractMatrix = require('./abstractMatrix');\nvar util = require('./util');\n\nclass Matrix extends abstractMatrix(Array) {\n    constructor(nRows, nColumns) {\n        var i;\n        if (arguments.length === 1 && typeof nRows === 'number') {\n            return new Array(nRows);\n        }\n        if (Matrix.isMatrix(nRows)) {\n            return nRows.clone();\n        } else if (Number.isInteger(nRows) && nRows > 0) { // Create an empty matrix\n            super(nRows);\n            if (Number.isInteger(nColumns) && nColumns > 0) {\n                for (i = 0; i < nRows; i++) {\n                    this[i] = new Array(nColumns);\n                }\n            } else {\n                throw new TypeError('nColumns must be a positive integer');\n            }\n        } else if (Array.isArray(nRows)) { // Copy the values from the 2D array\n            const matrix = nRows;\n            nRows = matrix.length;\n            nColumns = matrix[0].length;\n            if (typeof nColumns !== 'number' || nColumns === 0) {\n                throw new TypeError('Data must be a 2D array with at least one element');\n            }\n            super(nRows);\n            for (i = 0; i < nRows; i++) {\n                if (matrix[i].length !== nColumns) {\n                    throw new RangeError('Inconsistent array dimensions');\n                }\n                this[i] = [].concat(matrix[i]);\n            }\n        } else {\n            throw new TypeError('First argument must be a positive number or an array');\n        }\n        this.rows = nRows;\n        this.columns = nColumns;\n        return this;\n    }\n\n    set(rowIndex, columnIndex, value) {\n        this[rowIndex][columnIndex] = value;\n        return this;\n    }\n\n    get(rowIndex, columnIndex) {\n        return this[rowIndex][columnIndex];\n    }\n\n    /**\n     * Creates an exact and independent copy of the matrix\n     * @return {Matrix}\n     */\n    clone() {\n        var newMatrix = new this.constructor[Symbol.species](this.rows, this.columns);\n        for (var row = 0; row < this.rows; row++) {\n            for (var column = 0; column < this.columns; column++) {\n                newMatrix.set(row, column, this.get(row, column));\n            }\n        }\n        return newMatrix;\n    }\n\n    /**\n     * Removes a row from the given index\n     * @param {number} index - Row index\n     * @return {Matrix} this\n     */\n    removeRow(index) {\n        util.checkRowIndex(this, index);\n        if (this.rows === 1) {\n            throw new RangeError('A matrix cannot have less than one row');\n        }\n        this.splice(index, 1);\n        this.rows -= 1;\n        return this;\n    }\n\n    /**\n     * Adds a row at the given index\n     * @param {number} [index = this.rows] - Row index\n     * @param {Array|Matrix} array - Array or vector\n     * @return {Matrix} this\n     */\n    addRow(index, array) {\n        if (array === undefined) {\n            array = index;\n            index = this.rows;\n        }\n        util.checkRowIndex(this, index, true);\n        array = util.checkRowVector(this, array, true);\n        this.splice(index, 0, array);\n        this.rows += 1;\n        return this;\n    }\n\n    /**\n     * Removes a column from the given index\n     * @param {number} index - Column index\n     * @return {Matrix} this\n     */\n    removeColumn(index) {\n        util.checkColumnIndex(this, index);\n        if (this.columns === 1) {\n            throw new RangeError('A matrix cannot have less than one column');\n        }\n        for (var i = 0; i < this.rows; i++) {\n            this[i].splice(index, 1);\n        }\n        this.columns -= 1;\n        return this;\n    }\n\n    /**\n     * Adds a column at the given index\n     * @param {number} [index = this.columns] - Column index\n     * @param {Array|Matrix} array - Array or vector\n     * @return {Matrix} this\n     */\n    addColumn(index, array) {\n        if (typeof array === 'undefined') {\n            array = index;\n            index = this.columns;\n        }\n        util.checkColumnIndex(this, index, true);\n        array = util.checkColumnVector(this, array);\n        for (var i = 0; i < this.rows; i++) {\n            this[i].splice(index, 0, array[i]);\n        }\n        this.columns += 1;\n        return this;\n    }\n}\n\nexports.Matrix = Matrix;\nMatrix.abstractMatrix = abstractMatrix;\n","'use strict';\n\nvar abstractMatrix = require('../abstractMatrix');\nvar Matrix = require('../matrix');\n\nclass BaseView extends abstractMatrix() {\n    constructor(matrix, rows, columns) {\n        super();\n        this.matrix = matrix;\n        this.rows = rows;\n        this.columns = columns;\n    }\n\n    static get [Symbol.species]() {\n        return Matrix.Matrix;\n    }\n}\n\nmodule.exports = BaseView;\n","'use strict';\n\nmodule.exports = require('./matrix').Matrix;\nmodule.exports.Decompositions = module.exports.DC = require('./decompositions');\n","'use strict';\n\nvar Matrix = require('./matrix');\n\n/**\n * @private\n * Check that a row index is not out of bounds\n * @param {Matrix} matrix\n * @param {number} index\n * @param {boolean} [outer]\n */\nexports.checkRowIndex = function checkRowIndex(matrix, index, outer) {\n    var max = outer ? matrix.rows : matrix.rows - 1;\n    if (index < 0 || index > max) {\n        throw new RangeError('Row index out of range');\n    }\n};\n\n/**\n * @private\n * Check that a column index is not out of bounds\n * @param {Matrix} matrix\n * @param {number} index\n * @param {boolean} [outer]\n */\nexports.checkColumnIndex = function checkColumnIndex(matrix, index, outer) {\n    var max = outer ? matrix.columns : matrix.columns - 1;\n    if (index < 0 || index > max) {\n        throw new RangeError('Column index out of range');\n    }\n};\n\n/**\n * @private\n * Check that the provided vector is an array with the right length\n * @param {Matrix} matrix\n * @param {Array|Matrix} vector\n * @return {Array}\n * @throws {RangeError}\n */\nexports.checkRowVector = function checkRowVector(matrix, vector) {\n    if (vector.to1DArray) {\n        vector = vector.to1DArray();\n    }\n    if (vector.length !== matrix.columns) {\n        throw new RangeError('vector size must be the same as the number of columns');\n    }\n    return vector;\n};\n\n/**\n * @private\n * Check that the provided vector is an array with the right length\n * @param {Matrix} matrix\n * @param {Array|Matrix} vector\n * @return {Array}\n * @throws {RangeError}\n */\nexports.checkColumnVector = function checkColumnVector(matrix, vector) {\n    if (vector.to1DArray) {\n        vector = vector.to1DArray();\n    }\n    if (vector.length !== matrix.rows) {\n        throw new RangeError('vector size must be the same as the number of rows');\n    }\n    return vector;\n};\n\nexports.checkIndices = function checkIndices(matrix, rowIndices, columnIndices) {\n    var rowOut = rowIndices.some(r => {\n        return r < 0 || r >= matrix.rows;\n\n    });\n\n    var columnOut = columnIndices.some(c => {\n        return c < 0 || c >= matrix.columns;\n    });\n\n    if (rowOut || columnOut) {\n        throw new RangeError('Indices are out of range');\n    }\n\n    if (typeof rowIndices !== 'object' || typeof columnIndices !== 'object') {\n        throw new TypeError('Unexpected type for row/column indices');\n    }\n    if (!Array.isArray(rowIndices)) rowIndices = Array.from(rowIndices);\n    if (!Array.isArray(columnIndices)) rowIndices = Array.from(columnIndices);\n\n    return {\n        row: rowIndices,\n        column: columnIndices\n    };\n};\n\nexports.checkRange = function checkRange(matrix, startRow, endRow, startColumn, endColumn) {\n    if (arguments.length !== 5) throw new TypeError('Invalid argument type');\n    var notAllNumbers = Array.from(arguments).slice(1).some(function (arg) {\n        return typeof arg !== 'number';\n    });\n    if (notAllNumbers) throw new TypeError('Invalid argument type');\n    if (startRow > endRow || startColumn > endColumn || startRow < 0 || startRow >= matrix.rows || endRow < 0 || endRow >= matrix.rows || startColumn < 0 || startColumn >= matrix.columns || endColumn < 0 || endColumn >= matrix.columns) {\n        throw new RangeError('Submatrix indices are out of range');\n    }\n};\n\nexports.getRange = function getRange(from, to) {\n    var arr = new Array(to - from + 1);\n    for (var i = 0; i < arr.length; i++) {\n        arr[i] = from + i;\n    }\n    return arr;\n};\n\nexports.sumByRow = function sumByRow(matrix) {\n    var sum = Matrix.Matrix.zeros(matrix.rows, 1);\n    for (var i = 0; i < matrix.rows; ++i) {\n        for (var j = 0; j < matrix.columns; ++j) {\n            sum.set(i, 0, sum.get(i, 0) + matrix.get(i, j));\n        }\n    }\n    return sum;\n};\n\nexports.sumByColumn = function sumByColumn(matrix) {\n    var sum = Matrix.Matrix.zeros(1, matrix.columns);\n    for (var i = 0; i < matrix.rows; ++i) {\n        for (var j = 0; j < matrix.columns; ++j) {\n            sum.set(0, j, sum.get(0, j) + matrix.get(i, j));\n        }\n    }\n    return sum;\n};\n\nexports.sumAll = function sumAll(matrix) {\n    var v = 0;\n    for (var i = 0; i < matrix.rows; i++) {\n        for (var j = 0; j < matrix.columns; j++) {\n            v += matrix.get(i, j);\n        }\n    }\n    return v;\n};\n","'use strict';\n\nconst toString = Object.prototype.toString;\n\nfunction isAnyArray(object) {\n  return toString.call(object).endsWith('Array]');\n}\n\nmodule.exports = isAnyArray;\n","'use strict';\n\nexports.hypotenuse = function hypotenuse(a, b) {\n    var r;\n    if (Math.abs(a) > Math.abs(b)) {\n        r = b / a;\n        return Math.abs(a) * Math.sqrt(1 + r * r);\n    }\n    if (b !== 0) {\n        r = a / b;\n        return Math.abs(b) * Math.sqrt(1 + r * r);\n    }\n    return 0;\n};\n\n// For use in the decomposition algorithms. With big matrices, access time is\n// too long on elements from array subclass\n// todo check when it is fixed in v8\n// http://jsperf.com/access-and-write-array-subclass\nexports.getEmpty2DArray = function (rows, columns) {\n    var array = new Array(rows);\n    for (var i = 0; i < rows; i++) {\n        array[i] = new Array(columns);\n    }\n    return array;\n};\n\nexports.getFilled2DArray = function (rows, columns, value) {\n    var array = new Array(rows);\n    for (var i = 0; i < rows; i++) {\n        array[i] = new Array(columns);\n        for (var j = 0; j < columns; j++) {\n            array[i][j] = value;\n        }\n    }\n    return array;\n};\n","'use strict';\n\nfunction compareNumbers(a, b) {\n    return a - b;\n}\n\n/**\n * Computes the sum of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.sum = function sum(values) {\n    var sum = 0;\n    for (var i = 0; i < values.length; i++) {\n        sum += values[i];\n    }\n    return sum;\n};\n\n/**\n * Computes the maximum of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.max = function max(values) {\n    var max = -Infinity;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        if (values[i] > max) max = values[i];\n    }\n    return max;\n};\n\n/**\n * Computes the minimum of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.min = function min(values) {\n    var min = Infinity;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        if (values[i] < min) min = values[i];\n    }\n    return min;\n};\n\n/**\n * Computes the min and max of the given values\n * @param {Array} values\n * @returns {{min: number, max: number}}\n */\nexports.minMax = function minMax(values) {\n    var min = Infinity;\n    var max = -Infinity;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        if (values[i] < min) min = values[i];\n        if (values[i] > max) max = values[i];\n    }\n    return {\n        min: min,\n        max: max\n    };\n};\n\n/**\n * Computes the arithmetic mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.arithmeticMean = function arithmeticMean(values) {\n    var sum = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        sum += values[i];\n    }\n    return sum / l;\n};\n\n/**\n * {@link arithmeticMean}\n */\nexports.mean = exports.arithmeticMean;\n\n/**\n * Computes the geometric mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.geometricMean = function geometricMean(values) {\n    var mul = 1;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        mul *= values[i];\n    }\n    return Math.pow(mul, 1 / l);\n};\n\n/**\n * Computes the mean of the log of the given values\n * If the return value is exponentiated, it gives the same result as the\n * geometric mean.\n * @param {Array} values\n * @returns {number}\n */\nexports.logMean = function logMean(values) {\n    var lnsum = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        lnsum += Math.log(values[i]);\n    }\n    return lnsum / l;\n};\n\n/**\n * Computes the weighted grand mean for a list of means and sample sizes\n * @param {Array} means - Mean values for each set of samples\n * @param {Array} samples - Number of original values for each set of samples\n * @returns {number}\n */\nexports.grandMean = function grandMean(means, samples) {\n    var sum = 0;\n    var n = 0;\n    var l = means.length;\n    for (var i = 0; i < l; i++) {\n        sum += samples[i] * means[i];\n        n += samples[i];\n    }\n    return sum / n;\n};\n\n/**\n * Computes the truncated mean of the given values using a given percentage\n * @param {Array} values\n * @param {number} percent - The percentage of values to keep (range: [0,1])\n * @param {boolean} [alreadySorted=false]\n * @returns {number}\n */\nexports.truncatedMean = function truncatedMean(values, percent, alreadySorted) {\n    if (alreadySorted === undefined) alreadySorted = false;\n    if (!alreadySorted) {\n        values = values.slice().sort(compareNumbers);\n    }\n    var l = values.length;\n    var k = Math.floor(l * percent);\n    var sum = 0;\n    for (var i = k; i < (l - k); i++) {\n        sum += values[i];\n    }\n    return sum / (l - 2 * k);\n};\n\n/**\n * Computes the harmonic mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.harmonicMean = function harmonicMean(values) {\n    var sum = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        if (values[i] === 0) {\n            throw new RangeError('value at index ' + i + 'is zero');\n        }\n        sum += 1 / values[i];\n    }\n    return l / sum;\n};\n\n/**\n * Computes the contraharmonic mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.contraHarmonicMean = function contraHarmonicMean(values) {\n    var r1 = 0;\n    var r2 = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        r1 += values[i] * values[i];\n        r2 += values[i];\n    }\n    if (r2 < 0) {\n        throw new RangeError('sum of values is negative');\n    }\n    return r1 / r2;\n};\n\n/**\n * Computes the median of the given values\n * @param {Array} values\n * @param {boolean} [alreadySorted=false]\n * @returns {number}\n */\nexports.median = function median(values, alreadySorted) {\n    if (alreadySorted === undefined) alreadySorted = false;\n    if (!alreadySorted) {\n        values = values.slice().sort(compareNumbers);\n    }\n    var l = values.length;\n    var half = Math.floor(l / 2);\n    if (l % 2 === 0) {\n        return (values[half - 1] + values[half]) * 0.5;\n    } else {\n        return values[half];\n    }\n};\n\n/**\n * Computes the variance of the given values\n * @param {Array} values\n * @param {boolean} [unbiased=true] - if true, divide by (n-1); if false, divide by n.\n * @returns {number}\n */\nexports.variance = function variance(values, unbiased) {\n    if (unbiased === undefined) unbiased = true;\n    var theMean = exports.mean(values);\n    var theVariance = 0;\n    var l = values.length;\n\n    for (var i = 0; i < l; i++) {\n        var x = values[i] - theMean;\n        theVariance += x * x;\n    }\n\n    if (unbiased) {\n        return theVariance / (l - 1);\n    } else {\n        return theVariance / l;\n    }\n};\n\n/**\n * Computes the standard deviation of the given values\n * @param {Array} values\n * @param {boolean} [unbiased=true] - if true, divide by (n-1); if false, divide by n.\n * @returns {number}\n */\nexports.standardDeviation = function standardDeviation(values, unbiased) {\n    return Math.sqrt(exports.variance(values, unbiased));\n};\n\nexports.standardError = function standardError(values) {\n    return exports.standardDeviation(values) / Math.sqrt(values.length);\n};\n\nexports.quartiles = function quartiles(values, alreadySorted) {\n    if (typeof(alreadySorted) === 'undefined') alreadySorted = false;\n    if (!alreadySorted) {\n        values = values.slice();\n        values.sort(compareNumbers);\n    }\n\n    var quart = values.length / 4;\n    var q1 = values[Math.ceil(quart) - 1];\n    var q2 = exports.median(values, true);\n    var q3 = values[Math.ceil(quart * 3) - 1];\n\n    return {q1: q1, q2: q2, q3: q3};\n};\n\nexports.pooledStandardDeviation = function pooledStandardDeviation(samples, unbiased) {\n    return Math.sqrt(exports.pooledVariance(samples, unbiased));\n};\n\nexports.pooledVariance = function pooledVariance(samples, unbiased) {\n    if (typeof(unbiased) === 'undefined') unbiased = true;\n    var sum = 0;\n    var length = 0, l = samples.length;\n    for (var i = 0; i < l; i++) {\n        var values = samples[i];\n        var vari = exports.variance(values);\n\n        sum += (values.length - 1) * vari;\n\n        if (unbiased)\n            length += values.length - 1;\n        else\n            length += values.length;\n    }\n    return sum / length;\n};\n\nexports.mode = function mode(values) {\n    var l = values.length,\n        itemCount = new Array(l),\n        i;\n    for (i = 0; i < l; i++) {\n        itemCount[i] = 0;\n    }\n    var itemArray = new Array(l);\n    var count = 0;\n\n    for (i = 0; i < l; i++) {\n        var index = itemArray.indexOf(values[i]);\n        if (index >= 0)\n            itemCount[index]++;\n        else {\n            itemArray[count] = values[i];\n            itemCount[count] = 1;\n            count++;\n        }\n    }\n\n    var maxValue = 0, maxIndex = 0;\n    for (i = 0; i < count; i++) {\n        if (itemCount[i] > maxValue) {\n            maxValue = itemCount[i];\n            maxIndex = i;\n        }\n    }\n\n    return itemArray[maxIndex];\n};\n\nexports.covariance = function covariance(vector1, vector2, unbiased) {\n    if (typeof(unbiased) === 'undefined') unbiased = true;\n    var mean1 = exports.mean(vector1);\n    var mean2 = exports.mean(vector2);\n\n    if (vector1.length !== vector2.length)\n        throw \"Vectors do not have the same dimensions\";\n\n    var cov = 0, l = vector1.length;\n    for (var i = 0; i < l; i++) {\n        var x = vector1[i] - mean1;\n        var y = vector2[i] - mean2;\n        cov += x * y;\n    }\n\n    if (unbiased)\n        return cov / (l - 1);\n    else\n        return cov / l;\n};\n\nexports.skewness = function skewness(values, unbiased) {\n    if (typeof(unbiased) === 'undefined') unbiased = true;\n    var theMean = exports.mean(values);\n\n    var s2 = 0, s3 = 0, l = values.length;\n    for (var i = 0; i < l; i++) {\n        var dev = values[i] - theMean;\n        s2 += dev * dev;\n        s3 += dev * dev * dev;\n    }\n    var m2 = s2 / l;\n    var m3 = s3 / l;\n\n    var g = m3 / (Math.pow(m2, 3 / 2.0));\n    if (unbiased) {\n        var a = Math.sqrt(l * (l - 1));\n        var b = l - 2;\n        return (a / b) * g;\n    }\n    else {\n        return g;\n    }\n};\n\nexports.kurtosis = function kurtosis(values, unbiased) {\n    if (typeof(unbiased) === 'undefined') unbiased = true;\n    var theMean = exports.mean(values);\n    var n = values.length, s2 = 0, s4 = 0;\n\n    for (var i = 0; i < n; i++) {\n        var dev = values[i] - theMean;\n        s2 += dev * dev;\n        s4 += dev * dev * dev * dev;\n    }\n    var m2 = s2 / n;\n    var m4 = s4 / n;\n\n    if (unbiased) {\n        var v = s2 / (n - 1);\n        var a = (n * (n + 1)) / ((n - 1) * (n - 2) * (n - 3));\n        var b = s4 / (v * v);\n        var c = ((n - 1) * (n - 1)) / ((n - 2) * (n - 3));\n\n        return a * b - 3 * c;\n    }\n    else {\n        return m4 / (m2 * m2) - 3;\n    }\n};\n\nexports.entropy = function entropy(values, eps) {\n    if (typeof(eps) === 'undefined') eps = 0;\n    var sum = 0, l = values.length;\n    for (var i = 0; i < l; i++)\n        sum += values[i] * Math.log(values[i] + eps);\n    return -sum;\n};\n\nexports.weightedMean = function weightedMean(values, weights) {\n    var sum = 0, l = values.length;\n    for (var i = 0; i < l; i++)\n        sum += values[i] * weights[i];\n    return sum;\n};\n\nexports.weightedStandardDeviation = function weightedStandardDeviation(values, weights) {\n    return Math.sqrt(exports.weightedVariance(values, weights));\n};\n\nexports.weightedVariance = function weightedVariance(values, weights) {\n    var theMean = exports.weightedMean(values, weights);\n    var vari = 0, l = values.length;\n    var a = 0, b = 0;\n\n    for (var i = 0; i < l; i++) {\n        var z = values[i] - theMean;\n        var w = weights[i];\n\n        vari += w * (z * z);\n        b += w;\n        a += w * w;\n    }\n\n    return vari * (b / (b * b - a));\n};\n\nexports.center = function center(values, inPlace) {\n    if (typeof(inPlace) === 'undefined') inPlace = false;\n\n    var result = values;\n    if (!inPlace)\n        result = values.slice();\n\n    var theMean = exports.mean(result), l = result.length;\n    for (var i = 0; i < l; i++)\n        result[i] -= theMean;\n};\n\nexports.standardize = function standardize(values, standardDev, inPlace) {\n    if (typeof(standardDev) === 'undefined') standardDev = exports.standardDeviation(values);\n    if (typeof(inPlace) === 'undefined') inPlace = false;\n    var l = values.length;\n    var result = inPlace ? values : new Array(l);\n    for (var i = 0; i < l; i++)\n        result[i] = values[i] / standardDev;\n    return result;\n};\n\nexports.cumulativeSum = function cumulativeSum(array) {\n    var l = array.length;\n    var result = new Array(l);\n    result[0] = array[0];\n    for (var i = 1; i < l; i++)\n        result[i] = result[i - 1] + array[i];\n    return result;\n};\n","'use strict';\n\nvar LM = require('ml-curve-fitting');\nvar math = LM.Matrix.algebra;\nvar Matrix = require('ml-matrix');\n\n/**\n * This function calculates the spectrum as a sum of lorentzian functions. The Lorentzian\n * parameters are divided in 3 batches. 1st: centers; 2nd: heights; 3th: widths;\n * @param t Ordinate values\n * @param p Lorentzian parameters\n * @param c Constant parameters(Not used)\n * @returns {*}\n */\nfunction sumOfLorentzians(t,p,c){\n    var nL = p.length/3,factor,i, j,p2, cols = t.rows;\n    var result = Matrix.zeros(t.length,1);\n\n    for(i=0;i<nL;i++){\n        p2 = Math.pow(p[i+nL*2][0]/2,2);\n        factor = p[i+nL][0]*p2;\n        for(j=0;j<cols;j++){\n            result[j][0]+=factor/(Math.pow(t[j][0]-p[i][0],2)+p2);\n        }\n    }\n    return result;\n}\n\n/**\n * This function calculates the spectrum as a sum of gaussian functions. The Gaussian\n * parameters are divided in 3 batches. 1st: centers; 2nd: height; 3th: std's;\n * @param t Ordinate values\n * @param p Gaussian parameters\n * @param c Constant parameters(Not used)\n * @returns {*}\n */\nfunction sumOfGaussians(t,p,c){\n    var nL = p.length/3,factor,i, j, cols = t.rows;\n    var result = Matrix.zeros(t.length,1);\n\n    for(i=0;i<nL;i++){\n        factor = p[i+nL*2][0]*p[i+nL*2][0]/2;\n        for(j=0;j<cols;j++){\n            result[j][0]+=p[i+nL][0]*Math.exp(-(t[i][0]-p[i][0])*(t[i][0]-p[i][0])/factor);\n        }\n    }\n    return result;\n}\n/**\n * Single 4 parameter lorentzian function\n * @param t Ordinate values\n * @param p Lorentzian parameters\n * @param c Constant parameters(Not used)\n * @returns {*}\n */\nfunction singleLorentzian(t,p,c){\n    var factor = p[1][0]*Math.pow(p[2][0]/2,2);\n    var rows = t.rows;\n    var result = new Matrix(t.rows, t.columns);\n    for(var i=0;i<rows;i++){\n        result[i][0]=factor/(Math.pow(t[i][0]-p[0][0],2)+Math.pow(p[2][0]/2,2));\n    }\n    return result;\n}\n\n/**\n * Single 3 parameter gaussian function\n * @param t Ordinate values\n * @param p Gaussian parameters [mean, height, std]\n * @param c Constant parameters(Not used)\n * @returns {*}\n */\nfunction singleGaussian(t,p,c){\n    var factor2 = p[2][0]*p[2][0]/2;\n    var rows = t.rows;\n    var result = new Matrix(t.rows, t.columns);\n    for(var i=0;i<rows;i++){\n        result[i][0]=p[1][0]*Math.exp(-(t[i][0]-p[0][0])*(t[i][0]-p[0][0])/factor2);\n    }\n    return result;\n}\n\n/**\n * * Fits a set of points to a Lorentzian function. Returns the center of the peak, the width at half height, and the height of the signal.\n * @param data,[y]\n * @returns {*[]}\n */\nfunction optimizeSingleLorentzian(xy, peak, opts) {\n    opts = opts || {};\n    var xy2 = parseData(xy, opts.percentage||0);\n\n    if(xy2===null||xy2[0].rows<3){\n        return null; //Cannot run an optimization with less than 3 points\n    }\n\n    var t = xy2[0];\n    var y_data = xy2[1];\n    var maxY = xy2[2];\n    var nbPoints = t.rows, i;\n\n    var weight = [nbPoints / Math.sqrt(y_data.dot(y_data))];\n\n    var opts=Object.create(opts.LMOptions || [  3,    100, 1e-3, 1e-3, 1e-3, 1e-2, 1e-2,    11,    9,        1 ]);\n    //var opts = [  3,    100, 1e-3, 1e-3, 1e-3, 1e-2, 1e-2,    11,    9,        1 ];\n    var consts = [ ];\n    var dt = Math.abs(t[0][0]-t[1][0]);// optional vector of constants\n    var dx = new Matrix([[-dt/10000],[-1e-3],[-dt/10000]]);//-Math.abs(t[0][0]-t[1][0])/100;\n    var p_init = new Matrix([[peak.x],[1],[peak.width]]);\n    var p_min = new Matrix([[peak.x-dt],[0.75],[peak.width/4]]);\n    var p_max = new Matrix([[peak.x+dt],[1.25],[peak.width*4]]);\n\n    var p_fit = LM.optimize(singleLorentzian,p_init,t,y_data,weight,dx,p_min,p_max,consts,opts);\n\n\n    p_fit = p_fit.p;\n    return [p_fit[0],[p_fit[1][0]*maxY],p_fit[2]];\n\n}\n\n/**\n * Fits a set of points to a gaussian bell. Returns the mean of the peak, the std and the height of the signal.\n * @param data,[y]\n * @returns {*[]}\n */\nfunction optimizeSingleGaussian(xy, peak, opts) {\n    opts = opts || {};\n    var xy2 = parseData(xy, opts.percentage||0);\n\n    if(xy2===null||xy2[0].rows<3){\n        return null; //Cannot run an optimization with less than 3 points\n    }\n\n    var t = xy2[0];\n    var y_data = xy2[1];\n    var maxY = xy2[2];\n\n    var nbPoints = t.rows, i;\n\n\n\n    var weight = [nbPoints / Math.sqrt(y_data.dot(y_data))];\n\n    var opts=Object.create(opts.LMOptions || [  3,    100, 1e-3, 1e-3, 1e-3, 1e-2, 1e-2,    11,    9,        1 ]);\n    //var opts = [  3,    100, 1e-3, 1e-3, 1e-3, 1e-2, 1e-2,    11,    9,        1 ];\n    var consts = [ ];                         // optional vector of constants\n    var dt = Math.abs(t[0][0]-t[1][0]);\n    var dx = new Matrix([[-dt/10000],[-1e-3],[-dt/10000]]);//-Math.abs(t[0][0]-t[1][0])/100;\n\n    var dx = new Matrix([[-Math.abs(t[0][0]-t[1][0])/1000],[-1e-3],[-peak.width/1000]]);\n    var p_init = new Matrix([[peak.x],[1],[peak.width]]);\n    var p_min = new Matrix([[peak.x-dt],[0.75],[peak.width/4]]);\n    var p_max = new Matrix([[peak.x+dt],[1.25],[peak.width*4]]);\n    //var p_min = new Matrix([[peak.x-peak.width/4],[0.75],[peak.width/3]]);\n    //var p_max = new Matrix([[peak.x+peak.width/4],[1.25],[peak.width*3]]);\n\n    var p_fit = LM.optimize(singleGaussian,p_init,t,y_data,weight,dx,p_min,p_max,consts,opts);\n    p_fit = p_fit.p;\n    return [p_fit[0],[p_fit[1][0]*maxY],p_fit[2]];\n}\n\n/*\n peaks on group should sorted\n */\nfunction optimizeLorentzianTrain(xy, group, opts){\n    var xy2 = parseData(xy);\n    //console.log(xy2[0].rows);\n    if(xy2===null||xy2[0].rows<3){\n        return null; //Cannot run an optimization with less than 3 points\n    }\n\n    var t = xy2[0];\n    var y_data = xy2[1];\n    var maxY = xy2[2];\n    var currentIndex = 0;\n    var nbPoints = t.length;\n    var nextX;\n    var tI, yI, maxY;\n    var result=[], current;\n    for(var i=0; i<group.length;i++){\n        nextX = group[i].x-group[i].width*1.5;\n        //console.log(group[i]);\n        while(t[currentIndex++]<nextX&&currentIndex<nbPoints);\n        nextX = group[i].x+group[i].width*1.5;\n        tI = [];\n        yI = [];\n        while(t[currentIndex]<=nextX&&currentIndex<nbPoints){\n            tI.push(t[currentIndex][0]);\n            yI.push(y_data[currentIndex][0]*maxY);\n            currentIndex++;\n        }\n\n        current=optimizeSingleLorentzian([tI, yI], group[i], opts);\n        if(current){\n            result.push({\"x\":current[0][0],\"y\":current[1][0],\"width\":current[2][0],\"opt\":true});\n        }\n        else{\n            result.push({\"x\":group[i].x,\"y\":group[i].y,\"width\":group[i].width,\"opt\":false});\n        }\n    }\n\n    return result;\n\n}\n\nfunction optimizeGaussianTrain(xy, group, opts){\n    var xy2 = parseData(xy);\n    //console.log(xy2[0].rows);\n    if(xy2===null||xy2[0].rows<3){\n        return null; //Cannot run an optimization with less than 3 points\n    }\n\n    var t = xy2[0];\n    var y_data = xy2[1];\n    var maxY = xy2[2];\n    var currentIndex = 0;\n    var nbPoints = t.length;\n    var nextX;\n    var tI, yI, maxY;\n    var result=[], current;\n    for(var i=0; i<group.length;i++){\n        nextX = group[i].x-group[i].width*1.5;\n        //console.log(group[i]);\n        while(t[currentIndex++]<nextX&&currentIndex<nbPoints);\n        nextX = group[i].x+group[i].width*1.5;\n        tI = [];\n        yI = [];\n        while(t[currentIndex]<=nextX&&currentIndex<nbPoints){\n            tI.push(t[currentIndex][0]);\n            yI.push(y_data[currentIndex][0]*maxY);\n            currentIndex++;\n        }\n\n        current=optimizeSingleGaussian([tI, yI], group[i], opts);\n        if(current){\n            result.push({\"x\":current[0][0],\"y\":current[1][0],\"width\":current[2][0],\"opt\":true});\n        }\n        else{\n            result.push({\"x\":group[i].x,\"y\":group[i].y,\"width\":group[i].width,\"opt\":false});\n        }\n    }\n\n    return result;\n}\n\n\n\n/**\n *\n * @param xy A two column matrix containing the x and y data to be fitted\n * @param group A set of initial lorentzian parameters to be optimized [center, heigth, half_width_at_half_height]\n * @returns {Array} A set of final lorentzian parameters [center, heigth, hwhh*2]\n */\nfunction optimizeLorentzianSum(xy, group, opts){\n    var xy2 = parseData(xy);\n\n    if(xy2===null||xy2[0].rows<3){\n        return null; //Cannot run an optimization with less than 3 points\n    }\n\n    var t = xy2[0];\n    var y_data = xy2[1];\n    var maxY = xy2[2];\n    var nbPoints = t.rows, i;\n\n    var weight = [nbPoints / math.sqrt(y_data.dot(y_data))];\n    var opts=Object.create(opts || [  3,    100, 1e-3, 1e-3, 1e-3, 1e-2, 1e-2, 11, 9, 1 ]);\n    var consts = [ ];// optional vector of constants\n\n    var nL = group.length;\n    var p_init = new Matrix(nL*3,1);\n    var p_min =  new Matrix(nL*3,1);\n    var p_max =  new Matrix(nL*3,1);\n    var dx = new Matrix(nL*3,1);\n    var dt = Math.abs(t[0][0]-t[1][0]);\n    for( i=0;i<nL;i++){\n        p_init[i][0] = group[i].x;\n        p_init[i+nL][0] = 1;\n        p_init[i+2*nL][0] = group[i].width;\n\n        p_min[i][0] = group[i].x-dt;//-group[i].width/4;\n        p_min[i+nL][0] = 0;\n        p_min[i+2*nL][0] = group[i].width/4;\n\n        p_max[i][0] = group[i].x+dt;//+group[i].width/4;\n        p_max[i+nL][0] = 1.5;\n        p_max[i+2*nL][0] = group[i].width*4;\n\n        dx[i][0] = -dt/1000;\n        dx[i+nL][0] = -1e-3;\n        dx[i+2*nL][0] = -dt/1000;\n    }\n\n    var dx = -Math.abs(t[0][0]-t[1][0])/10000;\n    var p_fit = LM.optimize(sumOfLorentzians, p_init, t, y_data, weight, dx, p_min, p_max, consts, opts);\n    p_fit=p_fit.p;\n    //Put back the result in the correct format\n    var result = new Array(nL);\n    for( i=0;i<nL;i++){\n        result[i]=[p_fit[i],[p_fit[i+nL][0]*maxY],p_fit[i+2*nL]];\n    }\n\n    return result;\n\n}\n\n/**\n *\n * @param xy A two column matrix containing the x and y data to be fitted\n * @param group A set of initial lorentzian parameters to be optimized [center, heigth, half_width_at_half_height]\n * @returns {Array} A set of final lorentzian parameters [center, heigth, hwhh*2]\n */\nfunction optimizeGaussianSum(xy, group, opts){\n    var xy2 = parseData(xy);\n\n    if(xy2===null||xy2[0].rows<3){\n        return null; //Cannot run an optimization with less than 3 points\n    }\n\n    var t = xy2[0];\n    var y_data = xy2[1];\n    var maxY = xy2[2];\n    var nbPoints = t.rows,i;\n\n    var weight = new Matrix(nbPoints,1);//[nbPoints / math.sqrt(y_data.dot(y_data))];\n    var k = nbPoints / math.sqrt(y_data.dot(y_data));\n    for(i=0;i<nbPoints;i++){\n        weight[i][0]=k;///(y_data[i][0]);\n        //weight[i][0]=k*(2-y_data[i][0]);\n    }\n\n    var opts=Object.create(opts || [  3,    100, 1e-3, 1e-3, 1e-3, 1e-2, 1e-2,    11,    9,        2 ]);\n    //var opts=[  3,    100, 1e-5, 1e-6, 1e-6, 1e-6, 1e-6,    11,    9,        1 ];\n    var consts = [ ];// optional vector of constants\n\n    var nL = group.length;\n    var p_init = new Matrix(nL*3,1);\n    var p_min =  new Matrix(nL*3,1);\n    var p_max =  new Matrix(nL*3,1);\n    var dx = new Matrix(nL*3,1);\n    var dt = Math.abs(t[0][0]-t[1][0]);\n    for( i=0;i<nL;i++){\n        p_init[i][0] = group[i].x;\n        p_init[i+nL][0] = group[i].y/maxY;\n        p_init[i+2*nL][0] = group[i].width;\n\n        p_min[i][0] = group[i].x-dt;\n        p_min[i+nL][0] = group[i].y*0.8/maxY;\n        p_min[i+2*nL][0] = group[i].width/2;\n\n        p_max[i][0] = group[i].x+dt;\n        p_max[i+nL][0] = group[i].y*1.2/maxY;\n        p_max[i+2*nL][0] = group[i].width*2;\n\n        dx[i][0] = -dt/1000;\n        dx[i+nL][0] = -1e-3;\n        dx[i+2*nL][0] = -dt/1000;\n    }\n    //console.log(t);\n    var p_fit = LM.optimize(sumOfLorentzians,p_init,t,y_data,weight,dx,p_min,p_max,consts,opts);\n    p_fit = p_fit.p;\n    //Put back the result in the correct format\n    var result = new Array(nL);\n    for( i=0;i<nL;i++){\n        result[i]=[p_fit[i],[p_fit[i+nL][0]*maxY],p_fit[i+2*nL]];\n    }\n\n    return result;\n\n}\n/**\n *\n * Converts the given input to the required x, y column matrices. y data is normalized to max(y)=1\n * @param xy\n * @returns {*[]}\n */\nfunction parseData(xy, threshold){\n    var nbSeries = xy.length;\n    var t = null;\n    var y_data = null, x,y;\n    var maxY = 0, i,j;\n\n    if(nbSeries==2){\n        //Looks like row wise matrix [x,y]\n        var nbPoints = xy[0].length;\n        //if(nbPoints<3)\n        //    throw new Exception(nbPoints);\n        //else{\n        t = new Array(nbPoints);//new Matrix(nbPoints,1);\n        y_data = new Array(nbPoints);//new Matrix(nbPoints,1);\n        x = xy[0];\n        y = xy[1];\n        if(typeof x[0] === \"number\"){\n            for(i=0;i<nbPoints;i++){\n                t[i]=x[i];\n                y_data[i]=y[i];\n                if(y[i]>maxY)\n                    maxY = y[i];\n            }\n        }\n        else{\n            //It is a colum matrix\n            if(typeof x[0] === \"object\"){\n                for(i=0;i<nbPoints;i++){\n                    t[i]=x[i][0];\n                    y_data[i]=y[i][0];\n                    if(y[i][0]>maxY)\n                        maxY = y[i][0];\n                }\n            }\n\n        }\n\n        //}\n    }\n    else{\n        //Looks like a column wise matrix [[x],[y]]\n        var nbPoints = nbSeries;\n        //if(nbPoints<3)\n        //    throw new SizeException(nbPoints);\n        //else {\n        t = new Array(nbPoints);//new Matrix(nbPoints, 1);\n        y_data = new Array(nbPoints);//new Matrix(nbPoints, 1);\n        for (i = 0; i < nbPoints; i++) {\n            t[i] = xy[i][0];\n            y_data[i] = xy[i][1];\n            if(y_data[i]>maxY)\n                maxY = y_data[i];\n        }\n        //}\n    }\n    for (i = 0; i < nbPoints; i++) {\n        y_data[i]/=maxY;\n    }\n    if(threshold){\n        for (i = nbPoints-1; i >=0; i--) {\n            if(y_data[i]<threshold) {\n                y_data.splice(i,1);\n                t.splice(i,1);\n            }\n        }\n    }\n    if(t.length>0)\n        return [(new Matrix([t])).transpose(),(new Matrix([y_data])).transpose(),maxY];\n    return null;\n}\n\nfunction sizeException(nbPoints) {\n    return new RangeError(\"Not enough points to perform the optimization: \"+nbPoints +\"< 3\");\n}\n\nmodule.exports.optimizeSingleLorentzian = optimizeSingleLorentzian;\nmodule.exports.optimizeLorentzianSum = optimizeLorentzianSum;\nmodule.exports.optimizeSingleGaussian = optimizeSingleGaussian;\nmodule.exports.optimizeGaussianSum = optimizeGaussianSum;\nmodule.exports.singleGaussian = singleGaussian;\nmodule.exports.singleLorentzian = singleLorentzian;\nmodule.exports.optimizeGaussianTrain = optimizeGaussianTrain;\nmodule.exports.optimizeLorentzianTrain = optimizeLorentzianTrain;","'use strict';\n\nmodule.exports = abstractMatrix;\n\nvar LuDecomposition = require('./dc/lu');\nvar SvDecomposition = require('./dc/svd');\nvar arrayUtils = require('ml-array-utils');\nvar util = require('./util');\nvar MatrixTransposeView = require('./views/transpose');\nvar MatrixRowView = require('./views/row');\nvar MatrixSubView = require('./views/sub');\nvar MatrixSelectionView = require('./views/selection');\nvar MatrixColumnView = require('./views/column');\nvar MatrixFlipRowView = require('./views/flipRow');\nvar MatrixFlipColumnView = require('./views/flipColumn');\n\nfunction abstractMatrix(superCtor) {\n    if (superCtor === undefined) superCtor = Object;\n\n    /**\n     * Real matrix\n     * @class Matrix\n     * @param {number|Array|Matrix} nRows - Number of rows of the new matrix,\n     * 2D array containing the data or Matrix instance to clone\n     * @param {number} [nColumns] - Number of columns of the new matrix\n     */\n    class Matrix extends superCtor {\n        static get [Symbol.species]() {\n            return this;\n        }\n\n        /**\n         * Constructs a Matrix with the chosen dimensions from a 1D array\n         * @param {number} newRows - Number of rows\n         * @param {number} newColumns - Number of columns\n         * @param {Array} newData - A 1D array containing data for the matrix\n         * @return {Matrix} - The new matrix\n         */\n        static from1DArray(newRows, newColumns, newData) {\n            var length = newRows * newColumns;\n            if (length !== newData.length) {\n                throw new RangeError('Data length does not match given dimensions');\n            }\n            var newMatrix = new this(newRows, newColumns);\n            for (var row = 0; row < newRows; row++) {\n                for (var column = 0; column < newColumns; column++) {\n                    newMatrix.set(row, column, newData[row * newColumns + column]);\n                }\n            }\n            return newMatrix;\n        }\n\n        /**\n         * Creates a row vector, a matrix with only one row.\n         * @param {Array} newData - A 1D array containing data for the vector\n         * @return {Matrix} - The new matrix\n         */\n        static rowVector(newData) {\n            var vector = new this(1, newData.length);\n            for (var i = 0; i < newData.length; i++) {\n                vector.set(0, i, newData[i]);\n            }\n            return vector;\n        }\n\n        /**\n         * Creates a column vector, a matrix with only one column.\n         * @param {Array} newData - A 1D array containing data for the vector\n         * @return {Matrix} - The new matrix\n         */\n        static columnVector(newData) {\n            var vector = new this(newData.length, 1);\n            for (var i = 0; i < newData.length; i++) {\n                vector.set(i, 0, newData[i]);\n            }\n            return vector;\n        }\n\n        /**\n         * Creates an empty matrix with the given dimensions. Values will be undefined. Same as using new Matrix(rows, columns).\n         * @param {number} rows - Number of rows\n         * @param {number} columns - Number of columns\n         * @return {Matrix} - The new matrix\n         */\n        static empty(rows, columns) {\n            return new this(rows, columns);\n        }\n\n        /**\n         * Creates a matrix with the given dimensions. Values will be set to zero.\n         * @param {number} rows - Number of rows\n         * @param {number} columns - Number of columns\n         * @return {Matrix} - The new matrix\n         */\n        static zeros(rows, columns) {\n            return this.empty(rows, columns).fill(0);\n        }\n\n        /**\n         * Creates a matrix with the given dimensions. Values will be set to one.\n         * @param {number} rows - Number of rows\n         * @param {number} columns - Number of columns\n         * @return {Matrix} - The new matrix\n         */\n        static ones(rows, columns) {\n            return this.empty(rows, columns).fill(1);\n        }\n\n        /**\n         * Creates a matrix with the given dimensions. Values will be randomly set.\n         * @param {number} rows - Number of rows\n         * @param {number} columns - Number of columns\n         * @param {function} [rng=Math.random] - Random number generator\n         * @return {Matrix} The new matrix\n         */\n        static rand(rows, columns, rng) {\n            if (rng === undefined) rng = Math.random;\n            var matrix = this.empty(rows, columns);\n            for (var i = 0; i < rows; i++) {\n                for (var j = 0; j < columns; j++) {\n                    matrix.set(i, j, rng());\n                }\n            }\n            return matrix;\n        }\n\n        /**\n         * Creates a matrix with the given dimensions. Values will be random integers.\n         * @param {number} rows - Number of rows\n         * @param {number} columns - Number of columns\n         * @param {number} [maxValue=1000] - Maximum value\n         * @param {function} [rng=Math.random] - Random number generator\n         * @return {Matrix} The new matrix\n         */\n        static randInt(rows, columns, maxValue, rng) {\n            if (maxValue === undefined) maxValue = 1000;\n            if (rng === undefined) rng = Math.random;\n            var matrix = this.empty(rows, columns);\n            for (var i = 0; i < rows; i++) {\n                for (var j = 0; j < columns; j++) {\n                    var value = Math.floor(rng() * maxValue);\n                    matrix.set(i, j, value);\n                }\n            }\n            return matrix;\n        }\n\n        /**\n         * Creates an identity matrix with the given dimension. Values of the diagonal will be 1 and others will be 0.\n         * @param {number} rows - Number of rows\n         * @param {number} [columns=rows] - Number of columns\n         * @param {number} [value=1] - Value to fill the diagonal with\n         * @return {Matrix} - The new identity matrix\n         */\n        static eye(rows, columns, value) {\n            if (columns === undefined) columns = rows;\n            if (value === undefined) value = 1;\n            var min = Math.min(rows, columns);\n            var matrix = this.zeros(rows, columns);\n            for (var i = 0; i < min; i++) {\n                matrix.set(i, i, value);\n            }\n            return matrix;\n        }\n\n        /**\n         * Creates a diagonal matrix based on the given array.\n         * @param {Array} data - Array containing the data for the diagonal\n         * @param {number} [rows] - Number of rows (Default: data.length)\n         * @param {number} [columns] - Number of columns (Default: rows)\n         * @return {Matrix} - The new diagonal matrix\n         */\n        static diag(data, rows, columns) {\n            var l = data.length;\n            if (rows === undefined) rows = l;\n            if (columns === undefined) columns = rows;\n            var min = Math.min(l, rows, columns);\n            var matrix = this.zeros(rows, columns);\n            for (var i = 0; i < min; i++) {\n                matrix.set(i, i, data[i]);\n            }\n            return matrix;\n        }\n\n        /**\n         * Returns a matrix whose elements are the minimum between matrix1 and matrix2\n         * @param {Matrix} matrix1\n         * @param {Matrix} matrix2\n         * @return {Matrix}\n         */\n        static min(matrix1, matrix2) {\n            matrix1 = this.checkMatrix(matrix1);\n            matrix2 = this.checkMatrix(matrix2);\n            var rows = matrix1.rows;\n            var columns = matrix1.columns;\n            var result = new this(rows, columns);\n            for (var i = 0; i < rows; i++) {\n                for (var j = 0; j < columns; j++) {\n                    result.set(i, j, Math.min(matrix1.get(i, j), matrix2.get(i, j)));\n                }\n            }\n            return result;\n        }\n\n        /**\n         * Returns a matrix whose elements are the maximum between matrix1 and matrix2\n         * @param {Matrix} matrix1\n         * @param {Matrix} matrix2\n         * @return {Matrix}\n         */\n        static max(matrix1, matrix2) {\n            matrix1 = this.checkMatrix(matrix1);\n            matrix2 = this.checkMatrix(matrix2);\n            var rows = matrix1.rows;\n            var columns = matrix1.columns;\n            var result = new this(rows, columns);\n            for (var i = 0; i < rows; i++) {\n                for (var j = 0; j < columns; j++) {\n                    result.set(i, j, Math.max(matrix1.get(i, j), matrix2.get(i, j)));\n                }\n            }\n            return result;\n        }\n\n        /**\n         * Check that the provided value is a Matrix and tries to instantiate one if not\n         * @param {*} value - The value to check\n         * @return {Matrix}\n         */\n        static checkMatrix(value) {\n            return Matrix.isMatrix(value) ? value : new this(value);\n        }\n\n        /**\n         * Returns true if the argument is a Matrix, false otherwise\n         * @param {*} value - The value to check\n         * @return {boolean}\n         */\n        static isMatrix(value) {\n            return (value != null) && (value.klass === 'Matrix');\n        }\n\n        /**\n         * @prop {number} size - The number of elements in the matrix.\n         */\n        get size() {\n            return this.rows * this.columns;\n        }\n\n        /**\n         * Applies a callback for each element of the matrix. The function is called in the matrix (this) context.\n         * @param {function} callback - Function that will be called with two parameters : i (row) and j (column)\n         * @return {Matrix} this\n         */\n        apply(callback) {\n            if (typeof callback !== 'function') {\n                throw new TypeError('callback must be a function');\n            }\n            var ii = this.rows;\n            var jj = this.columns;\n            for (var i = 0; i < ii; i++) {\n                for (var j = 0; j < jj; j++) {\n                    callback.call(this, i, j);\n                }\n            }\n            return this;\n        }\n\n        /**\n         * Returns a new 1D array filled row by row with the matrix values\n         * @return {Array}\n         */\n        to1DArray() {\n            var array = new Array(this.size);\n            for (var i = 0; i < this.rows; i++) {\n                for (var j = 0; j < this.columns; j++) {\n                    array[i * this.columns + j] = this.get(i, j);\n                }\n            }\n            return array;\n        }\n\n        /**\n         * Returns a 2D array containing a copy of the data\n         * @return {Array}\n         */\n        to2DArray() {\n            var copy = new Array(this.rows);\n            for (var i = 0; i < this.rows; i++) {\n                copy[i] = new Array(this.columns);\n                for (var j = 0; j < this.columns; j++) {\n                    copy[i][j] = this.get(i, j);\n                }\n            }\n            return copy;\n        }\n\n        /**\n         * @return {boolean} true if the matrix has one row\n         */\n        isRowVector() {\n            return this.rows === 1;\n        }\n\n        /**\n         * @return {boolean} true if the matrix has one column\n         */\n        isColumnVector() {\n            return this.columns === 1;\n        }\n\n        /**\n         * @return {boolean} true if the matrix has one row or one column\n         */\n        isVector() {\n            return (this.rows === 1) || (this.columns === 1);\n        }\n\n        /**\n         * @return {boolean} true if the matrix has the same number of rows and columns\n         */\n        isSquare() {\n            return this.rows === this.columns;\n        }\n\n        /**\n         * @return {boolean} true if the matrix is square and has the same values on both sides of the diagonal\n         */\n        isSymmetric() {\n            if (this.isSquare()) {\n                for (var i = 0; i < this.rows; i++) {\n                    for (var j = 0; j <= i; j++) {\n                        if (this.get(i, j) !== this.get(j, i)) {\n                            return false;\n                        }\n                    }\n                }\n                return true;\n            }\n            return false;\n        }\n\n        /**\n         * Sets a given element of the matrix. mat.set(3,4,1) is equivalent to mat[3][4]=1\n         * @abstract\n         * @param {number} rowIndex - Index of the row\n         * @param {number} columnIndex - Index of the column\n         * @param {number} value - The new value for the element\n         * @return {Matrix} this\n         */\n        set(rowIndex, columnIndex, value) { // eslint-disable-line no-unused-vars\n            throw new Error('set method is unimplemented');\n        }\n\n        /**\n         * Returns the given element of the matrix. mat.get(3,4) is equivalent to matrix[3][4]\n         * @abstract\n         * @param {number} rowIndex - Index of the row\n         * @param {number} columnIndex - Index of the column\n         * @return {number}\n         */\n        get(rowIndex, columnIndex) { // eslint-disable-line no-unused-vars\n            throw new Error('get method is unimplemented');\n        }\n\n        /**\n         * Creates a new matrix that is a repetition of the current matrix. New matrix has rowRep times the number of\n         * rows of the matrix, and colRep times the number of columns of the matrix\n         * @param {number} rowRep - Number of times the rows should be repeated\n         * @param {number} colRep - Number of times the columns should be re\n         * @return {Matrix}\n         * @example\n         * var matrix = new Matrix([[1,2]]);\n         * matrix.repeat(2); // [[1,2],[1,2]]\n         */\n        repeat(rowRep, colRep) {\n            rowRep = rowRep || 1;\n            colRep = colRep || 1;\n            var matrix = new this.constructor[Symbol.species](this.rows * rowRep, this.columns * colRep);\n            for (var i = 0; i < rowRep; i++) {\n                for (var j = 0; j < colRep; j++) {\n                    matrix.setSubMatrix(this, this.rows * i, this.columns * j);\n                }\n            }\n            return matrix;\n        }\n\n        /**\n         * Fills the matrix with a given value. All elements will be set to this value.\n         * @param {number} value - New value\n         * @return {Matrix} this\n         */\n        fill(value) {\n            for (var i = 0; i < this.rows; i++) {\n                for (var j = 0; j < this.columns; j++) {\n                    this.set(i, j, value);\n                }\n            }\n            return this;\n        }\n\n        /**\n         * Negates the matrix. All elements will be multiplied by (-1)\n         * @return {Matrix} this\n         */\n        neg() {\n            return this.mulS(-1);\n        }\n\n        /**\n         * Returns a new array from the given row index\n         * @param {number} index - Row index\n         * @return {Array}\n         */\n        getRow(index) {\n            util.checkRowIndex(this, index);\n            var row = new Array(this.columns);\n            for (var i = 0; i < this.columns; i++) {\n                row[i] = this.get(index, i);\n            }\n            return row;\n        }\n\n        /**\n         * Returns a new row vector from the given row index\n         * @param {number} index - Row index\n         * @return {Matrix}\n         */\n        getRowVector(index) {\n            return this.constructor.rowVector(this.getRow(index));\n        }\n\n        /**\n         * Sets a row at the given index\n         * @param {number} index - Row index\n         * @param {Array|Matrix} array - Array or vector\n         * @return {Matrix} this\n         */\n        setRow(index, array) {\n            util.checkRowIndex(this, index);\n            array = util.checkRowVector(this, array);\n            for (var i = 0; i < this.columns; i++) {\n                this.set(index, i, array[i]);\n            }\n            return this;\n        }\n\n        /**\n         * Swaps two rows\n         * @param {number} row1 - First row index\n         * @param {number} row2 - Second row index\n         * @return {Matrix} this\n         */\n        swapRows(row1, row2) {\n            util.checkRowIndex(this, row1);\n            util.checkRowIndex(this, row2);\n            for (var i = 0; i < this.columns; i++) {\n                var temp = this.get(row1, i);\n                this.set(row1, i, this.get(row2, i));\n                this.set(row2, i, temp);\n            }\n            return this;\n        }\n\n        /**\n         * Returns a new array from the given column index\n         * @param {number} index - Column index\n         * @return {Array}\n         */\n        getColumn(index) {\n            util.checkColumnIndex(this, index);\n            var column = new Array(this.rows);\n            for (var i = 0; i < this.rows; i++) {\n                column[i] = this.get(i, index);\n            }\n            return column;\n        }\n\n        /**\n         * Returns a new column vector from the given column index\n         * @param {number} index - Column index\n         * @return {Matrix}\n         */\n        getColumnVector(index) {\n            return this.constructor.columnVector(this.getColumn(index));\n        }\n\n        /**\n         * Sets a column at the given index\n         * @param {number} index - Column index\n         * @param {Array|Matrix} array - Array or vector\n         * @return {Matrix} this\n         */\n        setColumn(index, array) {\n            util.checkColumnIndex(this, index);\n            array = util.checkColumnVector(this, array);\n            for (var i = 0; i < this.rows; i++) {\n                this.set(i, index, array[i]);\n            }\n            return this;\n        }\n\n        /**\n         * Swaps two columns\n         * @param {number} column1 - First column index\n         * @param {number} column2 - Second column index\n         * @return {Matrix} this\n         */\n        swapColumns(column1, column2) {\n            util.checkColumnIndex(this, column1);\n            util.checkColumnIndex(this, column2);\n            for (var i = 0; i < this.rows; i++) {\n                var temp = this.get(i, column1);\n                this.set(i, column1, this.get(i, column2));\n                this.set(i, column2, temp);\n            }\n            return this;\n        }\n\n        /**\n         * Adds the values of a vector to each row\n         * @param {Array|Matrix} vector - Array or vector\n         * @return {Matrix} this\n         */\n        addRowVector(vector) {\n            vector = util.checkRowVector(this, vector);\n            for (var i = 0; i < this.rows; i++) {\n                for (var j = 0; j < this.columns; j++) {\n                    this.set(i, j, this.get(i, j) + vector[j]);\n                }\n            }\n            return this;\n        }\n\n        /**\n         * Subtracts the values of a vector from each row\n         * @param {Array|Matrix} vector - Array or vector\n         * @return {Matrix} this\n         */\n        subRowVector(vector) {\n            vector = util.checkRowVector(this, vector);\n            for (var i = 0; i < this.rows; i++) {\n                for (var j = 0; j < this.columns; j++) {\n                    this.set(i, j, this.get(i, j) - vector[j]);\n                }\n            }\n            return this;\n        }\n\n        /**\n         * Multiplies the values of a vector with each row\n         * @param {Array|Matrix} vector - Array or vector\n         * @return {Matrix} this\n         */\n        mulRowVector(vector) {\n            vector = util.checkRowVector(this, vector);\n            for (var i = 0; i < this.rows; i++) {\n                for (var j = 0; j < this.columns; j++) {\n                    this.set(i, j, this.get(i, j) * vector[j]);\n                }\n            }\n            return this;\n        }\n\n        /**\n         * Divides the values of each row by those of a vector\n         * @param {Array|Matrix} vector - Array or vector\n         * @return {Matrix} this\n         */\n        divRowVector(vector) {\n            vector = util.checkRowVector(this, vector);\n            for (var i = 0; i < this.rows; i++) {\n                for (var j = 0; j < this.columns; j++) {\n                    this.set(i, j, this.get(i, j) / vector[j]);\n                }\n            }\n            return this;\n        }\n\n        /**\n         * Adds the values of a vector to each column\n         * @param {Array|Matrix} vector - Array or vector\n         * @return {Matrix} this\n         */\n        addColumnVector(vector) {\n            vector = util.checkColumnVector(this, vector);\n            for (var i = 0; i < this.rows; i++) {\n                for (var j = 0; j < this.columns; j++) {\n                    this.set(i, j, this.get(i, j) + vector[i]);\n                }\n            }\n            return this;\n        }\n\n        /**\n         * Subtracts the values of a vector from each column\n         * @param {Array|Matrix} vector - Array or vector\n         * @return {Matrix} this\n         */\n        subColumnVector(vector) {\n            vector = util.checkColumnVector(this, vector);\n            for (var i = 0; i < this.rows; i++) {\n                for (var j = 0; j < this.columns; j++) {\n                    this.set(i, j, this.get(i, j) - vector[i]);\n                }\n            }\n            return this;\n        }\n\n        /**\n         * Multiplies the values of a vector with each column\n         * @param {Array|Matrix} vector - Array or vector\n         * @return {Matrix} this\n         */\n        mulColumnVector(vector) {\n            vector = util.checkColumnVector(this, vector);\n            for (var i = 0; i < this.rows; i++) {\n                for (var j = 0; j < this.columns; j++) {\n                    this.set(i, j, this.get(i, j) * vector[i]);\n                }\n            }\n            return this;\n        }\n\n        /**\n         * Divides the values of each column by those of a vector\n         * @param {Array|Matrix} vector - Array or vector\n         * @return {Matrix} this\n         */\n        divColumnVector(vector) {\n            vector = util.checkColumnVector(this, vector);\n            for (var i = 0; i < this.rows; i++) {\n                for (var j = 0; j < this.columns; j++) {\n                    this.set(i, j, this.get(i, j) / vector[i]);\n                }\n            }\n            return this;\n        }\n\n        /**\n         * Multiplies the values of a row with a scalar\n         * @param {number} index - Row index\n         * @param {number} value\n         * @return {Matrix} this\n         */\n        mulRow(index, value) {\n            util.checkRowIndex(this, index);\n            for (var i = 0; i < this.columns; i++) {\n                this.set(index, i, this.get(index, i) * value);\n            }\n            return this;\n        }\n\n        /**\n         * Multiplies the values of a column with a scalar\n         * @param {number} index - Column index\n         * @param {number} value\n         * @return {Matrix} this\n         */\n        mulColumn(index, value) {\n            util.checkColumnIndex(this, index);\n            for (var i = 0; i < this.rows; i++) {\n                this.set(i, index, this.get(i, index) * value);\n            }\n            return this;\n        }\n\n        /**\n         * Returns the maximum value of the matrix\n         * @return {number}\n         */\n        max() {\n            var v = this.get(0, 0);\n            for (var i = 0; i < this.rows; i++) {\n                for (var j = 0; j < this.columns; j++) {\n                    if (this.get(i, j) > v) {\n                        v = this.get(i, j);\n                    }\n                }\n            }\n            return v;\n        }\n\n        /**\n         * Returns the index of the maximum value\n         * @return {Array}\n         */\n        maxIndex() {\n            var v = this.get(0, 0);\n            var idx = [0, 0];\n            for (var i = 0; i < this.rows; i++) {\n                for (var j = 0; j < this.columns; j++) {\n                    if (this.get(i, j) > v) {\n                        v = this.get(i, j);\n                        idx[0] = i;\n                        idx[1] = j;\n                    }\n                }\n            }\n            return idx;\n        }\n\n        /**\n         * Returns the minimum value of the matrix\n         * @return {number}\n         */\n        min() {\n            var v = this.get(0, 0);\n            for (var i = 0; i < this.rows; i++) {\n                for (var j = 0; j < this.columns; j++) {\n                    if (this.get(i, j) < v) {\n                        v = this.get(i, j);\n                    }\n                }\n            }\n            return v;\n        }\n\n        /**\n         * Returns the index of the minimum value\n         * @return {Array}\n         */\n        minIndex() {\n            var v = this.get(0, 0);\n            var idx = [0, 0];\n            for (var i = 0; i < this.rows; i++) {\n                for (var j = 0; j < this.columns; j++) {\n                    if (this.get(i, j) < v) {\n                        v = this.get(i, j);\n                        idx[0] = i;\n                        idx[1] = j;\n                    }\n                }\n            }\n            return idx;\n        }\n\n        /**\n         * Returns the maximum value of one row\n         * @param {number} row - Row index\n         * @return {number}\n         */\n        maxRow(row) {\n            util.checkRowIndex(this, row);\n            var v = this.get(row, 0);\n            for (var i = 1; i < this.columns; i++) {\n                if (this.get(row, i) > v) {\n                    v = this.get(row, i);\n                }\n            }\n            return v;\n        }\n\n        /**\n         * Returns the index of the maximum value of one row\n         * @param {number} row - Row index\n         * @return {Array}\n         */\n        maxRowIndex(row) {\n            util.checkRowIndex(this, row);\n            var v = this.get(row, 0);\n            var idx = [row, 0];\n            for (var i = 1; i < this.columns; i++) {\n                if (this.get(row, i) > v) {\n                    v = this.get(row, i);\n                    idx[1] = i;\n                }\n            }\n            return idx;\n        }\n\n        /**\n         * Returns the minimum value of one row\n         * @param {number} row - Row index\n         * @return {number}\n         */\n        minRow(row) {\n            util.checkRowIndex(this, row);\n            var v = this.get(row, 0);\n            for (var i = 1; i < this.columns; i++) {\n                if (this.get(row, i) < v) {\n                    v = this.get(row, i);\n                }\n            }\n            return v;\n        }\n\n        /**\n         * Returns the index of the maximum value of one row\n         * @param {number} row - Row index\n         * @return {Array}\n         */\n        minRowIndex(row) {\n            util.checkRowIndex(this, row);\n            var v = this.get(row, 0);\n            var idx = [row, 0];\n            for (var i = 1; i < this.columns; i++) {\n                if (this.get(row, i) < v) {\n                    v = this.get(row, i);\n                    idx[1] = i;\n                }\n            }\n            return idx;\n        }\n\n        /**\n         * Returns the maximum value of one column\n         * @param {number} column - Column index\n         * @return {number}\n         */\n        maxColumn(column) {\n            util.checkColumnIndex(this, column);\n            var v = this.get(0, column);\n            for (var i = 1; i < this.rows; i++) {\n                if (this.get(i, column) > v) {\n                    v = this.get(i, column);\n                }\n            }\n            return v;\n        }\n\n        /**\n         * Returns the index of the maximum value of one column\n         * @param {number} column - Column index\n         * @return {Array}\n         */\n        maxColumnIndex(column) {\n            util.checkColumnIndex(this, column);\n            var v = this.get(0, column);\n            var idx = [0, column];\n            for (var i = 1; i < this.rows; i++) {\n                if (this.get(i, column) > v) {\n                    v = this.get(i, column);\n                    idx[0] = i;\n                }\n            }\n            return idx;\n        }\n\n        /**\n         * Returns the minimum value of one column\n         * @param {number} column - Column index\n         * @return {number}\n         */\n        minColumn(column) {\n            util.checkColumnIndex(this, column);\n            var v = this.get(0, column);\n            for (var i = 1; i < this.rows; i++) {\n                if (this.get(i, column) < v) {\n                    v = this.get(i, column);\n                }\n            }\n            return v;\n        }\n\n        /**\n         * Returns the index of the minimum value of one column\n         * @param {number} column - Column index\n         * @return {Array}\n         */\n        minColumnIndex(column) {\n            util.checkColumnIndex(this, column);\n            var v = this.get(0, column);\n            var idx = [0, column];\n            for (var i = 1; i < this.rows; i++) {\n                if (this.get(i, column) < v) {\n                    v = this.get(i, column);\n                    idx[0] = i;\n                }\n            }\n            return idx;\n        }\n\n        /**\n         * Returns an array containing the diagonal values of the matrix\n         * @return {Array}\n         */\n        diag() {\n            var min = Math.min(this.rows, this.columns);\n            var diag = new Array(min);\n            for (var i = 0; i < min; i++) {\n                diag[i] = this.get(i, i);\n            }\n            return diag;\n        }\n\n        /**\n         * Returns the sum by the argument given, if no argument given,\n         * it returns the sum of all elements of the matrix.\n         * @param {string} by - sum by 'row' or 'column'.\n         * @return {Matrix|number}\n         */\n        sum(by) {\n            switch (by) {\n                case 'row':\n                    return util.sumByRow(this);\n                case 'column':\n                    return util.sumByColumn(this);\n                default:\n                    return util.sumAll(this);\n            }\n        }\n\n        /**\n         * Returns the mean of all elements of the matrix\n         * @return {number}\n         */\n        mean() {\n            return this.sum() / this.size;\n        }\n\n        /**\n         * Returns the product of all elements of the matrix\n         * @return {number}\n         */\n        prod() {\n            var prod = 1;\n            for (var i = 0; i < this.rows; i++) {\n                for (var j = 0; j < this.columns; j++) {\n                    prod *= this.get(i, j);\n                }\n            }\n            return prod;\n        }\n\n        /**\n         * Computes the cumulative sum of the matrix elements (in place, row by row)\n         * @return {Matrix} this\n         */\n        cumulativeSum() {\n            var sum = 0;\n            for (var i = 0; i < this.rows; i++) {\n                for (var j = 0; j < this.columns; j++) {\n                    sum += this.get(i, j);\n                    this.set(i, j, sum);\n                }\n            }\n            return this;\n        }\n\n        /**\n         * Computes the dot (scalar) product between the matrix and another\n         * @param {Matrix} vector2 vector\n         * @return {number}\n         */\n        dot(vector2) {\n            if (Matrix.isMatrix(vector2)) vector2 = vector2.to1DArray();\n            var vector1 = this.to1DArray();\n            if (vector1.length !== vector2.length) {\n                throw new RangeError('vectors do not have the same size');\n            }\n            var dot = 0;\n            for (var i = 0; i < vector1.length; i++) {\n                dot += vector1[i] * vector2[i];\n            }\n            return dot;\n        }\n\n        /**\n         * Returns the matrix product between this and other\n         * @param {Matrix} other\n         * @return {Matrix}\n         */\n        mmul(other) {\n            other = this.constructor.checkMatrix(other);\n            if (this.columns !== other.rows) {\n                // eslint-disable-next-line no-console\n                console.warn('Number of columns of left matrix are not equal to number of rows of right matrix.');\n            }\n\n            var m = this.rows;\n            var n = this.columns;\n            var p = other.columns;\n\n            var result = new this.constructor[Symbol.species](m, p);\n\n            var Bcolj = new Array(n);\n            for (var j = 0; j < p; j++) {\n                for (var k = 0; k < n; k++) {\n                    Bcolj[k] = other.get(k, j);\n                }\n\n                for (var i = 0; i < m; i++) {\n                    var s = 0;\n                    for (k = 0; k < n; k++) {\n                        s += this.get(i, k) * Bcolj[k];\n                    }\n\n                    result.set(i, j, s);\n                }\n            }\n            return result;\n        }\n\n        strassen2x2(other) {\n            var result = new this.constructor[Symbol.species](2, 2);\n            const a11 = this.get(0, 0);\n            const b11 = other.get(0, 0);\n            const a12 = this.get(0, 1);\n            const b12 = other.get(0, 1);\n            const a21 = this.get(1, 0);\n            const b21 = other.get(1, 0);\n            const a22 = this.get(1, 1);\n            const b22 = other.get(1, 1);\n\n            // Compute intermediate values.\n            const m1 = (a11 + a22) * (b11 + b22);\n            const m2 = (a21 + a22) * b11;\n            const m3 = a11 * (b12 - b22);\n            const m4 = a22 * (b21 - b11);\n            const m5 = (a11 + a12) * b22;\n            const m6 = (a21 - a11) * (b11 + b12);\n            const m7 = (a12 - a22) * (b21 + b22);\n\n            // Combine intermediate values into the output.\n            const c00 = m1 + m4 - m5 + m7;\n            const c01 = m3 + m5;\n            const c10 = m2 + m4;\n            const c11 = m1 - m2 + m3 + m6;\n\n            result.set(0, 0, c00);\n            result.set(0, 1, c01);\n            result.set(1, 0, c10);\n            result.set(1, 1, c11);\n            return result;\n        }\n\n        strassen3x3(other) {\n            var result = new this.constructor[Symbol.species](3, 3);\n\n            const a00 = this.get(0, 0);\n            const a01 = this.get(0, 1);\n            const a02 = this.get(0, 2);\n            const a10 = this.get(1, 0);\n            const a11 = this.get(1, 1);\n            const a12 = this.get(1, 2);\n            const a20 = this.get(2, 0);\n            const a21 = this.get(2, 1);\n            const a22 = this.get(2, 2);\n\n            const b00 = other.get(0, 0);\n            const b01 = other.get(0, 1);\n            const b02 = other.get(0, 2);\n            const b10 = other.get(1, 0);\n            const b11 = other.get(1, 1);\n            const b12 = other.get(1, 2);\n            const b20 = other.get(2, 0);\n            const b21 = other.get(2, 1);\n            const b22 = other.get(2, 2);\n\n            const m1 = (a00 + a01 + a02 - a10 - a11 - a21 - a22) * b11;\n            const m2 = (a00 - a10) * (-b01 + b11);\n            const m3 = a11 * (-b00 + b01 + b10 - b11 - b12 - b20 + b22);\n            const m4 = (-a00 + a10 + a11) * (b00 - b01 + b11);\n            const m5 = (a10 + a11) * (-b00 + b01);\n            const m6 = a00 * b00;\n            const m7 = (-a00 + a20 + a21) * (b00 - b02 + b12);\n            const m8 = (-a00 + a20) * (b02 - b12);\n            const m9 = (a20 + a21) * (-b00 + b02);\n            const m10 = (a00 + a01 + a02 - a11 - a12 - a20 - a21) * b12;\n            const m11 = a21 * (-b00 + b02 + b10 - b11 - b12 - b20 + b21);\n            const m12 = (-a02 + a21 + a22) * (b11 + b20 - b21);\n            const m13 = (a02 - a22) * (b11 - b21);\n            const m14 = a02 * b20;\n            const m15 = (a21 + a22) * (-b20 + b21);\n            const m16 = (-a02 + a11 + a12) * (b12 + b20 - b22);\n            const m17 = (a02 - a12) * (b12 - b22);\n            const m18 = (a11 + a12) * (-b20 + b22);\n            const m19 = a01 * b10;\n            const m20 = a12 * b21;\n            const m21 = a10 * b02;\n            const m22 = a20 * b01;\n            const m23 = a22 * b22;\n\n            const c00 = m6 + m14 + m19;\n            const c01 = m1 + m4 + m5 + m6 + m12 + m14 + m15;\n            const c02 = m6 + m7 + m9 + m10 + m14 + m16 + m18;\n            const c10 = m2 + m3 + m4 + m6 + m14 + m16 + m17;\n            const c11 = m2 + m4 + m5 + m6 + m20;\n            const c12 = m14 + m16 + m17 + m18 + m21;\n            const c20 = m6 + m7 + m8 + m11 + m12 + m13 + m14;\n            const c21 = m12 + m13 + m14 + m15 + m22;\n            const c22 = m6 + m7 + m8 + m9 + m23;\n\n            result.set(0, 0, c00);\n            result.set(0, 1, c01);\n            result.set(0, 2, c02);\n            result.set(1, 0, c10);\n            result.set(1, 1, c11);\n            result.set(1, 2, c12);\n            result.set(2, 0, c20);\n            result.set(2, 1, c21);\n            result.set(2, 2, c22);\n            return result;\n        }\n\n        /**\n         * Returns the matrix product between x and y. More efficient than mmul(other) only when we multiply squared matrix and when the size of the matrix is > 1000.\n         * @param {Matrix} y\n         * @return {Matrix}\n         */\n        mmulStrassen(y) {\n            var x = this.clone();\n            var r1 = x.rows;\n            var c1 = x.columns;\n            var r2 = y.rows;\n            var c2 = y.columns;\n            if (c1 !== r2) {\n                // eslint-disable-next-line no-console\n                console.warn(`Multiplying ${r1} x ${c1} and ${r2} x ${c2} matrix: dimensions do not match.`);\n            }\n\n            // Put a matrix into the top left of a matrix of zeros.\n            // `rows` and `cols` are the dimensions of the output matrix.\n            function embed(mat, rows, cols) {\n                var r = mat.rows;\n                var c = mat.columns;\n                if ((r === rows) && (c === cols)) {\n                    return mat;\n                } else {\n                    var resultat = Matrix.zeros(rows, cols);\n                    resultat = resultat.setSubMatrix(mat, 0, 0);\n                    return resultat;\n                }\n            }\n\n\n            // Make sure both matrices are the same size.\n            // This is exclusively for simplicity:\n            // this algorithm can be implemented with matrices of different sizes.\n\n            var r = Math.max(r1, r2);\n            var c = Math.max(c1, c2);\n            x = embed(x, r, c);\n            y = embed(y, r, c);\n\n            // Our recursive multiplication function.\n            function blockMult(a, b, rows, cols) {\n                // For small matrices, resort to naive multiplication.\n                if (rows <= 512 || cols <= 512) {\n                    return a.mmul(b); // a is equivalent to this\n                }\n\n                // Apply dynamic padding.\n                if ((rows % 2 === 1) && (cols % 2 === 1)) {\n                    a = embed(a, rows + 1, cols + 1);\n                    b = embed(b, rows + 1, cols + 1);\n                } else if (rows % 2 === 1) {\n                    a = embed(a, rows + 1, cols);\n                    b = embed(b, rows + 1, cols);\n                } else if (cols % 2 === 1) {\n                    a = embed(a, rows, cols + 1);\n                    b = embed(b, rows, cols + 1);\n                }\n\n                var halfRows = parseInt(a.rows / 2);\n                var halfCols = parseInt(a.columns / 2);\n                // Subdivide input matrices.\n                var a11 = a.subMatrix(0, halfRows - 1, 0, halfCols - 1);\n                var b11 = b.subMatrix(0, halfRows - 1, 0, halfCols - 1);\n\n                var a12 = a.subMatrix(0, halfRows - 1, halfCols, a.columns - 1);\n                var b12 = b.subMatrix(0, halfRows - 1, halfCols, b.columns - 1);\n\n                var a21 = a.subMatrix(halfRows, a.rows - 1, 0, halfCols - 1);\n                var b21 = b.subMatrix(halfRows, b.rows - 1, 0, halfCols - 1);\n\n                var a22 = a.subMatrix(halfRows, a.rows - 1, halfCols, a.columns - 1);\n                var b22 = b.subMatrix(halfRows, b.rows - 1, halfCols, b.columns - 1);\n\n                // Compute intermediate values.\n                var m1 = blockMult(Matrix.add(a11, a22), Matrix.add(b11, b22), halfRows, halfCols);\n                var m2 = blockMult(Matrix.add(a21, a22), b11, halfRows, halfCols);\n                var m3 = blockMult(a11, Matrix.sub(b12, b22), halfRows, halfCols);\n                var m4 = blockMult(a22, Matrix.sub(b21, b11), halfRows, halfCols);\n                var m5 = blockMult(Matrix.add(a11, a12), b22, halfRows, halfCols);\n                var m6 = blockMult(Matrix.sub(a21, a11), Matrix.add(b11, b12), halfRows, halfCols);\n                var m7 = blockMult(Matrix.sub(a12, a22), Matrix.add(b21, b22), halfRows, halfCols);\n\n                // Combine intermediate values into the output.\n                var c11 = Matrix.add(m1, m4);\n                c11.sub(m5);\n                c11.add(m7);\n                var c12 = Matrix.add(m3, m5);\n                var c21 = Matrix.add(m2, m4);\n                var c22 = Matrix.sub(m1, m2);\n                c22.add(m3);\n                c22.add(m6);\n\n                //Crop output to the desired size (undo dynamic padding).\n                var resultat = Matrix.zeros(2 * c11.rows, 2 * c11.columns);\n                resultat = resultat.setSubMatrix(c11, 0, 0);\n                resultat = resultat.setSubMatrix(c12, c11.rows, 0);\n                resultat = resultat.setSubMatrix(c21, 0, c11.columns);\n                resultat = resultat.setSubMatrix(c22, c11.rows, c11.columns);\n                return resultat.subMatrix(0, rows - 1, 0, cols - 1);\n            }\n            return blockMult(x, y, r, c);\n        }\n\n        /**\n         * Returns a row-by-row scaled matrix\n         * @param {number} [min=0] - Minimum scaled value\n         * @param {number} [max=1] - Maximum scaled value\n         * @return {Matrix} - The scaled matrix\n         */\n        scaleRows(min, max) {\n            min = min === undefined ? 0 : min;\n            max = max === undefined ? 1 : max;\n            if (min >= max) {\n                throw new RangeError('min should be strictly smaller than max');\n            }\n            var newMatrix = this.constructor.empty(this.rows, this.columns);\n            for (var i = 0; i < this.rows; i++) {\n                var scaled = arrayUtils.scale(this.getRow(i), {min, max});\n                newMatrix.setRow(i, scaled);\n            }\n            return newMatrix;\n        }\n\n        /**\n         * Returns a new column-by-column scaled matrix\n         * @param {number} [min=0] - Minimum scaled value\n         * @param {number} [max=1] - Maximum scaled value\n         * @return {Matrix} - The new scaled matrix\n         * @example\n         * var matrix = new Matrix([[1,2],[-1,0]]);\n         * var scaledMatrix = matrix.scaleColumns(); // [[1,1],[0,0]]\n         */\n        scaleColumns(min, max) {\n            min = min === undefined ? 0 : min;\n            max = max === undefined ? 1 : max;\n            if (min >= max) {\n                throw new RangeError('min should be strictly smaller than max');\n            }\n            var newMatrix = this.constructor.empty(this.rows, this.columns);\n            for (var i = 0; i < this.columns; i++) {\n                var scaled = arrayUtils.scale(this.getColumn(i), {\n                    min: min,\n                    max: max\n                });\n                newMatrix.setColumn(i, scaled);\n            }\n            return newMatrix;\n        }\n\n\n        /**\n         * Returns the Kronecker product (also known as tensor product) between this and other\n         * See https://en.wikipedia.org/wiki/Kronecker_product\n         * @param {Matrix} other\n         * @return {Matrix}\n         */\n        kroneckerProduct(other) {\n            other = this.constructor.checkMatrix(other);\n\n            var m = this.rows;\n            var n = this.columns;\n            var p = other.rows;\n            var q = other.columns;\n\n            var result = new this.constructor[Symbol.species](m * p, n * q);\n            for (var i = 0; i < m; i++) {\n                for (var j = 0; j < n; j++) {\n                    for (var k = 0; k < p; k++) {\n                        for (var l = 0; l < q; l++) {\n                            result[p * i + k][q * j + l] = this.get(i, j) * other.get(k, l);\n                        }\n                    }\n                }\n            }\n            return result;\n        }\n\n        /**\n         * Transposes the matrix and returns a new one containing the result\n         * @return {Matrix}\n         */\n        transpose() {\n            var result = new this.constructor[Symbol.species](this.columns, this.rows);\n            for (var i = 0; i < this.rows; i++) {\n                for (var j = 0; j < this.columns; j++) {\n                    result.set(j, i, this.get(i, j));\n                }\n            }\n            return result;\n        }\n\n        /**\n         * Sorts the rows (in place)\n         * @param {function} compareFunction - usual Array.prototype.sort comparison function\n         * @return {Matrix} this\n         */\n        sortRows(compareFunction) {\n            if (compareFunction === undefined) compareFunction = compareNumbers;\n            for (var i = 0; i < this.rows; i++) {\n                this.setRow(i, this.getRow(i).sort(compareFunction));\n            }\n            return this;\n        }\n\n        /**\n         * Sorts the columns (in place)\n         * @param {function} compareFunction - usual Array.prototype.sort comparison function\n         * @return {Matrix} this\n         */\n        sortColumns(compareFunction) {\n            if (compareFunction === undefined) compareFunction = compareNumbers;\n            for (var i = 0; i < this.columns; i++) {\n                this.setColumn(i, this.getColumn(i).sort(compareFunction));\n            }\n            return this;\n        }\n\n        /**\n         * Returns a subset of the matrix\n         * @param {number} startRow - First row index\n         * @param {number} endRow - Last row index\n         * @param {number} startColumn - First column index\n         * @param {number} endColumn - Last column index\n         * @return {Matrix}\n         */\n        subMatrix(startRow, endRow, startColumn, endColumn) {\n            util.checkRange(this, startRow, endRow, startColumn, endColumn);\n            var newMatrix = new this.constructor[Symbol.species](endRow - startRow + 1, endColumn - startColumn + 1);\n            for (var i = startRow; i <= endRow; i++) {\n                for (var j = startColumn; j <= endColumn; j++) {\n                    newMatrix[i - startRow][j - startColumn] = this.get(i, j);\n                }\n            }\n            return newMatrix;\n        }\n\n        /**\n         * Returns a subset of the matrix based on an array of row indices\n         * @param {Array} indices - Array containing the row indices\n         * @param {number} [startColumn = 0] - First column index\n         * @param {number} [endColumn = this.columns-1] - Last column index\n         * @return {Matrix}\n         */\n        subMatrixRow(indices, startColumn, endColumn) {\n            if (startColumn === undefined) startColumn = 0;\n            if (endColumn === undefined) endColumn = this.columns - 1;\n            if ((startColumn > endColumn) || (startColumn < 0) || (startColumn >= this.columns) || (endColumn < 0) || (endColumn >= this.columns)) {\n                throw new RangeError('Argument out of range');\n            }\n\n            var newMatrix = new this.constructor[Symbol.species](indices.length, endColumn - startColumn + 1);\n            for (var i = 0; i < indices.length; i++) {\n                for (var j = startColumn; j <= endColumn; j++) {\n                    if (indices[i] < 0 || indices[i] >= this.rows) {\n                        throw new RangeError('Row index out of range: ' + indices[i]);\n                    }\n                    newMatrix.set(i, j - startColumn, this.get(indices[i], j));\n                }\n            }\n            return newMatrix;\n        }\n\n        /**\n         * Returns a subset of the matrix based on an array of column indices\n         * @param {Array} indices - Array containing the column indices\n         * @param {number} [startRow = 0] - First row index\n         * @param {number} [endRow = this.rows-1] - Last row index\n         * @return {Matrix}\n         */\n        subMatrixColumn(indices, startRow, endRow) {\n            if (startRow === undefined) startRow = 0;\n            if (endRow === undefined) endRow = this.rows - 1;\n            if ((startRow > endRow) || (startRow < 0) || (startRow >= this.rows) || (endRow < 0) || (endRow >= this.rows)) {\n                throw new RangeError('Argument out of range');\n            }\n\n            var newMatrix = new this.constructor[Symbol.species](endRow - startRow + 1, indices.length);\n            for (var i = 0; i < indices.length; i++) {\n                for (var j = startRow; j <= endRow; j++) {\n                    if (indices[i] < 0 || indices[i] >= this.columns) {\n                        throw new RangeError('Column index out of range: ' + indices[i]);\n                    }\n                    newMatrix.set(j - startRow, i, this.get(j, indices[i]));\n                }\n            }\n            return newMatrix;\n        }\n\n        /**\n         * Set a part of the matrix to the given sub-matrix\n         * @param {Matrix|Array< Array >} matrix - The source matrix from which to extract values.\n         * @param {number} startRow - The index of the first row to set\n         * @param {number} startColumn - The index of the first column to set\n         * @return {Matrix}\n         */\n        setSubMatrix(matrix, startRow, startColumn) {\n            matrix = this.constructor.checkMatrix(matrix);\n            var endRow = startRow + matrix.rows - 1;\n            var endColumn = startColumn + matrix.columns - 1;\n            util.checkRange(this, startRow, endRow, startColumn, endColumn);\n            for (var i = 0; i < matrix.rows; i++) {\n                for (var j = 0; j < matrix.columns; j++) {\n                    this[startRow + i][startColumn + j] = matrix.get(i, j);\n                }\n            }\n            return this;\n        }\n\n        /**\n         * Return a new matrix based on a selection of rows and columns\n         * @param {Array<number>} rowIndices - The row indices to select. Order matters and an index can be more than once.\n         * @param {Array<number>} columnIndices - The column indices to select. Order matters and an index can be use more than once.\n         * @return {Matrix} The new matrix\n         */\n        selection(rowIndices, columnIndices) {\n            var indices = util.checkIndices(this, rowIndices, columnIndices);\n            var newMatrix = new this.constructor[Symbol.species](rowIndices.length, columnIndices.length);\n            for (var i = 0; i < indices.row.length; i++) {\n                var rowIndex = indices.row[i];\n                for (var j = 0; j < indices.column.length; j++) {\n                    var columnIndex = indices.column[j];\n                    newMatrix[i][j] = this.get(rowIndex, columnIndex);\n                }\n            }\n            return newMatrix;\n        }\n\n        /**\n         * Returns the trace of the matrix (sum of the diagonal elements)\n         * @return {number}\n         */\n        trace() {\n            var min = Math.min(this.rows, this.columns);\n            var trace = 0;\n            for (var i = 0; i < min; i++) {\n                trace += this.get(i, i);\n            }\n            return trace;\n        }\n\n        /*\n         Matrix views\n         */\n\n        /**\n         * Returns a view of the transposition of the matrix\n         * @return {MatrixTransposeView}\n         */\n        transposeView() {\n            return new MatrixTransposeView(this);\n        }\n\n        /**\n         * Returns a view of the row vector with the given index\n         * @param {number} row - row index of the vector\n         * @return {MatrixRowView}\n         */\n        rowView(row) {\n            util.checkRowIndex(this, row);\n            return new MatrixRowView(this, row);\n        }\n\n        /**\n         * Returns a view of the column vector with the given index\n         * @param {number} column - column index of the vector\n         * @return {MatrixColumnView}\n         */\n        columnView(column) {\n            util.checkColumnIndex(this, column);\n            return new MatrixColumnView(this, column);\n        }\n\n        /**\n         * Returns a view of the matrix flipped in the row axis\n         * @return {MatrixFlipRowView}\n         */\n        flipRowView() {\n            return new MatrixFlipRowView(this);\n        }\n\n        /**\n         * Returns a view of the matrix flipped in the column axis\n         * @return {MatrixFlipColumnView}\n         */\n        flipColumnView() {\n            return new MatrixFlipColumnView(this);\n        }\n\n        /**\n         * Returns a view of a submatrix giving the index boundaries\n         * @param {number} startRow - first row index of the submatrix\n         * @param {number} endRow - last row index of the submatrix\n         * @param {number} startColumn - first column index of the submatrix\n         * @param {number} endColumn - last column index of the submatrix\n         * @return {MatrixSubView}\n         */\n        subMatrixView(startRow, endRow, startColumn, endColumn) {\n            return new MatrixSubView(this, startRow, endRow, startColumn, endColumn);\n        }\n\n        /**\n         * Returns a view of the cross of the row indices and the column indices\n         * @example\n         * // resulting vector is [[2], [2]]\n         * var matrix = new Matrix([[1,2,3], [4,5,6]]).selectionView([0, 0], [1])\n         * @param {Array<number>} rowIndices\n         * @param {Array<number>} columnIndices\n         * @return {MatrixSelectionView}\n         */\n        selectionView(rowIndices, columnIndices) {\n            return new MatrixSelectionView(this, rowIndices, columnIndices);\n        }\n\n\n        /**\n        * Calculates and returns the determinant of a matrix as a Number\n        * @example\n        *   new Matrix([[1,2,3], [4,5,6]]).det()\n        * @return {number}\n        */\n        det() {\n            if (this.isSquare()) {\n                var a, b, c, d;\n                if (this.columns === 2) {\n                    // 2 x 2 matrix\n                    a = this.get(0, 0);\n                    b = this.get(0, 1);\n                    c = this.get(1, 0);\n                    d = this.get(1, 1);\n\n                    return a * d - (b * c);\n                } else if (this.columns === 3) {\n                    // 3 x 3 matrix\n                    var subMatrix0, subMatrix1, subMatrix2;\n                    subMatrix0 = this.selectionView([1, 2], [1, 2]);\n                    subMatrix1 = this.selectionView([1, 2], [0, 2]);\n                    subMatrix2 = this.selectionView([1, 2], [0, 1]);\n                    a = this.get(0, 0);\n                    b = this.get(0, 1);\n                    c = this.get(0, 2);\n\n                    return a * subMatrix0.det() - b * subMatrix1.det() + c * subMatrix2.det();\n                } else {\n                    // general purpose determinant using the LU decomposition\n                    return new LuDecomposition(this).determinant;\n                }\n\n            } else {\n                throw Error('Determinant can only be calculated for a square matrix.');\n            }\n        }\n\n        /**\n         * Returns inverse of a matrix if it exists or the pseudoinverse\n         * @param {number} threshold - threshold for taking inverse of singular values (default = 1e-15)\n         * @return {Matrix} the (pseudo)inverted matrix.\n         */\n        pseudoInverse(threshold) {\n            if (threshold === undefined) threshold = Number.EPSILON;\n            var svdSolution = new SvDecomposition(this, {autoTranspose: true});\n\n            var U = svdSolution.leftSingularVectors;\n            var V = svdSolution.rightSingularVectors;\n            var s = svdSolution.diagonal;\n\n            for (var i = 0; i < s.length; i++) {\n                if (Math.abs(s[i]) > threshold) {\n                    s[i] = 1.0 / s[i];\n                } else {\n                    s[i] = 0.0;\n                }\n            }\n\n            // convert list to diagonal\n            s = this.constructor[Symbol.species].diag(s);\n            return V.mmul(s.mmul(U.transposeView()));\n        }\n    }\n\n    Matrix.prototype.klass = 'Matrix';\n\n    /**\n     * @private\n     * Check that two matrices have the same dimensions\n     * @param {Matrix} matrix\n     * @param {Matrix} otherMatrix\n     */\n    function checkDimensions(matrix, otherMatrix) { // eslint-disable-line no-unused-vars\n        if (matrix.rows !== otherMatrix.rows ||\n            matrix.columns !== otherMatrix.columns) {\n            throw new RangeError('Matrices dimensions must be equal');\n        }\n    }\n\n    function compareNumbers(a, b) {\n        return a - b;\n    }\n\n    /*\n     Synonyms\n     */\n\n    Matrix.random = Matrix.rand;\n    Matrix.diagonal = Matrix.diag;\n    Matrix.prototype.diagonal = Matrix.prototype.diag;\n    Matrix.identity = Matrix.eye;\n    Matrix.prototype.negate = Matrix.prototype.neg;\n    Matrix.prototype.tensorProduct = Matrix.prototype.kroneckerProduct;\n    Matrix.prototype.determinant = Matrix.prototype.det;\n\n    /*\n     Add dynamically instance and static methods for mathematical operations\n     */\n\n    var inplaceOperator = `\n(function %name%(value) {\n    if (typeof value === 'number') return this.%name%S(value);\n    return this.%name%M(value);\n})\n`;\n\n    var inplaceOperatorScalar = `\n(function %name%S(value) {\n    for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n            this.set(i, j, this.get(i, j) %op% value);\n        }\n    }\n    return this;\n})\n`;\n\n    var inplaceOperatorMatrix = `\n(function %name%M(matrix) {\n    matrix = this.constructor.checkMatrix(matrix);\n    checkDimensions(this, matrix);\n    for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n            this.set(i, j, this.get(i, j) %op% matrix.get(i, j));\n        }\n    }\n    return this;\n})\n`;\n\n    var staticOperator = `\n(function %name%(matrix, value) {\n    var newMatrix = new this[Symbol.species](matrix);\n    return newMatrix.%name%(value);\n})\n`;\n\n    var inplaceMethod = `\n(function %name%() {\n    for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n            this.set(i, j, %method%(this.get(i, j)));\n        }\n    }\n    return this;\n})\n`;\n\n    var staticMethod = `\n(function %name%(matrix) {\n    var newMatrix = new this[Symbol.species](matrix);\n    return newMatrix.%name%();\n})\n`;\n\n    var inplaceMethodWithArgs = `\n(function %name%(%args%) {\n    for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n            this.set(i, j, %method%(this.get(i, j), %args%));\n        }\n    }\n    return this;\n})\n`;\n\n    var staticMethodWithArgs = `\n(function %name%(matrix, %args%) {\n    var newMatrix = new this[Symbol.species](matrix);\n    return newMatrix.%name%(%args%);\n})\n`;\n\n\n    var inplaceMethodWithOneArgScalar = `\n(function %name%S(value) {\n    for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n            this.set(i, j, %method%(this.get(i, j), value));\n        }\n    }\n    return this;\n})\n`;\n    var inplaceMethodWithOneArgMatrix = `\n(function %name%M(matrix) {\n    matrix = this.constructor.checkMatrix(matrix);\n    checkDimensions(this, matrix);\n    for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n            this.set(i, j, %method%(this.get(i, j), matrix.get(i, j)));\n        }\n    }\n    return this;\n})\n`;\n\n    var inplaceMethodWithOneArg = `\n(function %name%(value) {\n    if (typeof value === 'number') return this.%name%S(value);\n    return this.%name%M(value);\n})\n`;\n\n    var staticMethodWithOneArg = staticMethodWithArgs;\n\n    var operators = [\n        // Arithmetic operators\n        ['+', 'add'],\n        ['-', 'sub', 'subtract'],\n        ['*', 'mul', 'multiply'],\n        ['/', 'div', 'divide'],\n        ['%', 'mod', 'modulus'],\n        // Bitwise operators\n        ['&', 'and'],\n        ['|', 'or'],\n        ['^', 'xor'],\n        ['<<', 'leftShift'],\n        ['>>', 'signPropagatingRightShift'],\n        ['>>>', 'rightShift', 'zeroFillRightShift']\n    ];\n\n    var i;\n\n    for (var operator of operators) {\n        var inplaceOp = eval(fillTemplateFunction(inplaceOperator, {name: operator[1], op: operator[0]}));\n        var inplaceOpS = eval(fillTemplateFunction(inplaceOperatorScalar, {name: operator[1] + 'S', op: operator[0]}));\n        var inplaceOpM = eval(fillTemplateFunction(inplaceOperatorMatrix, {name: operator[1] + 'M', op: operator[0]}));\n        var staticOp = eval(fillTemplateFunction(staticOperator, {name: operator[1]}));\n        for (i = 1; i < operator.length; i++) {\n            Matrix.prototype[operator[i]] = inplaceOp;\n            Matrix.prototype[operator[i] + 'S'] = inplaceOpS;\n            Matrix.prototype[operator[i] + 'M'] = inplaceOpM;\n            Matrix[operator[i]] = staticOp;\n        }\n    }\n\n    var methods = [\n        ['~', 'not']\n    ];\n\n    [\n        'abs', 'acos', 'acosh', 'asin', 'asinh', 'atan', 'atanh', 'cbrt', 'ceil',\n        'clz32', 'cos', 'cosh', 'exp', 'expm1', 'floor', 'fround', 'log', 'log1p',\n        'log10', 'log2', 'round', 'sign', 'sin', 'sinh', 'sqrt', 'tan', 'tanh', 'trunc'\n    ].forEach(function (mathMethod) {\n        methods.push(['Math.' + mathMethod, mathMethod]);\n    });\n\n    for (var method of methods) {\n        var inplaceMeth = eval(fillTemplateFunction(inplaceMethod, {name: method[1], method: method[0]}));\n        var staticMeth = eval(fillTemplateFunction(staticMethod, {name: method[1]}));\n        for (i = 1; i < method.length; i++) {\n            Matrix.prototype[method[i]] = inplaceMeth;\n            Matrix[method[i]] = staticMeth;\n        }\n    }\n\n    var methodsWithArgs = [\n        ['Math.pow', 1, 'pow']\n    ];\n\n    for (var methodWithArg of methodsWithArgs) {\n        var args = 'arg0';\n        for (i = 1; i < methodWithArg[1]; i++) {\n            args += `, arg${i}`;\n        }\n        if (methodWithArg[1] !== 1) {\n            var inplaceMethWithArgs = eval(fillTemplateFunction(inplaceMethodWithArgs, {\n                name: methodWithArg[2],\n                method: methodWithArg[0],\n                args: args\n            }));\n            var staticMethWithArgs = eval(fillTemplateFunction(staticMethodWithArgs, {name: methodWithArg[2], args: args}));\n            for (i = 2; i < methodWithArg.length; i++) {\n                Matrix.prototype[methodWithArg[i]] = inplaceMethWithArgs;\n                Matrix[methodWithArg[i]] = staticMethWithArgs;\n            }\n        } else {\n            var tmplVar = {\n                name: methodWithArg[2],\n                args: args,\n                method: methodWithArg[0]\n            };\n            var inplaceMethod2 = eval(fillTemplateFunction(inplaceMethodWithOneArg, tmplVar));\n            var inplaceMethodS = eval(fillTemplateFunction(inplaceMethodWithOneArgScalar, tmplVar));\n            var inplaceMethodM = eval(fillTemplateFunction(inplaceMethodWithOneArgMatrix, tmplVar));\n            var staticMethod2 = eval(fillTemplateFunction(staticMethodWithOneArg, tmplVar));\n            for (i = 2; i < methodWithArg.length; i++) {\n                Matrix.prototype[methodWithArg[i]] = inplaceMethod2;\n                Matrix.prototype[methodWithArg[i] + 'M'] = inplaceMethodM;\n                Matrix.prototype[methodWithArg[i] + 'S'] = inplaceMethodS;\n                Matrix[methodWithArg[i]] = staticMethod2;\n            }\n        }\n    }\n\n    function fillTemplateFunction(template, values) {\n        for (var value in values) {\n            template = template.replace(new RegExp('%' + value + '%', 'g'), values[value]);\n        }\n        return template;\n    }\n\n    return Matrix;\n}\n","'use strict';\n\nvar Matrix = require('../matrix');\n\n// https://github.com/lutzroeder/Mapack/blob/master/Source/LuDecomposition.cs\nfunction LuDecomposition(matrix) {\n    if (!(this instanceof LuDecomposition)) {\n        return new LuDecomposition(matrix);\n    }\n\n    matrix = Matrix.Matrix.checkMatrix(matrix);\n\n    var lu = matrix.clone(),\n        rows = lu.rows,\n        columns = lu.columns,\n        pivotVector = new Array(rows),\n        pivotSign = 1,\n        i, j, k, p, s, t, v,\n        LUrowi, LUcolj, kmax;\n\n    for (i = 0; i < rows; i++) {\n        pivotVector[i] = i;\n    }\n\n    LUcolj = new Array(rows);\n\n    for (j = 0; j < columns; j++) {\n\n        for (i = 0; i < rows; i++) {\n            LUcolj[i] = lu[i][j];\n        }\n\n        for (i = 0; i < rows; i++) {\n            LUrowi = lu[i];\n            kmax = Math.min(i, j);\n            s = 0;\n            for (k = 0; k < kmax; k++) {\n                s += LUrowi[k] * LUcolj[k];\n            }\n            LUrowi[j] = LUcolj[i] -= s;\n        }\n\n        p = j;\n        for (i = j + 1; i < rows; i++) {\n            if (Math.abs(LUcolj[i]) > Math.abs(LUcolj[p])) {\n                p = i;\n            }\n        }\n\n        if (p !== j) {\n            for (k = 0; k < columns; k++) {\n                t = lu[p][k];\n                lu[p][k] = lu[j][k];\n                lu[j][k] = t;\n            }\n\n            v = pivotVector[p];\n            pivotVector[p] = pivotVector[j];\n            pivotVector[j] = v;\n\n            pivotSign = -pivotSign;\n        }\n\n        if (j < rows && lu[j][j] !== 0) {\n            for (i = j + 1; i < rows; i++) {\n                lu[i][j] /= lu[j][j];\n            }\n        }\n    }\n\n    this.LU = lu;\n    this.pivotVector = pivotVector;\n    this.pivotSign = pivotSign;\n}\n\nLuDecomposition.prototype = {\n    isSingular: function () {\n        var data = this.LU,\n            col = data.columns;\n        for (var j = 0; j < col; j++) {\n            if (data[j][j] === 0) {\n                return true;\n            }\n        }\n        return false;\n    },\n    get determinant() {\n        var data = this.LU;\n        if (!data.isSquare()) {\n            throw new Error('Matrix must be square');\n        }\n        var determinant = this.pivotSign, col = data.columns;\n        for (var j = 0; j < col; j++) {\n            determinant *= data[j][j];\n        }\n        return determinant;\n    },\n    get lowerTriangularMatrix() {\n        var data = this.LU,\n            rows = data.rows,\n            columns = data.columns,\n            X = new Matrix.Matrix(rows, columns);\n        for (var i = 0; i < rows; i++) {\n            for (var j = 0; j < columns; j++) {\n                if (i > j) {\n                    X[i][j] = data[i][j];\n                } else if (i === j) {\n                    X[i][j] = 1;\n                } else {\n                    X[i][j] = 0;\n                }\n            }\n        }\n        return X;\n    },\n    get upperTriangularMatrix() {\n        var data = this.LU,\n            rows = data.rows,\n            columns = data.columns,\n            X = new Matrix.Matrix(rows, columns);\n        for (var i = 0; i < rows; i++) {\n            for (var j = 0; j < columns; j++) {\n                if (i <= j) {\n                    X[i][j] = data[i][j];\n                } else {\n                    X[i][j] = 0;\n                }\n            }\n        }\n        return X;\n    },\n    get pivotPermutationVector() {\n        return this.pivotVector.slice();\n    },\n    solve: function (value) {\n        value = Matrix.Matrix.checkMatrix(value);\n\n        var lu = this.LU,\n            rows = lu.rows;\n\n        if (rows !== value.rows) {\n            throw new Error('Invalid matrix dimensions');\n        }\n        if (this.isSingular()) {\n            throw new Error('LU matrix is singular');\n        }\n\n        var count = value.columns;\n        var X = value.subMatrixRow(this.pivotVector, 0, count - 1);\n        var columns = lu.columns;\n        var i, j, k;\n\n        for (k = 0; k < columns; k++) {\n            for (i = k + 1; i < columns; i++) {\n                for (j = 0; j < count; j++) {\n                    X[i][j] -= X[k][j] * lu[i][k];\n                }\n            }\n        }\n        for (k = columns - 1; k >= 0; k--) {\n            for (j = 0; j < count; j++) {\n                X[k][j] /= lu[k][k];\n            }\n            for (i = 0; i < k; i++) {\n                for (j = 0; j < count; j++) {\n                    X[i][j] -= X[k][j] * lu[i][k];\n                }\n            }\n        }\n        return X;\n    }\n};\n\nmodule.exports = LuDecomposition;\n","'use strict';\n\nvar Matrix = require('../matrix');\nvar util = require('./util');\nvar hypotenuse = util.hypotenuse;\nvar getFilled2DArray = util.getFilled2DArray;\n\n// https://github.com/lutzroeder/Mapack/blob/master/Source/SingularValueDecomposition.cs\nfunction SingularValueDecomposition(value, options) {\n    if (!(this instanceof SingularValueDecomposition)) {\n        return new SingularValueDecomposition(value, options);\n    }\n    value = Matrix.Matrix.checkMatrix(value);\n\n    options = options || {};\n\n    var m = value.rows,\n        n = value.columns,\n        nu = Math.min(m, n);\n\n    var wantu = true, wantv = true;\n    if (options.computeLeftSingularVectors === false) wantu = false;\n    if (options.computeRightSingularVectors === false) wantv = false;\n    var autoTranspose = options.autoTranspose === true;\n\n    var swapped = false;\n    var a;\n    if (m < n) {\n        if (!autoTranspose) {\n            a = value.clone();\n            // eslint-disable-next-line no-console\n            console.warn('Computing SVD on a matrix with more columns than rows. Consider enabling autoTranspose');\n        } else {\n            a = value.transpose();\n            m = a.rows;\n            n = a.columns;\n            swapped = true;\n            var aux = wantu;\n            wantu = wantv;\n            wantv = aux;\n        }\n    } else {\n        a = value.clone();\n    }\n\n    var s = new Array(Math.min(m + 1, n)),\n        U = getFilled2DArray(m, nu, 0),\n        V = getFilled2DArray(n, n, 0),\n        e = new Array(n),\n        work = new Array(m);\n\n    var nct = Math.min(m - 1, n);\n    var nrt = Math.max(0, Math.min(n - 2, m));\n\n    var i, j, k, p, t, ks, f, cs, sn, max, kase,\n        scale, sp, spm1, epm1, sk, ek, b, c, shift, g;\n\n    for (k = 0, max = Math.max(nct, nrt); k < max; k++) {\n        if (k < nct) {\n            s[k] = 0;\n            for (i = k; i < m; i++) {\n                s[k] = hypotenuse(s[k], a[i][k]);\n            }\n            if (s[k] !== 0) {\n                if (a[k][k] < 0) {\n                    s[k] = -s[k];\n                }\n                for (i = k; i < m; i++) {\n                    a[i][k] /= s[k];\n                }\n                a[k][k] += 1;\n            }\n            s[k] = -s[k];\n        }\n\n        for (j = k + 1; j < n; j++) {\n            if ((k < nct) && (s[k] !== 0)) {\n                t = 0;\n                for (i = k; i < m; i++) {\n                    t += a[i][k] * a[i][j];\n                }\n                t = -t / a[k][k];\n                for (i = k; i < m; i++) {\n                    a[i][j] += t * a[i][k];\n                }\n            }\n            e[j] = a[k][j];\n        }\n\n        if (wantu && (k < nct)) {\n            for (i = k; i < m; i++) {\n                U[i][k] = a[i][k];\n            }\n        }\n\n        if (k < nrt) {\n            e[k] = 0;\n            for (i = k + 1; i < n; i++) {\n                e[k] = hypotenuse(e[k], e[i]);\n            }\n            if (e[k] !== 0) {\n                if (e[k + 1] < 0) {\n                    e[k] = 0 - e[k];\n                }\n                for (i = k + 1; i < n; i++) {\n                    e[i] /= e[k];\n                }\n                e[k + 1] += 1;\n            }\n            e[k] = -e[k];\n            if ((k + 1 < m) && (e[k] !== 0)) {\n                for (i = k + 1; i < m; i++) {\n                    work[i] = 0;\n                }\n                for (j = k + 1; j < n; j++) {\n                    for (i = k + 1; i < m; i++) {\n                        work[i] += e[j] * a[i][j];\n                    }\n                }\n                for (j = k + 1; j < n; j++) {\n                    t = -e[j] / e[k + 1];\n                    for (i = k + 1; i < m; i++) {\n                        a[i][j] += t * work[i];\n                    }\n                }\n            }\n            if (wantv) {\n                for (i = k + 1; i < n; i++) {\n                    V[i][k] = e[i];\n                }\n            }\n        }\n    }\n\n    p = Math.min(n, m + 1);\n    if (nct < n) {\n        s[nct] = a[nct][nct];\n    }\n    if (m < p) {\n        s[p - 1] = 0;\n    }\n    if (nrt + 1 < p) {\n        e[nrt] = a[nrt][p - 1];\n    }\n    e[p - 1] = 0;\n\n    if (wantu) {\n        for (j = nct; j < nu; j++) {\n            for (i = 0; i < m; i++) {\n                U[i][j] = 0;\n            }\n            U[j][j] = 1;\n        }\n        for (k = nct - 1; k >= 0; k--) {\n            if (s[k] !== 0) {\n                for (j = k + 1; j < nu; j++) {\n                    t = 0;\n                    for (i = k; i < m; i++) {\n                        t += U[i][k] * U[i][j];\n                    }\n                    t = -t / U[k][k];\n                    for (i = k; i < m; i++) {\n                        U[i][j] += t * U[i][k];\n                    }\n                }\n                for (i = k; i < m; i++) {\n                    U[i][k] = -U[i][k];\n                }\n                U[k][k] = 1 + U[k][k];\n                for (i = 0; i < k - 1; i++) {\n                    U[i][k] = 0;\n                }\n            } else {\n                for (i = 0; i < m; i++) {\n                    U[i][k] = 0;\n                }\n                U[k][k] = 1;\n            }\n        }\n    }\n\n    if (wantv) {\n        for (k = n - 1; k >= 0; k--) {\n            if ((k < nrt) && (e[k] !== 0)) {\n                for (j = k + 1; j < n; j++) {\n                    t = 0;\n                    for (i = k + 1; i < n; i++) {\n                        t += V[i][k] * V[i][j];\n                    }\n                    t = -t / V[k + 1][k];\n                    for (i = k + 1; i < n; i++) {\n                        V[i][j] += t * V[i][k];\n                    }\n                }\n            }\n            for (i = 0; i < n; i++) {\n                V[i][k] = 0;\n            }\n            V[k][k] = 1;\n        }\n    }\n\n    var pp = p - 1,\n        iter = 0,\n        eps = Math.pow(2, -52);\n    while (p > 0) {\n        for (k = p - 2; k >= -1; k--) {\n            if (k === -1) {\n                break;\n            }\n            if (Math.abs(e[k]) <= eps * (Math.abs(s[k]) + Math.abs(s[k + 1]))) {\n                e[k] = 0;\n                break;\n            }\n        }\n        if (k === p - 2) {\n            kase = 4;\n        } else {\n            for (ks = p - 1; ks >= k; ks--) {\n                if (ks === k) {\n                    break;\n                }\n                t = (ks !== p ? Math.abs(e[ks]) : 0) + (ks !== k + 1 ? Math.abs(e[ks - 1]) : 0);\n                if (Math.abs(s[ks]) <= eps * t) {\n                    s[ks] = 0;\n                    break;\n                }\n            }\n            if (ks === k) {\n                kase = 3;\n            } else if (ks === p - 1) {\n                kase = 1;\n            } else {\n                kase = 2;\n                k = ks;\n            }\n        }\n\n        k++;\n\n        switch (kase) {\n            case 1: {\n                f = e[p - 2];\n                e[p - 2] = 0;\n                for (j = p - 2; j >= k; j--) {\n                    t = hypotenuse(s[j], f);\n                    cs = s[j] / t;\n                    sn = f / t;\n                    s[j] = t;\n                    if (j !== k) {\n                        f = -sn * e[j - 1];\n                        e[j - 1] = cs * e[j - 1];\n                    }\n                    if (wantv) {\n                        for (i = 0; i < n; i++) {\n                            t = cs * V[i][j] + sn * V[i][p - 1];\n                            V[i][p - 1] = -sn * V[i][j] + cs * V[i][p - 1];\n                            V[i][j] = t;\n                        }\n                    }\n                }\n                break;\n            }\n            case 2 : {\n                f = e[k - 1];\n                e[k - 1] = 0;\n                for (j = k; j < p; j++) {\n                    t = hypotenuse(s[j], f);\n                    cs = s[j] / t;\n                    sn = f / t;\n                    s[j] = t;\n                    f = -sn * e[j];\n                    e[j] = cs * e[j];\n                    if (wantu) {\n                        for (i = 0; i < m; i++) {\n                            t = cs * U[i][j] + sn * U[i][k - 1];\n                            U[i][k - 1] = -sn * U[i][j] + cs * U[i][k - 1];\n                            U[i][j] = t;\n                        }\n                    }\n                }\n                break;\n            }\n            case 3 : {\n                scale = Math.max(Math.max(Math.max(Math.max(Math.abs(s[p - 1]), Math.abs(s[p - 2])), Math.abs(e[p - 2])), Math.abs(s[k])), Math.abs(e[k]));\n                sp = s[p - 1] / scale;\n                spm1 = s[p - 2] / scale;\n                epm1 = e[p - 2] / scale;\n                sk = s[k] / scale;\n                ek = e[k] / scale;\n                b = ((spm1 + sp) * (spm1 - sp) + epm1 * epm1) / 2;\n                c = (sp * epm1) * (sp * epm1);\n                shift = 0;\n                if ((b !== 0) || (c !== 0)) {\n                    shift = Math.sqrt(b * b + c);\n                    if (b < 0) {\n                        shift = -shift;\n                    }\n                    shift = c / (b + shift);\n                }\n                f = (sk + sp) * (sk - sp) + shift;\n                g = sk * ek;\n                for (j = k; j < p - 1; j++) {\n                    t = hypotenuse(f, g);\n                    cs = f / t;\n                    sn = g / t;\n                    if (j !== k) {\n                        e[j - 1] = t;\n                    }\n                    f = cs * s[j] + sn * e[j];\n                    e[j] = cs * e[j] - sn * s[j];\n                    g = sn * s[j + 1];\n                    s[j + 1] = cs * s[j + 1];\n                    if (wantv) {\n                        for (i = 0; i < n; i++) {\n                            t = cs * V[i][j] + sn * V[i][j + 1];\n                            V[i][j + 1] = -sn * V[i][j] + cs * V[i][j + 1];\n                            V[i][j] = t;\n                        }\n                    }\n                    t = hypotenuse(f, g);\n                    cs = f / t;\n                    sn = g / t;\n                    s[j] = t;\n                    f = cs * e[j] + sn * s[j + 1];\n                    s[j + 1] = -sn * e[j] + cs * s[j + 1];\n                    g = sn * e[j + 1];\n                    e[j + 1] = cs * e[j + 1];\n                    if (wantu && (j < m - 1)) {\n                        for (i = 0; i < m; i++) {\n                            t = cs * U[i][j] + sn * U[i][j + 1];\n                            U[i][j + 1] = -sn * U[i][j] + cs * U[i][j + 1];\n                            U[i][j] = t;\n                        }\n                    }\n                }\n                e[p - 2] = f;\n                iter = iter + 1;\n                break;\n            }\n            case 4: {\n                if (s[k] <= 0) {\n                    s[k] = (s[k] < 0 ? -s[k] : 0);\n                    if (wantv) {\n                        for (i = 0; i <= pp; i++) {\n                            V[i][k] = -V[i][k];\n                        }\n                    }\n                }\n                while (k < pp) {\n                    if (s[k] >= s[k + 1]) {\n                        break;\n                    }\n                    t = s[k];\n                    s[k] = s[k + 1];\n                    s[k + 1] = t;\n                    if (wantv && (k < n - 1)) {\n                        for (i = 0; i < n; i++) {\n                            t = V[i][k + 1];\n                            V[i][k + 1] = V[i][k];\n                            V[i][k] = t;\n                        }\n                    }\n                    if (wantu && (k < m - 1)) {\n                        for (i = 0; i < m; i++) {\n                            t = U[i][k + 1];\n                            U[i][k + 1] = U[i][k];\n                            U[i][k] = t;\n                        }\n                    }\n                    k++;\n                }\n                iter = 0;\n                p--;\n                break;\n            }\n            // no default\n        }\n    }\n\n    if (swapped) {\n        var tmp = V;\n        V = U;\n        U = tmp;\n    }\n\n    this.m = m;\n    this.n = n;\n    this.s = s;\n    this.U = U;\n    this.V = V;\n}\n\nSingularValueDecomposition.prototype = {\n    get condition() {\n        return this.s[0] / this.s[Math.min(this.m, this.n) - 1];\n    },\n    get norm2() {\n        return this.s[0];\n    },\n    get rank() {\n        var eps = Math.pow(2, -52),\n            tol = Math.max(this.m, this.n) * this.s[0] * eps,\n            r = 0,\n            s = this.s;\n        for (var i = 0, ii = s.length; i < ii; i++) {\n            if (s[i] > tol) {\n                r++;\n            }\n        }\n        return r;\n    },\n    get diagonal() {\n        return this.s;\n    },\n    // https://github.com/accord-net/framework/blob/development/Sources/Accord.Math/Decompositions/SingularValueDecomposition.cs\n    get threshold() {\n        return (Math.pow(2, -52) / 2) * Math.max(this.m, this.n) * this.s[0];\n    },\n    get leftSingularVectors() {\n        if (!Matrix.Matrix.isMatrix(this.U)) {\n            this.U = new Matrix.Matrix(this.U);\n        }\n        return this.U;\n    },\n    get rightSingularVectors() {\n        if (!Matrix.Matrix.isMatrix(this.V)) {\n            this.V = new Matrix.Matrix(this.V);\n        }\n        return this.V;\n    },\n    get diagonalMatrix() {\n        return Matrix.Matrix.diag(this.s);\n    },\n    solve: function (value) {\n\n        var Y = value,\n            e = this.threshold,\n            scols = this.s.length,\n            Ls = Matrix.Matrix.zeros(scols, scols),\n            i;\n\n        for (i = 0; i < scols; i++) {\n            if (Math.abs(this.s[i]) <= e) {\n                Ls[i][i] = 0;\n            } else {\n                Ls[i][i] = 1 / this.s[i];\n            }\n        }\n\n        var U = this.U;\n        var V = this.rightSingularVectors;\n\n        var VL = V.mmul(Ls),\n            vrows = V.rows,\n            urows = U.length,\n            VLU = Matrix.Matrix.zeros(vrows, urows),\n            j, k, sum;\n\n        for (i = 0; i < vrows; i++) {\n            for (j = 0; j < urows; j++) {\n                sum = 0;\n                for (k = 0; k < scols; k++) {\n                    sum += VL[i][k] * U[j][k];\n                }\n                VLU[i][j] = sum;\n            }\n        }\n\n        return VLU.mmul(Y);\n    },\n    solveForDiagonal: function (value) {\n        return this.solve(Matrix.Matrix.diag(value));\n    },\n    inverse: function () {\n        var V = this.V;\n        var e = this.threshold,\n            vrows = V.length,\n            vcols = V[0].length,\n            X = new Matrix.Matrix(vrows, this.s.length),\n            i, j;\n\n        for (i = 0; i < vrows; i++) {\n            for (j = 0; j < vcols; j++) {\n                if (Math.abs(this.s[j]) > e) {\n                    X[i][j] = V[i][j] / this.s[j];\n                } else {\n                    X[i][j] = 0;\n                }\n            }\n        }\n\n        var U = this.U;\n\n        var urows = U.length,\n            ucols = U[0].length,\n            Y = new Matrix.Matrix(vrows, urows),\n            k, sum;\n\n        for (i = 0; i < vrows; i++) {\n            for (j = 0; j < urows; j++) {\n                sum = 0;\n                for (k = 0; k < ucols; k++) {\n                    sum += X[i][k] * U[j][k];\n                }\n                Y[i][j] = sum;\n            }\n        }\n\n        return Y;\n    }\n};\n\nmodule.exports = SingularValueDecomposition;\n","'use strict';\n\nexports.array = require('./array');\nexports.matrix = require('./matrix');\n","'use strict';\n\nfunction compareNumbers(a, b) {\n    return a - b;\n}\n\n/**\n * Computes the sum of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.sum = function sum(values) {\n    var sum = 0;\n    for (var i = 0; i < values.length; i++) {\n        sum += values[i];\n    }\n    return sum;\n};\n\n/**\n * Computes the maximum of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.max = function max(values) {\n    var max = values[0];\n    var l = values.length;\n    for (var i = 1; i < l; i++) {\n        if (values[i] > max) max = values[i];\n    }\n    return max;\n};\n\n/**\n * Computes the minimum of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.min = function min(values) {\n    var min = values[0];\n    var l = values.length;\n    for (var i = 1; i < l; i++) {\n        if (values[i] < min) min = values[i];\n    }\n    return min;\n};\n\n/**\n * Computes the min and max of the given values\n * @param {Array} values\n * @returns {{min: number, max: number}}\n */\nexports.minMax = function minMax(values) {\n    var min = values[0];\n    var max = values[0];\n    var l = values.length;\n    for (var i = 1; i < l; i++) {\n        if (values[i] < min) min = values[i];\n        if (values[i] > max) max = values[i];\n    }\n    return {\n        min: min,\n        max: max\n    };\n};\n\n/**\n * Computes the arithmetic mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.arithmeticMean = function arithmeticMean(values) {\n    var sum = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        sum += values[i];\n    }\n    return sum / l;\n};\n\n/**\n * {@link arithmeticMean}\n */\nexports.mean = exports.arithmeticMean;\n\n/**\n * Computes the geometric mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.geometricMean = function geometricMean(values) {\n    var mul = 1;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        mul *= values[i];\n    }\n    return Math.pow(mul, 1 / l);\n};\n\n/**\n * Computes the mean of the log of the given values\n * If the return value is exponentiated, it gives the same result as the\n * geometric mean.\n * @param {Array} values\n * @returns {number}\n */\nexports.logMean = function logMean(values) {\n    var lnsum = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        lnsum += Math.log(values[i]);\n    }\n    return lnsum / l;\n};\n\n/**\n * Computes the weighted grand mean for a list of means and sample sizes\n * @param {Array} means - Mean values for each set of samples\n * @param {Array} samples - Number of original values for each set of samples\n * @returns {number}\n */\nexports.grandMean = function grandMean(means, samples) {\n    var sum = 0;\n    var n = 0;\n    var l = means.length;\n    for (var i = 0; i < l; i++) {\n        sum += samples[i] * means[i];\n        n += samples[i];\n    }\n    return sum / n;\n};\n\n/**\n * Computes the truncated mean of the given values using a given percentage\n * @param {Array} values\n * @param {number} percent - The percentage of values to keep (range: [0,1])\n * @param {boolean} [alreadySorted=false]\n * @returns {number}\n */\nexports.truncatedMean = function truncatedMean(values, percent, alreadySorted) {\n    if (alreadySorted === undefined) alreadySorted = false;\n    if (!alreadySorted) {\n        values = [].concat(values).sort(compareNumbers);\n    }\n    var l = values.length;\n    var k = Math.floor(l * percent);\n    var sum = 0;\n    for (var i = k; i < (l - k); i++) {\n        sum += values[i];\n    }\n    return sum / (l - 2 * k);\n};\n\n/**\n * Computes the harmonic mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.harmonicMean = function harmonicMean(values) {\n    var sum = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        if (values[i] === 0) {\n            throw new RangeError('value at index ' + i + 'is zero');\n        }\n        sum += 1 / values[i];\n    }\n    return l / sum;\n};\n\n/**\n * Computes the contraharmonic mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.contraHarmonicMean = function contraHarmonicMean(values) {\n    var r1 = 0;\n    var r2 = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        r1 += values[i] * values[i];\n        r2 += values[i];\n    }\n    if (r2 < 0) {\n        throw new RangeError('sum of values is negative');\n    }\n    return r1 / r2;\n};\n\n/**\n * Computes the median of the given values\n * @param {Array} values\n * @param {boolean} [alreadySorted=false]\n * @returns {number}\n */\nexports.median = function median(values, alreadySorted) {\n    if (alreadySorted === undefined) alreadySorted = false;\n    if (!alreadySorted) {\n        values = [].concat(values).sort(compareNumbers);\n    }\n    var l = values.length;\n    var half = Math.floor(l / 2);\n    if (l % 2 === 0) {\n        return (values[half - 1] + values[half]) * 0.5;\n    } else {\n        return values[half];\n    }\n};\n\n/**\n * Computes the variance of the given values\n * @param {Array} values\n * @param {boolean} [unbiased=true] - if true, divide by (n-1); if false, divide by n.\n * @returns {number}\n */\nexports.variance = function variance(values, unbiased) {\n    if (unbiased === undefined) unbiased = true;\n    var theMean = exports.mean(values);\n    var theVariance = 0;\n    var l = values.length;\n\n    for (var i = 0; i < l; i++) {\n        var x = values[i] - theMean;\n        theVariance += x * x;\n    }\n\n    if (unbiased) {\n        return theVariance / (l - 1);\n    } else {\n        return theVariance / l;\n    }\n};\n\n/**\n * Computes the standard deviation of the given values\n * @param {Array} values\n * @param {boolean} [unbiased=true] - if true, divide by (n-1); if false, divide by n.\n * @returns {number}\n */\nexports.standardDeviation = function standardDeviation(values, unbiased) {\n    return Math.sqrt(exports.variance(values, unbiased));\n};\n\nexports.standardError = function standardError(values) {\n    return exports.standardDeviation(values) / Math.sqrt(values.length);\n};\n\n/**\n * IEEE Transactions on biomedical engineering, vol. 52, no. 1, january 2005, p. 76-\n * Calculate the standard deviation via the Median of the absolute deviation\n *  The formula for the standard deviation only holds for Gaussian random variables.\n * @returns {{mean: number, stdev: number}}\n */\nexports.robustMeanAndStdev = function robustMeanAndStdev(y) {\n    var mean = 0, stdev = 0;\n    var length = y.length, i = 0;\n    for (i = 0; i < length; i++) {\n        mean += y[i];\n    }\n    mean /= length;\n    var averageDeviations = new Array(length);\n    for (i = 0; i < length; i++)\n        averageDeviations[i] = Math.abs(y[i] - mean);\n    averageDeviations.sort(compareNumbers);\n    if (length % 2 === 1) {\n        stdev = averageDeviations[(length - 1) / 2] / 0.6745;\n    } else {\n        stdev = 0.5 * (averageDeviations[length / 2] + averageDeviations[length / 2 - 1]) / 0.6745;\n    }\n\n    return {\n        mean: mean,\n        stdev: stdev\n    };\n};\n\nexports.quartiles = function quartiles(values, alreadySorted) {\n    if (typeof (alreadySorted) === 'undefined') alreadySorted = false;\n    if (!alreadySorted) {\n        values = [].concat(values).sort(compareNumbers);\n    }\n\n    var quart = values.length / 4;\n    var q1 = values[Math.ceil(quart) - 1];\n    var q2 = exports.median(values, true);\n    var q3 = values[Math.ceil(quart * 3) - 1];\n\n    return {q1: q1, q2: q2, q3: q3};\n};\n\nexports.pooledStandardDeviation = function pooledStandardDeviation(samples, unbiased) {\n    return Math.sqrt(exports.pooledVariance(samples, unbiased));\n};\n\nexports.pooledVariance = function pooledVariance(samples, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var sum = 0;\n    var length = 0, l = samples.length;\n    for (var i = 0; i < l; i++) {\n        var values = samples[i];\n        var vari = exports.variance(values);\n\n        sum += (values.length - 1) * vari;\n\n        if (unbiased)\n            length += values.length - 1;\n        else\n            length += values.length;\n    }\n    return sum / length;\n};\n\nexports.mode = function mode(values) {\n    var l = values.length,\n        itemCount = new Array(l),\n        i;\n    for (i = 0; i < l; i++) {\n        itemCount[i] = 0;\n    }\n    var itemArray = new Array(l);\n    var count = 0;\n\n    for (i = 0; i < l; i++) {\n        var index = itemArray.indexOf(values[i]);\n        if (index >= 0)\n            itemCount[index]++;\n        else {\n            itemArray[count] = values[i];\n            itemCount[count] = 1;\n            count++;\n        }\n    }\n\n    var maxValue = 0, maxIndex = 0;\n    for (i = 0; i < count; i++) {\n        if (itemCount[i] > maxValue) {\n            maxValue = itemCount[i];\n            maxIndex = i;\n        }\n    }\n\n    return itemArray[maxIndex];\n};\n\nexports.covariance = function covariance(vector1, vector2, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var mean1 = exports.mean(vector1);\n    var mean2 = exports.mean(vector2);\n\n    if (vector1.length !== vector2.length)\n        throw 'Vectors do not have the same dimensions';\n\n    var cov = 0, l = vector1.length;\n    for (var i = 0; i < l; i++) {\n        var x = vector1[i] - mean1;\n        var y = vector2[i] - mean2;\n        cov += x * y;\n    }\n\n    if (unbiased)\n        return cov / (l - 1);\n    else\n        return cov / l;\n};\n\nexports.skewness = function skewness(values, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var theMean = exports.mean(values);\n\n    var s2 = 0, s3 = 0, l = values.length;\n    for (var i = 0; i < l; i++) {\n        var dev = values[i] - theMean;\n        s2 += dev * dev;\n        s3 += dev * dev * dev;\n    }\n    var m2 = s2 / l;\n    var m3 = s3 / l;\n\n    var g = m3 / (Math.pow(m2, 3 / 2.0));\n    if (unbiased) {\n        var a = Math.sqrt(l * (l - 1));\n        var b = l - 2;\n        return (a / b) * g;\n    } else {\n        return g;\n    }\n};\n\nexports.kurtosis = function kurtosis(values, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var theMean = exports.mean(values);\n    var n = values.length, s2 = 0, s4 = 0;\n\n    for (var i = 0; i < n; i++) {\n        var dev = values[i] - theMean;\n        s2 += dev * dev;\n        s4 += dev * dev * dev * dev;\n    }\n    var m2 = s2 / n;\n    var m4 = s4 / n;\n\n    if (unbiased) {\n        var v = s2 / (n - 1);\n        var a = (n * (n + 1)) / ((n - 1) * (n - 2) * (n - 3));\n        var b = s4 / (v * v);\n        var c = ((n - 1) * (n - 1)) / ((n - 2) * (n - 3));\n\n        return a * b - 3 * c;\n    } else {\n        return m4 / (m2 * m2) - 3;\n    }\n};\n\nexports.entropy = function entropy(values, eps) {\n    if (typeof (eps) === 'undefined') eps = 0;\n    var sum = 0, l = values.length;\n    for (var i = 0; i < l; i++)\n        sum += values[i] * Math.log(values[i] + eps);\n    return -sum;\n};\n\nexports.weightedMean = function weightedMean(values, weights) {\n    var sum = 0, l = values.length;\n    for (var i = 0; i < l; i++)\n        sum += values[i] * weights[i];\n    return sum;\n};\n\nexports.weightedStandardDeviation = function weightedStandardDeviation(values, weights) {\n    return Math.sqrt(exports.weightedVariance(values, weights));\n};\n\nexports.weightedVariance = function weightedVariance(values, weights) {\n    var theMean = exports.weightedMean(values, weights);\n    var vari = 0, l = values.length;\n    var a = 0, b = 0;\n\n    for (var i = 0; i < l; i++) {\n        var z = values[i] - theMean;\n        var w = weights[i];\n\n        vari += w * (z * z);\n        b += w;\n        a += w * w;\n    }\n\n    return vari * (b / (b * b - a));\n};\n\nexports.center = function center(values, inPlace) {\n    if (typeof (inPlace) === 'undefined') inPlace = false;\n\n    var result = values;\n    if (!inPlace)\n        result = [].concat(values);\n\n    var theMean = exports.mean(result), l = result.length;\n    for (var i = 0; i < l; i++)\n        result[i] -= theMean;\n};\n\nexports.standardize = function standardize(values, standardDev, inPlace) {\n    if (typeof (standardDev) === 'undefined') standardDev = exports.standardDeviation(values);\n    if (typeof (inPlace) === 'undefined') inPlace = false;\n    var l = values.length;\n    var result = inPlace ? values : new Array(l);\n    for (var i = 0; i < l; i++)\n        result[i] = values[i] / standardDev;\n    return result;\n};\n\nexports.cumulativeSum = function cumulativeSum(array) {\n    var l = array.length;\n    var result = new Array(l);\n    result[0] = array[0];\n    for (var i = 1; i < l; i++)\n        result[i] = result[i - 1] + array[i];\n    return result;\n};\n","/**\n * Created by acastillo on 8/24/15.\n */\n/**\n * Non in-place function definitions, compatible with mathjs code *\n */\n\n'use strict';\n\nvar Matrix = require('ml-matrix');\n\nfunction matrix(A,B){\n    return new Matrix(A,B);\n}\n\nfunction ones(rows, cols){\n    return Matrix.ones(rows,cols);\n}\n\nfunction eye(rows, cols){\n    return Matrix.eye(rows, cols);\n}\n\nfunction zeros(rows, cols){\n    return Matrix.zeros(rows, cols);\n}\n\nfunction random(rows, cols){\n    return Matrix.rand(rows,cols);\n}\n\nfunction transpose(A){\n    if(typeof A == 'number')\n        return A;\n    var result = A.clone();\n    return result.transpose();\n}\n\nfunction add(A, B){\n    if(typeof A == 'number'&&typeof B === 'number')\n        return A+B;\n    if(typeof A == 'number')\n        return this.add(B,A);\n\n    var result = A.clone();\n    return result.add(B);\n\n}\n\nfunction subtract(A, B){\n    if(typeof A == 'number'&&typeof B === 'number')\n        return A-B;\n    if(typeof A == 'number')\n        return this.subtract(B,A);\n    var result = A.clone();\n    return result.sub(B);\n}\n\nfunction multiply(A, B){\n    if(typeof A == 'number'&&typeof B === 'number')\n        return A*B;\n    if(typeof A == 'number')\n        return this.multiply(B,A);\n\n    var result = A.clone();\n\n    if(typeof B === 'number')\n        result.mul(B);\n    else\n        result = result.mmul(B);\n\n    if(result.rows==1&&result.columns==1)\n        return result[0][0];\n    else\n        return result;\n\n}\n\nfunction dotMultiply(A, B){\n    var result = A.clone();\n    return result.mul(B);\n}\n\nfunction dotDivide(A, B){\n    var result = A.clone();\n    return result.div(B);\n}\n\nfunction diag(A){\n    var diag = null;\n    var rows = A.rows, cols = A.columns, j, r;\n    //It is an array\n    if(typeof cols === \"undefined\" && (typeof A)=='object'){\n        if(A[0]&&A[0].length){\n            rows = A.length;\n            cols = A[0].length;\n            r = Math.min(rows,cols);\n            diag = Matrix.zeros(cols, cols);\n            for (j = 0; j < cols; j++) {\n                diag[j][j]=A[j][j];\n            }\n        }\n        else{\n            cols = A.length;\n            diag = Matrix.zeros(cols, cols);\n            for (j = 0; j < cols; j++) {\n                diag[j][j]=A[j];\n            }\n        }\n\n    }\n    if(rows == 1){\n        diag = Matrix.zeros(cols, cols);\n        for (j = 0; j < cols; j++) {\n            diag[j][j]=A[0][j];\n        }\n    }\n    else{\n        if(rows>0 && cols > 0){\n            r = Math.min(rows,cols);\n            diag = new Array(r);\n            for (j = 0; j < r; j++) {\n                diag[j] = A[j][j];\n            }\n        }\n    }\n    return diag;\n}\n\nfunction min(A, B){\n    if(typeof A==='number' && typeof B ==='number')\n        return Math.min(A,B);\n    var ii = A.rows, jj = A.columns;\n    var result = new Matrix(ii,jj);\n    for (var i = 0; i < ii; i++) {\n        for (var j = 0; j < jj; j++) {\n            if (A[i][j] < B[i][j]) {\n                result[i][j] = A[i][j];\n            }\n            else{\n                result[i][j] = B[i][j];\n            }\n        }\n    }\n    return result;\n}\n\nfunction max(A, B){\n    if(typeof A==='number' && typeof B ==='number')\n        return Math.max(A,B);\n    var ii = A.rows, jj = A.columns;\n    var result = new Matrix(ii,jj);\n    for (var i = 0; i < ii; i++) {\n        for (var j = 0; j < jj; j++) {\n            if (A[i][j] > B[i][j]) {\n                result[i][j] = A[i][j];\n            }\n            else{\n                result[i][j] = B[i][j];\n            }\n        }\n    }\n    return result;\n}\n\nfunction sqrt(A){\n    if(typeof A==='number' )\n        return Math.sqrt(A);\n    var ii = A.rows, jj = A.columns;\n    var result = new Matrix(ii,jj);\n    for (var i = 0; i < ii; i++) {\n        for (var j = 0; j < jj; j++) {\n            result[i][j] = Math.sqrt(A[i][j]);\n\n        }\n    }\n    return result;\n}\n\nfunction abs(A){\n    if(typeof A==='number' )\n        return Math.abs(A);\n    var ii = A.rows, jj = A.columns;\n    var result = new Matrix(ii,jj);\n    for (var i = 0; i < ii; i++) {\n        for (var j = 0; j < jj; j++) {\n            result[i][j] = Math.abs(A[i][j]);\n\n        }\n    }\n    return result;\n}\n\nfunction exp(A){\n    if(typeof A==='number' )\n        return Math.sqrt(A);\n    var ii = A.rows, jj = A.columns;\n    var result = new Matrix(ii,jj);\n    for (var i = 0; i < ii; i++) {\n        for (var j = 0; j < jj; j++) {\n            result[i][j] = Math.exp(A[i][j]);\n        }\n    }\n    return result;\n}\n\nfunction dotPow(A, b){\n    if(typeof A==='number' )\n        return Math.pow(A,b);\n    //console.log(A);\n    var ii = A.rows, jj = A.columns;\n    var result = new Matrix(ii,jj);\n    for (var i = 0; i < ii; i++) {\n        for (var j = 0; j < jj; j++) {\n            result[i][j] = Math.pow(A[i][j],b);\n        }\n    }\n    return result;\n}\n\nfunction solve(A, B){\n    return A.solve(B);\n}\n\nfunction inv(A){\n    if(typeof A ===\"number\")\n        return 1/A;\n    return A.inverse();\n}\n\nmodule.exports = {\n    transpose:transpose,\n    add:add,\n    subtract:subtract,\n    multiply:multiply,\n    dotMultiply:dotMultiply,\n    dotDivide:dotDivide,\n    diag:diag,\n    min:min,\n    max:max,\n    solve:solve,\n    inv:inv,\n    sqrt:sqrt,\n    exp:exp,\n    dotPow:dotPow,\n    abs:abs,\n    matrix:matrix,\n    ones:ones,\n    zeros:zeros,\n    random:random,\n    eye:eye\n};\n","'use strict';\n\n/**\n * In place modification of the 2 arrays to make X unique and sum the Y if X has the same value\n * @param xs\n * @param ys\n */\n\nfunction uniqueX(xs, ys) {\n    if (xs.length < 2) return;\n\n    var current = xs[0];\n    var counter = 0;\n\n    for (var i = 1; i < xs.length; i++) {\n        if (current !== xs[i]) {\n            counter++;\n            current = xs[i];\n            xs[counter] = xs[i];\n            if (i !== counter) {\n                ys[counter] = 0;\n            }\n        }\n        if (i !== counter) {\n            ys[counter] += ys[i];\n        }\n\n    }\n\n    xs.length = counter + 1;\n    ys.length = counter + 1;\n}\n\nmodule.exports = uniqueX;\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar min = _interopDefault(require('ml-array-min'));\nvar max = _interopDefault(require('ml-array-max'));\nvar mlGsd = require('ml-gsd');\nvar jcampconverter = require('jcampconverter');\nvar sortX = _interopDefault(require('ml-array-xy-sort-x'));\nvar xyParser = require('xy-parser');\n\nfunction getAnnotations(spectrum, options = {}) {\n  const { fillColor = 'green', strokeColor = 'red', creationFct } = options;\n  const peaks = spectrum.peaks;\n  if (!peaks) return [];\n  let annotations = peaks.map(peak => {\n    var annotation = {\n      line: 1,\n      type: 'rect',\n      strokeColor: strokeColor,\n      strokeWidth: 0,\n      fillColor: fillColor\n    };\n    if (creationFct) {\n      creationFct(annotation, peak);\n    }\n    oneAnnotation(annotation, peak);\n    return annotation;\n  });\n\n  return annotations;\n}\n\nfunction oneAnnotation(annotation, peak) {\n  annotation.label = [\n    {\n      text: peak.kind,\n      size: '18px',\n      anchor: 'middle',\n      color: 'red',\n      position: {\n        x: peak.wavelength,\n        y: peak.intensity,\n        dy: '-15px'\n      }\n    }\n  ];\n  annotation.position = [\n    {\n      x: peak.wavelength,\n      y: peak.intensity,\n      dy: '-10px',\n      dx: '-1px'\n    },\n    {\n      x: peak.wavelength,\n      y: peak.intensity,\n      dy: '-5px',\n      dx: '1px'\n    }\n  ];\n}\n\n/**\n *\n * @param {Spectrum} spectrum\n * @param {object} peak\n */\n\nfunction addPeak(spectrum, peak = {}) {\n  if (!peak.wavelength) {\n    throw new Error('addPeak: peak mush have wavelength property');\n  }\n  const { wavelength, intensity } = peak;\n\n  for (let existing of spectrum.peaks) {\n    if (Number(existing.wavelength) === wavelength) return existing;\n  }\n  spectrum.peaks.push({\n    wavelength: wavelength,\n    intensity: intensity,\n    kind: getPeakKind(intensity, spectrum.minIntensity, spectrum.maxIntensity)\n  });\n  return peak;\n}\n\nfunction getPeakKind(intensity, minIntensity, maxIntensity) {\n  var position = intensity / (maxIntensity - minIntensity);\n  if (position < 0.33) {\n    return 'w';\n  } else if (position < 0.66) {\n    return 'm';\n  }\n  return 'S';\n}\n\n/**\n *\n * @param {Spectrum} spectrum\n * @param {number} targetWavelength\n * @param {object} [options]\n * @param {number} [options.range=0] Search in a range around the targetWavelength\n * @param {boolean} [options.optimize=false] Search for the closest peak to the targetWavelength\n */\n\nfunction peakPicking(spectrum, targetWavelength, options = {}) {\n  const { range = 0, optimize = false } = options;\n\n  // find the peak that is the closest to the click\n  let bestPeak = getClosest(spectrum, targetWavelength);\n\n  if (optimize) {\n    findClosest(spectrum, bestPeak);\n  } else if (range) {\n    bestInRange(spectrum, bestPeak, targetWavelength, range);\n  }\n\n  return addPeak(spectrum, bestPeak);\n}\n\nfunction getClosest(spectrum, targetWavelength) {\n  let bestPeak = {\n    intensity: spectrum.intensity[0],\n    wavelength: spectrum.wavelength[0],\n    index: 0\n  };\n\n  let error = Math.abs(targetWavelength - bestPeak.wavelength);\n  for (let i = 1; i < spectrum.wavelength.length; i++) {\n    let newError = Math.abs(targetWavelength - spectrum.wavelength[i]);\n    if (newError < error) {\n      error = newError;\n      setBestPeak(spectrum, bestPeak, i);\n    }\n  }\n  return bestPeak;\n}\n\nfunction bestInRange(spectrum, bestPeak, targetWavelength, range) {\n  // we search the minimum based on wavelength +/- range\n  for (let i = 0; i < spectrum.wavelength.length; i++) {\n    if (Math.abs(spectrum.wavelength[i] - targetWavelength) <= range) {\n      if (spectrum.intensity[i] > bestPeak.intensity) {\n        setBestPeak(spectrum, bestPeak, i);\n      }\n    }\n  }\n}\n\nfunction findClosest(spectrum, bestPeak) {\n  let index = bestPeak.index;\n  let previousIndex;\n  while (index !== previousIndex) {\n    previousIndex = index;\n    if (index > 0 && spectrum.intensity[index - 1] > bestPeak.intensity) {\n      index--;\n      setBestPeak(spectrum, bestPeak, index);\n    } else if (\n      index < spectrum.wavelength.length - 1 &&\n      spectrum.intensity[index + 1] > bestPeak.intensity\n    ) {\n      index++;\n      setBestPeak(spectrum, bestPeak, index);\n    }\n  }\n}\n\nfunction setBestPeak(spectrum, bestPeak, index) {\n  bestPeak.index = index;\n  bestPeak.wavelength = spectrum.wavelength[index];\n  bestPeak.intensity = spectrum.intensity[index];\n}\n\n/**\n *\n * @param {*} spectrum\n * @param {object} [options={}]\n * @param {number} [options.fromWavelength=0]\n * @param {number} [options.toWavelength=5000]\n * @param {number} [options.noiseLevel=0.01] - Specify the level of the noise\n * @param {number} [options.minMaxRatio=0.05] - Threshold to determine if a given peak should be considered as a noise\n * @param {boolean} [options.replaceExisting=true] - Replace existing peaks\n */\n\nfunction autoPeakPicking(spectrum, options = {}) {\n  const {\n    noiseLevel = 0.001,\n    minMaxRatio = 0.05,\n    fromWavelength = 0,\n    toWavelength = 5000,\n    replaceExisting = true\n  } = options;\n\n  let peaks = mlGsd.gsd(spectrum.wavelength, spectrum.intensity, {\n    noiseLevel,\n    minMaxRatio,\n    realTopDetection: true,\n    maxCriteria: true,\n    smoothY: false,\n    sgOptions: { windowSize: 7, polynomial: 3 }\n  });\n\n  peaks = peaks.filter(\n    peak => peak.x >= fromWavelength && peak.x <= toWavelength\n  );\n\n  if (replaceExisting) {\n    while (spectrum.peaks.length) {\n      spectrum.peaks.pop();\n    }\n  }\n\n  peakLoop: for (let peak of peaks) {\n    for (let existing of spectrum.peaks) {\n      if (Number(existing.wavelength) === Number(peak.x)) continue peakLoop;\n    }\n    addPeak(spectrum, {\n      wavelength: peak.x,\n      intensity: peak.y\n    });\n  }\n}\n\n/**\n * Class allowing manipulate one Raman spectrum\n * @class spectrum\n * @param {object} [json={}] - object containing a spectrum\n * @param {Array} [json.wavelength=[]] - wavelength\n * @param {Array} [json.intensity=[]] - intensity values\n */\nclass Spectrum {\n  constructor(json) {\n    this.wavelength = json.wavelength || [];\n    this.intensity = json.intensity || [];\n    this.peaks = [];\n    check(this);\n  }\n\n  /**\n   *\n   * @param {Array} [peaks=[]] array of peaks. Peaks are composed of transmittance, wavelength, kind\n   */\n  setPeaks(peaks = []) {\n    this.peaks = peaks;\n  }\n\n  peakPicking(targetWavelength, options = {}) {\n    peakPicking(this, targetWavelength, options);\n  }\n\n  getData() {\n    return { x: this.wavelength, y: this.intensity };\n  }\n}\n\nSpectrum.prototype.getAnnotations = function(options) {\n  return getAnnotations(this, options);\n};\n\nSpectrum.prototype.autoPeakPicking = function(options) {\n  return autoPeakPicking(this, options);\n};\n\nfunction check(spectrum) {\n  if (spectrum.wavelength.length > 0) {\n    spectrum.minWavelength = min(spectrum.wavelength);\n  }\n  if (spectrum.wavelength.length > 0) {\n    spectrum.maxWavelength = max(spectrum.wavelength);\n  }\n  if (spectrum.intensity.length > 0) {\n    spectrum.minIntensity = min(spectrum.intensity);\n  }\n  if (spectrum.intensity.length > 0) {\n    spectrum.maxIntensity = max(spectrum.intensity);\n  }\n}\n\n/**\n * Creates a new Chromatogram element based in a JCAMP string\n * @param {string} jcamp - String containing the JCAMP data\n * @return {Spectrum} - New class element with the given data\n */\nfunction fromJcamp(jcamp) {\n  const data = jcampconverter.convert(jcamp, { xy: true });\n  let spectrum = data.spectra[0].data[0];\n  spectrum = sortX(spectrum);\n  return new Spectrum({\n    wavelength: spectrum.x,\n    intensity: spectrum.y\n  });\n}\n\n/**\n * Creates a new Chromatogram element based in a Txt string\n * @param {string} text - String containing the data as CSV or TSV\n * @param {object} [options] - Options object for the parser\n * @param {string} [options.kind] - Absorbance or Transmisstance\n * @return {Spectrum} - New class element with the given data\n */\nfunction fromText(text, options = {}) {\n  options = Object.assign({}, options, { arrayType: 'xxyy' });\n  const data = xyParser.parseXY(text, options);\n  let spectrum = sortX({ x: data[0], y: data[1] });\n\n  return new Spectrum({\n    wavelength: spectrum.x,\n    intensity: spectrum.y\n  });\n}\n\nexports.Spectrum = Spectrum;\nexports.fromJcamp = fromJcamp;\nexports.fromText = fromText;\n","import isArray from 'is-any-array';\n\n/**\n * Computes the minimum of the given values\n * @param {Array<number>} input\n * @return {number}\n */\n\nfunction min(input) {\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var min = input[0];\n\n  for (var i = 1; i < input.length; i++) {\n    if (input[i] < min) min = input[i];\n  }\n\n  return min;\n}\n\nexport default min;\n","import isArray from 'is-any-array';\n\n/**\n * Computes the maximum of the given values\n * @param {Array<number>} input\n * @return {number}\n */\n\nfunction max(input) {\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var max = input[0];\n\n  for (var i = 1; i < input.length; i++) {\n    if (input[i] > max) max = input[i];\n  }\n\n  return max;\n}\n\nexport default max;\n","'use strict';\n\nmodule.exports.gsd = require('./gsd');\n\nmodule.exports.post = {\n  optimizePeaks: require('./post/optimizePeaks'),\n  joinBroadPeaks: require('./post/joinBroadPeaks'),\n  broadenPeaks: require('./post/broadenPeaks')\n};\n","'use strict';\n\nconst SG = require('ml-savitzky-golay-generalized');\n\nconst defaultOptions = {\n  sgOptions: {\n    windowSize: 9,\n    polynomial: 3\n  },\n  minMaxRatio: 0.00025,\n  broadRatio: 0.0,\n  maxCriteria: true,\n  smoothY: true,\n  realTopDetection: false,\n  heightFactor: 0,\n  boundaries: false,\n  derivativeThreshold: -1\n};\n\n/**\n * Global spectra deconvolution\n * @param {Array<number>} x - Independent variable\n * @param {Array<number>} yIn - Dependent variable\n * @param {object} [options] - Options object\n * @param {object} [options.sgOptions] - Options object for Savitzky-Golay filter. See https://github.com/mljs/savitzky-golay-generalized#options\n * @param {number} [options.sgOptions.windowSize = 9] - points to use in the approximations\n * @param {number} [options.sgOptions.polynomial = 3] - degree of the polynomial to use in the approximations\n * @param {number} [options.minMaxRatio = 0.00025] - Threshold to determine if a given peak should be considered as a noise\n * @param {number} [options.broadRatio = 0.00] - If `broadRatio` is higher than 0, then all the peaks which second derivative\n * smaller than `broadRatio * maxAbsSecondDerivative` will be marked with the soft mask equal to true.\n * @param {number} [options.noiseLevel = 0] - Noise threshold in spectrum units\n * @param {boolean} [options.maxCriteria = true] - Peaks are local maximum(true) or minimum(false)\n * @param {boolean} [options.smoothY = true] - Select the peak intensities from a smoothed version of the independent variables\n * @param {boolean} [options.realTopDetection = false] - Use a quadratic optimizations with the peak and its 3 closest neighbors\n * to determine the true x,y values of the peak?\n * @param {number} [options.heightFactor = 0] - Factor to multiply the calculated height (usually 2)\n * @param {boolean} [options.boundaries = false] - Return also the inflection points of the peaks\n * @param {number} [options.derivativeThreshold = -1] - Filters based on the amplitude of the first derivative\n * @return {Array<object>}\n */\nfunction gsd(x, yIn, options) {\n  options = Object.assign({}, defaultOptions, options);\n  let sgOptions = options.sgOptions;\n  const y = [].concat(yIn);\n\n  if (!('noiseLevel' in options)) {\n    // We have to know if x is equally spaced\n    var maxDx = 0;\n\n    var minDx = Number.MAX_VALUE;\n\n    var tmp;\n    for (let i = 0; i < x.length - 1; ++i) {\n      tmp = Math.abs(x[i + 1] - x[i]);\n      if (tmp < minDx) {\n        minDx = tmp;\n      }\n      if (tmp > maxDx) {\n        maxDx = tmp;\n      }\n    }\n\n    if ((maxDx - minDx) / maxDx < 0.05) {\n      options.noiseLevel = getNoiseLevel(y);\n    } else {\n      options.noiseLevel = 0;\n    }\n  }\n  const yCorrection = { m: 1, b: options.noiseLevel };\n  if (!options.maxCriteria) {\n    yCorrection.m = -1;\n    yCorrection.b *= -1;\n  }\n\n  for (let i = 0; i < y.length; i++) {\n    y[i] = yCorrection.m * y[i] - yCorrection.b;\n  }\n\n  for (let i = 0; i < y.length; i++) {\n    if (y[i] < 0) {\n      y[i] = 0;\n    }\n  }\n  // If the max difference between delta x is less than 5%, then, we can assume it to be equally spaced variable\n  let Y = y;\n  let dY, ddY;\n  if ((maxDx - minDx) / maxDx < 0.05) {\n    if (options.smoothY) {\n      Y = SG(y, x[1] - x[0], {\n        windowSize: sgOptions.windowSize,\n        polynomial: sgOptions.polynomial,\n        derivative: 0\n      });\n    }\n    dY = SG(y, x[1] - x[0], {\n      windowSize: sgOptions.windowSize,\n      polynomial: sgOptions.polynomial,\n      derivative: 1\n    });\n    ddY = SG(y, x[1] - x[0], {\n      windowSize: sgOptions.windowSize,\n      polynomial: sgOptions.polynomial,\n      derivative: 2\n    });\n  } else {\n    if (options.smoothY) {\n      Y = SG(y, x, {\n        windowSize: sgOptions.windowSize,\n        polynomial: sgOptions.polynomial,\n        derivative: 0\n      });\n    }\n    dY = SG(y, x, {\n      windowSize: sgOptions.windowSize,\n      polynomial: sgOptions.polynomial,\n      derivative: 1\n    });\n    ddY = SG(y, x, {\n      windowSize: sgOptions.windowSize,\n      polynomial: sgOptions.polynomial,\n      derivative: 2\n    });\n  }\n\n  const X = x;\n  const dx = x[1] - x[0];\n  var maxDdy = 0;\n  var maxY = 0;\n  for (let i = 0; i < Y.length; i++) {\n    if (Math.abs(ddY[i]) > maxDdy) {\n      maxDdy = Math.abs(ddY[i]);\n    }\n    if (Math.abs(Y[i]) > maxY) {\n      maxY = Math.abs(Y[i]);\n    }\n  }\n\n  var lastMax = null;\n  var lastMin = null;\n  var minddY = new Array(Y.length - 2);\n  var intervalL = new Array(Y.length);\n  var intervalR = new Array(Y.length);\n  var broadMask = new Array(Y.length - 2);\n  var minddYLen = 0;\n  var intervalLLen = 0;\n  var intervalRLen = 0;\n  var broadMaskLen = 0;\n  // By the intermediate value theorem We cannot find 2 consecutive maximum or minimum\n  for (let i = 1; i < Y.length - 1; ++i) {\n    // filter based on derivativeThreshold\n    if (Math.abs(dY[i]) > options.derivativeThreshold) {\n      // Minimum in first derivative\n      if (\n        (dY[i] < dY[i - 1] && dY[i] <= dY[i + 1]) ||\n        (dY[i] <= dY[i - 1] && dY[i] < dY[i + 1])\n      ) {\n        lastMin = {\n          x: X[i],\n          index: i\n        };\n        if (dx > 0 && lastMax !== null) {\n          intervalL[intervalLLen++] = lastMax;\n          intervalR[intervalRLen++] = lastMin;\n        }\n      }\n\n      // Maximum in first derivative\n      if (\n        (dY[i] >= dY[i - 1] && dY[i] > dY[i + 1]) ||\n        (dY[i] > dY[i - 1] && dY[i] >= dY[i + 1])\n      ) {\n        lastMax = {\n          x: X[i],\n          index: i\n        };\n        if (dx < 0 && lastMin !== null) {\n          intervalL[intervalLLen++] = lastMax;\n          intervalR[intervalRLen++] = lastMin;\n        }\n      }\n    }\n\n    // Minimum in second derivative\n    if (ddY[i] < ddY[i - 1] && ddY[i] < ddY[i + 1]) {\n      // TODO should we change this to have 3 arrays ? Huge overhead creating arrays\n      minddY[minddYLen++] = i; // ( [X[i], Y[i], i] );\n      broadMask[broadMaskLen++] =\n        Math.abs(ddY[i]) <= options.broadRatio * maxDdy;\n    }\n  }\n  minddY.length = minddYLen;\n  intervalL.length = intervalLLen;\n  intervalR.length = intervalRLen;\n  broadMask.length = broadMaskLen;\n\n  let signals = new Array(minddY.length);\n  let signalsLen = 0;\n  let lastK = -1;\n  let possible, frequency, distanceJ, minDistance, gettingCloser;\n  for (let j = 0; j < minddY.length; ++j) {\n    frequency = X[minddY[j]];\n    possible = -1;\n    let k = lastK + 1;\n    minDistance = Number.MAX_VALUE;\n    distanceJ = 0;\n    gettingCloser = true;\n    while (possible === -1 && k < intervalL.length && gettingCloser) {\n      distanceJ = Math.abs(frequency - (intervalL[k].x + intervalR[k].x) / 2);\n\n      // Still getting closer?\n      if (distanceJ < minDistance) {\n        minDistance = distanceJ;\n      } else {\n        gettingCloser = false;\n      }\n      if (distanceJ < Math.abs(intervalL[k].x - intervalR[k].x) / 2) {\n        possible = k;\n        lastK = k;\n      }\n      ++k;\n    }\n\n    if (possible !== -1) {\n      if (Math.abs(Y[minddY[j]]) > options.minMaxRatio * maxY) {\n        signals[signalsLen++] = {\n          index: minddY[j],\n          x: frequency,\n          y: (Y[minddY[j]] + yCorrection.b) / yCorrection.m,\n          width: Math.abs(intervalR[possible].x - intervalL[possible].x), // widthCorrection\n          soft: broadMask[j]\n        };\n        if (options.boundaries) {\n          signals[signalsLen - 1].left = intervalL[possible];\n          signals[signalsLen - 1].right = intervalR[possible];\n        }\n        if (options.heightFactor) {\n          let yLeft = Y[intervalL[possible].index];\n          let yRight = Y[intervalR[possible].index];\n          signals[signalsLen - 1].height =\n            options.heightFactor *\n            (signals[signalsLen - 1].y - (yLeft + yRight) / 2);\n        }\n      }\n    }\n  }\n  signals.length = signalsLen;\n\n  if (options.realTopDetection) {\n    realTopDetection(signals, X, Y);\n  }\n\n  // Correct the values to fit the original spectra data\n  for (let j = 0; j < signals.length; j++) {\n    signals[j].base = options.noiseLevel;\n  }\n\n  signals.sort(function (a, b) {\n    return a.x - b.x;\n  });\n\n  return signals;\n}\n\nfunction getNoiseLevel(y) {\n  var mean = 0;\n\n  var stddev = 0;\n  var length = y.length;\n  for (let i = 0; i < length; ++i) {\n    mean += y[i];\n  }\n  mean /= length;\n  var averageDeviations = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    averageDeviations[i] = Math.abs(y[i] - mean);\n  }\n  averageDeviations.sort();\n  if (length % 2 === 1) {\n    stddev = averageDeviations[(length - 1) / 2] / 0.6745;\n  } else {\n    stddev =\n      (0.5 *\n        (averageDeviations[length / 2] + averageDeviations[length / 2 - 1])) /\n      0.6745;\n  }\n\n  return stddev;\n}\n\nfunction realTopDetection(peakList, x, y) {\n  var alpha, beta, gamma, p, currentPoint;\n  for (var j = 0; j < peakList.length; j++) {\n    currentPoint = peakList[j].index; // peakList[j][2];\n    // The detected peak could be moved 1 or 2 unit to left or right.\n    if (\n      y[currentPoint - 1] >= y[currentPoint - 2] &&\n      y[currentPoint - 1] >= y[currentPoint]\n    ) {\n      currentPoint--;\n    } else {\n      if (\n        y[currentPoint + 1] >= y[currentPoint] &&\n        y[currentPoint + 1] >= y[currentPoint + 2]\n      ) {\n        currentPoint++;\n      } else {\n        if (\n          y[currentPoint - 2] >= y[currentPoint - 3] &&\n          y[currentPoint - 2] >= y[currentPoint - 1]\n        ) {\n          currentPoint -= 2;\n        } else {\n          if (\n            y[currentPoint + 2] >= y[currentPoint + 1] &&\n            y[currentPoint + 2] >= y[currentPoint + 3]\n          ) {\n            currentPoint += 2;\n          }\n        }\n      }\n    }\n    // interpolation to a sin() function\n    if (\n      y[currentPoint - 1] > 0 &&\n      y[currentPoint + 1] > 0 &&\n      y[currentPoint] >= y[currentPoint - 1] &&\n      y[currentPoint] >= y[currentPoint + 1]\n    ) {\n      alpha = 20 * Math.log10(y[currentPoint - 1]);\n      beta = 20 * Math.log10(y[currentPoint]);\n      gamma = 20 * Math.log10(y[currentPoint + 1]);\n      p = (0.5 * (alpha - gamma)) / (alpha - 2 * beta + gamma);\n      // console.log(alpha, beta, gamma, `p: ${p}`);\n      // console.log(x[currentPoint]+\" \"+tmp+\" \"+currentPoint);\n      peakList[j].x =\n        x[currentPoint] + (x[currentPoint] - x[currentPoint - 1]) * p;\n      peakList[j].y =\n        y[currentPoint] -\n        0.25 * (y[currentPoint - 1] - y[currentPoint + 1]) * p;\n    }\n  }\n}\n\nmodule.exports = gsd;\n","//Code translate from Pascal source in http://pubs.acs.org/doi/pdf/10.1021/ac00205a007\nvar extend = require('extend');\nvar stat = require('ml-stat');\n\nvar defaultOptions = {\n    windowSize: 9,\n    derivative: 0,\n    polynomial: 3,\n};\n\n\nfunction SavitzkyGolay(data, h, options) {\n    options = extend({}, defaultOptions, options);\n\n    if ((options.windowSize % 2 === 0) || (options.windowSize < 5) || !(Number.isInteger(options.windowSize)))\n            throw new RangeError('Invalid window size (should be odd and at least 5 integer number)')\n\n\n    if (options.windowSize>data.length)\n        throw new RangeError('Window size is higher than the data length '+options.windowSize+\">\"+data.length);\n    if ((options.derivative < 0) || !(Number.isInteger(options.derivative)))\n        throw new RangeError('Derivative should be a positive integer');\n    if ((options.polynomial < 1) || !(Number.isInteger(options.polynomial)))\n        throw new RangeError('Polynomial should be a positive integer');\n    if (options.polynomial >= 6)\n        console.warn('You should not use polynomial grade higher than 5 if you are' +\n            ' not sure that your data arises from such a model. Possible polynomial oscillation problems');\n\n    var windowSize = options.windowSize;\n\n    var half = Math.floor(windowSize/2);\n    var np = data.length;\n    var ans = new Array(np);\n    var weights = fullWeights(windowSize,options.polynomial,options.derivative);\n    var hs = 0;\n    var constantH = true;\n    if( Object.prototype.toString.call( h ) === '[object Array]' ) {\n        constantH = false;\n    }\n    else{\n        hs = Math.pow(h, options.derivative);\n    }\n    //console.log(\"Constant h: \"+constantH);\n    //For the borders\n    for(var i=0;i<half;i++){\n        var wg1=weights[half-i-1];\n        var wg2=weights[half+i+1];\n        var d1 = 0,d2=0;\n        for (var l = 0; l < windowSize; l++){\n            d1 += wg1[l] * data[l];\n            d2 += wg2[l] * data[np-windowSize+l-1];\n        }\n        if(constantH){\n            ans[half-i-1] = d1/hs;\n            ans[np-half+i] = d2/hs;\n        }\n        else{\n            hs = getHs(h,half-i-1,half, options.derivative);\n            ans[half-i-1] = d1/hs;\n            hs = getHs(h,np-half+i,half, options.derivative);\n            ans[np-half+i] = d2/hs;\n        }\n    }\n    //For the internal points\n    var wg = weights[half];\n    for(var i=windowSize;i<np+1;i++){\n        var d = 0;\n        for (var l = 0; l < windowSize; l++)\n            d += wg[l] * data[l+i-windowSize];\n        if(!constantH)\n            hs = getHs(h,i-half-1,half, options.derivative);\n        ans[i-half-1] = d/hs;\n    }\n    return ans;\n}\n\nfunction getHs(h,center,half,derivative){\n    var hs = 0;\n    var count = 0;\n    for(var i=center-half;i<center+half;i++){\n        if(i>=0 && i < h.length-1){\n            hs+= (h[i+1]-h[i]);\n            count++;\n        }\n    }\n    return Math.pow(hs/count,derivative);\n}\n\nfunction GramPoly(i,m,k,s){\n    var Grampoly = 0;\n    if(k>0){\n        Grampoly = (4*k-2)/(k*(2*m-k+1))*(i*GramPoly(i,m,k-1,s) +\n            s*GramPoly(i,m,k-1,s-1)) - ((k-1)*(2*m+k))/(k*(2*m-k+1))*GramPoly(i,m,k-2,s);\n    }\n    else{\n        if(k==0&&s==0){\n            Grampoly=1;\n        }\n        else{\n            Grampoly=0;\n        }\n    }\n    //console.log(Grampoly);\n    return Grampoly;\n}\n\nfunction GenFact(a,b){\n    var gf=1;\n    if(a>=b){\n        for(var j=a-b+1;j<=a;j++){\n            gf*=j;\n        }\n    }\n    return gf;\n}\n\nfunction Weight(i,t,m,n,s){\n    var sum=0;\n    for(var k=0;k<=n;k++){\n        //console.log(k);\n        sum+=(2*k+1)*(GenFact(2*m,k)/GenFact(2*m+k+1,k+1))*GramPoly(i,m,k,0)*GramPoly(t,m,k,s)\n    }\n    return sum;\n}\n\n/**\n *\n * @param m  Number of points\n * @param n  Polynomial grade\n * @param s  Derivative\n */\nfunction fullWeights(m,n,s){\n    var weights = new Array(m);\n    var np = Math.floor(m/2);\n    for(var t=-np;t<=np;t++){\n        weights[t+np] = new Array(m);\n        for(var j=-np;j<=np;j++){\n            weights[t+np][j+np]=Weight(j,t,np,n,s);\n        }\n    }\n    return weights;\n}\n\n/*function entropy(data,h,options){\n    var trend = SavitzkyGolay(data,h,trendOptions);\n    var copy = new Array(data.length);\n    var sum = 0;\n    var max = 0;\n    for(var i=0;i<data.length;i++){\n        copy[i] = data[i]-trend[i];\n    }\n\n    sum/=data.length;\n    console.log(sum+\" \"+max);\n    console.log(stat.array.standardDeviation(copy));\n    console.log(Math.abs(stat.array.mean(copy))/stat.array.standardDeviation(copy));\n    return sum;\n\n}\n\n\n\nfunction guessWindowSize(data, h){\n    console.log(\"entropy \"+entropy(data,h,trendOptions));\n    return 5;\n}\n*/\nmodule.exports = SavitzkyGolay;\n \n","'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\nvar setProperty = function setProperty(target, options) {\n\tif (defineProperty && options.name === '__proto__') {\n\t\tdefineProperty(target, options.name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\tvalue: options.newValue,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\ttarget[options.name] = options.newValue;\n\t}\n};\n\n// Return undefined instead of __proto__ if '__proto__' is not an own property\nvar getProperty = function getProperty(obj, name) {\n\tif (name === '__proto__') {\n\t\tif (!hasOwn.call(obj, name)) {\n\t\t\treturn void 0;\n\t\t} else if (gOPD) {\n\t\t\t// In early versions of node, obj['__proto__'] is buggy when obj has\n\t\t\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n\t\t\treturn gOPD(obj, name).value;\n\t\t}\n\t}\n\n\treturn obj[name];\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = getProperty(target, name);\n\t\t\t\tcopy = getProperty(options, name);\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: copy });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n","'use strict';\n\nexports.array = require('./array');\nexports.matrix = require('./matrix');\n","'use strict';\nvar arrayStat = require('./array');\n\n// https://github.com/accord-net/framework/blob/development/Sources/Accord.Statistics/Tools.cs\n\nfunction entropy(matrix, eps) {\n    if (typeof(eps) === 'undefined') {\n        eps = 0;\n    }\n    var sum = 0,\n        l1 = matrix.length,\n        l2 = matrix[0].length;\n    for (var i = 0; i < l1; i++) {\n        for (var j = 0; j < l2; j++) {\n            sum += matrix[i][j] * Math.log(matrix[i][j] + eps);\n        }\n    }\n    return -sum;\n}\n\nfunction mean(matrix, dimension) {\n    if (typeof(dimension) === 'undefined') {\n        dimension = 0;\n    }\n    var rows = matrix.length,\n        cols = matrix[0].length,\n        theMean, N, i, j;\n\n    if (dimension === -1) {\n        theMean = [0];\n        N = rows * cols;\n        for (i = 0; i < rows; i++) {\n            for (j = 0; j < cols; j++) {\n                theMean[0] += matrix[i][j];\n            }\n        }\n        theMean[0] /= N;\n    } else if (dimension === 0) {\n        theMean = new Array(cols);\n        N = rows;\n        for (j = 0; j < cols; j++) {\n            theMean[j] = 0;\n            for (i = 0; i < rows; i++) {\n                theMean[j] += matrix[i][j];\n            }\n            theMean[j] /= N;\n        }\n    } else if (dimension === 1) {\n        theMean = new Array(rows);\n        N = cols;\n        for (j = 0; j < rows; j++) {\n            theMean[j] = 0;\n            for (i = 0; i < cols; i++) {\n                theMean[j] += matrix[j][i];\n            }\n            theMean[j] /= N;\n        }\n    } else {\n        throw new Error('Invalid dimension');\n    }\n    return theMean;\n}\n\nfunction standardDeviation(matrix, means, unbiased) {\n    var vari = variance(matrix, means, unbiased), l = vari.length;\n    for (var i = 0; i < l; i++) {\n        vari[i] = Math.sqrt(vari[i]);\n    }\n    return vari;\n}\n\nfunction variance(matrix, means, unbiased) {\n    if (typeof(unbiased) === 'undefined') {\n        unbiased = true;\n    }\n    means = means || mean(matrix);\n    var rows = matrix.length;\n    if (rows === 0) return [];\n    var cols = matrix[0].length;\n    var vari = new Array(cols);\n\n    for (var j = 0; j < cols; j++) {\n        var sum1 = 0, sum2 = 0, x = 0;\n        for (var i = 0; i < rows; i++) {\n            x = matrix[i][j] - means[j];\n            sum1 += x;\n            sum2 += x * x;\n        }\n        if (unbiased) {\n            vari[j] = (sum2 - ((sum1 * sum1) / rows)) / (rows - 1);\n        } else {\n            vari[j] = (sum2 - ((sum1 * sum1) / rows)) / rows;\n        }\n    }\n    return vari;\n}\n\nfunction median(matrix) {\n    var rows = matrix.length, cols = matrix[0].length;\n    var medians = new Array(cols);\n\n    for (var i = 0; i < cols; i++) {\n        var data = new Array(rows);\n        for (var j = 0; j < rows; j++) {\n            data[j] = matrix[j][i];\n        }\n        data.sort();\n        var N = data.length;\n        if (N % 2 === 0) {\n            medians[i] = (data[N / 2] + data[(N / 2) - 1]) * 0.5;\n        } else {\n            medians[i] = data[Math.floor(N / 2)];\n        }\n    }\n    return medians;\n}\n\nfunction mode(matrix) {\n    var rows = matrix.length,\n        cols = matrix[0].length,\n        modes = new Array(cols),\n        i, j;\n    for (i = 0; i < cols; i++) {\n        var itemCount = new Array(rows);\n        for (var k = 0; k < rows; k++) {\n            itemCount[k] = 0;\n        }\n        var itemArray = new Array(rows);\n        var count = 0;\n\n        for (j = 0; j < rows; j++) {\n            var index = itemArray.indexOf(matrix[j][i]);\n            if (index >= 0) {\n                itemCount[index]++;\n            } else {\n                itemArray[count] = matrix[j][i];\n                itemCount[count] = 1;\n                count++;\n            }\n        }\n\n        var maxValue = 0, maxIndex = 0;\n        for (j = 0; j < count; j++) {\n            if (itemCount[j] > maxValue) {\n                maxValue = itemCount[j];\n                maxIndex = j;\n            }\n        }\n\n        modes[i] = itemArray[maxIndex];\n    }\n    return modes;\n}\n\nfunction skewness(matrix, unbiased) {\n    if (typeof(unbiased) === 'undefined') unbiased = true;\n    var means = mean(matrix);\n    var n = matrix.length, l = means.length;\n    var skew = new Array(l);\n\n    for (var j = 0; j < l; j++) {\n        var s2 = 0, s3 = 0;\n        for (var i = 0; i < n; i++) {\n            var dev = matrix[i][j] - means[j];\n            s2 += dev * dev;\n            s3 += dev * dev * dev;\n        }\n\n        var m2 = s2 / n;\n        var m3 = s3 / n;\n        var g = m3 / Math.pow(m2, 3 / 2);\n\n        if (unbiased) {\n            var a = Math.sqrt(n * (n - 1));\n            var b = n - 2;\n            skew[j] = (a / b) * g;\n        } else {\n            skew[j] = g;\n        }\n    }\n    return skew;\n}\n\nfunction kurtosis(matrix, unbiased) {\n    if (typeof(unbiased) === 'undefined') unbiased = true;\n    var means = mean(matrix);\n    var n = matrix.length, m = matrix[0].length;\n    var kurt = new Array(m);\n\n    for (var j = 0; j < m; j++) {\n        var s2 = 0, s4 = 0;\n        for (var i = 0; i < n; i++) {\n            var dev = matrix[i][j] - means[j];\n            s2 += dev * dev;\n            s4 += dev * dev * dev * dev;\n        }\n        var m2 = s2 / n;\n        var m4 = s4 / n;\n\n        if (unbiased) {\n            var v = s2 / (n - 1);\n            var a = (n * (n + 1)) / ((n - 1) * (n - 2) * (n - 3));\n            var b = s4 / (v * v);\n            var c = ((n - 1) * (n - 1)) / ((n - 2) * (n - 3));\n            kurt[j] = a * b - 3 * c;\n        } else {\n            kurt[j] = m4 / (m2 * m2) - 3;\n        }\n    }\n    return kurt;\n}\n\nfunction standardError(matrix) {\n    var samples = matrix.length;\n    var standardDeviations = standardDeviation(matrix), l = standardDeviations.length;\n    var standardErrors = new Array(l);\n    var sqrtN = Math.sqrt(samples);\n\n    for (var i = 0; i < l; i++) {\n        standardErrors[i] = standardDeviations[i] / sqrtN;\n    }\n    return standardErrors;\n}\n\nfunction covariance(matrix, dimension) {\n    return scatter(matrix, undefined, dimension);\n}\n\nfunction scatter(matrix, divisor, dimension) {\n    if (typeof(dimension) === 'undefined') {\n        dimension = 0;\n    }\n    if (typeof(divisor) === 'undefined') {\n        if (dimension === 0) {\n            divisor = matrix.length - 1;\n        } else if (dimension === 1) {\n            divisor = matrix[0].length - 1;\n        }\n    }\n    var means = mean(matrix, dimension),\n        rows = matrix.length;\n    if (rows === 0) {\n        return [[]];\n    }\n    var cols = matrix[0].length,\n        cov, i, j, s, k;\n\n    if (dimension === 0) {\n        cov = new Array(cols);\n        for (i = 0; i < cols; i++) {\n            cov[i] = new Array(cols);\n        }\n        for (i = 0; i < cols; i++) {\n            for (j = i; j < cols; j++) {\n                s = 0;\n                for (k = 0; k < rows; k++) {\n                    s += (matrix[k][j] - means[j]) * (matrix[k][i] - means[i]);\n                }\n                s /= divisor;\n                cov[i][j] = s;\n                cov[j][i] = s;\n            }\n        }\n    } else if (dimension === 1) {\n        cov = new Array(rows);\n        for (i = 0; i < rows; i++) {\n            cov[i] = new Array(rows);\n        }\n        for (i = 0; i < rows; i++) {\n            for (j = i; j < rows; j++) {\n                s = 0;\n                for (k = 0; k < cols; k++) {\n                    s += (matrix[j][k] - means[j]) * (matrix[i][k] - means[i]);\n                }\n                s /= divisor;\n                cov[i][j] = s;\n                cov[j][i] = s;\n            }\n        }\n    } else {\n        throw new Error('Invalid dimension');\n    }\n\n    return cov;\n}\n\nfunction correlation(matrix) {\n    var means = mean(matrix),\n        standardDeviations = standardDeviation(matrix, true, means),\n        scores = zScores(matrix, means, standardDeviations),\n        rows = matrix.length,\n        cols = matrix[0].length,\n        i, j;\n\n    var cor = new Array(cols);\n    for (i = 0; i < cols; i++) {\n        cor[i] = new Array(cols);\n    }\n    for (i = 0; i < cols; i++) {\n        for (j = i; j < cols; j++) {\n            var c = 0;\n            for (var k = 0, l = scores.length; k < l; k++) {\n                c += scores[k][j] * scores[k][i];\n            }\n            c /= rows - 1;\n            cor[i][j] = c;\n            cor[j][i] = c;\n        }\n    }\n    return cor;\n}\n\nfunction zScores(matrix, means, standardDeviations) {\n    means = means || mean(matrix);\n    if (typeof(standardDeviations) === 'undefined') standardDeviations = standardDeviation(matrix, true, means);\n    return standardize(center(matrix, means, false), standardDeviations, true);\n}\n\nfunction center(matrix, means, inPlace) {\n    means = means || mean(matrix);\n    var result = matrix,\n        l = matrix.length,\n        i, j, jj;\n\n    if (!inPlace) {\n        result = new Array(l);\n        for (i = 0; i < l; i++) {\n            result[i] = new Array(matrix[i].length);\n        }\n    }\n\n    for (i = 0; i < l; i++) {\n        var row = result[i];\n        for (j = 0, jj = row.length; j < jj; j++) {\n            row[j] = matrix[i][j] - means[j];\n        }\n    }\n    return result;\n}\n\nfunction standardize(matrix, standardDeviations, inPlace) {\n    if (typeof(standardDeviations) === 'undefined') standardDeviations = standardDeviation(matrix);\n    var result = matrix,\n        l = matrix.length,\n        i, j, jj;\n\n    if (!inPlace) {\n        result = new Array(l);\n        for (i = 0; i < l; i++) {\n            result[i] = new Array(matrix[i].length);\n        }\n    }\n\n    for (i = 0; i < l; i++) {\n        var resultRow = result[i];\n        var sourceRow = matrix[i];\n        for (j = 0, jj = resultRow.length; j < jj; j++) {\n            if (standardDeviations[j] !== 0 && !isNaN(standardDeviations[j])) {\n                resultRow[j] = sourceRow[j] / standardDeviations[j];\n            }\n        }\n    }\n    return result;\n}\n\nfunction weightedVariance(matrix, weights) {\n    var means = mean(matrix);\n    var rows = matrix.length;\n    if (rows === 0) return [];\n    var cols = matrix[0].length;\n    var vari = new Array(cols);\n\n    for (var j = 0; j < cols; j++) {\n        var sum = 0;\n        var a = 0, b = 0;\n\n        for (var i = 0; i < rows; i++) {\n            var z = matrix[i][j] - means[j];\n            var w = weights[i];\n\n            sum += w * (z * z);\n            b += w;\n            a += w * w;\n        }\n\n        vari[j] = sum * (b / (b * b - a));\n    }\n\n    return vari;\n}\n\nfunction weightedMean(matrix, weights, dimension) {\n    if (typeof(dimension) === 'undefined') {\n        dimension = 0;\n    }\n    var rows = matrix.length;\n    if (rows === 0) return [];\n    var cols = matrix[0].length,\n        means, i, ii, j, w, row;\n\n    if (dimension === 0) {\n        means = new Array(cols);\n        for (i = 0; i < cols; i++) {\n            means[i] = 0;\n        }\n        for (i = 0; i < rows; i++) {\n            row = matrix[i];\n            w = weights[i];\n            for (j = 0; j < cols; j++) {\n                means[j] += row[j] * w;\n            }\n        }\n    } else if (dimension === 1) {\n        means = new Array(rows);\n        for (i = 0; i < rows; i++) {\n            means[i] = 0;\n        }\n        for (j = 0; j < rows; j++) {\n            row = matrix[j];\n            w = weights[j];\n            for (i = 0; i < cols; i++) {\n                means[j] += row[i] * w;\n            }\n        }\n    } else {\n        throw new Error('Invalid dimension');\n    }\n\n    var weightSum = arrayStat.sum(weights);\n    if (weightSum !== 0) {\n        for (i = 0, ii = means.length; i < ii; i++) {\n            means[i] /= weightSum;\n        }\n    }\n    return means;\n}\n\nfunction weightedCovariance(matrix, weights, means, dimension) {\n    dimension = dimension || 0;\n    means = means || weightedMean(matrix, weights, dimension);\n    var s1 = 0, s2 = 0;\n    for (var i = 0, ii = weights.length; i < ii; i++) {\n        s1 += weights[i];\n        s2 += weights[i] * weights[i];\n    }\n    var factor = s1 / (s1 * s1 - s2);\n    return weightedScatter(matrix, weights, means, factor, dimension);\n}\n\nfunction weightedScatter(matrix, weights, means, factor, dimension) {\n    dimension = dimension || 0;\n    means = means || weightedMean(matrix, weights, dimension);\n    if (typeof(factor) === 'undefined') {\n        factor = 1;\n    }\n    var rows = matrix.length;\n    if (rows === 0) {\n        return [[]];\n    }\n    var cols = matrix[0].length,\n        cov, i, j, k, s;\n\n    if (dimension === 0) {\n        cov = new Array(cols);\n        for (i = 0; i < cols; i++) {\n            cov[i] = new Array(cols);\n        }\n        for (i = 0; i < cols; i++) {\n            for (j = i; j < cols; j++) {\n                s = 0;\n                for (k = 0; k < rows; k++) {\n                    s += weights[k] * (matrix[k][j] - means[j]) * (matrix[k][i] - means[i]);\n                }\n                cov[i][j] = s * factor;\n                cov[j][i] = s * factor;\n            }\n        }\n    } else if (dimension === 1) {\n        cov = new Array(rows);\n        for (i = 0; i < rows; i++) {\n            cov[i] = new Array(rows);\n        }\n        for (i = 0; i < rows; i++) {\n            for (j = i; j < rows; j++) {\n                s = 0;\n                for (k = 0; k < cols; k++) {\n                    s += weights[k] * (matrix[j][k] - means[j]) * (matrix[i][k] - means[i]);\n                }\n                cov[i][j] = s * factor;\n                cov[j][i] = s * factor;\n            }\n        }\n    } else {\n        throw new Error('Invalid dimension');\n    }\n\n    return cov;\n}\n\nmodule.exports = {\n    entropy: entropy,\n    mean: mean,\n    standardDeviation: standardDeviation,\n    variance: variance,\n    median: median,\n    mode: mode,\n    skewness: skewness,\n    kurtosis: kurtosis,\n    standardError: standardError,\n    covariance: covariance,\n    scatter: scatter,\n    correlation: correlation,\n    zScores: zScores,\n    center: center,\n    standardize: standardize,\n    weightedVariance: weightedVariance,\n    weightedMean: weightedMean,\n    weightedCovariance: weightedCovariance,\n    weightedScatter: weightedScatter\n};\n","/**\n * Created by acastillo on 9/6/15.\n */\n'use strict';\n\nvar optimize = require('ml-optimize-lorentzian');\n\nfunction sampleFunction(from, to, x, y, lastIndex) {\n  var nbPoints = x.length;\n  var sampleX = [];\n  var sampleY = [];\n  var direction = Math.sign(x[1] - x[0]); // Direction of the derivative\n  if (direction === -1) {\n    lastIndex[0] = x.length - 1;\n  }\n\n  var delta = Math.abs(to - from) / 2;\n  var mid = (from + to) / 2;\n  var stop = false;\n  var index = lastIndex[0];\n  while (!stop && index < nbPoints && index >= 0) {\n    if (Math.abs(x[index] - mid) <= delta) {\n      sampleX.push(x[index]);\n      sampleY.push(y[index]);\n      index += direction;\n    } else {\n      // It is outside the range.\n      if (Math.sign(mid - x[index]) === 1) {\n        // We'll reach the mid going in the current direction\n        index += direction;\n      } else {\n        // There is not more peaks in the current range\n        stop = true;\n      }\n    }\n    // console.log(sampleX);\n  }\n  lastIndex[0] = index;\n  return [sampleX, sampleY];\n}\n\nmodule.exports = function optimizePeaks(peakList, x, y, n, fnType) {\n  var i;\n  var j;\n\n  var lastIndex = [0];\n  var groups = groupPeaks(peakList, n);\n  var result = [];\n  var factor = 1;\n  if (fnType === 'gaussian') {\n    factor = 1.17741;\n  } // From https://en.wikipedia.org/wiki/Gaussian_function#Properties\n  var sampling, error, opts;\n  for (i = 0; i < groups.length; i++) {\n    var peaks = groups[i].group;\n    if (peaks.length > 1) {\n      // Multiple peaks\n      // console.log(\"Pending group of overlaped peaks \"+peaks.length);\n      // console.log(\"here1\");\n      // console.log(groups[i].limits);\n      sampling = sampleFunction(\n        groups[i].limits[0] - groups[i].limits[1],\n        groups[i].limits[0] + groups[i].limits[1],\n        x,\n        y,\n        lastIndex\n      );\n      // console.log(sampling);\n      if (sampling[0].length > 5) {\n        error = peaks[0].width / 1000;\n        opts = [3, 100, error, error, error, error * 10, error * 10, 11, 9, 1];\n        // var gauss = Opt.optimizeSingleGaussian(sampling[0], sampling[1], opts, peaks);\n        var optPeaks = [];\n        if (fnType === 'gaussian') {\n          optPeaks = optimize.optimizeGaussianSum(sampling, peaks, opts);\n        } else {\n          if (fnType === 'lorentzian') {\n            optPeaks = optimize.optimizeLorentzianSum(sampling, peaks, opts);\n          }\n        }\n        // console.log(optPeak);\n        for (j = 0; j < optPeaks.length; j++) {\n          result.push({\n            x: optPeaks[j][0][0],\n            y: optPeaks[j][1][0],\n            width: optPeaks[j][2][0] * factor\n          });\n        }\n      }\n    } else {\n      // Single peak\n      peaks = peaks[0];\n      sampling = sampleFunction(\n        peaks.x - n * peaks.width,\n        peaks.x + n * peaks.width,\n        x,\n        y,\n        lastIndex\n      );\n      // console.log(\"here2\");\n      // console.log(groups[i].limits);\n      if (sampling[0].length > 5) {\n        error = peaks.width / 1000;\n        opts = [3, 100, error, error, error, error * 10, error * 10, 11, 9, 1];\n        // var gauss = Opt.optimizeSingleGaussian(sampling[0], sampling[1], opts, peaks);\n        // var gauss = Opt.optimizeSingleGaussian([sampling[0],sampling[1]], peaks, opts);\n        var optPeak = [];\n        if (fnType === 'gaussian') {\n          optPeak = optimize.optimizeSingleGaussian(\n            [sampling[0], sampling[1]],\n            peaks,\n            opts\n          );\n        } else {\n          if (fnType === 'lorentzian') {\n            optPeak = optimize.optimizeSingleLorentzian(\n              [sampling[0], sampling[1]],\n              peaks,\n              opts\n            );\n          }\n        }\n        // console.log(optPeak);\n        result.push({\n          x: optPeak[0][0],\n          y: optPeak[1][0],\n          width: optPeak[2][0] * factor\n        }); // From https://en.wikipedia.org/wiki/Gaussian_function#Properties}\n      }\n    }\n  }\n  return result;\n};\n\nfunction groupPeaks(peakList, nL) {\n  var group = [];\n  var groups = [];\n  var i, j;\n  var limits = [peakList[0].x, nL * peakList[0].width];\n  var upperLimit, lowerLimit;\n  // Merge forward\n  for (i = 0; i < peakList.length; i++) {\n    // If the 2 things overlaps\n    if (\n      Math.abs(peakList[i].x - limits[0]) <\n      nL * peakList[i].width + limits[1]\n    ) {\n      // Add the peak to the group\n      group.push(peakList[i]);\n      // Update the group limits\n      upperLimit = limits[0] + limits[1];\n      if (peakList[i].x + nL * peakList[i].width > upperLimit) {\n        upperLimit = peakList[i].x + nL * peakList[i].width;\n      }\n      lowerLimit = limits[0] - limits[1];\n      if (peakList[i].x - nL * peakList[i].width < lowerLimit) {\n        lowerLimit = peakList[i].x - nL * peakList[i].width;\n      }\n      limits = [\n        (upperLimit + lowerLimit) / 2,\n        Math.abs(upperLimit - lowerLimit) / 2\n      ];\n    } else {\n      groups.push({ limits: limits, group: group });\n      // var optmimalPeak = fitSpectrum(group,limits,spectrum);\n      group = [peakList[i]];\n      limits = [peakList[i].x, nL * peakList[i].width];\n    }\n  }\n  groups.push({ limits: limits, group: group });\n  // Merge backward\n  for (i = groups.length - 2; i >= 0; i--) {\n    // The groups overlaps\n    if (\n      Math.abs(groups[i].limits[0] - groups[i + 1].limits[0]) <\n      (groups[i].limits[1] + groups[i + 1].limits[1]) / 2\n    ) {\n      for (j = 0; j < groups[i + 1].group.length; j++) {\n        groups[i].group.push(groups[i + 1].group[j]);\n      }\n      upperLimit = groups[i].limits[0] + groups[i].limits[1];\n      if (groups[i + 1].limits[0] + groups[i + 1].limits[1] > upperLimit) {\n        upperLimit = groups[i + 1].limits[0] + groups[i + 1].limits[1];\n      }\n      lowerLimit = groups[i].limits[0] - groups[i].limits[1];\n      if (groups[i + 1].limits[0] - groups[i + 1].limits[1] < lowerLimit) {\n        lowerLimit = groups[i + 1].limits[0] - groups[i + 1].limits[1];\n      }\n      // console.log(limits);\n      groups[i].limits = [\n        (upperLimit + lowerLimit) / 2,\n        Math.abs(upperLimit - lowerLimit) / 2\n      ];\n\n      groups.splice(i + 1, 1);\n    }\n  }\n  return groups;\n}\n","'use strict';\n\nmodule.exports = require('./LM');\nmodule.exports.Matrix = require('ml-matrix');\nmodule.exports.Matrix.algebra = require('./algebra');\n","/**\n * Created by acastillo on 8/5/15.\n */\nvar Matrix = require(\"ml-matrix\");\nvar math = require(\"./algebra\");\n\nvar DEBUG = false;\n/** Levenberg Marquardt curve-fitting: minimize sum of weighted squared residuals\n ----------  INPUT  VARIABLES  -----------\n func   = function of n independent variables, 't', and m parameters, 'p',\n returning the simulated model: y_hat = func(t,p,c)\n p      = n-vector of initial guess of parameter values\n t      = m-vectors or matrix of independent variables (used as arg to func)\n y_dat  = m-vectors or matrix of data to be fit by func(t,p)\n weight = weighting vector for least squares fit ( weight >= 0 ) ...\n inverse of the standard measurement errors\n Default:  sqrt(d.o.f. / ( y_dat' * y_dat ))\n dp     = fractional increment of 'p' for numerical derivatives\n dp(j)>0 central differences calculated\n dp(j)<0 one sided 'backwards' differences calculated\n dp(j)=0 sets corresponding partials to zero; i.e. holds p(j) fixed\n Default:  0.001;\n p_min  = n-vector of lower bounds for parameter values\n p_max  = n-vector of upper bounds for parameter values\n c      = an optional matrix of values passed to func(t,p,c)\n opts   = vector of algorithmic parameters\n parameter    defaults    meaning\n opts(1)  =  prnt            3        >1 intermediate results; >2 plots\n opts(2)  =  MaxIter      10*Npar     maximum number of iterations\n opts(3)  =  epsilon_1       1e-3     convergence tolerance for gradient\n opts(4)  =  epsilon_2       1e-3     convergence tolerance for parameters\n opts(5)  =  epsilon_3       1e-3     convergence tolerance for Chi-square\n opts(6)  =  epsilon_4       1e-2     determines acceptance of a L-M step\n opts(7)  =  lambda_0        1e-2     initial value of L-M paramter\n opts(8)  =  lambda_UP_fac   11       factor for increasing lambda\n opts(9)  =  lambda_DN_fac    9       factor for decreasing lambda\n opts(10) =  Update_Type      1       1: Levenberg-Marquardt lambda update\n 2: Quadratic update\n 3: Nielsen's lambda update equations\n\n ----------  OUTPUT  VARIABLES  -----------\n p       = least-squares optimal estimate of the parameter values\n X2      = Chi squared criteria\n sigma_p = asymptotic standard error of the parameters\n sigma_y = asymptotic standard error of the curve-fit\n corr    = correlation matrix of the parameters\n R_sq    = R-squared cofficient of multiple determination\n cvg_hst = convergence history\n\n Henri Gavin, Dept. Civil & Environ. Engineering, Duke Univ. 22 Sep 2013\n modified from: http://octave.sourceforge.net/optim/function/leasqr.html\n using references by\n Press, et al., Numerical Recipes, Cambridge Univ. Press, 1992, Chapter 15.\n Sam Roweis       http://www.cs.toronto.edu/~roweis/notes/lm.pdf\n Manolis Lourakis http://www.ics.forth.gr/~lourakis/levmar/levmar.pdf\n Hans Nielson     http://www2.imm.dtu.dk/~hbn/publ/TR9905.ps\n Mathworks        optimization toolbox reference manual\n K. Madsen, H.B., Nielsen, and O. Tingleff\n http://www2.imm.dtu.dk/pubdb/views/edoc_download.php/3215/pdf/imm3215.pdf\n */\nvar LM = {\n\n    optimize: function(func,p,t,y_dat,weight,dp,p_min,p_max,c,opts){\n\n        var tensor_parameter = 0;\t\t\t// set to 1 of parameter is a tensor\n\n        var iteration  = 0;\t\t\t// iteration counter\n        //func_calls = 0;\t\t\t// running count of function evaluations\n\n        if((typeof p[0])!=\"object\"){\n            for(var i=0;i< p.length;i++){\n                p[i]=[p[i]];\n            }\n\n        }\n        //p = p(:); y_dat = y_dat(:); \t\t// make column vectors\n        var i,k;\n        var eps = 2^-52;\n        var Npar   = p.length;//length(p); \t\t\t// number of parameters\n        var Npnt   = y_dat.length;//length(y_dat);\t\t// number of data points\n        var p_old  = Matrix.zeros(Npar,1);\t\t// previous set of parameters\n        var y_old  = Matrix.zeros(Npnt,1);\t\t// previous model, y_old = y_hat(t;p_old)\n        var X2     = 1e-2/eps;\t\t\t// a really big initial Chi-sq value\n        var X2_old = 1e-2/eps;\t\t\t// a really big initial Chi-sq value\n        var J =  Matrix.zeros(Npnt,Npar);\n\n\n        if (t.length != y_dat.length) {\n            console.log('lm.m error: the length of t must equal the length of y_dat');\n\n            length_t = t.length;\n            length_y_dat = y_dat.length;\n            var X2 = 0, corr = 0, sigma_p = 0, sigma_y = 0, R_sq = 0, cvg_hist = 0;\n            if (!tensor_parameter) {\n                return;\n            }\n        }\n\n        weight = weight||Math.sqrt((Npnt-Npar+1)/(math.multiply(math.transpose(y_dat),y_dat)));\n        dp = dp || 0.001;\n        p_min   = p_min || math.multiply(Math.abs(p),-100);\n        p_max   = p_max || math.multiply(Math.abs(p),100);\n        c = c || 1;\n        // Algorithmic Paramters\n        //prnt MaxIter  eps1  eps2  epx3  eps4  lam0  lamUP lamDN UpdateType\n        opts = opts ||[  3,10*Npar, 1e-3, 1e-3, 1e-3, 1e-2, 1e-2, 11, 9, 1 ];\n\n        var prnt          = opts[0];\t// >1 intermediate results; >2 plots\n        var MaxIter       = opts[1];\t// maximum number of iterations\n        var epsilon_1     = opts[2];\t// convergence tolerance for gradient\n        var epsilon_2     = opts[3];\t// convergence tolerance for parameter\n        var epsilon_3     = opts[4];\t// convergence tolerance for Chi-square\n        var epsilon_4     = opts[5];\t// determines acceptance of a L-M step\n        var lambda_0      = opts[6];\t// initial value of damping paramter, lambda\n        var lambda_UP_fac = opts[7];\t// factor for increasing lambda\n        var lambda_DN_fac = opts[8];\t// factor for decreasing lambda\n        var Update_Type   = opts[9];\t// 1: Levenberg-Marquardt lambda update\n        // 2: Quadratic update\n        // 3: Nielsen's lambda update equations\n\n        if ( tensor_parameter && prnt == 3 ) prnt = 2;\n\n\n        if(!dp.length || dp.length == 1){\n            var dp_array = new Array(Npar);\n            for(var i=0;i<Npar;i++)\n                dp_array[i]=[dp];\n            dp=dp_array;\n        }\n\n        // indices of the parameters to be fit\n        var idx   = [];\n        for(i=0;i<dp.length;i++){\n            if(dp[i][0]!=0){\n                idx.push(i);\n            }\n        }\n\n        var Nfit = idx.length;\t\t\t// number of parameters to fit\n        var stop = false;\t\t\t\t// termination flag\n\n        var weight_sq = null;\n        //console.log(weight);\n        if ( !weight.length || weight.length < Npnt )\t{\n            // squared weighting vector\n            //weight_sq = ( weight(1)*ones(Npnt,1) ).^2;\n            //console.log(\"weight[0] \"+typeof weight[0]);\n            var tmp = math.multiply(Matrix.ones(Npnt,1),weight[0]);\n            weight_sq = math.dotMultiply(tmp,tmp);\n        }\n        else{\n            //weight_sq = (weight(:)).^2;\n            weight_sq = math.dotMultiply(weight,weight);\n        }\n\n\n        // initialize Jacobian with finite difference calculation\n        //console.log(\"J \"+weight_sq);\n        var result = this.lm_matx(func,t,p_old,y_old,1,J,p,y_dat,weight_sq,dp,c);\n        var JtWJ = result.JtWJ,JtWdy=result.JtWdy,X2=result.Chi_sq,y_hat=result.y_hat,J=result.J;\n        //[JtWJ,JtWdy,X2,y_hat,J] = this.lm_matx(func,t,p_old,y_old,1,J,p,y_dat,weight_sq,dp,c);\n        //console.log(JtWJ);\n\n        if ( Math.max(Math.abs(JtWdy)) < epsilon_1 ){\n            console.log(' *** Your Initial Guess is Extremely Close to Optimal ***')\n            console.log(' *** epsilon_1 = ', epsilon_1);\n            stop = true;\n        }\n\n\n        switch(Update_Type){\n            case 1: // Marquardt: init'l lambda\n                lambda  = lambda_0;\n                break;\n            default:    // Quadratic and Nielsen\n                lambda  = lambda_0 * Math.max(math.diag(JtWJ));\n                nu=2;\n        }\n        //console.log(X2);\n        X2_old = X2; // previous value of X2\n        //console.log(MaxIter+\" \"+Npar);\n        //var cvg_hst = Matrix.ones(MaxIter,Npar+3);\t\t// initialize convergence history\n        var h = null;\n        while ( !stop && iteration <= MaxIter ) {\t\t// --- Main Loop\n            iteration = iteration + 1;\n            // incremental change in parameters\n            switch(Update_Type){\n                case 1:\t\t\t\t\t// Marquardt\n                    //h = ( JtWJ + lambda * math.diag(math.diag(JtWJ)) ) \\ JtWdy;\n                    //h = math.multiply(math.inv(JtWdy),math.add(JtWJ,math.multiply(lambda,math.diag(math.diag(Npar)))));\n                    h = math.solve(math.add(JtWJ,math.multiply(math.diag(math.diag(JtWJ)),lambda)),JtWdy);\n                    break;\n                default:\t\t\t\t\t// Quadratic and Nielsen\n                    //h = ( JtWJ + lambda * math.eye(Npar) ) \\ JtWdy;\n\n                    h = math.solve(math.add(JtWJ,math.multiply( Matrix.eye(Npar),lambda)),JtWdy);\n            }\n\n            /*for(var k=0;k< h.length;k++){\n             h[k]=[h[k]];\n             }*/\n            //console.log(\"h \"+h);\n            //h=math.matrix(h);\n            //  big = max(abs(h./p)) > 2;\n            //this is a big step\n            // --- Are parameters [p+h] much better than [p] ?\n            var hidx = new Array(idx.length);\n            for(k=0;k<idx.length;k++){\n                hidx[k]=h[idx[k]];\n            }\n            var p_try = math.add(p, hidx);// update the [idx] elements\n\n            for(k=0;k<p_try.length;k++){\n                p_try[k][0]=Math.min(Math.max(p_min[k][0],p_try[k][0]),p_max[k][0]);\n            }\n            // p_try = Math.min(Math.max(p_min,p_try),p_max);           // apply constraints\n\n            var delta_y = math.subtract(y_dat, func(t,p_try,c));       // residual error using p_try\n            //func_calls = func_calls + 1;\n            //X2_try = delta_y' * ( delta_y .* weight_sq );  // Chi-squared error criteria\n\n            var X2_try = math.multiply(math.transpose(delta_y),math.dotMultiply(delta_y,weight_sq));\n\n            if ( Update_Type == 2 ){  \t\t\t  // Quadratic\n                //    One step of quadratic line update in the h direction for minimum X2\n                //var alpha =  JtWdy'*h / ( (X2_try - X2)/2 + 2*JtWdy'*h ) ;\n                var JtWdy_th = math.multiply(math.transpose(JtWdy),h);\n                var alpha =  math.multiply(JtWdy_th,math.inv(math.add(math.multiply(math.subtract(X2_try - X2),1/2)),math.multiply(JtWdy_th,2)));//JtWdy'*h / ( (X2_try - X2)/2 + 2*JtWdy'*h ) ;\n\n                h = math.multiply(alpha, h);\n                for(var k=0;k<idx.length;k++){\n                    hidx[k]=h[idx[k]];\n                }\n\n                p_try = math.add(p ,hidx);                     // update only [idx] elements\n                p_try = math.min(math.max(p_min,p_try),p_max);          // apply constraints\n\n                delta_y = math.subtract(y_dat, func(t,p_try,c));      // residual error using p_try\n                // func_calls = func_calls + 1;\n                //X2_try = delta_y' * ( delta_y .* weight_sq ); // Chi-squared error criteria\n                X2_try = math.multiply(math.transpose(delta_y), mat.dotMultiply(delta_y, weight_sq));\n            }\n\n            //rho = (X2 - X2_try) / ( 2*h' * (lambda * h + JtWdy) ); // Nielsen\n            var rho = (X2-X2_try)/math.multiply(math.multiply(math.transpose(h),2),math.add(math.multiply(lambda, h),JtWdy));\n            //console.log(\"rho \"+rho);\n            if ( rho > epsilon_4 ) {\t\t// it IS significantly better\n                //console.log(\"Here\");\n                dX2 = X2 - X2_old;\n                X2_old = X2;\n                p_old = p;\n                y_old = y_hat;\n                p = p_try;\t\t\t// accept p_try\n\n                result = this.lm_matx(func, t, p_old, y_old, dX2, J, p, y_dat, weight_sq, dp, c);\n                JtWJ = result.JtWJ,JtWdy=result.JtWdy,X2=result.Chi_sq,y_hat=result.y_hat,J=result.J;\n                // decrease lambda ==> Gauss-Newton method\n\n                switch (Update_Type) {\n                    case 1:\t\t\t\t\t\t\t// Levenberg\n                        lambda = Math.max(lambda / lambda_DN_fac, 1.e-7);\n                        break;\n                    case 2:\t\t\t\t\t\t\t// Quadratic\n                        lambda = Math.max(lambda / (1 + alpha), 1.e-7);\n                        break;\n                    case 3:\t\t\t\t\t\t\t// Nielsen\n                        lambda = math.multiply(Math.max(1 / 3, 1 - (2 * rho - 1) ^ 3),lambda);\n                        nu = 2;\n                        break;\n                }\n            }\n            else {\t\t\t\t\t// it IS NOT better\n                X2 = X2_old;\t\t\t// do not accept p_try\n                if (iteration%(2 * Npar)==0) {\t// rank-1 update of Jacobian\n                    result = this.lm_matx(func, t, p_old, y_old, -1, J, p, y_dat, weight_sq, dp, c);\n                    JtWJ = result.JtWJ,JtWdy=result.JtWdy,dX2=result.Chi_sq,y_hat=result.y_hat,J=result.J;\n                }\n\n                // increase lambda  ==> gradient descent method\n                switch (Update_Type) {\n                    case 1:\t\t\t\t\t\t\t// Levenberg\n                        lambda = Math.min(lambda * lambda_UP_fac, 1.e7);\n                        break;\n                    case 2:\t\t\t\t\t\t\t// Quadratic\n                        lambda = lambda + Math.abs((X2_try - X2) / 2 / alpha);\n                        break;\n                    case 3:\t\t\t\t\t\t// Nielsen\n                        lambda = lambda * nu;\n                        nu = 2 * nu;\n                        break;\n                }\n            }\n        }// --- End of Main Loop\n\n        // --- convergence achieved, find covariance and confidence intervals\n\n        // equal weights for paramter error analysis\n        weight_sq = math.multiply(math.multiply(math.transpose(delta_y),delta_y), Matrix.ones(Npnt,1));\n\n        weight_sq.apply(function(i,j){\n            weight_sq[i][j] = (Npnt-Nfit+1)/weight_sq[i][j];\n        });\n        //console.log(weight_sq);\n        result = this.lm_matx(func,t,p_old,y_old,-1,J,p,y_dat,weight_sq,dp,c);\n        JtWJ = result.JtWJ,JtWdy=result.JtWdy,X2=result.Chi_sq,y_hat=result.y_hat,J=result.J;\n\n        /*if nargout > 2\t\t\t\t// standard error of parameters\n         covar = inv(JtWJ);\n         sigma_p = sqrt(diag(covar));\n         end\n\n         if nargout > 3\t\t\t\t// standard error of the fit\n         //  sigma_y = sqrt(diag(J * covar * J'));\t// slower version of below\n         sigma_y = zeros(Npnt,1);\n         for i=1:Npnt\n         sigma_y(i) = J(i,:) * covar * J(i,:)';\n         end\n         sigma_y = sqrt(sigma_y);\n         end\n\n         if nargout > 4\t\t\t\t// parameter correlation matrix\n         corr = covar ./ [sigma_p*sigma_p'];\n         end\n\n         if nargout > 5\t\t\t\t// coefficient of multiple determination\n         R_sq = corrcoef([y_dat y_hat]);\n         R_sq = R_sq(1,2).^2;\n         end\n\n         if nargout > 6\t\t\t\t// convergence history\n         cvg_hst = cvg_hst(1:iteration,:);\n         end*/\n\n        // endfunction  # ---------------------------------------------------------- LM\n\n        return { p:p, X2:X2};\n    },\n\n    lm_FD_J:function(func,t,p,y,dp,c) {\n        // J = lm_FD_J(func,t,p,y,{dp},{c})\n        //\n        // partial derivatives (Jacobian) dy/dp for use with lm.m\n        // computed via Finite Differences\n        // Requires n or 2n function evaluations, n = number of nonzero values of dp\n        // -------- INPUT VARIABLES ---------\n        // func = function of independent variables, 't', and parameters, 'p',\n        //        returning the simulated model: y_hat = func(t,p,c)\n        // t  = m-vector of independent variables (used as arg to func)\n        // p  = n-vector of current parameter values\n        // y  = func(t,p,c) n-vector initialised by user before each call to lm_FD_J\n        // dp = fractional increment of p for numerical derivatives\n        //      dp(j)>0 central differences calculated\n        //      dp(j)<0 one sided differences calculated\n        //      dp(j)=0 sets corresponding partials to zero; i.e. holds p(j) fixed\n        //      Default:  0.001;\n        // c  = optional vector of constants passed to y_hat = func(t,p,c)\n        //---------- OUTPUT VARIABLES -------\n        // J  = Jacobian Matrix J(i,j)=dy(i)/dp(j)\ti=1:n; j=1:m\n\n        //   Henri Gavin, Dept. Civil & Environ. Engineering, Duke Univ. November 2005\n        //   modified from: ftp://fly.cnuce.cnr.it/pub/software/octave/leasqr/\n        //   Press, et al., Numerical Recipes, Cambridge Univ. Press, 1992, Chapter 15.\n\n        var m = y.length;\t\t\t// number of data points\n        var n = p.length;\t\t\t// number of parameters\n\n        dp = dp || math.multiply( Matrix.ones(n, 1), 0.001);\n\n        var ps = p.clone();//JSON.parse(JSON.stringify(p));\n        //var ps = $.extend(true, [], p);\n        var J = new Matrix(m,n), del =new Array(n);         // initialize Jacobian to Zero\n\n        for (var j = 0;j < n; j++) {\n            //console.log(j+\" \"+dp[j]+\" \"+p[j]+\" \"+ps[j]+\" \"+del[j]);\n            del[j] = dp[j]*(1+Math.abs(p[j][0]));  // parameter perturbation\n            p[j] = [ps[j][0]+del[j]];\t      // perturb parameter p(j)\n            //console.log(j+\" \"+dp[j]+\" \"+p[j]+\" \"+ps[j]+\" \"+del[j]);\n\n            if (del[j] != 0){\n                y1 = func(t, p, c);\n                //func_calls = func_calls + 1;\n                if (dp[j][0] < 0) {\t\t// backwards difference\n                    //J(:,j) = math.dotDivide(math.subtract(y1, y),del[j]);//. / del[j];\n                    //console.log(del[j]);\n                    //console.log(y);\n                    var column = math.dotDivide(math.subtract(y1, y),del[j]);\n                    for(var k=0;k< m;k++){\n                        J[k][j]=column[k][0];\n                    }\n                    //console.log(column);\n                }\n                else{\n                    p[j][0] = ps[j][0] - del[j];\n                    //J(:,j) = (y1 - feval(func, t, p, c)). / (2. * del[j]);\n                    var column = math.dotDivide(math.subtract(y1,func(t,p,c)),2*del[j]);\n                    for(var k=0;k< m;k++){\n                        J[k][j]=column[k][0];\n                    }\n\n                }\t\t\t// central difference, additional func call\n            }\n\n            p[j] = ps[j];\t\t// restore p(j)\n\n        }\n        //console.log(\"lm_FD_J: \"+ JSON.stringify(J));\n        return J;\n\n    },\n\n    // endfunction # -------------------------------------------------- LM_FD_J\n    lm_Broyden_J: function(p_old,y_old,J,p,y){\n        // J = lm_Broyden_J(p_old,y_old,J,p,y)\n        // carry out a rank-1 update to the Jacobian matrix using Broyden's equation\n        //---------- INPUT VARIABLES -------\n        // p_old = previous set of parameters\n        // y_old = model evaluation at previous set of parameters, y_hat(t;p_old)\n        // J  = current version of the Jacobian matrix\n        // p     = current  set of parameters\n        // y     = model evaluation at current  set of parameters, y_hat(t;p)\n        //---------- OUTPUT VARIABLES -------\n        // J = rank-1 update to Jacobian Matrix J(i,j)=dy(i)/dp(j)\ti=1:n; j=1:m\n        //console.log(p+\" X \"+ p_old)\n        var h  = math.subtract(p, p_old);\n\n        //console.log(\"hhh \"+h);\n        var h_t = math.transpose(h);\n        h_t.div(math.multiply(h_t,h));\n\n        //console.log(h_t);\n        //J = J + ( y - y_old - J*h )*h' / (h'*h);\t// Broyden rank-1 update eq'n\n        J = math.add(J, math.multiply(math.subtract(y, math.add(y_old,math.multiply(J,h))),h_t));\n        return J;\n        // endfunction # ---------------------------------------------- LM_Broyden_J\n    },\n\n    lm_matx : function (func,t,p_old,y_old,dX2,J,p,y_dat,weight_sq,dp,c,iteration){\n        // [JtWJ,JtWdy,Chi_sq,y_hat,J] = this.lm_matx(func,t,p_old,y_old,dX2,J,p,y_dat,weight_sq,{da},{c})\n        //\n        // Evaluate the linearized fitting matrix, JtWJ, and vector JtWdy,\n        // and calculate the Chi-squared error function, Chi_sq\n        // Used by Levenberg-Marquard algorithm, lm.m\n        // -------- INPUT VARIABLES ---------\n        // func   = function ofpn independent variables, p, and m parameters, p,\n        //         returning the simulated model: y_hat = func(t,p,c)\n        // t      = m-vectors or matrix of independent variables (used as arg to func)\n        // p_old  = n-vector of previous parameter values\n        // y_old  = m-vector of previous model ... y_old = y_hat(t;p_old);\n        // dX2    = previous change in Chi-squared criteria\n        // J   = m-by-n Jacobian of model, y_hat, with respect to parameters, p\n        // p      = n-vector of current  parameter values\n        // y_dat  = n-vector of data to be fit by func(t,p,c)\n        // weight_sq = square of the weighting vector for least squares fit ...\n        //\t    inverse of the standard measurement errors\n        // dp     = fractional increment of 'p' for numerical derivatives\n        //          dp(j)>0 central differences calculated\n        //          dp(j)<0 one sided differences calculated\n        //          dp(j)=0 sets corresponding partials to zero; i.e. holds p(j) fixed\n        //          Default:  0.001;\n        // c      = optional vector of constants passed to y_hat = func(t,p,c)\n        //---------- OUTPUT VARIABLES -------\n        // JtWJ\t = linearized Hessian matrix (inverse of covariance matrix)\n        // JtWdy   = linearized fitting vector\n        // Chi_sq = Chi-squared criteria: weighted sum of the squared residuals WSSR\n        // y_hat  = model evaluated with parameters 'p'\n        // J   = m-by-n Jacobian of model, y_hat, with respect to parameters, p\n\n        //   Henri Gavin, Dept. Civil & Environ. Engineering, Duke Univ. November 2005\n        //   modified from: ftp://fly.cnuce.cnr.it/pub/software/octave/leasqr/\n        //   Press, et al., Numerical Recipes, Cambridge Univ. Press, 1992, Chapter 15.\n\n\n        var Npnt = y_dat.length;\t\t// number of data points\n        var Npar = p.length;\t\t// number of parameters\n\n        dp = dp || 0.001;\n\n\n        //var JtWJ = new Matrix.zeros(Npar);\n        //var JtWdy  = new Matrix.zeros(Npar,1);\n\n        var y_hat = func(t,p,c);\t// evaluate model using parameters 'p'\n        //func_calls = func_calls + 1;\n        //console.log(J);\n        if ( (iteration%(2*Npar))==0 || dX2 > 0 ) {\n            //console.log(\"Par\");\n            J = this.lm_FD_J(func, t, p, y_hat, dp, c);\t\t// finite difference\n        }\n        else{\n            //console.log(\"ImPar\");\n            J = this.lm_Broyden_J(p_old, y_old, J, p, y_hat); // rank-1 update\n        }\n        //console.log(y_dat);\n        //console.log(y_hat);\n        var delta_y = math.subtract(y_dat, y_hat);\t// residual error between model and data\n        //console.log(delta_y[0][0]);\n        //console.log(delta_y.rows+\" \"+delta_y.columns+\" \"+JSON.stringify(weight_sq));\n        //var Chi_sq = delta_y' * ( delta_y .* weight_sq ); \t// Chi-squared error criteria\n        var Chi_sq = math.multiply(math.transpose(delta_y),math.dotMultiply(delta_y,weight_sq));\n        //JtWJ  = J' * ( J .* ( weight_sq * ones(1,Npar) ) );\n        var Jt = math.transpose(J);\n\n        //console.log(weight_sq);\n\n        var JtWJ = math.multiply(Jt, math.dotMultiply(J,math.multiply(weight_sq, Matrix.ones(1,Npar))));\n\n        //JtWdy = J' * ( weight_sq .* delta_y );\n        var JtWdy = math.multiply(Jt, math.dotMultiply(weight_sq,delta_y));\n\n\n        return {JtWJ:JtWJ,JtWdy:JtWdy,Chi_sq:Chi_sq,y_hat:y_hat,J:J};\n        // endfunction  # ------------------------------------------------------ LM_MATX\n    }\n\n\n\n};\n\nmodule.exports = LM;","'use strict';\n\nif (!Symbol.species) {\n    Symbol.species = Symbol.for('@@species');\n}\n","module.exports = exports = require('./ArrayUtils');\n\n\nexports.getEquallySpacedData = require('./getEquallySpaced').getEquallySpacedData;\nexports.SNV = require('./snv').SNV;\n","'use strict';\n\nconst Stat = require('ml-stat').array;\n/**\n * Function that returns an array of points given 1D array as follows:\n *\n * [x1, y1, .. , x2, y2, ..]\n *\n * And receive the number of dimensions of each point.\n * @param array\n * @param dimensions\n * @returns {Array} - Array of points.\n */\nfunction coordArrayToPoints(array, dimensions) {\n    if(array.length % dimensions !== 0) {\n        throw new RangeError('Dimensions number must be accordance with the size of the array.');\n    }\n\n    var length = array.length / dimensions;\n    var pointsArr = new Array(length);\n\n    var k = 0;\n    for(var i = 0; i < array.length; i += dimensions) {\n        var point = new Array(dimensions);\n        for(var j = 0; j < dimensions; ++j) {\n            point[j] = array[i + j];\n        }\n\n        pointsArr[k] = point;\n        k++;\n    }\n\n    return pointsArr;\n}\n\n\n/**\n * Function that given an array as follows:\n * [x1, y1, .. , x2, y2, ..]\n *\n * Returns an array as follows:\n * [[x1, x2, ..], [y1, y2, ..], [ .. ]]\n *\n * And receives the number of dimensions of each coordinate.\n * @param array\n * @param dimensions\n * @returns {Array} - Matrix of coordinates\n */\nfunction coordArrayToCoordMatrix(array, dimensions) {\n    if(array.length % dimensions !== 0) {\n        throw new RangeError('Dimensions number must be accordance with the size of the array.');\n    }\n\n    var coordinatesArray = new Array(dimensions);\n    var points = array.length / dimensions;\n    for (var i = 0; i < coordinatesArray.length; i++) {\n        coordinatesArray[i] = new Array(points);\n    }\n\n    for(i = 0; i < array.length; i += dimensions) {\n        for(var j = 0; j < dimensions; ++j) {\n            var currentPoint = Math.floor(i / dimensions);\n            coordinatesArray[j][currentPoint] = array[i + j];\n        }\n    }\n\n    return coordinatesArray;\n}\n\n/**\n * Function that receives a coordinate matrix as follows:\n * [[x1, x2, ..], [y1, y2, ..], [ .. ]]\n *\n * Returns an array of coordinates as follows:\n * [x1, y1, .. , x2, y2, ..]\n *\n * @param coordMatrix\n * @returns {Array}\n */\nfunction coordMatrixToCoordArray(coordMatrix) {\n    var coodinatesArray = new Array(coordMatrix.length * coordMatrix[0].length);\n    var k = 0;\n    for(var i = 0; i < coordMatrix[0].length; ++i) {\n        for(var j = 0; j < coordMatrix.length; ++j) {\n            coodinatesArray[k] = coordMatrix[j][i];\n            ++k;\n        }\n    }\n\n    return coodinatesArray;\n}\n\n/**\n * Tranpose a matrix, this method is for coordMatrixToPoints and\n * pointsToCoordMatrix, that because only transposing the matrix\n * you can change your representation.\n *\n * @param matrix\n * @returns {Array}\n */\nfunction transpose(matrix) {\n    var resultMatrix = new Array(matrix[0].length);\n    for(var i = 0; i < resultMatrix.length; ++i) {\n        resultMatrix[i] = new Array(matrix.length);\n    }\n\n    for (i = 0; i < matrix.length; ++i) {\n        for(var j = 0; j < matrix[0].length; ++j) {\n            resultMatrix[j][i] = matrix[i][j];\n        }\n    }\n\n    return resultMatrix;\n}\n\n/**\n * Function that transform an array of points into a coordinates array\n * as follows:\n * [x1, y1, .. , x2, y2, ..]\n *\n * @param points\n * @returns {Array}\n */\nfunction pointsToCoordArray(points) {\n    var coodinatesArray = new Array(points.length * points[0].length);\n    var k = 0;\n    for(var i = 0; i < points.length; ++i) {\n        for(var j = 0; j < points[0].length; ++j) {\n            coodinatesArray[k] = points[i][j];\n            ++k;\n        }\n    }\n\n    return coodinatesArray;\n}\n\n/**\n * Apply the dot product between the smaller vector and a subsets of the\n * largest one.\n *\n * @param firstVector\n * @param secondVector\n * @returns {Array} each dot product of size of the difference between the\n *                  larger and the smallest one.\n */\nfunction applyDotProduct(firstVector, secondVector) {\n    var largestVector, smallestVector;\n    if(firstVector.length <= secondVector.length) {\n        smallestVector = firstVector;\n        largestVector = secondVector;\n    } else {\n        smallestVector = secondVector;\n        largestVector = firstVector;\n    }\n\n    var difference = largestVector.length - smallestVector.length + 1;\n    var dotProductApplied = new Array(difference);\n\n    for (var i = 0; i < difference; ++i) {\n        var sum = 0;\n        for (var j = 0; j < smallestVector.length; ++j) {\n            sum += smallestVector[j] * largestVector[i + j];\n        }\n        dotProductApplied[i] = sum;\n    }\n\n    return dotProductApplied;\n}\n/**\n * To scale the input array between the specified min and max values. The operation is performed inplace\n * if the options.inplace is specified. If only one of the min or max parameters is specified, then the scaling\n * will multiply the input array by min/min(input) or max/max(input)\n * @param input\n * @param options\n * @returns {*}\n */\nfunction scale(input, options){\n    var y;\n    if(options.inPlace){\n        y = input;\n    }\n    else{\n        y = new Array(input.length);\n    }\n    const max = options.max;\n    const min = options.min;\n    if(typeof max === \"number\"){\n        if(typeof min === \"number\"){\n            var minMax = Stat.minMax(input);\n            var factor = (max - min)/(minMax.max-minMax.min);\n            for(var i=0;i< y.length;i++){\n                y[i]=(input[i]-minMax.min)*factor+min;\n            }\n        }\n        else{\n            var currentMin = Stat.max(input);\n            var factor = max/currentMin;\n            for(var i=0;i< y.length;i++){\n                y[i] = input[i]*factor;\n            }\n        }\n    }\n    else{\n        if(typeof min === \"number\"){\n            var currentMin = Stat.min(input);\n            var factor = min/currentMin;\n            for(var i=0;i< y.length;i++){\n                y[i] = input[i]*factor;\n            }\n        }\n    }\n    return y;\n}\n\nmodule.exports = {\n    coordArrayToPoints: coordArrayToPoints,\n    coordArrayToCoordMatrix: coordArrayToCoordMatrix,\n    coordMatrixToCoordArray: coordMatrixToCoordArray,\n    coordMatrixToPoints: transpose,\n    pointsToCoordArray: pointsToCoordArray,\n    pointsToCoordMatrix: transpose,\n    applyDotProduct: applyDotProduct,\n    scale:scale\n};\n\n","'use strict';\n\nvar arrayStat = require('./array');\n\nfunction compareNumbers(a, b) {\n    return a - b;\n}\n\nexports.max = function max(matrix) {\n    var max = -Infinity;\n    for (var i = 0; i < matrix.length; i++) {\n        for (var j = 0; j < matrix[i].length; j++) {\n            if (matrix[i][j] > max) max = matrix[i][j];\n        }\n    }\n    return max;\n};\n\nexports.min = function min(matrix) {\n    var min = Infinity;\n    for (var i = 0; i < matrix.length; i++) {\n        for (var j = 0; j < matrix[i].length; j++) {\n            if (matrix[i][j] < min) min = matrix[i][j];\n        }\n    }\n    return min;\n};\n\nexports.minMax = function minMax(matrix) {\n    var min = Infinity;\n    var max = -Infinity;\n    for (var i = 0; i < matrix.length; i++) {\n        for (var j = 0; j < matrix[i].length; j++) {\n            if (matrix[i][j] < min) min = matrix[i][j];\n            if (matrix[i][j] > max) max = matrix[i][j];\n        }\n    }\n    return {\n        min:min,\n        max:max\n    };\n};\n\nexports.entropy = function entropy(matrix, eps) {\n    if (typeof (eps) === 'undefined') {\n        eps = 0;\n    }\n    var sum = 0,\n        l1 = matrix.length,\n        l2 = matrix[0].length;\n    for (var i = 0; i < l1; i++) {\n        for (var j = 0; j < l2; j++) {\n            sum += matrix[i][j] * Math.log(matrix[i][j] + eps);\n        }\n    }\n    return -sum;\n};\n\nexports.mean = function mean(matrix, dimension) {\n    if (typeof (dimension) === 'undefined') {\n        dimension = 0;\n    }\n    var rows = matrix.length,\n        cols = matrix[0].length,\n        theMean, N, i, j;\n\n    if (dimension === -1) {\n        theMean = [0];\n        N = rows * cols;\n        for (i = 0; i < rows; i++) {\n            for (j = 0; j < cols; j++) {\n                theMean[0] += matrix[i][j];\n            }\n        }\n        theMean[0] /= N;\n    } else if (dimension === 0) {\n        theMean = new Array(cols);\n        N = rows;\n        for (j = 0; j < cols; j++) {\n            theMean[j] = 0;\n            for (i = 0; i < rows; i++) {\n                theMean[j] += matrix[i][j];\n            }\n            theMean[j] /= N;\n        }\n    } else if (dimension === 1) {\n        theMean = new Array(rows);\n        N = cols;\n        for (j = 0; j < rows; j++) {\n            theMean[j] = 0;\n            for (i = 0; i < cols; i++) {\n                theMean[j] += matrix[j][i];\n            }\n            theMean[j] /= N;\n        }\n    } else {\n        throw new Error('Invalid dimension');\n    }\n    return theMean;\n};\n\nexports.sum = function sum(matrix, dimension) {\n    if (typeof (dimension) === 'undefined') {\n        dimension = 0;\n    }\n    var rows = matrix.length,\n        cols = matrix[0].length,\n        theSum, i, j;\n\n    if (dimension === -1) {\n        theSum = [0];\n        for (i = 0; i < rows; i++) {\n            for (j = 0; j < cols; j++) {\n                theSum[0] += matrix[i][j];\n            }\n        }\n    } else if (dimension === 0) {\n        theSum = new Array(cols);\n        for (j = 0; j < cols; j++) {\n            theSum[j] = 0;\n            for (i = 0; i < rows; i++) {\n                theSum[j] += matrix[i][j];\n            }\n        }\n    } else if (dimension === 1) {\n        theSum = new Array(rows);\n        for (j = 0; j < rows; j++) {\n            theSum[j] = 0;\n            for (i = 0; i < cols; i++) {\n                theSum[j] += matrix[j][i];\n            }\n        }\n    } else {\n        throw new Error('Invalid dimension');\n    }\n    return theSum;\n};\n\nexports.product = function product(matrix, dimension) {\n    if (typeof (dimension) === 'undefined') {\n        dimension = 0;\n    }\n    var rows = matrix.length,\n        cols = matrix[0].length,\n        theProduct, i, j;\n\n    if (dimension === -1) {\n        theProduct = [1];\n        for (i = 0; i < rows; i++) {\n            for (j = 0; j < cols; j++) {\n                theProduct[0] *= matrix[i][j];\n            }\n        }\n    } else if (dimension === 0) {\n        theProduct = new Array(cols);\n        for (j = 0; j < cols; j++) {\n            theProduct[j] = 1;\n            for (i = 0; i < rows; i++) {\n                theProduct[j] *= matrix[i][j];\n            }\n        }\n    } else if (dimension === 1) {\n        theProduct = new Array(rows);\n        for (j = 0; j < rows; j++) {\n            theProduct[j] = 1;\n            for (i = 0; i < cols; i++) {\n                theProduct[j] *= matrix[j][i];\n            }\n        }\n    } else {\n        throw new Error('Invalid dimension');\n    }\n    return theProduct;\n};\n\nexports.standardDeviation = function standardDeviation(matrix, means, unbiased) {\n    var vari = exports.variance(matrix, means, unbiased), l = vari.length;\n    for (var i = 0; i < l; i++) {\n        vari[i] = Math.sqrt(vari[i]);\n    }\n    return vari;\n};\n\nexports.variance = function variance(matrix, means, unbiased) {\n    if (typeof (unbiased) === 'undefined') {\n        unbiased = true;\n    }\n    means = means || exports.mean(matrix);\n    var rows = matrix.length;\n    if (rows === 0) return [];\n    var cols = matrix[0].length;\n    var vari = new Array(cols);\n\n    for (var j = 0; j < cols; j++) {\n        var sum1 = 0, sum2 = 0, x = 0;\n        for (var i = 0; i < rows; i++) {\n            x = matrix[i][j] - means[j];\n            sum1 += x;\n            sum2 += x * x;\n        }\n        if (unbiased) {\n            vari[j] = (sum2 - ((sum1 * sum1) / rows)) / (rows - 1);\n        } else {\n            vari[j] = (sum2 - ((sum1 * sum1) / rows)) / rows;\n        }\n    }\n    return vari;\n};\n\nexports.median = function median(matrix) {\n    var rows = matrix.length, cols = matrix[0].length;\n    var medians = new Array(cols);\n\n    for (var i = 0; i < cols; i++) {\n        var data = new Array(rows);\n        for (var j = 0; j < rows; j++) {\n            data[j] = matrix[j][i];\n        }\n        data.sort(compareNumbers);\n        var N = data.length;\n        if (N % 2 === 0) {\n            medians[i] = (data[N / 2] + data[(N / 2) - 1]) * 0.5;\n        } else {\n            medians[i] = data[Math.floor(N / 2)];\n        }\n    }\n    return medians;\n};\n\nexports.mode = function mode(matrix) {\n    var rows = matrix.length,\n        cols = matrix[0].length,\n        modes = new Array(cols),\n        i, j;\n    for (i = 0; i < cols; i++) {\n        var itemCount = new Array(rows);\n        for (var k = 0; k < rows; k++) {\n            itemCount[k] = 0;\n        }\n        var itemArray = new Array(rows);\n        var count = 0;\n\n        for (j = 0; j < rows; j++) {\n            var index = itemArray.indexOf(matrix[j][i]);\n            if (index >= 0) {\n                itemCount[index]++;\n            } else {\n                itemArray[count] = matrix[j][i];\n                itemCount[count] = 1;\n                count++;\n            }\n        }\n\n        var maxValue = 0, maxIndex = 0;\n        for (j = 0; j < count; j++) {\n            if (itemCount[j] > maxValue) {\n                maxValue = itemCount[j];\n                maxIndex = j;\n            }\n        }\n\n        modes[i] = itemArray[maxIndex];\n    }\n    return modes;\n};\n\nexports.skewness = function skewness(matrix, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var means = exports.mean(matrix);\n    var n = matrix.length, l = means.length;\n    var skew = new Array(l);\n\n    for (var j = 0; j < l; j++) {\n        var s2 = 0, s3 = 0;\n        for (var i = 0; i < n; i++) {\n            var dev = matrix[i][j] - means[j];\n            s2 += dev * dev;\n            s3 += dev * dev * dev;\n        }\n\n        var m2 = s2 / n;\n        var m3 = s3 / n;\n        var g = m3 / Math.pow(m2, 3 / 2);\n\n        if (unbiased) {\n            var a = Math.sqrt(n * (n - 1));\n            var b = n - 2;\n            skew[j] = (a / b) * g;\n        } else {\n            skew[j] = g;\n        }\n    }\n    return skew;\n};\n\nexports.kurtosis = function kurtosis(matrix, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var means = exports.mean(matrix);\n    var n = matrix.length, m = matrix[0].length;\n    var kurt = new Array(m);\n\n    for (var j = 0; j < m; j++) {\n        var s2 = 0, s4 = 0;\n        for (var i = 0; i < n; i++) {\n            var dev = matrix[i][j] - means[j];\n            s2 += dev * dev;\n            s4 += dev * dev * dev * dev;\n        }\n        var m2 = s2 / n;\n        var m4 = s4 / n;\n\n        if (unbiased) {\n            var v = s2 / (n - 1);\n            var a = (n * (n + 1)) / ((n - 1) * (n - 2) * (n - 3));\n            var b = s4 / (v * v);\n            var c = ((n - 1) * (n - 1)) / ((n - 2) * (n - 3));\n            kurt[j] = a * b - 3 * c;\n        } else {\n            kurt[j] = m4 / (m2 * m2) - 3;\n        }\n    }\n    return kurt;\n};\n\nexports.standardError = function standardError(matrix) {\n    var samples = matrix.length;\n    var standardDeviations = exports.standardDeviation(matrix);\n    var l = standardDeviations.length;\n    var standardErrors = new Array(l);\n    var sqrtN = Math.sqrt(samples);\n\n    for (var i = 0; i < l; i++) {\n        standardErrors[i] = standardDeviations[i] / sqrtN;\n    }\n    return standardErrors;\n};\n\nexports.covariance = function covariance(matrix, dimension) {\n    return exports.scatter(matrix, undefined, dimension);\n};\n\nexports.scatter = function scatter(matrix, divisor, dimension) {\n    if (typeof (dimension) === 'undefined') {\n        dimension = 0;\n    }\n    if (typeof (divisor) === 'undefined') {\n        if (dimension === 0) {\n            divisor = matrix.length - 1;\n        } else if (dimension === 1) {\n            divisor = matrix[0].length - 1;\n        }\n    }\n    var means = exports.mean(matrix, dimension);\n    var rows = matrix.length;\n    if (rows === 0) {\n        return [[]];\n    }\n    var cols = matrix[0].length,\n        cov, i, j, s, k;\n\n    if (dimension === 0) {\n        cov = new Array(cols);\n        for (i = 0; i < cols; i++) {\n            cov[i] = new Array(cols);\n        }\n        for (i = 0; i < cols; i++) {\n            for (j = i; j < cols; j++) {\n                s = 0;\n                for (k = 0; k < rows; k++) {\n                    s += (matrix[k][j] - means[j]) * (matrix[k][i] - means[i]);\n                }\n                s /= divisor;\n                cov[i][j] = s;\n                cov[j][i] = s;\n            }\n        }\n    } else if (dimension === 1) {\n        cov = new Array(rows);\n        for (i = 0; i < rows; i++) {\n            cov[i] = new Array(rows);\n        }\n        for (i = 0; i < rows; i++) {\n            for (j = i; j < rows; j++) {\n                s = 0;\n                for (k = 0; k < cols; k++) {\n                    s += (matrix[j][k] - means[j]) * (matrix[i][k] - means[i]);\n                }\n                s /= divisor;\n                cov[i][j] = s;\n                cov[j][i] = s;\n            }\n        }\n    } else {\n        throw new Error('Invalid dimension');\n    }\n\n    return cov;\n};\n\nexports.correlation = function correlation(matrix) {\n    var means = exports.mean(matrix),\n        standardDeviations = exports.standardDeviation(matrix, true, means),\n        scores = exports.zScores(matrix, means, standardDeviations),\n        rows = matrix.length,\n        cols = matrix[0].length,\n        i, j;\n\n    var cor = new Array(cols);\n    for (i = 0; i < cols; i++) {\n        cor[i] = new Array(cols);\n    }\n    for (i = 0; i < cols; i++) {\n        for (j = i; j < cols; j++) {\n            var c = 0;\n            for (var k = 0, l = scores.length; k < l; k++) {\n                c += scores[k][j] * scores[k][i];\n            }\n            c /= rows - 1;\n            cor[i][j] = c;\n            cor[j][i] = c;\n        }\n    }\n    return cor;\n};\n\nexports.zScores = function zScores(matrix, means, standardDeviations) {\n    means = means || exports.mean(matrix);\n    if (typeof (standardDeviations) === 'undefined') standardDeviations = exports.standardDeviation(matrix, true, means);\n    return exports.standardize(exports.center(matrix, means, false), standardDeviations, true);\n};\n\nexports.center = function center(matrix, means, inPlace) {\n    means = means || exports.mean(matrix);\n    var result = matrix,\n        l = matrix.length,\n        i, j, jj;\n\n    if (!inPlace) {\n        result = new Array(l);\n        for (i = 0; i < l; i++) {\n            result[i] = new Array(matrix[i].length);\n        }\n    }\n\n    for (i = 0; i < l; i++) {\n        var row = result[i];\n        for (j = 0, jj = row.length; j < jj; j++) {\n            row[j] = matrix[i][j] - means[j];\n        }\n    }\n    return result;\n};\n\nexports.standardize = function standardize(matrix, standardDeviations, inPlace) {\n    if (typeof (standardDeviations) === 'undefined') standardDeviations = exports.standardDeviation(matrix);\n    var result = matrix,\n        l = matrix.length,\n        i, j, jj;\n\n    if (!inPlace) {\n        result = new Array(l);\n        for (i = 0; i < l; i++) {\n            result[i] = new Array(matrix[i].length);\n        }\n    }\n\n    for (i = 0; i < l; i++) {\n        var resultRow = result[i];\n        var sourceRow = matrix[i];\n        for (j = 0, jj = resultRow.length; j < jj; j++) {\n            if (standardDeviations[j] !== 0 && !isNaN(standardDeviations[j])) {\n                resultRow[j] = sourceRow[j] / standardDeviations[j];\n            }\n        }\n    }\n    return result;\n};\n\nexports.weightedVariance = function weightedVariance(matrix, weights) {\n    var means = exports.mean(matrix);\n    var rows = matrix.length;\n    if (rows === 0) return [];\n    var cols = matrix[0].length;\n    var vari = new Array(cols);\n\n    for (var j = 0; j < cols; j++) {\n        var sum = 0;\n        var a = 0, b = 0;\n\n        for (var i = 0; i < rows; i++) {\n            var z = matrix[i][j] - means[j];\n            var w = weights[i];\n\n            sum += w * (z * z);\n            b += w;\n            a += w * w;\n        }\n\n        vari[j] = sum * (b / (b * b - a));\n    }\n\n    return vari;\n};\n\nexports.weightedMean = function weightedMean(matrix, weights, dimension) {\n    if (typeof (dimension) === 'undefined') {\n        dimension = 0;\n    }\n    var rows = matrix.length;\n    if (rows === 0) return [];\n    var cols = matrix[0].length,\n        means, i, ii, j, w, row;\n\n    if (dimension === 0) {\n        means = new Array(cols);\n        for (i = 0; i < cols; i++) {\n            means[i] = 0;\n        }\n        for (i = 0; i < rows; i++) {\n            row = matrix[i];\n            w = weights[i];\n            for (j = 0; j < cols; j++) {\n                means[j] += row[j] * w;\n            }\n        }\n    } else if (dimension === 1) {\n        means = new Array(rows);\n        for (i = 0; i < rows; i++) {\n            means[i] = 0;\n        }\n        for (j = 0; j < rows; j++) {\n            row = matrix[j];\n            w = weights[j];\n            for (i = 0; i < cols; i++) {\n                means[j] += row[i] * w;\n            }\n        }\n    } else {\n        throw new Error('Invalid dimension');\n    }\n\n    var weightSum = arrayStat.sum(weights);\n    if (weightSum !== 0) {\n        for (i = 0, ii = means.length; i < ii; i++) {\n            means[i] /= weightSum;\n        }\n    }\n    return means;\n};\n\nexports.weightedCovariance = function weightedCovariance(matrix, weights, means, dimension) {\n    dimension = dimension || 0;\n    means = means || exports.weightedMean(matrix, weights, dimension);\n    var s1 = 0, s2 = 0;\n    for (var i = 0, ii = weights.length; i < ii; i++) {\n        s1 += weights[i];\n        s2 += weights[i] * weights[i];\n    }\n    var factor = s1 / (s1 * s1 - s2);\n    return exports.weightedScatter(matrix, weights, means, factor, dimension);\n};\n\nexports.weightedScatter = function weightedScatter(matrix, weights, means, factor, dimension) {\n    dimension = dimension || 0;\n    means = means || exports.weightedMean(matrix, weights, dimension);\n    if (typeof (factor) === 'undefined') {\n        factor = 1;\n    }\n    var rows = matrix.length;\n    if (rows === 0) {\n        return [[]];\n    }\n    var cols = matrix[0].length,\n        cov, i, j, k, s;\n\n    if (dimension === 0) {\n        cov = new Array(cols);\n        for (i = 0; i < cols; i++) {\n            cov[i] = new Array(cols);\n        }\n        for (i = 0; i < cols; i++) {\n            for (j = i; j < cols; j++) {\n                s = 0;\n                for (k = 0; k < rows; k++) {\n                    s += weights[k] * (matrix[k][j] - means[j]) * (matrix[k][i] - means[i]);\n                }\n                cov[i][j] = s * factor;\n                cov[j][i] = s * factor;\n            }\n        }\n    } else if (dimension === 1) {\n        cov = new Array(rows);\n        for (i = 0; i < rows; i++) {\n            cov[i] = new Array(rows);\n        }\n        for (i = 0; i < rows; i++) {\n            for (j = i; j < rows; j++) {\n                s = 0;\n                for (k = 0; k < cols; k++) {\n                    s += weights[k] * (matrix[j][k] - means[j]) * (matrix[i][k] - means[i]);\n                }\n                cov[i][j] = s * factor;\n                cov[j][i] = s * factor;\n            }\n        }\n    } else {\n        throw new Error('Invalid dimension');\n    }\n\n    return cov;\n};\n","'use strict';\n\n/**\n *\n * Function that returns a Number array of equally spaced numberOfPoints\n * containing a representation of intensities of the spectra arguments x\n * and y.\n *\n * The options parameter contains an object in the following form:\n * from: starting point\n * to: last point\n * numberOfPoints: number of points between from and to\n * variant: \"slot\" or \"smooth\" - smooth is the default option\n *\n * The slot variant consist that each point in the new array is calculated\n * averaging the existing points between the slot that belongs to the current\n * value. The smooth variant is the same but takes the integral of the range\n * of the slot and divide by the step size between two points in the new array.\n *\n * @param x - sorted increasing x values\n * @param y\n * @param options\n * @returns {Array} new array with the equally spaced data.\n *\n */\nfunction getEquallySpacedData(x, y, options) {\n    if (x.length>1 && x[0]>x[1]) {\n        x=x.slice().reverse();\n        y=y.slice().reverse();\n    }\n\n    var xLength = x.length;\n    if(xLength !== y.length)\n        throw new RangeError(\"the x and y vector doesn't have the same size.\");\n\n    if (options === undefined) options = {};\n\n    var from = options.from === undefined ? x[0] : options.from\n    if (isNaN(from) || !isFinite(from)) {\n        throw new RangeError(\"'From' value must be a number\");\n    }\n    var to = options.to === undefined ? x[x.length - 1] : options.to;\n    if (isNaN(to) || !isFinite(to)) {\n        throw new RangeError(\"'To' value must be a number\");\n    }\n\n    var reverse = from > to;\n    if(reverse) {\n        var temp = from;\n        from = to;\n        to = temp;\n    }\n\n    var numberOfPoints = options.numberOfPoints === undefined ? 100 : options.numberOfPoints;\n    if (isNaN(numberOfPoints) || !isFinite(numberOfPoints)) {\n        throw new RangeError(\"'Number of points' value must be a number\");\n    }\n    if(numberOfPoints < 1)\n        throw new RangeError(\"the number of point must be higher than 1\");\n\n    var algorithm = options.variant === \"slot\" ? \"slot\" : \"smooth\"; // default value: smooth\n\n    var output = algorithm === \"slot\" ? getEquallySpacedSlot(x, y, from, to, numberOfPoints) : getEquallySpacedSmooth(x, y, from, to, numberOfPoints);\n\n    return reverse ? output.reverse() : output;\n}\n\n/**\n * function that retrieves the getEquallySpacedData with the variant \"smooth\"\n *\n * @param x\n * @param y\n * @param from - Initial point\n * @param to - Final point\n * @param numberOfPoints\n * @returns {Array} - Array of y's equally spaced with the variant \"smooth\"\n */\nfunction getEquallySpacedSmooth(x, y, from, to, numberOfPoints) {\n    var xLength = x.length;\n\n    var step = (to - from) / (numberOfPoints - 1);\n    var halfStep = step / 2;\n\n    var start = from - halfStep;\n    var output = new Array(numberOfPoints);\n\n    var initialOriginalStep = x[1] - x[0];\n    var lastOriginalStep = x[x.length - 1] - x[x.length - 2];\n\n    // Init main variables\n    var min = start;\n    var max = start + step;\n\n    var previousX = Number.MIN_VALUE;\n    var previousY = 0;\n    var nextX = x[0] - initialOriginalStep;\n    var nextY = 0;\n\n    var currentValue = 0;\n    var slope = 0;\n    var intercept = 0;\n    var sumAtMin = 0;\n    var sumAtMax = 0;\n\n    var i = 0; // index of input\n    var j = 0; // index of output\n\n    function getSlope(x0, y0, x1, y1) {\n        return (y1 - y0) / (x1 - x0);\n    }\n\n    main: while(true) {\n        while (nextX - max >= 0) {\n            // no overlap with original point, just consume current value\n            var add = integral(0, max - previousX, slope, previousY);\n            sumAtMax = currentValue + add;\n\n            output[j] = (sumAtMax - sumAtMin) / step;\n            j++;\n\n            if (j === numberOfPoints)\n                break main;\n\n            min = max;\n            max += step;\n            sumAtMin = sumAtMax;\n        }\n\n        if(previousX <= min && min <= nextX) {\n            add = integral(0, min - previousX, slope, previousY);\n            sumAtMin = currentValue + add;\n        }\n\n        currentValue += integral(previousX, nextX, slope, intercept);\n\n        previousX = nextX;\n        previousY = nextY;\n\n        if (i < xLength) {\n            nextX = x[i];\n            nextY = y[i];\n            i++;\n        } else if (i === xLength) {\n            nextX += lastOriginalStep;\n            nextY = 0;\n        }\n        // updating parameters\n        slope = getSlope(previousX, previousY, nextX, nextY);\n        intercept = -slope*previousX + previousY;\n    }\n\n    return output;\n}\n\n/**\n * function that retrieves the getEquallySpacedData with the variant \"slot\"\n *\n * @param x\n * @param y\n * @param from - Initial point\n * @param to - Final point\n * @param numberOfPoints\n * @returns {Array} - Array of y's equally spaced with the variant \"slot\"\n */\nfunction getEquallySpacedSlot(x, y, from, to, numberOfPoints) {\n    var xLength = x.length;\n\n    var step = (to - from) / (numberOfPoints - 1);\n    var halfStep = step / 2;\n    var lastStep = x[x.length - 1] - x[x.length - 2];\n\n    var start = from - halfStep;\n    var output = new Array(numberOfPoints);\n\n    // Init main variables\n    var min = start;\n    var max = start + step;\n\n    var previousX = -Number.MAX_VALUE;\n    var previousY = 0;\n    var nextX = x[0];\n    var nextY = y[0];\n    var frontOutsideSpectra = 0;\n    var backOutsideSpectra = true;\n\n    var currentValue = 0;\n\n    // for slot algorithm\n    var currentPoints = 0;\n\n    var i = 1; // index of input\n    var j = 0; // index of output\n\n    main: while(true) {\n        if (previousX>=nextX) throw (new Error('x must be an increasing serie'));\n        while (previousX - max > 0) {\n            // no overlap with original point, just consume current value\n            if(backOutsideSpectra) {\n                currentPoints++;\n                backOutsideSpectra = false;\n            }\n\n            output[j] = currentPoints <= 0 ? 0 : currentValue / currentPoints;\n            j++;\n\n            if (j === numberOfPoints)\n                break main;\n\n            min = max;\n            max += step;\n            currentValue = 0;\n            currentPoints = 0;\n        }\n\n        if(previousX > min) {\n            currentValue += previousY;\n            currentPoints++;\n        }\n\n        if(previousX === -Number.MAX_VALUE || frontOutsideSpectra > 1)\n            currentPoints--;\n\n        previousX = nextX;\n        previousY = nextY;\n\n        if (i < xLength) {\n            nextX = x[i];\n            nextY = y[i];\n            i++;\n        } else {\n            nextX += lastStep;\n            nextY = 0;\n            frontOutsideSpectra++;\n        }\n    }\n\n    return output;\n}\n/**\n * Function that calculates the integral of the line between two\n * x-coordinates, given the slope and intercept of the line.\n *\n * @param x0\n * @param x1\n * @param slope\n * @param intercept\n * @returns {number} integral value.\n */\nfunction integral(x0, x1, slope, intercept) {\n    return (0.5 * slope * x1 * x1 + intercept * x1) - (0.5 * slope * x0 * x0 + intercept * x0);\n}\n\nexports.getEquallySpacedData = getEquallySpacedData;\nexports.integral = integral;","'use strict';\n\nexports.SNV = SNV;\nvar Stat = require('ml-stat').array;\n\n/**\n * Function that applies the standard normal variate (SNV) to an array of values.\n *\n * @param data - Array of values.\n * @returns {Array} - applied the SNV.\n */\nfunction SNV(data) {\n    var mean = Stat.mean(data);\n    var std = Stat.standardDeviation(data);\n    var result = data.slice();\n    for (var i = 0; i < data.length; i++) {\n        result[i] = (result[i] - mean) / std;\n    }\n    return result;\n}\n","'use strict';\n\nvar BaseView = require('./base');\n\nclass MatrixTransposeView extends BaseView {\n    constructor(matrix) {\n        super(matrix, matrix.columns, matrix.rows);\n    }\n\n    set(rowIndex, columnIndex, value) {\n        this.matrix.set(columnIndex, rowIndex, value);\n        return this;\n    }\n\n    get(rowIndex, columnIndex) {\n        return this.matrix.get(columnIndex, rowIndex);\n    }\n}\n\nmodule.exports = MatrixTransposeView;\n","'use strict';\n\nvar BaseView = require('./base');\n\nclass MatrixRowView extends BaseView {\n    constructor(matrix, row) {\n        super(matrix, 1, matrix.columns);\n        this.row = row;\n    }\n\n    set(rowIndex, columnIndex, value) {\n        this.matrix.set(this.row, columnIndex, value);\n        return this;\n    }\n\n    get(rowIndex, columnIndex) {\n        return this.matrix.get(this.row, columnIndex);\n    }\n}\n\nmodule.exports = MatrixRowView;\n","'use strict';\n\nvar BaseView = require('./base');\nvar util = require('../util');\n\nclass MatrixSubView extends BaseView {\n    constructor(matrix, startRow, endRow, startColumn, endColumn) {\n        util.checkRange(matrix, startRow, endRow, startColumn, endColumn);\n        super(matrix, endRow - startRow + 1, endColumn - startColumn + 1);\n        this.startRow = startRow;\n        this.startColumn = startColumn;\n    }\n\n    set(rowIndex, columnIndex, value) {\n        this.matrix.set(this.startRow + rowIndex, this.startColumn + columnIndex, value);\n        return this;\n    }\n\n    get(rowIndex, columnIndex) {\n        return this.matrix.get(this.startRow + rowIndex, this.startColumn + columnIndex);\n    }\n}\n\nmodule.exports = MatrixSubView;\n","'use strict';\n\nvar BaseView = require('./base');\nvar util = require('../util');\n\nclass MatrixSelectionView extends BaseView {\n    constructor(matrix, rowIndices, columnIndices) {\n        var indices = util.checkIndices(matrix, rowIndices, columnIndices);\n        super(matrix, indices.row.length, indices.column.length);\n        this.rowIndices = indices.row;\n        this.columnIndices = indices.column;\n    }\n\n    set(rowIndex, columnIndex, value) {\n        this.matrix.set(this.rowIndices[rowIndex], this.columnIndices[columnIndex], value);\n        return this;\n    }\n\n    get(rowIndex, columnIndex) {\n        return this.matrix.get(this.rowIndices[rowIndex], this.columnIndices[columnIndex]);\n    }\n}\n\nmodule.exports = MatrixSelectionView;\n","'use strict';\n\nvar BaseView = require('./base');\n\nclass MatrixColumnView extends BaseView {\n    constructor(matrix, column) {\n        super(matrix, matrix.rows, 1);\n        this.column = column;\n    }\n\n    set(rowIndex, columnIndex, value) {\n        this.matrix.set(rowIndex, this.column, value);\n        return this;\n    }\n\n    get(rowIndex) {\n        return this.matrix.get(rowIndex, this.column);\n    }\n}\n\nmodule.exports = MatrixColumnView;\n","'use strict';\n\nvar BaseView = require('./base');\n\nclass MatrixFlipRowView extends BaseView {\n    constructor(matrix) {\n        super(matrix, matrix.rows, matrix.columns);\n    }\n\n    set(rowIndex, columnIndex, value) {\n        this.matrix.set(this.rows - rowIndex - 1, columnIndex, value);\n        return this;\n    }\n\n    get(rowIndex, columnIndex) {\n        return this.matrix.get(this.rows - rowIndex - 1, columnIndex);\n    }\n}\n\nmodule.exports = MatrixFlipRowView;\n","'use strict';\n\nvar BaseView = require('./base');\n\nclass MatrixFlipColumnView extends BaseView {\n    constructor(matrix) {\n        super(matrix, matrix.rows, matrix.columns);\n    }\n\n    set(rowIndex, columnIndex, value) {\n        this.matrix.set(rowIndex, this.columns - columnIndex - 1, value);\n        return this;\n    }\n\n    get(rowIndex, columnIndex) {\n        return this.matrix.get(rowIndex, this.columns - columnIndex - 1);\n    }\n}\n\nmodule.exports = MatrixFlipColumnView;\n","'use strict';\n\nvar Matrix = require('./matrix').Matrix;\n\nvar SingularValueDecomposition = require('./dc/svd');\nvar EigenvalueDecomposition = require('./dc/evd');\nvar LuDecomposition = require('./dc/lu');\nvar QrDecomposition = require('./dc/qr');\nvar CholeskyDecomposition = require('./dc/cholesky');\n\nfunction inverse(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    return solve(matrix, Matrix.eye(matrix.rows));\n}\n\n/**\n * Returns the inverse\n * @memberOf Matrix\n * @static\n * @param {Matrix} matrix\n * @return {Matrix} matrix\n * @alias inv\n */\nMatrix.inverse = Matrix.inv = inverse;\n\n/**\n * Returns the inverse\n * @memberOf Matrix\n * @static\n * @param {Matrix} matrix\n * @return {Matrix} matrix\n * @alias inv\n */\nMatrix.prototype.inverse = Matrix.prototype.inv = function () {\n    return inverse(this);\n};\n\nfunction solve(leftHandSide, rightHandSide) {\n    leftHandSide = Matrix.checkMatrix(leftHandSide);\n    rightHandSide = Matrix.checkMatrix(rightHandSide);\n    return leftHandSide.isSquare() ? new LuDecomposition(leftHandSide).solve(rightHandSide) : new QrDecomposition(leftHandSide).solve(rightHandSide);\n}\n\nMatrix.solve = solve;\nMatrix.prototype.solve = function (other) {\n    return solve(this, other);\n};\n\nmodule.exports = {\n    SingularValueDecomposition: SingularValueDecomposition,\n    SVD: SingularValueDecomposition,\n    EigenvalueDecomposition: EigenvalueDecomposition,\n    EVD: EigenvalueDecomposition,\n    LuDecomposition: LuDecomposition,\n    LU: LuDecomposition,\n    QrDecomposition: QrDecomposition,\n    QR: QrDecomposition,\n    CholeskyDecomposition: CholeskyDecomposition,\n    CHO: CholeskyDecomposition,\n    inverse: inverse,\n    solve: solve\n};\n","'use strict';\n\nconst Matrix = require('../matrix').Matrix;\nconst util = require('./util');\nconst hypotenuse = util.hypotenuse;\nconst getFilled2DArray = util.getFilled2DArray;\n\nconst defaultOptions = {\n    assumeSymmetric: false\n};\n\n// https://github.com/lutzroeder/Mapack/blob/master/Source/EigenvalueDecomposition.cs\nfunction EigenvalueDecomposition(matrix, options) {\n    options = Object.assign({}, defaultOptions, options);\n    if (!(this instanceof EigenvalueDecomposition)) {\n        return new EigenvalueDecomposition(matrix, options);\n    }\n    matrix = Matrix.checkMatrix(matrix);\n    if (!matrix.isSquare()) {\n        throw new Error('Matrix is not a square matrix');\n    }\n\n    var n = matrix.columns,\n        V = getFilled2DArray(n, n, 0),\n        d = new Array(n),\n        e = new Array(n),\n        value = matrix,\n        i, j;\n\n    var isSymmetric = false;\n    if (options.assumeSymmetric) {\n        isSymmetric = true;\n    } else {\n        isSymmetric = matrix.isSymmetric();\n    }\n\n    if (isSymmetric) {\n        for (i = 0; i < n; i++) {\n            for (j = 0; j < n; j++) {\n                V[i][j] = value.get(i, j);\n            }\n        }\n        tred2(n, e, d, V);\n        tql2(n, e, d, V);\n    } else {\n        var H = getFilled2DArray(n, n, 0),\n            ort = new Array(n);\n        for (j = 0; j < n; j++) {\n            for (i = 0; i < n; i++) {\n                H[i][j] = value.get(i, j);\n            }\n        }\n        orthes(n, H, ort, V);\n        hqr2(n, e, d, V, H);\n    }\n\n    this.n = n;\n    this.e = e;\n    this.d = d;\n    this.V = V;\n}\n\nEigenvalueDecomposition.prototype = {\n    get realEigenvalues() {\n        return this.d;\n    },\n    get imaginaryEigenvalues() {\n        return this.e;\n    },\n    get eigenvectorMatrix() {\n        if (!Matrix.isMatrix(this.V)) {\n            this.V = new Matrix(this.V);\n        }\n        return this.V;\n    },\n    get diagonalMatrix() {\n        var n = this.n,\n            e = this.e,\n            d = this.d,\n            X = new Matrix(n, n),\n            i, j;\n        for (i = 0; i < n; i++) {\n            for (j = 0; j < n; j++) {\n                X[i][j] = 0;\n            }\n            X[i][i] = d[i];\n            if (e[i] > 0) {\n                X[i][i + 1] = e[i];\n            } else if (e[i] < 0) {\n                X[i][i - 1] = e[i];\n            }\n        }\n        return X;\n    }\n};\n\nfunction tred2(n, e, d, V) {\n\n    var f, g, h, i, j, k,\n        hh, scale;\n\n    for (j = 0; j < n; j++) {\n        d[j] = V[n - 1][j];\n    }\n\n    for (i = n - 1; i > 0; i--) {\n        scale = 0;\n        h = 0;\n        for (k = 0; k < i; k++) {\n            scale = scale + Math.abs(d[k]);\n        }\n\n        if (scale === 0) {\n            e[i] = d[i - 1];\n            for (j = 0; j < i; j++) {\n                d[j] = V[i - 1][j];\n                V[i][j] = 0;\n                V[j][i] = 0;\n            }\n        } else {\n            for (k = 0; k < i; k++) {\n                d[k] /= scale;\n                h += d[k] * d[k];\n            }\n\n            f = d[i - 1];\n            g = Math.sqrt(h);\n            if (f > 0) {\n                g = -g;\n            }\n\n            e[i] = scale * g;\n            h = h - f * g;\n            d[i - 1] = f - g;\n            for (j = 0; j < i; j++) {\n                e[j] = 0;\n            }\n\n            for (j = 0; j < i; j++) {\n                f = d[j];\n                V[j][i] = f;\n                g = e[j] + V[j][j] * f;\n                for (k = j + 1; k <= i - 1; k++) {\n                    g += V[k][j] * d[k];\n                    e[k] += V[k][j] * f;\n                }\n                e[j] = g;\n            }\n\n            f = 0;\n            for (j = 0; j < i; j++) {\n                e[j] /= h;\n                f += e[j] * d[j];\n            }\n\n            hh = f / (h + h);\n            for (j = 0; j < i; j++) {\n                e[j] -= hh * d[j];\n            }\n\n            for (j = 0; j < i; j++) {\n                f = d[j];\n                g = e[j];\n                for (k = j; k <= i - 1; k++) {\n                    V[k][j] -= (f * e[k] + g * d[k]);\n                }\n                d[j] = V[i - 1][j];\n                V[i][j] = 0;\n            }\n        }\n        d[i] = h;\n    }\n\n    for (i = 0; i < n - 1; i++) {\n        V[n - 1][i] = V[i][i];\n        V[i][i] = 1;\n        h = d[i + 1];\n        if (h !== 0) {\n            for (k = 0; k <= i; k++) {\n                d[k] = V[k][i + 1] / h;\n            }\n\n            for (j = 0; j <= i; j++) {\n                g = 0;\n                for (k = 0; k <= i; k++) {\n                    g += V[k][i + 1] * V[k][j];\n                }\n                for (k = 0; k <= i; k++) {\n                    V[k][j] -= g * d[k];\n                }\n            }\n        }\n\n        for (k = 0; k <= i; k++) {\n            V[k][i + 1] = 0;\n        }\n    }\n\n    for (j = 0; j < n; j++) {\n        d[j] = V[n - 1][j];\n        V[n - 1][j] = 0;\n    }\n\n    V[n - 1][n - 1] = 1;\n    e[0] = 0;\n}\n\nfunction tql2(n, e, d, V) {\n\n    var g, h, i, j, k, l, m, p, r,\n        dl1, c, c2, c3, el1, s, s2,\n        iter;\n\n    for (i = 1; i < n; i++) {\n        e[i - 1] = e[i];\n    }\n\n    e[n - 1] = 0;\n\n    var f = 0,\n        tst1 = 0,\n        eps = Math.pow(2, -52);\n\n    for (l = 0; l < n; l++) {\n        tst1 = Math.max(tst1, Math.abs(d[l]) + Math.abs(e[l]));\n        m = l;\n        while (m < n) {\n            if (Math.abs(e[m]) <= eps * tst1) {\n                break;\n            }\n            m++;\n        }\n\n        if (m > l) {\n            iter = 0;\n            do {\n                iter = iter + 1;\n\n                g = d[l];\n                p = (d[l + 1] - g) / (2 * e[l]);\n                r = hypotenuse(p, 1);\n                if (p < 0) {\n                    r = -r;\n                }\n\n                d[l] = e[l] / (p + r);\n                d[l + 1] = e[l] * (p + r);\n                dl1 = d[l + 1];\n                h = g - d[l];\n                for (i = l + 2; i < n; i++) {\n                    d[i] -= h;\n                }\n\n                f = f + h;\n\n                p = d[m];\n                c = 1;\n                c2 = c;\n                c3 = c;\n                el1 = e[l + 1];\n                s = 0;\n                s2 = 0;\n                for (i = m - 1; i >= l; i--) {\n                    c3 = c2;\n                    c2 = c;\n                    s2 = s;\n                    g = c * e[i];\n                    h = c * p;\n                    r = hypotenuse(p, e[i]);\n                    e[i + 1] = s * r;\n                    s = e[i] / r;\n                    c = p / r;\n                    p = c * d[i] - s * g;\n                    d[i + 1] = h + s * (c * g + s * d[i]);\n\n                    for (k = 0; k < n; k++) {\n                        h = V[k][i + 1];\n                        V[k][i + 1] = s * V[k][i] + c * h;\n                        V[k][i] = c * V[k][i] - s * h;\n                    }\n                }\n\n                p = -s * s2 * c3 * el1 * e[l] / dl1;\n                e[l] = s * p;\n                d[l] = c * p;\n\n            }\n            while (Math.abs(e[l]) > eps * tst1);\n        }\n        d[l] = d[l] + f;\n        e[l] = 0;\n    }\n\n    for (i = 0; i < n - 1; i++) {\n        k = i;\n        p = d[i];\n        for (j = i + 1; j < n; j++) {\n            if (d[j] < p) {\n                k = j;\n                p = d[j];\n            }\n        }\n\n        if (k !== i) {\n            d[k] = d[i];\n            d[i] = p;\n            for (j = 0; j < n; j++) {\n                p = V[j][i];\n                V[j][i] = V[j][k];\n                V[j][k] = p;\n            }\n        }\n    }\n}\n\nfunction orthes(n, H, ort, V) {\n\n    var low = 0,\n        high = n - 1,\n        f, g, h, i, j, m,\n        scale;\n\n    for (m = low + 1; m <= high - 1; m++) {\n        scale = 0;\n        for (i = m; i <= high; i++) {\n            scale = scale + Math.abs(H[i][m - 1]);\n        }\n\n        if (scale !== 0) {\n            h = 0;\n            for (i = high; i >= m; i--) {\n                ort[i] = H[i][m - 1] / scale;\n                h += ort[i] * ort[i];\n            }\n\n            g = Math.sqrt(h);\n            if (ort[m] > 0) {\n                g = -g;\n            }\n\n            h = h - ort[m] * g;\n            ort[m] = ort[m] - g;\n\n            for (j = m; j < n; j++) {\n                f = 0;\n                for (i = high; i >= m; i--) {\n                    f += ort[i] * H[i][j];\n                }\n\n                f = f / h;\n                for (i = m; i <= high; i++) {\n                    H[i][j] -= f * ort[i];\n                }\n            }\n\n            for (i = 0; i <= high; i++) {\n                f = 0;\n                for (j = high; j >= m; j--) {\n                    f += ort[j] * H[i][j];\n                }\n\n                f = f / h;\n                for (j = m; j <= high; j++) {\n                    H[i][j] -= f * ort[j];\n                }\n            }\n\n            ort[m] = scale * ort[m];\n            H[m][m - 1] = scale * g;\n        }\n    }\n\n    for (i = 0; i < n; i++) {\n        for (j = 0; j < n; j++) {\n            V[i][j] = (i === j ? 1 : 0);\n        }\n    }\n\n    for (m = high - 1; m >= low + 1; m--) {\n        if (H[m][m - 1] !== 0) {\n            for (i = m + 1; i <= high; i++) {\n                ort[i] = H[i][m - 1];\n            }\n\n            for (j = m; j <= high; j++) {\n                g = 0;\n                for (i = m; i <= high; i++) {\n                    g += ort[i] * V[i][j];\n                }\n\n                g = (g / ort[m]) / H[m][m - 1];\n                for (i = m; i <= high; i++) {\n                    V[i][j] += g * ort[i];\n                }\n            }\n        }\n    }\n}\n\nfunction hqr2(nn, e, d, V, H) {\n    var n = nn - 1,\n        low = 0,\n        high = nn - 1,\n        eps = Math.pow(2, -52),\n        exshift = 0,\n        norm = 0,\n        p = 0,\n        q = 0,\n        r = 0,\n        s = 0,\n        z = 0,\n        iter = 0,\n        i, j, k, l, m, t, w, x, y,\n        ra, sa, vr, vi,\n        notlast, cdivres;\n\n    for (i = 0; i < nn; i++) {\n        if (i < low || i > high) {\n            d[i] = H[i][i];\n            e[i] = 0;\n        }\n\n        for (j = Math.max(i - 1, 0); j < nn; j++) {\n            norm = norm + Math.abs(H[i][j]);\n        }\n    }\n\n    while (n >= low) {\n        l = n;\n        while (l > low) {\n            s = Math.abs(H[l - 1][l - 1]) + Math.abs(H[l][l]);\n            if (s === 0) {\n                s = norm;\n            }\n            if (Math.abs(H[l][l - 1]) < eps * s) {\n                break;\n            }\n            l--;\n        }\n\n        if (l === n) {\n            H[n][n] = H[n][n] + exshift;\n            d[n] = H[n][n];\n            e[n] = 0;\n            n--;\n            iter = 0;\n        } else if (l === n - 1) {\n            w = H[n][n - 1] * H[n - 1][n];\n            p = (H[n - 1][n - 1] - H[n][n]) / 2;\n            q = p * p + w;\n            z = Math.sqrt(Math.abs(q));\n            H[n][n] = H[n][n] + exshift;\n            H[n - 1][n - 1] = H[n - 1][n - 1] + exshift;\n            x = H[n][n];\n\n            if (q >= 0) {\n                z = (p >= 0) ? (p + z) : (p - z);\n                d[n - 1] = x + z;\n                d[n] = d[n - 1];\n                if (z !== 0) {\n                    d[n] = x - w / z;\n                }\n                e[n - 1] = 0;\n                e[n] = 0;\n                x = H[n][n - 1];\n                s = Math.abs(x) + Math.abs(z);\n                p = x / s;\n                q = z / s;\n                r = Math.sqrt(p * p + q * q);\n                p = p / r;\n                q = q / r;\n\n                for (j = n - 1; j < nn; j++) {\n                    z = H[n - 1][j];\n                    H[n - 1][j] = q * z + p * H[n][j];\n                    H[n][j] = q * H[n][j] - p * z;\n                }\n\n                for (i = 0; i <= n; i++) {\n                    z = H[i][n - 1];\n                    H[i][n - 1] = q * z + p * H[i][n];\n                    H[i][n] = q * H[i][n] - p * z;\n                }\n\n                for (i = low; i <= high; i++) {\n                    z = V[i][n - 1];\n                    V[i][n - 1] = q * z + p * V[i][n];\n                    V[i][n] = q * V[i][n] - p * z;\n                }\n            } else {\n                d[n - 1] = x + p;\n                d[n] = x + p;\n                e[n - 1] = z;\n                e[n] = -z;\n            }\n\n            n = n - 2;\n            iter = 0;\n        } else {\n            x = H[n][n];\n            y = 0;\n            w = 0;\n            if (l < n) {\n                y = H[n - 1][n - 1];\n                w = H[n][n - 1] * H[n - 1][n];\n            }\n\n            if (iter === 10) {\n                exshift += x;\n                for (i = low; i <= n; i++) {\n                    H[i][i] -= x;\n                }\n                s = Math.abs(H[n][n - 1]) + Math.abs(H[n - 1][n - 2]);\n                x = y = 0.75 * s;\n                w = -0.4375 * s * s;\n            }\n\n            if (iter === 30) {\n                s = (y - x) / 2;\n                s = s * s + w;\n                if (s > 0) {\n                    s = Math.sqrt(s);\n                    if (y < x) {\n                        s = -s;\n                    }\n                    s = x - w / ((y - x) / 2 + s);\n                    for (i = low; i <= n; i++) {\n                        H[i][i] -= s;\n                    }\n                    exshift += s;\n                    x = y = w = 0.964;\n                }\n            }\n\n            iter = iter + 1;\n\n            m = n - 2;\n            while (m >= l) {\n                z = H[m][m];\n                r = x - z;\n                s = y - z;\n                p = (r * s - w) / H[m + 1][m] + H[m][m + 1];\n                q = H[m + 1][m + 1] - z - r - s;\n                r = H[m + 2][m + 1];\n                s = Math.abs(p) + Math.abs(q) + Math.abs(r);\n                p = p / s;\n                q = q / s;\n                r = r / s;\n                if (m === l) {\n                    break;\n                }\n                if (Math.abs(H[m][m - 1]) * (Math.abs(q) + Math.abs(r)) < eps * (Math.abs(p) * (Math.abs(H[m - 1][m - 1]) + Math.abs(z) + Math.abs(H[m + 1][m + 1])))) {\n                    break;\n                }\n                m--;\n            }\n\n            for (i = m + 2; i <= n; i++) {\n                H[i][i - 2] = 0;\n                if (i > m + 2) {\n                    H[i][i - 3] = 0;\n                }\n            }\n\n            for (k = m; k <= n - 1; k++) {\n                notlast = (k !== n - 1);\n                if (k !== m) {\n                    p = H[k][k - 1];\n                    q = H[k + 1][k - 1];\n                    r = (notlast ? H[k + 2][k - 1] : 0);\n                    x = Math.abs(p) + Math.abs(q) + Math.abs(r);\n                    if (x !== 0) {\n                        p = p / x;\n                        q = q / x;\n                        r = r / x;\n                    }\n                }\n\n                if (x === 0) {\n                    break;\n                }\n\n                s = Math.sqrt(p * p + q * q + r * r);\n                if (p < 0) {\n                    s = -s;\n                }\n\n                if (s !== 0) {\n                    if (k !== m) {\n                        H[k][k - 1] = -s * x;\n                    } else if (l !== m) {\n                        H[k][k - 1] = -H[k][k - 1];\n                    }\n\n                    p = p + s;\n                    x = p / s;\n                    y = q / s;\n                    z = r / s;\n                    q = q / p;\n                    r = r / p;\n\n                    for (j = k; j < nn; j++) {\n                        p = H[k][j] + q * H[k + 1][j];\n                        if (notlast) {\n                            p = p + r * H[k + 2][j];\n                            H[k + 2][j] = H[k + 2][j] - p * z;\n                        }\n\n                        H[k][j] = H[k][j] - p * x;\n                        H[k + 1][j] = H[k + 1][j] - p * y;\n                    }\n\n                    for (i = 0; i <= Math.min(n, k + 3); i++) {\n                        p = x * H[i][k] + y * H[i][k + 1];\n                        if (notlast) {\n                            p = p + z * H[i][k + 2];\n                            H[i][k + 2] = H[i][k + 2] - p * r;\n                        }\n\n                        H[i][k] = H[i][k] - p;\n                        H[i][k + 1] = H[i][k + 1] - p * q;\n                    }\n\n                    for (i = low; i <= high; i++) {\n                        p = x * V[i][k] + y * V[i][k + 1];\n                        if (notlast) {\n                            p = p + z * V[i][k + 2];\n                            V[i][k + 2] = V[i][k + 2] - p * r;\n                        }\n\n                        V[i][k] = V[i][k] - p;\n                        V[i][k + 1] = V[i][k + 1] - p * q;\n                    }\n                }\n            }\n        }\n    }\n\n    if (norm === 0) {\n        return;\n    }\n\n    for (n = nn - 1; n >= 0; n--) {\n        p = d[n];\n        q = e[n];\n\n        if (q === 0) {\n            l = n;\n            H[n][n] = 1;\n            for (i = n - 1; i >= 0; i--) {\n                w = H[i][i] - p;\n                r = 0;\n                for (j = l; j <= n; j++) {\n                    r = r + H[i][j] * H[j][n];\n                }\n\n                if (e[i] < 0) {\n                    z = w;\n                    s = r;\n                } else {\n                    l = i;\n                    if (e[i] === 0) {\n                        H[i][n] = (w !== 0) ? (-r / w) : (-r / (eps * norm));\n                    } else {\n                        x = H[i][i + 1];\n                        y = H[i + 1][i];\n                        q = (d[i] - p) * (d[i] - p) + e[i] * e[i];\n                        t = (x * s - z * r) / q;\n                        H[i][n] = t;\n                        H[i + 1][n] = (Math.abs(x) > Math.abs(z)) ? ((-r - w * t) / x) : ((-s - y * t) / z);\n                    }\n\n                    t = Math.abs(H[i][n]);\n                    if ((eps * t) * t > 1) {\n                        for (j = i; j <= n; j++) {\n                            H[j][n] = H[j][n] / t;\n                        }\n                    }\n                }\n            }\n        } else if (q < 0) {\n            l = n - 1;\n\n            if (Math.abs(H[n][n - 1]) > Math.abs(H[n - 1][n])) {\n                H[n - 1][n - 1] = q / H[n][n - 1];\n                H[n - 1][n] = -(H[n][n] - p) / H[n][n - 1];\n            } else {\n                cdivres = cdiv(0, -H[n - 1][n], H[n - 1][n - 1] - p, q);\n                H[n - 1][n - 1] = cdivres[0];\n                H[n - 1][n] = cdivres[1];\n            }\n\n            H[n][n - 1] = 0;\n            H[n][n] = 1;\n            for (i = n - 2; i >= 0; i--) {\n                ra = 0;\n                sa = 0;\n                for (j = l; j <= n; j++) {\n                    ra = ra + H[i][j] * H[j][n - 1];\n                    sa = sa + H[i][j] * H[j][n];\n                }\n\n                w = H[i][i] - p;\n\n                if (e[i] < 0) {\n                    z = w;\n                    r = ra;\n                    s = sa;\n                } else {\n                    l = i;\n                    if (e[i] === 0) {\n                        cdivres = cdiv(-ra, -sa, w, q);\n                        H[i][n - 1] = cdivres[0];\n                        H[i][n] = cdivres[1];\n                    } else {\n                        x = H[i][i + 1];\n                        y = H[i + 1][i];\n                        vr = (d[i] - p) * (d[i] - p) + e[i] * e[i] - q * q;\n                        vi = (d[i] - p) * 2 * q;\n                        if (vr === 0 && vi === 0) {\n                            vr = eps * norm * (Math.abs(w) + Math.abs(q) + Math.abs(x) + Math.abs(y) + Math.abs(z));\n                        }\n                        cdivres = cdiv(x * r - z * ra + q * sa, x * s - z * sa - q * ra, vr, vi);\n                        H[i][n - 1] = cdivres[0];\n                        H[i][n] = cdivres[1];\n                        if (Math.abs(x) > (Math.abs(z) + Math.abs(q))) {\n                            H[i + 1][n - 1] = (-ra - w * H[i][n - 1] + q * H[i][n]) / x;\n                            H[i + 1][n] = (-sa - w * H[i][n] - q * H[i][n - 1]) / x;\n                        } else {\n                            cdivres = cdiv(-r - y * H[i][n - 1], -s - y * H[i][n], z, q);\n                            H[i + 1][n - 1] = cdivres[0];\n                            H[i + 1][n] = cdivres[1];\n                        }\n                    }\n\n                    t = Math.max(Math.abs(H[i][n - 1]), Math.abs(H[i][n]));\n                    if ((eps * t) * t > 1) {\n                        for (j = i; j <= n; j++) {\n                            H[j][n - 1] = H[j][n - 1] / t;\n                            H[j][n] = H[j][n] / t;\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    for (i = 0; i < nn; i++) {\n        if (i < low || i > high) {\n            for (j = i; j < nn; j++) {\n                V[i][j] = H[i][j];\n            }\n        }\n    }\n\n    for (j = nn - 1; j >= low; j--) {\n        for (i = low; i <= high; i++) {\n            z = 0;\n            for (k = low; k <= Math.min(j, high); k++) {\n                z = z + V[i][k] * H[k][j];\n            }\n            V[i][j] = z;\n        }\n    }\n}\n\nfunction cdiv(xr, xi, yr, yi) {\n    var r, d;\n    if (Math.abs(yr) > Math.abs(yi)) {\n        r = yi / yr;\n        d = yr + r * yi;\n        return [(xr + r * xi) / d, (xi - r * xr) / d];\n    } else {\n        r = yr / yi;\n        d = yi + r * yr;\n        return [(r * xr + xi) / d, (r * xi - xr) / d];\n    }\n}\n\nmodule.exports = EigenvalueDecomposition;\n","'use strict';\n\nvar Matrix = require('../matrix').Matrix;\nvar hypotenuse = require('./util').hypotenuse;\n\n//https://github.com/lutzroeder/Mapack/blob/master/Source/QrDecomposition.cs\nfunction QrDecomposition(value) {\n    if (!(this instanceof QrDecomposition)) {\n        return new QrDecomposition(value);\n    }\n    value = Matrix.checkMatrix(value);\n\n    var qr = value.clone(),\n        m = value.rows,\n        n = value.columns,\n        rdiag = new Array(n),\n        i, j, k, s;\n\n    for (k = 0; k < n; k++) {\n        var nrm = 0;\n        for (i = k; i < m; i++) {\n            nrm = hypotenuse(nrm, qr[i][k]);\n        }\n        if (nrm !== 0) {\n            if (qr[k][k] < 0) {\n                nrm = -nrm;\n            }\n            for (i = k; i < m; i++) {\n                qr[i][k] /= nrm;\n            }\n            qr[k][k] += 1;\n            for (j = k + 1; j < n; j++) {\n                s = 0;\n                for (i = k; i < m; i++) {\n                    s += qr[i][k] * qr[i][j];\n                }\n                s = -s / qr[k][k];\n                for (i = k; i < m; i++) {\n                    qr[i][j] += s * qr[i][k];\n                }\n            }\n        }\n        rdiag[k] = -nrm;\n    }\n\n    this.QR = qr;\n    this.Rdiag = rdiag;\n}\n\nQrDecomposition.prototype = {\n    solve: function (value) {\n        value = Matrix.checkMatrix(value);\n\n        var qr = this.QR,\n            m = qr.rows;\n\n        if (value.rows !== m) {\n            throw new Error('Matrix row dimensions must agree');\n        }\n        if (!this.isFullRank()) {\n            throw new Error('Matrix is rank deficient');\n        }\n\n        var count = value.columns;\n        var X = value.clone();\n        var n = qr.columns;\n        var i, j, k, s;\n\n        for (k = 0; k < n; k++) {\n            for (j = 0; j < count; j++) {\n                s = 0;\n                for (i = k; i < m; i++) {\n                    s += qr[i][k] * X[i][j];\n                }\n                s = -s / qr[k][k];\n                for (i = k; i < m; i++) {\n                    X[i][j] += s * qr[i][k];\n                }\n            }\n        }\n        for (k = n - 1; k >= 0; k--) {\n            for (j = 0; j < count; j++) {\n                X[k][j] /= this.Rdiag[k];\n            }\n            for (i = 0; i < k; i++) {\n                for (j = 0; j < count; j++) {\n                    X[i][j] -= X[k][j] * qr[i][k];\n                }\n            }\n        }\n\n        return X.subMatrix(0, n - 1, 0, count - 1);\n    },\n    isFullRank: function () {\n        var columns = this.QR.columns;\n        for (var i = 0; i < columns; i++) {\n            if (this.Rdiag[i] === 0) {\n                return false;\n            }\n        }\n        return true;\n    },\n    get upperTriangularMatrix() {\n        var qr = this.QR,\n            n = qr.columns,\n            X = new Matrix(n, n),\n            i, j;\n        for (i = 0; i < n; i++) {\n            for (j = 0; j < n; j++) {\n                if (i < j) {\n                    X[i][j] = qr[i][j];\n                } else if (i === j) {\n                    X[i][j] = this.Rdiag[i];\n                } else {\n                    X[i][j] = 0;\n                }\n            }\n        }\n        return X;\n    },\n    get orthogonalMatrix() {\n        var qr = this.QR,\n            rows = qr.rows,\n            columns = qr.columns,\n            X = new Matrix(rows, columns),\n            i, j, k, s;\n\n        for (k = columns - 1; k >= 0; k--) {\n            for (i = 0; i < rows; i++) {\n                X[i][k] = 0;\n            }\n            X[k][k] = 1;\n            for (j = k; j < columns; j++) {\n                if (qr[k][k] !== 0) {\n                    s = 0;\n                    for (i = k; i < rows; i++) {\n                        s += qr[i][k] * X[i][j];\n                    }\n\n                    s = -s / qr[k][k];\n\n                    for (i = k; i < rows; i++) {\n                        X[i][j] += s * qr[i][k];\n                    }\n                }\n            }\n        }\n        return X;\n    }\n};\n\nmodule.exports = QrDecomposition;\n","'use strict';\n\nvar Matrix = require('../matrix').Matrix;\n\n// https://github.com/lutzroeder/Mapack/blob/master/Source/CholeskyDecomposition.cs\nfunction CholeskyDecomposition(value) {\n    if (!(this instanceof CholeskyDecomposition)) {\n        return new CholeskyDecomposition(value);\n    }\n    value = Matrix.checkMatrix(value);\n    if (!value.isSymmetric()) {\n        throw new Error('Matrix is not symmetric');\n    }\n\n    var a = value,\n        dimension = a.rows,\n        l = new Matrix(dimension, dimension),\n        positiveDefinite = true,\n        i, j, k;\n\n    for (j = 0; j < dimension; j++) {\n        var Lrowj = l[j];\n        var d = 0;\n        for (k = 0; k < j; k++) {\n            var Lrowk = l[k];\n            var s = 0;\n            for (i = 0; i < k; i++) {\n                s += Lrowk[i] * Lrowj[i];\n            }\n            Lrowj[k] = s = (a[j][k] - s) / l[k][k];\n            d = d + s * s;\n        }\n\n        d = a[j][j] - d;\n\n        positiveDefinite &= (d > 0);\n        l[j][j] = Math.sqrt(Math.max(d, 0));\n        for (k = j + 1; k < dimension; k++) {\n            l[j][k] = 0;\n        }\n    }\n\n    if (!positiveDefinite) {\n        throw new Error('Matrix is not positive definite');\n    }\n\n    this.L = l;\n}\n\nCholeskyDecomposition.prototype = {\n    get lowerTriangularMatrix() {\n        return this.L;\n    },\n    solve: function (value) {\n        value = Matrix.checkMatrix(value);\n\n        var l = this.L,\n            dimension = l.rows;\n\n        if (value.rows !== dimension) {\n            throw new Error('Matrix dimensions do not match');\n        }\n\n        var count = value.columns,\n            B = value.clone(),\n            i, j, k;\n\n        for (k = 0; k < dimension; k++) {\n            for (j = 0; j < count; j++) {\n                for (i = 0; i < k; i++) {\n                    B[k][j] -= B[i][j] * l[k][i];\n                }\n                B[k][j] /= l[k][k];\n            }\n        }\n\n        for (k = dimension - 1; k >= 0; k--) {\n            for (j = 0; j < count; j++) {\n                for (i = k + 1; i < dimension; i++) {\n                    B[k][j] -= B[i][j] * l[i][k];\n                }\n                B[k][j] /= l[k][k];\n            }\n        }\n\n        return B;\n    }\n};\n\nmodule.exports = CholeskyDecomposition;\n","'use strict';\n\nvar Opt = require('ml-optimize-lorentzian');\n\n/**\n * This function try to join the peaks that seems to belong to a broad signal in a single broad peak.\n * @param peakList\n * @param options\n */\nmodule.exports = function joinBroadPeaks(peakList, options = {}) {\n  var width = options.width;\n  var broadLines = [];\n  // Optimize the possible broad lines\n  var max = 0;\n\n  var maxI = 0;\n\n  var count = 1;\n  for (let i = peakList.length - 1; i >= 0; i--) {\n    if (peakList[i].soft) {\n      broadLines.push(peakList.splice(i, 1)[0]);\n    }\n  }\n  // Push a feak peak\n  broadLines.push({ x: Number.MAX_VALUE });\n\n  var candidates = [[broadLines[0].x, broadLines[0].y]];\n  var indexes = [0];\n\n  for (let i = 1; i < broadLines.length; i++) {\n    // console.log(broadLines[i-1].x+\" \"+broadLines[i].x);\n    if (Math.abs(broadLines[i - 1].x - broadLines[i].x) < width) {\n      candidates.push([broadLines[i].x, broadLines[i].y]);\n      if (broadLines[i].y > max) {\n        max = broadLines[i].y;\n        maxI = i;\n      }\n      indexes.push(i);\n      count++;\n    } else {\n      if (count > 2) {\n        var fitted = Opt.optimizeSingleLorentzian(candidates, {\n          x: broadLines[maxI].x,\n          y: max,\n          width: Math.abs(\n            candidates[0][0] - candidates[candidates.length - 1][0]\n          )\n        });\n        peakList.push({\n          x: fitted[0][0],\n          y: fitted[1][0],\n          width: fitted[2][0],\n          soft: false\n        });\n      } else {\n        // Put back the candidates to the signals list\n        indexes.forEach((index) => {\n          peakList.push(broadLines[index]);\n        });\n      }\n      candidates = [[broadLines[i].x, broadLines[i].y]];\n      indexes = [i];\n      max = broadLines[i].y;\n      maxI = i;\n      count = 1;\n    }\n  }\n\n  peakList.sort(function (a, b) {\n    return a.x - b.x;\n  });\n\n  return peakList;\n};\n","'use strict';\n\n/**\n * This method will allow to enlarge peaks and prevent overlap between peaks\n * Because peaks may not be symmetric after we add 2 properties, from and to.\n * @param {Array} peakList\n * @param {object} [options={}]\n * @param {number} [factor=2]\n * @param {boolean} [overlap=false] by default we don't allow overlap\n * @return {Array} peakList\n */\nmodule.exports = function broadenPeaks(peakList, options = {}) {\n  const { factor = 2, overlap = false } = options;\n\n  for (let peak of peakList) {\n    peak.from = peak.x - (peak.width / 2) * factor;\n    peak.to = peak.x + (peak.width / 2) * factor;\n  }\n\n  if (!overlap) {\n    for (let i = 0; i < peakList.length - 1; i++) {\n      let peak = peakList[i];\n      let nextPeak = peakList[i + 1];\n      if (peak.to > nextPeak.from) {\n        peak.to = nextPeak.from = (peak.to + nextPeak.from) / 2;\n      }\n    }\n  }\n\n  for (let peak of peakList) {\n    peak.width = peak.to - peak.from;\n  }\n\n  return peakList;\n};\n","'use strict';\n\nfunction getConverter() {\n  // the following RegExp can only be used for XYdata, some peakTables have values with a \"E-5\" ...\n  const ntuplesSeparator = /[, \\t]+/;\n  const GC_MS_FIELDS = ['TIC', '.RIC', 'SCANNUMBER'];\n\n  function convertToFloatArray(stringArray) {\n    var floatArray = [];\n    for (let i = 0; i < stringArray.length; i++) {\n      floatArray.push(parseFloat(stringArray[i]));\n    }\n    return floatArray;\n  }\n\n  class Spectrum {}\n\n  const defaultOptions = {\n    keepRecordsRegExp: /^$/,\n    xy: false,\n    withoutXY: false,\n    chromatogram: false,\n    keepSpectra: false,\n    noContour: false,\n    nbContourLevels: 7,\n    noiseMultiplier: 5,\n    profiling: false\n  };\n\n  function convert(jcamp, options) {\n    options = Object.assign({}, defaultOptions, options);\n\n    var wantXY = !options.withoutXY;\n\n    var start = Date.now();\n\n    var ntuples = {};\n    var ldr, dataLabel, dataValue, ldrs;\n    var position, endLine, infos;\n\n    var result = {};\n    result.profiling = options.profiling ? [] : false;\n    result.logs = [];\n    var spectra = [];\n    result.spectra = spectra;\n    result.info = {};\n    var spectrum = new Spectrum();\n\n    if (!(typeof jcamp === 'string')) {\n      throw new TypeError('the JCAMP should be a string');\n    }\n\n    if (result.profiling) {\n      result.profiling.push({\n        action: 'Before split to LDRS',\n        time: Date.now() - start\n      });\n    }\n\n    ldrs = jcamp.split(/[\\r\\n]+##/);\n\n    if (result.profiling) {\n      result.profiling.push({\n        action: 'Split to LDRS',\n        time: Date.now() - start\n      });\n    }\n\n    if (ldrs[0]) ldrs[0] = ldrs[0].replace(/^[\\r\\n ]*##/, '');\n\n    for (let i = 0; i < ldrs.length; i++) {\n      ldr = ldrs[i];\n      // This is a new LDR\n      position = ldr.indexOf('=');\n      if (position > 0) {\n        dataLabel = ldr.substring(0, position);\n        dataValue = ldr.substring(position + 1).trim();\n      } else {\n        dataLabel = ldr;\n        dataValue = '';\n      }\n      dataLabel = dataLabel.replace(/[_ -]/g, '').toUpperCase();\n\n      if (dataLabel === 'DATATABLE') {\n        endLine = dataValue.indexOf('\\n');\n        if (endLine === -1) endLine = dataValue.indexOf('\\r');\n        if (endLine > 0) {\n          var xIndex = -1;\n          var yIndex = -1;\n          // ##DATA TABLE= (X++(I..I)), XYDATA\n          // We need to find the variables\n\n          infos = dataValue.substring(0, endLine).split(/[ ,;\\t]+/);\n          if (infos[0].indexOf('++') > 0) {\n            var firstVariable = infos[0].replace(\n              /.*\\(([a-zA-Z0-9]+)\\+\\+.*/,\n              '$1'\n            );\n            var secondVariable = infos[0].replace(\n              /.*\\.\\.([a-zA-Z0-9]+).*/,\n              '$1'\n            );\n            xIndex = ntuples.symbol.indexOf(firstVariable);\n            yIndex = ntuples.symbol.indexOf(secondVariable);\n          }\n\n          if (xIndex === -1) xIndex = 0;\n          if (yIndex === -1) yIndex = 0;\n\n          if (ntuples.first) {\n            if (ntuples.first.length > xIndex) {\n              spectrum.firstX = ntuples.first[xIndex];\n            }\n            if (ntuples.first.length > yIndex) {\n              spectrum.firstY = ntuples.first[yIndex];\n            }\n          }\n          if (ntuples.last) {\n            if (ntuples.last.length > xIndex) {\n              spectrum.lastX = ntuples.last[xIndex];\n            }\n            if (ntuples.last.length > yIndex) {\n              spectrum.lastY = ntuples.last[yIndex];\n            }\n          }\n          if (ntuples.vardim && ntuples.vardim.length > xIndex) {\n            spectrum.nbPoints = ntuples.vardim[xIndex];\n          }\n          if (ntuples.factor) {\n            if (ntuples.factor.length > xIndex) {\n              spectrum.xFactor = ntuples.factor[xIndex];\n            }\n            if (ntuples.factor.length > yIndex) {\n              spectrum.yFactor = ntuples.factor[yIndex];\n            }\n          }\n          if (ntuples.units) {\n            if (ntuples.units.length > xIndex) {\n              spectrum.xUnit = ntuples.units[xIndex];\n            }\n            if (ntuples.units.length > yIndex) {\n              spectrum.yUnit = ntuples.units[yIndex];\n            }\n          }\n          spectrum.datatable = infos[0];\n          if (infos[1] && infos[1].indexOf('PEAKS') > -1) {\n            dataLabel = 'PEAKTABLE';\n          } else if (\n            infos[1] &&\n            (infos[1].indexOf('XYDATA') || infos[0].indexOf('++') > 0)\n          ) {\n            dataLabel = 'XYDATA';\n            spectrum.deltaX =\n              (spectrum.lastX - spectrum.firstX) / (spectrum.nbPoints - 1);\n          }\n        }\n      }\n\n      if (dataLabel === 'XYDATA') {\n        if (wantXY) {\n          prepareSpectrum(result, spectrum);\n          // well apparently we should still consider it is a PEAK TABLE if there are no '++' after\n          if (dataValue.match(/.*\\+\\+.*/)) {\n            // ex: (X++(Y..Y))\n            if (!spectrum.deltaX) {\n              spectrum.deltaX =\n                (spectrum.lastX - spectrum.firstX) / (spectrum.nbPoints - 1);\n            }\n            fastParseXYData(spectrum, dataValue, result);\n          } else {\n            parsePeakTable(spectrum, dataValue, result);\n          }\n          spectra.push(spectrum);\n          spectrum = new Spectrum();\n        }\n        continue;\n      } else if (dataLabel === 'PEAKTABLE') {\n        if (wantXY) {\n          prepareSpectrum(result, spectrum);\n          parsePeakTable(spectrum, dataValue, result);\n          spectra.push(spectrum);\n          spectrum = new Spectrum();\n        }\n        continue;\n      }\n      if (dataLabel === 'PEAKASSIGNMENTS') {\n        if (wantXY) {\n          if (dataValue.match(/.*(XYA).*/)) {\n            // ex: (XYA)\n            parseXYA(spectrum, dataValue);\n          }\n          spectra.push(spectrum);\n          spectrum = new Spectrum();\n        }\n        continue;\n      }\n\n      if (dataLabel === 'TITLE') {\n        spectrum.title = dataValue;\n      } else if (dataLabel === 'DATATYPE') {\n        spectrum.dataType = dataValue;\n        if (dataValue.indexOf('nD') > -1) {\n          result.twoD = true;\n        }\n      } else if (dataLabel === 'NTUPLES') {\n        if (dataValue.indexOf('nD') > -1) {\n          result.twoD = true;\n        }\n      } else if (dataLabel === 'XUNITS') {\n        spectrum.xUnit = dataValue;\n      } else if (dataLabel === 'YUNITS') {\n        spectrum.yUnit = dataValue;\n      } else if (dataLabel === 'FIRSTX') {\n        spectrum.firstX = parseFloat(dataValue);\n      } else if (dataLabel === 'LASTX') {\n        spectrum.lastX = parseFloat(dataValue);\n      } else if (dataLabel === 'FIRSTY') {\n        spectrum.firstY = parseFloat(dataValue);\n      } else if (dataLabel === 'LASTY') {\n        spectrum.lastY = parseFloat(dataValue);\n      } else if (dataLabel === 'NPOINTS') {\n        spectrum.nbPoints = parseFloat(dataValue);\n      } else if (dataLabel === 'XFACTOR') {\n        spectrum.xFactor = parseFloat(dataValue);\n      } else if (dataLabel === 'YFACTOR') {\n        spectrum.yFactor = parseFloat(dataValue);\n      } else if (dataLabel === 'MAXX') {\n        spectrum.maxX = parseFloat(dataValue);\n      } else if (dataLabel === 'MINX') {\n        spectrum.minX = parseFloat(dataValue);\n      } else if (dataLabel === 'MAXY') {\n        spectrum.maxY = parseFloat(dataValue);\n      } else if (dataLabel === 'MINY') {\n        spectrum.minY = parseFloat(dataValue);\n      } else if (dataLabel === 'DELTAX') {\n        spectrum.deltaX = parseFloat(dataValue);\n      } else if (dataLabel === '.OBSERVEFREQUENCY' || dataLabel === '$SFO1') {\n        if (!spectrum.observeFrequency) {\n          spectrum.observeFrequency = parseFloat(dataValue);\n        }\n      } else if (dataLabel === '.OBSERVENUCLEUS') {\n        if (!spectrum.xType) {\n          result.xType = dataValue.replace(/[^a-zA-Z0-9]/g, '');\n        }\n      } else if (dataLabel === '$SFO2') {\n        if (!result.indirectFrequency) {\n          result.indirectFrequency = parseFloat(dataValue);\n        }\n      } else if (dataLabel === '$OFFSET') {\n        // OFFSET for Bruker spectra\n        result.shiftOffsetNum = 0;\n        if (!spectrum.shiftOffsetVal) {\n          spectrum.shiftOffsetVal = parseFloat(dataValue);\n        }\n      } else if (dataLabel === '$REFERENCEPOINT') {\n        // OFFSET for Varian spectra\n        // if we activate this part it does not work for ACD specmanager\n        //         } else if (dataLabel=='.SHIFTREFERENCE') {   // OFFSET FOR Bruker Spectra\n        //                 var parts = dataValue.split(/ *, */);\n        //                 result.shiftOffsetNum = parseInt(parts[2].trim());\n        //                 spectrum.shiftOffsetVal = parseFloat(parts[3].trim());\n      } else if (dataLabel === 'VARNAME') {\n        ntuples.varname = dataValue.split(ntuplesSeparator);\n      } else if (dataLabel === 'SYMBOL') {\n        ntuples.symbol = dataValue.split(ntuplesSeparator);\n      } else if (dataLabel === 'VARTYPE') {\n        ntuples.vartype = dataValue.split(ntuplesSeparator);\n      } else if (dataLabel === 'VARFORM') {\n        ntuples.varform = dataValue.split(ntuplesSeparator);\n      } else if (dataLabel === 'VARDIM') {\n        ntuples.vardim = convertToFloatArray(dataValue.split(ntuplesSeparator));\n      } else if (dataLabel === 'UNITS') {\n        ntuples.units = dataValue.split(ntuplesSeparator);\n      } else if (dataLabel === 'FACTOR') {\n        ntuples.factor = convertToFloatArray(dataValue.split(ntuplesSeparator));\n      } else if (dataLabel === 'FIRST') {\n        ntuples.first = convertToFloatArray(dataValue.split(ntuplesSeparator));\n      } else if (dataLabel === 'LAST') {\n        ntuples.last = convertToFloatArray(dataValue.split(ntuplesSeparator));\n      } else if (dataLabel === 'MIN') {\n        ntuples.min = convertToFloatArray(dataValue.split(ntuplesSeparator));\n      } else if (dataLabel === 'MAX') {\n        ntuples.max = convertToFloatArray(dataValue.split(ntuplesSeparator));\n      } else if (dataLabel === '.NUCLEUS') {\n        if (result.twoD) {\n          result.yType = dataValue.split(ntuplesSeparator)[0];\n        }\n      } else if (dataLabel === 'PAGE') {\n        spectrum.page = dataValue.trim();\n        spectrum.pageValue = parseFloat(dataValue.replace(/^.*=/, ''));\n        spectrum.pageSymbol = spectrum.page.replace(/[=].*/, '');\n        var pageSymbolIndex = ntuples.symbol.indexOf(spectrum.pageSymbol);\n        var unit = '';\n        if (ntuples.units && ntuples.units[pageSymbolIndex]) {\n          unit = ntuples.units[pageSymbolIndex];\n        }\n        if (result.indirectFrequency && unit !== 'PPM') {\n          spectrum.pageValue /= result.indirectFrequency;\n        }\n      } else if (dataLabel === 'RETENTIONTIME') {\n        spectrum.pageValue = parseFloat(dataValue);\n      } else if (isMSField(dataLabel)) {\n        spectrum[convertMSFieldToLabel(dataLabel)] = dataValue;\n      } else if (dataLabel === 'SAMPLEDESCRIPTION') {\n        spectrum.sampleDescription = dataValue;\n      }\n      if (dataLabel.match(options.keepRecordsRegExp)) {\n        if (result.info[dataLabel]) {\n          if (!Array.isArray(result.info[dataLabel])) {\n            result.info[dataLabel] = [result.info[dataLabel]];\n          }\n          result.info[dataLabel].push(dataValue.trim());\n        } else {\n          result.info[dataLabel] = dataValue.trim();\n        }\n      }\n    }\n\n    if (result.profiling) {\n      result.profiling.push({\n        action: 'Finished parsing',\n        time: Date.now() - start\n      });\n    }\n\n    if (Object.keys(ntuples).length > 0) {\n      var newNtuples = [];\n      var keys = Object.keys(ntuples);\n      for (let i = 0; i < keys.length; i++) {\n        var key = keys[i];\n        var values = ntuples[key];\n        for (let j = 0; j < values.length; j++) {\n          if (!newNtuples[j]) newNtuples[j] = {};\n          newNtuples[j][key] = values[j];\n        }\n      }\n      result.ntuples = newNtuples;\n    }\n\n    if (result.twoD && wantXY) {\n      add2D(result, options);\n      if (result.profiling) {\n        result.profiling.push({\n          action: 'Finished countour plot calculation',\n          time: Date.now() - start\n        });\n      }\n      if (!options.keepSpectra) {\n        delete result.spectra;\n      }\n    }\n\n    if (options.chromatogram) {\n      options.xy = true;\n    }\n\n    if (options.xy && wantXY) {\n      // the spectraData should not be a oneD array but an object with x and y\n      if (spectra.length > 0) {\n        for (let i = 0; i < spectra.length; i++) {\n          spectrum = spectra[i];\n          if (spectrum.data.length > 0) {\n            for (let j = 0; j < spectrum.data.length; j++) {\n              var data = spectrum.data[j];\n              var newData = {\n                x: new Array(data.length / 2),\n                y: new Array(data.length / 2)\n              };\n              for (var k = 0; k < data.length; k = k + 2) {\n                newData.x[k / 2] = data[k];\n                newData.y[k / 2] = data[k + 1];\n              }\n              spectrum.data[j] = newData;\n            }\n          }\n        }\n      }\n    }\n\n    // maybe it is a GC (HPLC) / MS. In this case we add a new format\n    if (options.chromatogram) {\n      if (result.spectra.length > 1) {\n        complexChromatogram(result);\n      } else {\n        simpleChromatogram(result);\n      }\n      if (result.profiling) {\n        result.profiling.push({\n          action: 'Finished chromatogram calculation',\n          time: Date.now() - start\n        });\n      }\n    }\n\n    if (result.profiling) {\n      result.profiling.push({\n        action: 'Total time',\n        time: Date.now() - start\n      });\n    }\n\n    return result;\n  }\n\n  function convertMSFieldToLabel(value) {\n    return value.toLowerCase().replace(/[^a-z0-9]/g, '');\n  }\n\n  function isMSField(dataLabel) {\n    return GC_MS_FIELDS.indexOf(dataLabel) !== -1;\n  }\n\n  function complexChromatogram(result) {\n    var spectra = result.spectra;\n    var length = spectra.length;\n    var chromatogram = {\n      times: new Array(length),\n      series: {\n        ms: {\n          dimension: 2,\n          data: new Array(length)\n        }\n      }\n    };\n\n    var existingGCMSFields = [];\n    for (let i = 0; i < GC_MS_FIELDS.length; i++) {\n      var label = convertMSFieldToLabel(GC_MS_FIELDS[i]);\n      if (spectra[0][label]) {\n        existingGCMSFields.push(label);\n        chromatogram.series[label] = {\n          dimension: 1,\n          data: new Array(length)\n        };\n      }\n    }\n\n    for (let i = 0; i < length; i++) {\n      var spectrum = spectra[i];\n      chromatogram.times[i] = spectrum.pageValue;\n      for (let j = 0; j < existingGCMSFields.length; j++) {\n        chromatogram.series[existingGCMSFields[j]].data[i] = parseFloat(\n          spectrum[existingGCMSFields[j]]\n        );\n      }\n      if (spectrum.data) {\n        chromatogram.series.ms.data[i] = [\n          spectrum.data[0].x,\n          spectrum.data[0].y\n        ];\n      }\n    }\n    result.chromatogram = chromatogram;\n  }\n\n  function simpleChromatogram(result) {\n    var data = result.spectra[0].data[0];\n    result.chromatogram = {\n      times: data.x.slice(),\n      series: {\n        intensity: {\n          dimension: 1,\n          data: data.y.slice()\n        }\n      }\n    };\n  }\n\n  function prepareSpectrum(result, spectrum) {\n    if (!spectrum.xFactor) spectrum.xFactor = 1;\n    if (!spectrum.yFactor) spectrum.yFactor = 1;\n    if (spectrum.observeFrequency) {\n      if (spectrum.xUnit && spectrum.xUnit.toUpperCase() === 'HZ') {\n        spectrum.xUnit = 'PPM';\n        spectrum.xFactor = spectrum.xFactor / spectrum.observeFrequency;\n        spectrum.firstX = spectrum.firstX / spectrum.observeFrequency;\n        spectrum.lastX = spectrum.lastX / spectrum.observeFrequency;\n        spectrum.deltaX = spectrum.deltaX / spectrum.observeFrequency;\n      }\n    }\n    if (spectrum.shiftOffsetVal) {\n      var shift = spectrum.firstX - spectrum.shiftOffsetVal;\n      spectrum.firstX = spectrum.firstX - shift;\n      spectrum.lastX = spectrum.lastX - shift;\n    }\n  }\n\n  function getMedian(data) {\n    data = data.sort(compareNumbers);\n    var l = data.length;\n    return data[Math.floor(l / 2)];\n  }\n\n  function compareNumbers(a, b) {\n    return a - b;\n  }\n\n  function convertTo3DZ(spectra) {\n    var minZ = spectra[0].data[0][0];\n    var maxZ = minZ;\n    var ySize = spectra.length;\n    var xSize = spectra[0].data[0].length / 2;\n    var z = new Array(ySize);\n    for (let i = 0; i < ySize; i++) {\n      z[i] = new Array(xSize);\n      var xVector = spectra[i].data[0];\n      for (let j = 0; j < xSize; j++) {\n        var value = xVector[j * 2 + 1];\n        z[i][j] = value;\n        if (value < minZ) minZ = value;\n        if (value > maxZ) maxZ = value;\n      }\n    }\n\n    const firstX = spectra[0].data[0][0];\n    const lastX = spectra[0].data[0][spectra[0].data[0].length - 2]; // has to be -2 because it is a 1D array [x,y,x,y,...]\n    const firstY = spectra[0].pageValue;\n    const lastY = spectra[ySize - 1].pageValue;\n\n    // Because the min / max value are the only information about the matrix if we invert\n    // min and max we need to invert the array\n    if (firstX > lastX) {\n      for (let spectrum of z) {\n        spectrum.reverse();\n      }\n    }\n    if (firstY > lastY) {\n      z.reverse();\n    }\n\n    return {\n      z: z,\n      minX: Math.min(firstX, lastX),\n      maxX: Math.max(firstX, lastX),\n      minY: Math.min(firstY, lastY),\n      maxY: Math.max(firstY, lastY),\n      minZ: minZ,\n      maxZ: maxZ,\n      noise: getMedian(z[0].map(Math.abs))\n    };\n  }\n\n  function add2D(result, options) {\n    var zData = convertTo3DZ(result.spectra);\n    if (!options.noContour) {\n      result.contourLines = generateContourLines(zData, options);\n      delete zData.z;\n    }\n    result.minMax = zData;\n  }\n\n  function generateContourLines(zData, options) {\n    var noise = zData.noise;\n    var z = zData.z;\n    var povarHeight0, povarHeight1, povarHeight2, povarHeight3;\n    var isOver0, isOver1, isOver2, isOver3;\n    var nbSubSpectra = z.length;\n    var nbPovars = z[0].length;\n    var pAx, pAy, pBx, pBy;\n\n    var x0 = zData.minX;\n    var xN = zData.maxX;\n    var dx = (xN - x0) / (nbPovars - 1);\n    var y0 = zData.minY;\n    var yN = zData.maxY;\n    var dy = (yN - y0) / (nbSubSpectra - 1);\n    var minZ = zData.minZ;\n    var maxZ = zData.maxZ;\n\n    // System.out.prvarln('y0 '+y0+' yN '+yN);\n    // -------------------------\n    // Povars attribution\n    //\n    // 0----1\n    // |  / |\n    // | /  |\n    // 2----3\n    //\n    // ---------------------d------\n\n    var iter = options.nbContourLevels * 2;\n    var contourLevels = new Array(iter);\n    var lineZValue;\n    for (var level = 0; level < iter; level++) {\n      // multiply by 2 for positif and negatif\n      var contourLevel = {};\n      contourLevels[level] = contourLevel;\n      var side = level % 2;\n      var factor =\n        (maxZ - options.noiseMultiplier * noise) *\n        Math.exp((level >> 1) - options.nbContourLevels);\n      if (side === 0) {\n        lineZValue = factor + options.noiseMultiplier * noise;\n      } else {\n        lineZValue = 0 - factor - options.noiseMultiplier * noise;\n      }\n      var lines = [];\n      contourLevel.zValue = lineZValue;\n      contourLevel.lines = lines;\n\n      if (lineZValue <= minZ || lineZValue >= maxZ) continue;\n\n      for (var iSubSpectra = 0; iSubSpectra < nbSubSpectra - 1; iSubSpectra++) {\n        var subSpectra = z[iSubSpectra];\n        var subSpectraAfter = z[iSubSpectra + 1];\n        for (var povar = 0; povar < nbPovars - 1; povar++) {\n          povarHeight0 = subSpectra[povar];\n          povarHeight1 = subSpectra[povar + 1];\n          povarHeight2 = subSpectraAfter[povar];\n          povarHeight3 = subSpectraAfter[povar + 1];\n\n          isOver0 = povarHeight0 > lineZValue;\n          isOver1 = povarHeight1 > lineZValue;\n          isOver2 = povarHeight2 > lineZValue;\n          isOver3 = povarHeight3 > lineZValue;\n\n          // Example povar0 is over the plane and povar1 and\n          // povar2 are below, we find the varersections and add\n          // the segment\n          if (isOver0 !== isOver1 && isOver0 !== isOver2) {\n            pAx =\n              povar +\n              (lineZValue - povarHeight0) / (povarHeight1 - povarHeight0);\n            pAy = iSubSpectra;\n            pBx = povar;\n            pBy =\n              iSubSpectra +\n              (lineZValue - povarHeight0) / (povarHeight2 - povarHeight0);\n            lines.push(pAx * dx + x0);\n            lines.push(pAy * dy + y0);\n            lines.push(pBx * dx + x0);\n            lines.push(pBy * dy + y0);\n          }\n          // remove push does not help !!!!\n          if (isOver3 !== isOver1 && isOver3 !== isOver2) {\n            pAx = povar + 1;\n            pAy =\n              iSubSpectra +\n              1 -\n              (lineZValue - povarHeight3) / (povarHeight1 - povarHeight3);\n            pBx =\n              povar +\n              1 -\n              (lineZValue - povarHeight3) / (povarHeight2 - povarHeight3);\n            pBy = iSubSpectra + 1;\n            lines.push(pAx * dx + x0);\n            lines.push(pAy * dy + y0);\n            lines.push(pBx * dx + x0);\n            lines.push(pBy * dy + y0);\n          }\n          // test around the diagonal\n          if (isOver1 !== isOver2) {\n            pAx =\n              (povar +\n                1 -\n                (lineZValue - povarHeight1) / (povarHeight2 - povarHeight1)) *\n                dx +\n              x0;\n            pAy =\n              (iSubSpectra +\n                (lineZValue - povarHeight1) / (povarHeight2 - povarHeight1)) *\n                dy +\n              y0;\n            if (isOver1 !== isOver0) {\n              pBx =\n                povar +\n                1 -\n                (lineZValue - povarHeight1) / (povarHeight0 - povarHeight1);\n              pBy = iSubSpectra;\n              lines.push(pAx);\n              lines.push(pAy);\n              lines.push(pBx * dx + x0);\n              lines.push(pBy * dy + y0);\n            }\n            if (isOver2 !== isOver0) {\n              pBx = povar;\n              pBy =\n                iSubSpectra +\n                1 -\n                (lineZValue - povarHeight2) / (povarHeight0 - povarHeight2);\n              lines.push(pAx);\n              lines.push(pAy);\n              lines.push(pBx * dx + x0);\n              lines.push(pBy * dy + y0);\n            }\n            if (isOver1 !== isOver3) {\n              pBx = povar + 1;\n              pBy =\n                iSubSpectra +\n                (lineZValue - povarHeight1) / (povarHeight3 - povarHeight1);\n              lines.push(pAx);\n              lines.push(pAy);\n              lines.push(pBx * dx + x0);\n              lines.push(pBy * dy + y0);\n            }\n            if (isOver2 !== isOver3) {\n              pBx =\n                povar +\n                (lineZValue - povarHeight2) / (povarHeight3 - povarHeight2);\n              pBy = iSubSpectra + 1;\n              lines.push(pAx);\n              lines.push(pAy);\n              lines.push(pBx * dx + x0);\n              lines.push(pBy * dy + y0);\n            }\n          }\n        }\n      }\n    }\n\n    return {\n      minX: zData.minX,\n      maxX: zData.maxX,\n      minY: zData.minY,\n      maxY: zData.maxY,\n      segments: contourLevels\n    };\n  }\n\n  function fastParseXYData(spectrum, value) {\n    // TODO need to deal with result\n    //  console.log(value);\n    // we check if deltaX is defined otherwise we calculate it\n\n    var yFactor = spectrum.yFactor;\n    var deltaX = spectrum.deltaX;\n\n    spectrum.isXYdata = true;\n    // TODO to be improved using 2 array {x:[], y:[]}\n    var currentData = [];\n    spectrum.data = [currentData];\n\n    var currentX = spectrum.firstX;\n    var currentY = spectrum.firstY;\n\n    // we skip the first line\n    //\n    var endLine = false;\n    var ascii;\n    let i = 0;\n    for (; i < value.length; i++) {\n      ascii = value.charCodeAt(i);\n      if (ascii === 13 || ascii === 10) {\n        endLine = true;\n      } else {\n        if (endLine) break;\n      }\n    }\n\n    // we proceed taking the i after the first line\n    var newLine = true;\n    var isDifference = false;\n    var isLastDifference = false;\n    var lastDifference = 0;\n    var isDuplicate = false;\n    var inComment = false;\n    var currentValue = 0; // can be a difference or a duplicate\n    var lastValue = 0; // must be the real last value\n    var isNegative = false;\n    var inValue = false;\n    var skipFirstValue = false;\n    var decimalPosition = 0;\n    for (; i <= value.length; i++) {\n      if (i === value.length) ascii = 13;\n      else ascii = value.charCodeAt(i);\n      if (inComment) {\n        // we should ignore the text if we are after $$\n        if (ascii === 13 || ascii === 10) {\n          newLine = true;\n          inComment = false;\n        }\n      } else {\n        // when is it a new value ?\n        // when it is not a digit, . or comma\n        // it is a number that is either new or we continue\n        if (ascii <= 57 && ascii >= 48) {\n          // a number\n          inValue = true;\n          if (decimalPosition > 0) {\n            currentValue += (ascii - 48) / Math.pow(10, decimalPosition++);\n          } else {\n            currentValue *= 10;\n            currentValue += ascii - 48;\n          }\n        } else if (ascii === 44 || ascii === 46) {\n          // a \",\" or \".\"\n          inValue = true;\n          decimalPosition++;\n        } else {\n          if (inValue) {\n            // need to process the previous value\n            if (newLine) {\n              newLine = false; // we don't check the X value\n              // console.log(\"NEW LINE\",isDifference, lastDifference);\n              // if new line and lastDifference, the first value is just a check !\n              // that we don't check ...\n              if (isLastDifference) skipFirstValue = true;\n            } else {\n              // need to deal with duplicate and differences\n              if (skipFirstValue) {\n                skipFirstValue = false;\n              } else {\n                if (isDifference) {\n                  lastDifference = isNegative ? 0 - currentValue : currentValue;\n                  isLastDifference = true;\n                  isDifference = false;\n                } else if (!isDuplicate) {\n                  lastValue = isNegative ? 0 - currentValue : currentValue;\n                }\n                var duplicate = isDuplicate ? currentValue - 1 : 1;\n                for (var j = 0; j < duplicate; j++) {\n                  if (isLastDifference) {\n                    currentY += lastDifference;\n                  } else {\n                    currentY = lastValue;\n                  }\n                  currentData.push(currentX);\n                  currentData.push(currentY * yFactor);\n                  currentX += deltaX;\n                }\n              }\n            }\n            isNegative = false;\n            currentValue = 0;\n            decimalPosition = 0;\n            inValue = false;\n            isDuplicate = false;\n          }\n\n          // positive SQZ digits @ A B C D E F G H I (ascii 64-73)\n          if (ascii < 74 && ascii > 63) {\n            inValue = true;\n            isLastDifference = false;\n            currentValue = ascii - 64;\n          } else if (ascii > 96 && ascii < 106) {\n            // negative SQZ digits a b c d e f g h i (ascii 97-105)\n            inValue = true;\n            isLastDifference = false;\n            currentValue = ascii - 96;\n            isNegative = true;\n          } else if (ascii === 115) {\n            // DUP digits S T U V W X Y Z s (ascii 83-90, 115)\n            inValue = true;\n            isDuplicate = true;\n            currentValue = 9;\n          } else if (ascii > 82 && ascii < 91) {\n            inValue = true;\n            isDuplicate = true;\n            currentValue = ascii - 82;\n          } else if (ascii > 73 && ascii < 83) {\n            // positive DIF digits % J K L M N O P Q R (ascii 37, 74-82)\n            inValue = true;\n            isDifference = true;\n            currentValue = ascii - 73;\n          } else if (ascii > 105 && ascii < 115) {\n            // negative DIF digits j k l m n o p q r (ascii 106-114)\n            inValue = true;\n            isDifference = true;\n            currentValue = ascii - 105;\n            isNegative = true;\n          } else if (ascii === 36 && value.charCodeAt(i + 1) === 36) {\n            // $ sign, we need to check the next one\n            inValue = true;\n            inComment = true;\n          } else if (ascii === 37) {\n            // positive DIF digits % J K L M N O P Q R (ascii 37, 74-82)\n            inValue = true;\n            isDifference = true;\n            currentValue = 0;\n            isNegative = false;\n          } else if (ascii === 45) {\n            // a \"-\"\n            // check if after there is a number, decimal or comma\n            var ascii2 = value.charCodeAt(i + 1);\n            if (\n              (ascii2 >= 48 && ascii2 <= 57) ||\n              ascii2 === 44 ||\n              ascii2 === 46\n            ) {\n              inValue = true;\n              if (!newLine) isLastDifference = false;\n              isNegative = true;\n            }\n          } else if (ascii === 13 || ascii === 10) {\n            newLine = true;\n            inComment = false;\n          }\n          // and now analyse the details ... space or tabulation\n          // if \"+\" we just don't care\n        }\n      }\n    }\n  }\n\n  function parseXYA(spectrum, value) {\n    var removeSymbolRegExp = /(\\(+|\\)+|<+|>+|\\s+)/g;\n\n    spectrum.isXYAdata = true;\n    var values;\n    var currentData = [];\n    spectrum.data = [currentData];\n\n    var lines = value.split(/,? *,?[;\\r\\n]+ */);\n\n    for (let i = 1; i < lines.length; i++) {\n      values = lines[i]\n        .trim()\n        .replace(removeSymbolRegExp, '')\n        .split(',');\n      currentData.push(parseFloat(values[0]));\n      currentData.push(parseFloat(values[1]));\n    }\n  }\n\n  function parsePeakTable(spectrum, value, result) {\n    var removeCommentRegExp = /\\$\\$.*/;\n    var peakTableSplitRegExp = /[,\\t ]+/;\n\n    spectrum.isPeaktable = true;\n    var values;\n    var currentData = [];\n    spectrum.data = [currentData];\n\n    // counts for around 20% of the time\n    var lines = value.split(/,? *,?[;\\r\\n]+ */);\n\n    for (let i = 1; i < lines.length; i++) {\n      values = lines[i]\n        .trim()\n        .replace(removeCommentRegExp, '')\n        .split(peakTableSplitRegExp);\n      if (values.length % 2 === 0) {\n        for (let j = 0; j < values.length; j = j + 2) {\n          // takes around 40% of the time to add and parse the 2 values nearly exclusively because of parseFloat\n          currentData.push(parseFloat(values[j]) * spectrum.xFactor);\n          currentData.push(parseFloat(values[j + 1]) * spectrum.yFactor);\n        }\n      } else {\n        result.logs.push(`Format error: ${values}`);\n      }\n    }\n  }\n\n  return convert;\n}\n\nvar convert = getConverter();\n\nfunction JcampConverter(input, options, useWorker) {\n  if (typeof options === 'boolean') {\n    useWorker = options;\n    options = {};\n  }\n  if (useWorker) {\n    return postToWorker(input, options);\n  } else {\n    return convert(input, options);\n  }\n}\n\nvar stamps = {};\nvar worker;\n\nfunction postToWorker(input, options) {\n  if (!worker) {\n    createWorker();\n  }\n  return new Promise(function (resolve) {\n    var stamp = `${Date.now()}${Math.random()}`;\n    stamps[stamp] = resolve;\n    worker.postMessage(\n      JSON.stringify({\n        stamp: stamp,\n        input: input,\n        options: options\n      })\n    );\n  });\n}\n\nfunction createWorker() {\n  var workerURL = URL.createObjectURL(\n    new Blob(\n      [`var getConverter =${getConverter.toString()};var convert = getConverter(); onmessage = function (event) { var data = JSON.parse(event.data); postMessage(JSON.stringify({stamp: data.stamp, output: convert(data.input, data.options)})); };`],\n      { type: 'application/javascript' }\n    )\n  );\n  worker = new Worker(workerURL);\n  URL.revokeObjectURL(workerURL);\n  worker.addEventListener('message', function (event) {\n    var data = JSON.parse(event.data);\n    var stamp = data.stamp;\n    if (stamps[stamp]) {\n      stamps[stamp](data.output);\n    }\n  });\n}\n\nfunction createTree(jcamp, options = {}) {\n  const { flatten = false } = options;\n  if (typeof jcamp !== 'string') {\n    throw new TypeError('the JCAMP should be a string');\n  }\n\n  let lines = jcamp.split(/[\\r\\n]+/);\n  let flat = [];\n  let stack = [];\n  let result = [];\n  let current;\n  let ntupleLevel = 0;\n\n  let spaces = jcamp.includes('## ');\n\n  for (var i = 0; i < lines.length; i++) {\n    let line = lines[i];\n    let labelLine = spaces ? line.replace(/ /g, '') : line;\n\n    if (labelLine.substring(0, 9) === '##NTUPLES') {\n      ntupleLevel++;\n    }\n\n    if (labelLine.substring(0, 7) === '##TITLE') {\n      let title = [labelLine.substring(8).trim()];\n      for (let j = i + 1; j < lines.length; j++) {\n        if (lines[j].startsWith('##')) {\n          break;\n        } else {\n          title.push(lines[j].trim());\n        }\n      }\n      stack.push({\n        title: title.join('\\n'),\n        jcamp: `${line}\\n`,\n        children: []\n      });\n      current = stack[stack.length - 1];\n      flat.push(current);\n    } else if (labelLine.substring(0, 5) === '##END' && ntupleLevel === 0) {\n      current.jcamp += `${line}\\n`;\n      var finished = stack.pop();\n      if (stack.length !== 0) {\n        current = stack[stack.length - 1];\n        current.children.push(finished);\n      } else {\n        current = undefined;\n        result.push(finished);\n      }\n    } else if (current && current.jcamp) {\n      current.jcamp += `${line}\\n`;\n      var match = labelLine.match(/^##(.*?)=(.+)/);\n      if (match) {\n        var dataLabel = match[1].replace(/[ _-]/g, '').toUpperCase();\n        if (dataLabel === 'DATATYPE') {\n          current.dataType = match[2].trim();\n        }\n      }\n    }\n\n    if (labelLine.substring(0, 5) === '##END' && ntupleLevel > 0) {\n      ntupleLevel--;\n    }\n  }\n  if (flatten) {\n    flat.forEach((entry) => {\n      entry.children = undefined;\n    });\n    return flat;\n  } else {\n    return result;\n  }\n}\n\nmodule.exports = {\n  convert: JcampConverter,\n  createTree: createTree\n};\n","export default function sortX(points, options = {}) {\n  const { x, y } = points;\n  const { reverse = false } = options;\n\n  var sortFunc;\n  if (!reverse) {\n    sortFunc = (a, b) => a.x - b.x;\n  } else {\n    sortFunc = (a, b) => b.x - a.x;\n  }\n\n  var grouped = x\n    .map((val, index) => ({\n      x: val,\n      y: y[index]\n    }))\n    .sort(sortFunc);\n\n  var response = { x: x.slice(), y: y.slice() };\n  for (var i = 0; i < x.length; i++) {\n    response.x[i] = grouped[i].x;\n    response.y[i] = grouped[i].y;\n  }\n\n  return response;\n}\n","import uniqueXFunction from 'ml-arrayxy-uniquex';\n\n/**\n * Parse a text-file and convert it to an array of XY points\n * @param {string} text - csv or tsv strings\n * @param {object} [options]\n * @param {string} [options.arrayType = 'xyxy'] - xxyy or xyxy\n * * 'xxyy' `[[x1,x2,x3,...],[y1,y2,y2,...]]`\n * * 'xyxy' `[[x1,y1],[x2,y2],[x3,y3], ...]]`\n * @param {boolean} [options.normalize = false] - will set the maximum value to 1\n * @param {boolean} [options.uniqueX = false] - Make the X values unique (works only with 'xxyy' format). If the X value is repeated the sum of Y is done.\n * @param {number} [options.xColumn = 0] - A number that specifies the x column\n * @param {number} [options.yColumn = 1] - A number that specifies the y column\n * @param {number} [options.maxNumberColumns = (Math.max(xColumn, yColumn)+1)] - A number that specifies the maximum number of y columns\n * @param {number} [options.minNumberColumns = (Math.max(xColumn, yColumn)+1)] - A number that specifies the minimum number of y columns\n * @param {boolean} [options.keepInfo = false] - shoud we keep the non numeric lines. In this case the system will return an object {data, info}\n * @return {Array<Array<number>>} - check the 'arrayType' option\n */\nexport function parseXY(text, options = {}) {\n  const {\n    normalize = false,\n    uniqueX = false,\n    arrayType = 'xyxy',\n    xColumn = 0,\n    yColumn = 1,\n    keepInfo = false,\n    maxNumberColumns = Math.max(xColumn, yColumn) + 1,\n    minNumberColumns = Math.max(xColumn, yColumn) + 1\n  } = options;\n\n  var lines = text.split(/[\\r\\n]+/);\n\n  if (arrayType !== 'xxyy' && arrayType !== 'xyxy') {\n    throw new Error(`unsupported arrayType (${arrayType})`);\n  }\n\n  var maxY = Number.MIN_VALUE;\n  var result = [[], []];\n  var info = [];\n  for (var l = 0; l < lines.length; l++) {\n    var line = lines[l].trim();\n    // we will consider only lines that contains only numbers\n    if (line.match(/[0-9]+/) && line.match(/^[0-9eE,;. \\t+-]+$/)) {\n      var fields = line.split(/,[; \\t]+|[; \\t]+/);\n      if (fields.length === 1) {\n        fields = line.split(/[,; \\t]+/);\n      }\n      if (\n        fields &&\n                fields.length >= minNumberColumns &&\n                fields.length <= maxNumberColumns\n      ) {\n        let x = parseFloat(fields[xColumn].replace(',', '.'));\n        let y = parseFloat(fields[yColumn].replace(',', '.'));\n\n        if (y > maxY) maxY = y;\n        result[0].push(x);\n        result[1].push(y);\n      }\n    } else if (line) {\n      info.push({ position: result[0].length, value: line });\n    }\n  }\n\n  if (normalize) {\n    for (var i = 0; i < result[0].length; i++) {\n      result[1][i] /= maxY;\n    }\n  }\n\n  if (uniqueX) {\n    uniqueXFunction(result[0], result[1]);\n  }\n\n  if (arrayType === 'xyxy') {\n    var newResult = [];\n    for (let i = 0; i < result[0].length; i++) {\n      newResult.push([result[0][i], result[1][i]]);\n    }\n    result = newResult;\n  }\n\n  if (!keepInfo) return result;\n\n  return {\n    info,\n    data: result\n  };\n}\n"],"sourceRoot":""}