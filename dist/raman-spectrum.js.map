{"version":3,"file":"raman-spectrum.js","sources":["../node_modules/.pnpm/is-any-array@1.0.0/node_modules/is-any-array/src/index.js","../node_modules/.pnpm/median-quickselect@1.0.1/node_modules/median-quickselect/lib/median-quickselect.min.js","../node_modules/.pnpm/ml-array-median@1.1.5/node_modules/ml-array-median/lib-es6/index.js","../node_modules/.pnpm/ml-spectra-processing@6.7.1/node_modules/ml-spectra-processing/src/x/xAdd.js","../node_modules/.pnpm/ml-spectra-processing@6.7.1/node_modules/ml-spectra-processing/src/x/xMultiply.js","../node_modules/.pnpm/ml-spectra-processing@6.7.1/node_modules/ml-spectra-processing/src/x/xDivide.js","../node_modules/.pnpm/ml-spectra-processing@6.7.1/node_modules/ml-spectra-processing/src/x/xFindClosestIndex.js","../node_modules/.pnpm/ml-array-sequential-fill@1.1.6/node_modules/ml-array-sequential-fill/lib-es6/index.js","../node_modules/.pnpm/ml-spectra-processing@6.7.1/node_modules/ml-spectra-processing/src/x/xIsMonotone.js","../node_modules/.pnpm/ml-array-sum@1.1.5/node_modules/ml-array-sum/lib-es6/index.js","../node_modules/.pnpm/ml-array-mean@1.1.5/node_modules/ml-array-mean/lib-es6/index.js","../node_modules/.pnpm/ml-array-min@1.2.2/node_modules/ml-array-min/lib-es6/index.js","../node_modules/.pnpm/ml-array-max@1.2.3/node_modules/ml-array-max/lib-es6/index.js","../node_modules/.pnpm/ml-spectra-processing@6.7.1/node_modules/ml-spectra-processing/src/x/xSubtract.js","../node_modules/.pnpm/ml-spectra-processing@6.7.1/node_modules/ml-spectra-processing/src/xy/xyCheck.js","../node_modules/.pnpm/ml-spectra-processing@6.7.1/node_modules/ml-spectra-processing/src/xy/xyEnsureGrowingX.js","../node_modules/.pnpm/ml-spectra-processing@6.7.1/node_modules/ml-spectra-processing/src/xy/xyFilterXPositive.js","../node_modules/.pnpm/ml-spectra-processing@6.7.1/node_modules/ml-spectra-processing/src/xy/xyMaxClosestYPoint.js","../node_modules/.pnpm/ml-spectra-processing@6.7.1/node_modules/ml-spectra-processing/src/xy/xyMinClosestYPoint.js","../node_modules/.pnpm/ml-peak-shape-generator@1.0.0/node_modules/ml-peak-shape-generator/src/util/constants.js","../node_modules/.pnpm/ml-peak-shape-generator@1.0.0/node_modules/ml-peak-shape-generator/src/util/erfinv.js","../node_modules/.pnpm/ml-peak-shape-generator@1.0.0/node_modules/ml-peak-shape-generator/src/classes/Gaussian.js","../node_modules/.pnpm/ml-peak-shape-generator@1.0.0/node_modules/ml-peak-shape-generator/src/classes/Lorentzian.js","../node_modules/.pnpm/ml-peak-shape-generator@1.0.0/node_modules/ml-peak-shape-generator/src/classes/PseudoVoigt.js","../node_modules/.pnpm/ml-peak-shape-generator@1.0.0/node_modules/ml-peak-shape-generator/src/classes/Gaussian2D.js","../node_modules/.pnpm/ml-peak-shape-generator@1.0.0/node_modules/ml-peak-shape-generator/src/util/getShapeGenerator.js","../node_modules/.pnpm/ml-savitzky-golay-generalized@2.0.3/node_modules/ml-savitzky-golay-generalized/src/index.js","../node_modules/.pnpm/ml-gsd@6.6.3/node_modules/ml-gsd/src/gsd.js","../node_modules/.pnpm/ml-array-rescale@1.3.5/node_modules/ml-array-rescale/lib-es6/index.js","../node_modules/.pnpm/ml-matrix@6.8.0/node_modules/ml-matrix/src/inspect.js","../node_modules/.pnpm/ml-matrix@6.8.0/node_modules/ml-matrix/src/mathOperations.js","../node_modules/.pnpm/ml-matrix@6.8.0/node_modules/ml-matrix/src/util.js","../node_modules/.pnpm/ml-matrix@6.8.0/node_modules/ml-matrix/src/stat.js","../node_modules/.pnpm/ml-matrix@6.8.0/node_modules/ml-matrix/src/matrix.js","../node_modules/.pnpm/ml-matrix@6.8.0/node_modules/ml-matrix/src/views/base.js","../node_modules/.pnpm/ml-matrix@6.8.0/node_modules/ml-matrix/src/views/transpose.js","../node_modules/.pnpm/ml-matrix@6.8.0/node_modules/ml-matrix/src/wrap/WrapperMatrix2D.js","../node_modules/.pnpm/ml-matrix@6.8.0/node_modules/ml-matrix/src/dc/lu.js","../node_modules/.pnpm/ml-matrix@6.8.0/node_modules/ml-matrix/src/dc/util.js","../node_modules/.pnpm/ml-matrix@6.8.0/node_modules/ml-matrix/src/dc/qr.js","../node_modules/.pnpm/ml-matrix@6.8.0/node_modules/ml-matrix/src/dc/svd.js","../node_modules/.pnpm/ml-matrix@6.8.0/node_modules/ml-matrix/src/decompositions.js","../node_modules/.pnpm/common-spectrum@0.37.0/node_modules/common-spectrum/lib-esm/jsgraph/addStyle.js","../node_modules/.pnpm/common-spectrum@0.37.0/node_modules/common-spectrum/lib-esm/jsgraph/colors.js","../node_modules/.pnpm/common-spectrum@0.37.0/node_modules/common-spectrum/lib-esm/jsgraph/getJSGraph.js","../node_modules/.pnpm/common-spectrum@0.37.0/node_modules/common-spectrum/lib-esm/jsgraph/getNormalizationAnnotations.js","../node_modules/.pnpm/common-spectrum@0.37.0/node_modules/common-spectrum/lib-esm/util/appendDistinctParameter.js","../node_modules/.pnpm/common-spectrum@0.37.0/node_modules/common-spectrum/lib-esm/util/appendDistinctValue.js","../node_modules/.pnpm/common-spectrum@0.37.0/node_modules/common-spectrum/lib-esm/AnalysesManager.js","../node_modules/.pnpm/ml-airpls@1.0.0/node_modules/ml-airpls/src/choleskySolver.js","../node_modules/.pnpm/cuthill-mckee@1.0.0/node_modules/cuthill-mckee/cuthill-mckee.js","../node_modules/.pnpm/ml-airpls@1.0.0/node_modules/ml-airpls/src/utils.js","../node_modules/.pnpm/ml-airpls@1.0.0/node_modules/ml-airpls/src/index.js","../node_modules/.pnpm/baselines@1.0.0/node_modules/baselines/src/airPLS.js","../node_modules/.pnpm/ml-regression-base@2.1.3/node_modules/ml-regression-base/src/maybeToPrecision.js","../node_modules/.pnpm/ml-regression-base@2.1.3/node_modules/ml-regression-base/src/checkArrayLength.js","../node_modules/.pnpm/ml-regression-base@2.1.3/node_modules/ml-regression-base/src/index.js","../node_modules/.pnpm/ml-regression-polynomial@2.2.0/node_modules/ml-regression-polynomial/src/index.js","../node_modules/.pnpm/ml-baseline-correction-regression@1.0.0/node_modules/ml-baseline-correction-regression/src/index.js","../node_modules/.pnpm/baselines@1.0.0/node_modules/baselines/src/iterativePolynomial.js","../node_modules/.pnpm/ml-spectra-processing@5.10.0/node_modules/ml-spectra-processing/src/x/xCheck.js","../node_modules/.pnpm/ml-spectra-processing@5.10.0/node_modules/ml-spectra-processing/src/x/xPadding.js","../node_modules/.pnpm/ml-spectra-processing@5.10.0/node_modules/ml-spectra-processing/src/x/xRolling.js","../node_modules/.pnpm/ml-spectra-processing@5.10.0/node_modules/ml-spectra-processing/src/x/xRollingAverage.js","../node_modules/.pnpm/ml-spectra-processing@5.10.0/node_modules/ml-spectra-processing/src/x/xRollingMedian.js","../node_modules/.pnpm/baselines@1.0.0/node_modules/baselines/src/rollingAverage.js","../node_modules/.pnpm/ml-rolling-ball-baseline@1.0.0/node_modules/ml-rolling-ball-baseline/src/rollingBall.js","../node_modules/.pnpm/baselines@1.0.0/node_modules/baselines/src/rollingBall.js","../node_modules/.pnpm/baselines@1.0.0/node_modules/baselines/src/rollingMedian.js","../node_modules/.pnpm/ml-array-normed@1.3.6/node_modules/ml-array-normed/lib-es6/index.js","../node_modules/.pnpm/ml-zones@0.1.0/node_modules/ml-zones/src/normalize.js","../node_modules/.pnpm/ml-zones@0.1.0/node_modules/ml-zones/src/invert.js","../node_modules/.pnpm/ml-zones@0.1.0/node_modules/ml-zones/src/zonesWithPoints.js","../node_modules/.pnpm/ml-array-xy-equally-spaced@1.2.0/node_modules/ml-array-xy-equally-spaced/src/equallySpacedSlot.js","../node_modules/.pnpm/ml-array-xy-equally-spaced@1.2.0/node_modules/ml-array-xy-equally-spaced/src/integral.js","../node_modules/.pnpm/ml-array-xy-equally-spaced@1.2.0/node_modules/ml-array-xy-equally-spaced/src/equallySpacedSmooth.js","../node_modules/.pnpm/ml-array-xy-equally-spaced@1.2.0/node_modules/ml-array-xy-equally-spaced/src/index.js","../node_modules/.pnpm/ml-array-xy-filter-x@1.0.2/node_modules/ml-array-xy-filter-x/src/getZones.js","../node_modules/.pnpm/ml-array-xy-filter-x@1.0.2/node_modules/ml-array-xy-filter-x/src/index.js","../node_modules/.pnpm/ml-pad-array@2.0.0/node_modules/ml-pad-array/src/index.js","../node_modules/.pnpm/ml-savitzky-golay@4.1.1/node_modules/ml-savitzky-golay/src/index.js","../node_modules/.pnpm/ml-stat@1.3.3/node_modules/ml-stat/array.js","../node_modules/.pnpm/common-spectrum@0.37.0/node_modules/common-spectrum/lib-esm/util/getNormalizedSpectrum.js","../node_modules/.pnpm/js-quantities@1.7.6/node_modules/js-quantities/build/quantities.js","../node_modules/.pnpm/common-spectrum@0.37.0/node_modules/common-spectrum/lib-esm/util/convertUnit.js","../node_modules/.pnpm/common-spectrum@0.37.0/node_modules/common-spectrum/lib-esm/util/ensureRegexp.js","../node_modules/.pnpm/common-spectrum@0.37.0/node_modules/common-spectrum/lib-esm/util/getConvertedVariable.js","../node_modules/.pnpm/common-spectrum@0.37.0/node_modules/common-spectrum/lib-esm/util/getXYSpectrum.js","../node_modules/.pnpm/common-spectrum@0.37.0/node_modules/common-spectrum/lib-esm/Analysis.js","../node_modules/.pnpm/ensure-string@0.1.1/node_modules/ensure-string/src/index.js","../node_modules/.pnpm/jcampconverter@8.1.4/node_modules/jcampconverter/src/complexChromatogram.js","../node_modules/.pnpm/jcampconverter@8.1.4/node_modules/jcampconverter/src/convertToFloatArray.js","../node_modules/.pnpm/jcampconverter@8.1.4/node_modules/jcampconverter/src/parse/fastParseXYData.js","../node_modules/.pnpm/jcampconverter@8.1.4/node_modules/jcampconverter/src/parse/parsePeakTable.js","../node_modules/.pnpm/jcampconverter@8.1.4/node_modules/jcampconverter/src/parse/parseXYA.js","../node_modules/.pnpm/jcampconverter@8.1.4/node_modules/jcampconverter/src/2d/convertTo3DZ.js","../node_modules/.pnpm/jcampconverter@8.1.4/node_modules/jcampconverter/src/2d/generateContourLines.js","../node_modules/.pnpm/jcampconverter@8.1.4/node_modules/jcampconverter/src/2d/add2D.js","../node_modules/.pnpm/nmr-processing@1.4.0/node_modules/nmr-processing/src/constants/gyromagneticRatio.js","../node_modules/.pnpm/jcampconverter@8.1.4/node_modules/jcampconverter/src/postProcessingNMR.js","../node_modules/.pnpm/jcampconverter@8.1.4/node_modules/jcampconverter/src/profiling.js","../node_modules/.pnpm/jcampconverter@8.1.4/node_modules/jcampconverter/src/simpleChromatogram.js","../node_modules/.pnpm/jcampconverter@8.1.4/node_modules/jcampconverter/src/postProcessing.js","../node_modules/.pnpm/jcampconverter@8.1.4/node_modules/jcampconverter/src/prepareNtuplesDatatable.js","../node_modules/.pnpm/jcampconverter@8.1.4/node_modules/jcampconverter/src/prepareSpectrum.js","../node_modules/.pnpm/jcampconverter@8.1.4/node_modules/jcampconverter/src/convert.js","../node_modules/.pnpm/common-spectrum@0.37.0/node_modules/common-spectrum/lib-esm/from/fromJcamp.js","../node_modules/.pnpm/convert-to-jcamp@4.5.0/node_modules/convert-to-jcamp/src/creatorNtuples.js","../node_modules/.pnpm/convert-to-jcamp@4.5.0/node_modules/convert-to-jcamp/src/fromJSON.js","../node_modules/.pnpm/convert-to-jcamp@4.5.0/node_modules/convert-to-jcamp/src/fromVariables.js","../node_modules/.pnpm/common-spectrum@0.37.0/node_modules/common-spectrum/lib-esm/to/toJcamps.js","../node_modules/.pnpm/common-spectrum@0.37.0/node_modules/common-spectrum/lib-esm/to/toJcamp.js","../node_modules/.pnpm/common-spectrum@0.37.0/node_modules/common-spectrum/lib-esm/util/peakPicking.js","../node_modules/.pnpm/common-spectrum@0.37.0/node_modules/common-spectrum/lib-esm/util/autoPeakPicking.js","../node_modules/.pnpm/common-spectrum@0.37.0/node_modules/common-spectrum/lib-esm/index.js","../src/jsgraph/getAnnotations.js","../src/from/fromJcamp.js","../src/index.js"],"sourcesContent":["const toString = Object.prototype.toString;\r\n\r\nexport default function isAnyArray(object) {\r\n  return toString.call(object).endsWith('Array]');\r\n}\r\n","(function(){function a(d){for(var e=0,f=d.length-1,g=void 0,h=void 0,i=void 0,j=c(e,f);!0;){if(f<=e)return d[j];if(f==e+1)return d[e]>d[f]&&b(d,e,f),d[j];for(g=c(e,f),d[g]>d[f]&&b(d,g,f),d[e]>d[f]&&b(d,e,f),d[g]>d[e]&&b(d,g,e),b(d,g,e+1),h=e+1,i=f;!0;){do h++;while(d[e]>d[h]);do i--;while(d[i]>d[e]);if(i<h)break;b(d,h,i)}b(d,e,i),i<=j&&(e=h),i>=j&&(f=i-1)}}var b=function b(d,e,f){var _ref;return _ref=[d[f],d[e]],d[e]=_ref[0],d[f]=_ref[1],_ref},c=function c(d,e){return~~((d+e)/2)};'undefined'!=typeof module&&module.exports?module.exports=a:window.median=a})();\n","import isArray from 'is-any-array';\nimport quickSelectMedian from 'median-quickselect';\n\nfunction median(input) {\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  return quickSelectMedian(input.slice());\n}\n\nexport default median;\n","import isAnyArray from 'is-any-array';\n\n/**\n * This function xAdd the first array by the second array or a constant value to each element of the first array\n * @param {Array<Number>} array1 - the array that will be rotated\n * @param {Array|Number} array2\n * @return {Array}\n */\nexport function xAdd(array1, array2) {\n  let isConstant = false;\n  let constant;\n  if (isAnyArray(array2)) {\n    if (array1.length !== array2.length) {\n      throw new Error('sub: size of array1 and array2 must be identical');\n    }\n  } else {\n    isConstant = true;\n    constant = Number(array2);\n  }\n\n  let array3 = new Array(array1.length);\n  if (isConstant) {\n    for (let i = 0; i < array1.length; i++) {\n      array3[i] = array1[i] + constant;\n    }\n  } else {\n    for (let i = 0; i < array1.length; i++) {\n      array3[i] = array1[i] + array2[i];\n    }\n  }\n\n  return array3;\n}\n","import isAnyArray from 'is-any-array';\n/**\n * This function xMultiply the first array by the second array or a constant value to each element of the first array\n * @param {Array} array1 - the array that will be rotated\n * @param {Array|Number} array2\n * @return {Float64Array}\n */\nexport function xMultiply(array1, array2) {\n  let isConstant = false;\n  let constant;\n  if (isAnyArray(array2)) {\n    if (array1.length !== array2.length) {\n      throw new Error('sub: size of array1 and array2 must be identical');\n    }\n  } else {\n    isConstant = true;\n    constant = Number(array2);\n  }\n\n  let array3 = new Float64Array(array1.length);\n  if (isConstant) {\n    for (let i = 0; i < array1.length; i++) {\n      array3[i] = array1[i] * constant;\n    }\n  } else {\n    for (let i = 0; i < array1.length; i++) {\n      array3[i] = array1[i] * array2[i];\n    }\n  }\n\n  return array3;\n}\n","import isAnyArray from 'is-any-array';\n\n/**\n * This function divide the first array by the second array or a constant value to each element of the first array\n * @param {Array<Number>} array1 - the array that will be rotated\n * @param {Array<Number>|Number} array2\n * @return {Array}\n */\nexport function xDivide(array1, array2) {\n  let isConstant = false;\n  let constant;\n  if (isAnyArray(array2)) {\n    if (array1.length !== array2.length) {\n      throw new Error('sub: size of array1 and array2 must be identical');\n    }\n  } else {\n    isConstant = true;\n    constant = Number(array2);\n  }\n\n  let array3 = new Array(array1.length);\n  if (isConstant) {\n    for (let i = 0; i < array1.length; i++) {\n      array3[i] = array1[i] / constant;\n    }\n  } else {\n    for (let i = 0; i < array1.length; i++) {\n      array3[i] = array1[i] / array2[i];\n    }\n  }\n\n  return array3;\n}\n","/**\n * Returns the closest index of a `target` in an ordered array\n * @param {array<Number>} array\n * @param {number} target\n */\n\nexport function xFindClosestIndex(array, target) {\n  let low = 0;\n  let high = array.length - 1;\n  let middle = 0;\n  while (high - low > 1) {\n    middle = low + ((high - low) >> 1);\n    if (array[middle] < target) {\n      low = middle;\n    } else if (array[middle] > target) {\n      high = middle;\n    } else {\n      return middle;\n    }\n  }\n\n  if (low < array.length - 1) {\n    if (Math.abs(target - array[low]) < Math.abs(array[low + 1] - target)) {\n      return low;\n    } else {\n      return low + 1;\n    }\n  } else {\n    return low;\n  }\n}\n","import isArray from 'is-any-array';\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\n/**\r\n * Fill an array with sequential numbers\r\n * @param {Array<number>} [input] - optional destination array (if not provided a new array will be created)\r\n * @param {object} [options={}]\r\n * @param {number} [options.from=0] - first value in the array\r\n * @param {number} [options.to=10] - last value in the array\r\n * @param {number} [options.size=input.length] - size of the array (if not provided calculated from step)\r\n * @param {number} [options.step] - if not provided calculated from size\r\n * @return {Array<number>}\r\n */\n\nfunction sequentialFill() {\n  var input = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (_typeof(input) === 'object' && !isArray(input)) {\n    options = input;\n    input = [];\n  }\n\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  var _options = options,\n      _options$from = _options.from,\n      from = _options$from === void 0 ? 0 : _options$from,\n      _options$to = _options.to,\n      to = _options$to === void 0 ? 10 : _options$to,\n      _options$size = _options.size,\n      size = _options$size === void 0 ? input.length : _options$size,\n      step = _options.step;\n\n  if (size !== 0 && step) {\n    throw new Error('step is defined by the array size');\n  }\n\n  if (!size) {\n    if (step) {\n      size = Math.floor((to - from) / step) + 1;\n    } else {\n      size = to - from + 1;\n    }\n  }\n\n  if (!step && size) {\n    step = (to - from) / (size - 1);\n  }\n\n  if (Array.isArray(input)) {\n    // only works with normal array\n    input.length = 0;\n\n    for (var i = 0; i < size; i++) {\n      input.push(from);\n      from += step;\n    }\n  } else {\n    if (input.length !== size) {\n      throw new Error('sequentialFill typed array must have the correct length');\n    }\n\n    for (var _i = 0; _i < size; _i++) {\n      input[_i] = from;\n      from += step;\n    }\n  }\n\n  return input;\n}\n\nexport default sequentialFill;\n","/**\n * Returns true if x is monotone\n * @param {Array} array\n * @return {boolean}\n */\nexport function xIsMonotone(array) {\n  if (array.length <= 2) {\n    return true;\n  }\n  if (array[0] === array[1]) {\n    // maybe a constant series\n    for (let i = 1; i < array.length - 1; i++) {\n      if (array[i] !== array[i + 1]) return false;\n    }\n    return true;\n  }\n\n  if (array[0] < array[array.length - 1]) {\n    for (let i = 0; i < array.length - 1; i++) {\n      if (array[i] >= array[i + 1]) return false;\n    }\n  } else {\n    for (let i = 0; i < array.length - 1; i++) {\n      if (array[i] <= array[i + 1]) return false;\n    }\n  }\n  return true;\n}\n","import isArray from 'is-any-array';\n\nfunction sum(input) {\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var sumValue = 0;\n\n  for (var i = 0; i < input.length; i++) {\n    sumValue += input[i];\n  }\n\n  return sumValue;\n}\n\nexport default sum;\n","import sum from 'ml-array-sum';\n\nfunction mean(input) {\n  return sum(input) / input.length;\n}\n\nexport default mean;\n","import isArray from 'is-any-array';\n\nfunction min(input) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var _options$fromIndex = options.fromIndex,\n      fromIndex = _options$fromIndex === void 0 ? 0 : _options$fromIndex,\n      _options$toIndex = options.toIndex,\n      toIndex = _options$toIndex === void 0 ? input.length : _options$toIndex;\n\n  if (fromIndex < 0 || fromIndex >= input.length || !Number.isInteger(fromIndex)) {\n    throw new Error('fromIndex must be a positive integer smaller than length');\n  }\n\n  if (toIndex <= fromIndex || toIndex > input.length || !Number.isInteger(toIndex)) {\n    throw new Error('toIndex must be an integer greater than fromIndex and at most equal to length');\n  }\n\n  var minValue = input[fromIndex];\n\n  for (var i = fromIndex + 1; i < toIndex; i++) {\n    if (input[i] < minValue) minValue = input[i];\n  }\n\n  return minValue;\n}\n\nexport default min;\n","import isArray from 'is-any-array';\n\nfunction max(input) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var _options$fromIndex = options.fromIndex,\n      fromIndex = _options$fromIndex === void 0 ? 0 : _options$fromIndex,\n      _options$toIndex = options.toIndex,\n      toIndex = _options$toIndex === void 0 ? input.length : _options$toIndex;\n\n  if (fromIndex < 0 || fromIndex >= input.length || !Number.isInteger(fromIndex)) {\n    throw new Error('fromIndex must be a positive integer smaller than length');\n  }\n\n  if (toIndex <= fromIndex || toIndex > input.length || !Number.isInteger(toIndex)) {\n    throw new Error('toIndex must be an integer greater than fromIndex and at most equal to length');\n  }\n\n  var maxValue = input[fromIndex];\n\n  for (var i = fromIndex + 1; i < toIndex; i++) {\n    if (input[i] > maxValue) maxValue = input[i];\n  }\n\n  return maxValue;\n}\n\nexport default max;\n","import isAnyArray from 'is-any-array';\n/**\n * This function xSubtract the first array by the second array or a constant value from each element of the first array\n * @param {Array} array1 - the array that will be rotated\n * @param {Array|Number} array2\n * @return {Array}\n */\nexport function xSubtract(array1, array2) {\n  let isConstant = false;\n  let constant;\n  if (isAnyArray(array2)) {\n    if (array1.length !== array2.length) {\n      throw new Error('sub: size of array1 and array2 must be identical');\n    }\n  } else {\n    isConstant = true;\n    constant = Number(array2);\n  }\n\n  let array3 = new Array(array1.length);\n  if (isConstant) {\n    for (let i = 0; i < array1.length; i++) {\n      array3[i] = array1[i] - constant;\n    }\n  } else {\n    for (let i = 0; i < array1.length; i++) {\n      array3[i] = array1[i] - array2[i];\n    }\n  }\n\n  return array3;\n}\n","import isAnyArray from 'is-any-array';\n\n/**\n * Throw an error in no an object of x,y arrays\n * @param {DataXY} [data={}]\n */\nexport function xyCheck(data = {}) {\n  if (!isAnyArray(data.x) || !isAnyArray(data.y)) {\n    throw new Error('Data must be an object of x and y arrays');\n  }\n  if (data.x.length !== data.y.length) {\n    throw new Error('The x and y arrays mush have the same length');\n  }\n}\n","import { xyCheck } from './xyCheck';\n\n/**\n * Filters x,y values to allow strictly growing values in x axis.\n * @param {DataXY} [data={}] - Object that contains property x (an ordered increasing array) and y (an array)\n * @return {DataXY}\n */\nexport function xyEnsureGrowingX(data = {}) {\n  xyCheck(data);\n  const x = Array.from(data.x);\n  const y = Array.from(data.y);\n  let prevX = -Infinity;\n  let ansX = [];\n  let ansY = [];\n\n  for (let index = 0; index < x.length; index++) {\n    if (prevX < x[index]) {\n      ansX.push(x[index]);\n      ansY.push(y[index]);\n      prevX = x[index];\n    }\n  }\n  return { x: ansX, y: ansY };\n}\n","import { xyCheck } from './xyCheck';\n/**\n * Filter out all the points for which x <= 0. Useful to display log scale data\n * @param {DataXY} [data={}]\n * @return {{x:[],y:[]}} An object with the filtered data\n */\n\nexport function xyFilterXPositive(data = {}) {\n  xyCheck(data);\n  const { x, y } = data;\n  const newX = [];\n  const newY = [];\n  for (let i = 0; i < x.length; i++) {\n    if (x[i] > 0) {\n      newX.push(x[i]);\n      newY.push(y[i]);\n    }\n  }\n\n  return { x: newX, y: newY };\n}\n","import { xFindClosestIndex } from '../x/xFindClosestIndex';\n\nimport { xyCheck } from './xyCheck';\n\n/**\n * Find the closest maximum going up hill\n * @param {DataXY} [data={}] - Object that contains property x (an ordered increasing array) and y (an array)\n * @param {object} [options={}]\n * @param {number} [options.target]\n * @param {number} [options.targetIndex=0]\n * @return {{x,y,xIndex}} An object with the x/y value\n */\n\nexport function xyMaxClosestYPoint(data, options = {}) {\n  xyCheck(data);\n  const { x, y } = data;\n\n  let { target, targetIndex } = options;\n\n  if (targetIndex === undefined) {\n    if (target !== undefined) {\n      targetIndex = xFindClosestIndex(x, target);\n    } else {\n      targetIndex = 0;\n    }\n  }\n\n  let previousIndex = Number.MIN_SAFE_INTEGER;\n  let currentIndex = targetIndex;\n\n  let xyMaxY = y[targetIndex];\n\n  while (currentIndex !== previousIndex) {\n    previousIndex = currentIndex;\n    if (currentIndex > 0 && y[currentIndex - 1] > xyMaxY) {\n      currentIndex--;\n    } else if (currentIndex < x.length - 1 && y[currentIndex + 1] > xyMaxY) {\n      currentIndex++;\n    }\n    xyMaxY = y[currentIndex];\n  }\n  return {\n    x: x[currentIndex],\n    y: y[currentIndex],\n    index: currentIndex,\n  };\n}\n","import { xFindClosestIndex } from '../x/xFindClosestIndex';\n\nimport { xyCheck } from './xyCheck';\n\n/**\n * Find the closest minimum going down hill\n * @param {DataXY} [data={}] - Object that contains property x (an ordered increasing array) and y (an array)\n * @param {object} [options={}]\n * @param {number} [options.target]\n * @param {number} [options.targetIndex=0]\n * @return {{x,y,xIndex}} An object with the x/y value\n */\n\nexport function xyMinClosestYPoint(data, options = {}) {\n  xyCheck(data);\n  const { x, y } = data;\n\n  let { target, targetIndex } = options;\n\n  if (targetIndex === undefined) {\n    if (target !== undefined) {\n      targetIndex = xFindClosestIndex(x, target);\n    } else {\n      targetIndex = 0;\n    }\n  }\n\n  let previousIndex = Number.MIN_SAFE_INTEGER;\n  let currentIndex = targetIndex;\n\n  let minY = y[targetIndex];\n\n  while (currentIndex !== previousIndex) {\n    previousIndex = currentIndex;\n    if (currentIndex > 0 && y[currentIndex - 1] < minY) {\n      currentIndex--;\n    } else if (currentIndex < x.length - 1 && y[currentIndex + 1] < minY) {\n      currentIndex++;\n    }\n    minY = y[currentIndex];\n  }\n  return {\n    x: x[currentIndex],\n    y: y[currentIndex],\n    index: currentIndex,\n  };\n}\n","export const GAUSSIAN_EXP_FACTOR = -4 * Math.LN2;\nexport const ROOT_PI_OVER_LN2 = Math.sqrt(Math.PI / Math.LN2);\nexport const ROOT_THREE = Math.sqrt(3);\nexport const ROOT_2LN2 = Math.sqrt(2 * Math.LN2);\nexport const ROOT_2LN2_MINUS_ONE = Math.sqrt(2 * Math.LN2) - 1;\n","// https://en.wikipedia.org/wiki/Error_function#Inverse_functions\n// This code yields to a good approximation\n\n// If needed a better implementation using polynomial can be found on https://en.wikipedia.org/wiki/Error_function#Inverse_functions\n\nexport default function erfinv(x) {\n  let a = 0.147;\n  if (x === 0) return 0;\n  let ln1MinusXSqrd = Math.log(1 - x * x);\n  let lnEtcBy2Plus2 = ln1MinusXSqrd / 2 + 2 / (Math.PI * a);\n  let firstSqrt = Math.sqrt(lnEtcBy2Plus2 ** 2 - ln1MinusXSqrd / a);\n  let secondSqrt = Math.sqrt(firstSqrt - lnEtcBy2Plus2);\n  return secondSqrt * (x > 0 ? 1 : -1);\n}\n","import {\n  ROOT_2LN2,\n  GAUSSIAN_EXP_FACTOR,\n  ROOT_PI_OVER_LN2,\n} from '../util/constants';\nimport erfinv from '../util/erfinv';\n\nexport class Gaussian {\n  /**\n   * @param {object} [options = {}]\n   * @param {number} [options.height=4*LN2/(PI*FWHM)] Define the height of the peak, by default area=1 (normalized)\n   * @param {number} [options.fwhm = 500] - Full Width at Half Maximum in the number of points in FWHM.\n   * @param {number} [options.sd] - Standard deviation, if it's defined options.fwhm will be ignored and the value will be computed sd * Math.sqrt(8 * Math.LN2);\n   */\n  constructor(options = {}) {\n    this.fwhm = options.sd\n      ? Gaussian.widthToFWHM(2 * options.sd)\n      : options.fwhm\n      ? options.fwhm\n      : 500;\n    this.height =\n      options.height === undefined\n        ? Math.sqrt(-GAUSSIAN_EXP_FACTOR / Math.PI) / this.fwhm\n        : options.height;\n  }\n  /**\n   * Calculate a gaussian shape\n   * @param {object} [options = {}]\n   * @param {number} [options.factor = 6] - Number of time to take fwhm to calculate length. Default covers 99.99 % of area.\n   * @param {number} [options.length = fwhm * factor + 1] - total number of points to calculate\n   * @return {Float64Array} y values\n   */\n\n  getData(options = {}) {\n    let { length, factor = this.getFactor() } = options;\n\n    if (!length) {\n      length = Math.min(Math.ceil(this.fwhm * factor), Math.pow(2, 25) - 1);\n      if (length % 2 === 0) length++;\n    }\n\n    const center = (length - 1) / 2;\n    const data = new Float64Array(length);\n    for (let i = 0; i <= center; i++) {\n      data[i] = this.fct(i - center) * this.height;\n      data[length - 1 - i] = data[i];\n    }\n\n    return data;\n  }\n\n  /**\n   * Return a parameterized function of a gaussian shape (see README for equation).\n   * @param {number} x - x value to calculate.\n   * @returns {number} - the y value of gaussian with the current parameters.\n   */\n  fct(x) {\n    return Gaussian.fct(x, this.fwhm);\n  }\n\n  /**\n   * Calculate the number of times FWHM allows to reach a specific area coverage\n   * @param {number} [area=0.9999]\n   * @returns {number}\n   */\n  getFactor(area = 0.9999) {\n    return Gaussian.getFactor(area);\n  }\n\n  /**\n   * Calculate the area of the shape.\n   * @returns {number} - returns the area.\n   */\n\n  getArea() {\n    return Gaussian.getArea(this.fwhm, { height: this.height });\n  }\n\n  /**\n   * Compute the value of Full Width at Half Maximum (FWHM) from the width between the inflection points.\n   * //https://mathworld.wolfram.com/GaussianFunction.html\n   * @param {number} width - Width between the inflection points\n   * @returns {number} fwhm\n   */\n  widthToFWHM(width) {\n    //https://mathworld.wolfram.com/GaussianFunction.html\n    return Gaussian.widthToFWHM(width);\n  }\n\n  /**\n   * Compute the value of width between the inflection points from Full Width at Half Maximum (FWHM).\n   * //https://mathworld.wolfram.com/GaussianFunction.html\n   * @param {number} fwhm - Full Width at Half Maximum.\n   * @returns {number} width\n   */\n  fwhmToWidth(fwhm = this.fwhm) {\n    return Gaussian.fwhmToWidth(fwhm);\n  }\n\n  /**\n   * set a new full width at half maximum\n   * @param {number} fwhm - full width at half maximum\n   */\n  setFWHM(fwhm) {\n    this.fwhm = fwhm;\n  }\n\n  /**\n   * set a new height\n   * @param {number} height - The maximal intensity of the shape.\n   */\n  setHeight(height) {\n    this.height = height;\n  }\n}\n\n/**\n * Return a parameterized function of a gaussian shape (see README for equation).\n * @param {number} x - x value to calculate.\n * @param {number} fwhm - full width half maximum\n * @returns {number} - the y value of gaussian with the current parameters.\n */\nGaussian.fct = function fct(x, fwhm = 500) {\n  return Math.exp(GAUSSIAN_EXP_FACTOR * Math.pow(x / fwhm, 2));\n};\n\n/**\n * Compute the value of Full Width at Half Maximum (FWHM) from the width between the inflection points.\n * //https://mathworld.wolfram.com/GaussianFunction.html\n * @param {number} width - Width between the inflection points\n * @returns {number} fwhm\n */\nGaussian.widthToFWHM = function widthToFWHM(width) {\n  return width * ROOT_2LN2;\n};\n\n/**\n * Compute the value of width between the inflection points from Full Width at Half Maximum (FWHM).\n * //https://mathworld.wolfram.com/GaussianFunction.html\n * @param {number} fwhm - Full Width at Half Maximum.\n * @returns {number} width\n */\nGaussian.fwhmToWidth = function fwhmToWidth(fwhm) {\n  return fwhm / ROOT_2LN2;\n};\n\n/**\n * Calculate the area of a specific shape.\n * @param {number} fwhm - Full width at half maximum.\n * @param {object} [options = {}] - options.\n * @param {number} [options.height = 1] - Maximum y value of the shape.\n * @returns {number} - returns the area of the specific shape and parameters.\n */\n\nGaussian.getArea = function getArea(fwhm, options = {}) {\n  let { height = 1 } = options;\n  return (height * ROOT_PI_OVER_LN2 * fwhm) / 2;\n};\n\n/**\n * Calculate the number of times FWHM allows to reach a specific area coverage.\n * @param {number} [area=0.9999]\n * @returns {number}\n */\nGaussian.getFactor = function getFactor(area = 0.9999) {\n  return Math.sqrt(2) * erfinv(area);\n};\n","import { ROOT_THREE } from '../util/constants';\n\nexport class Lorentzian {\n  /**\n   * @param {object} [options = {}]\n   * @param {number} [options.height=2/(PI*FWHM)] Define the height of the peak, by default area=1 (normalized)\n   * @param {number} [options.fwhm = 500] - Full Width at Half Maximum in the number of points in FWHM.\n   * @param {number} [options.sd] - Standard deviation, if it's defined options.fwhm will be ignored and the value will be computed sd * Math.sqrt(8 * Math.LN2);\n   */\n  constructor(options = {}) {\n    this.fwhm = options.fwhm === undefined ? 500 : options.fwhm;\n    this.height =\n      options.height === undefined ? 2 / Math.PI / this.fwhm : options.height;\n  }\n  /**\n   * Calculate a lorentzian shape\n   * @param {object} [options = {}]\n   * @param {number} [options.factor = Math.tan(Math.PI * (0.9999 - 0.5))] - Number of time to take fwhm to calculate length. Default covers 99.99 % of area.\n   * @param {number} [options.length = fwhm * factor + 1] - total number of points to calculate\n   * @return {Float64Array} y values\n   */\n  getData(options = {}) {\n    let { length, factor = this.getFactor() } = options;\n\n    if (!length) {\n      length = Math.min(Math.ceil(this.fwhm * factor), Math.pow(2, 25) - 1);\n      if (length % 2 === 0) length++;\n    }\n\n    const center = (length - 1) / 2;\n    const data = new Float64Array(length);\n    for (let i = 0; i <= center; i++) {\n      data[i] = this.fct(i - center) * this.height;\n      data[length - 1 - i] = data[i];\n    }\n    return data;\n  }\n\n  /**\n   * Return a parameterized function of a lorentzian shape (see README for equation).\n   * @param {number} x - x value to calculate.\n   * @returns {number} - the y value of lorentzian with the current parameters.\n   */\n  fct(x) {\n    return Lorentzian.fct(x, this.fwhm);\n  }\n\n  /**\n   * Calculate the number of times FWHM allows to reach a specific area coverage\n   * @param {number} [area=0.9999]\n   * @returns {number}\n   */\n  getFactor(area = 0.9999) {\n    return Lorentzian.getFactor(area);\n  }\n\n  /**\n   * Calculate the area of the shape.\n   * @returns {number} - returns the area.\n   */\n\n  getArea() {\n    return Lorentzian.getArea(this.fwhm, { height: this.height });\n  }\n\n  /**\n   * Compute the value of width between the inflection points of a specific shape from Full Width at Half Maximum (FWHM).\n   * //https://mathworld.wolfram.com/LorentzianFunction.html\n   * @param {number} [fwhm] - Full Width at Half Maximum.\n   * @returns {number} width between the inflection points\n   */\n  fwhmToWidth(fwhm = this.fwhm) {\n    return Lorentzian.fwhmToWidth(fwhm);\n  }\n\n  /**\n   * Compute the value of Full Width at Half Maximum (FWHM) of a specific shape from the width between the inflection points.\n   * //https://mathworld.wolfram.com/LorentzianFunction.html\n   * @param {number} [width] Width between the inflection points\n   * @returns {number} fwhm\n   */\n  widthToFWHM(width) {\n    return Lorentzian.widthToFWHM(width);\n  }\n  /**\n   * set a new full width at half maximum\n   * @param {number} fwhm - full width at half maximum\n   */\n  setFWHM(fwhm) {\n    this.fwhm = fwhm;\n  }\n\n  /**\n   * set a new height\n   * @param {number} height - The maximal intensity of the shape.\n   */\n  setHeight(height) {\n    this.height = height;\n  }\n}\n\n/**\n * Return a parameterized function of a gaussian shape (see README for equation).\n * @param {number} x - x value to calculate.\n * @param {number} fwhm - full width half maximum\n * @returns {number} - the y value of gaussian with the current parameters.\n */\nLorentzian.fct = function fct(x, fwhm) {\n  const squareFWHM = fwhm * fwhm;\n  return squareFWHM / (4 * Math.pow(x, 2) + squareFWHM);\n};\n\n/**\n * Compute the value of width between the inflection points of a specific shape from Full Width at Half Maximum (FWHM).\n * //https://mathworld.wolfram.com/LorentzianFunction.html\n * @param {number} [fwhm] - Full Width at Half Maximum.\n * @returns {number} width between the inflection points\n */\nLorentzian.fwhmToWidth = function fwhmToWidth(fwhm) {\n  return fwhm / ROOT_THREE;\n};\n\n/**\n * Compute the value of Full Width at Half Maximum (FWHM) of a specific shape from the width between the inflection points.\n * //https://mathworld.wolfram.com/LorentzianFunction.html\n * @param {number} [width] Width between the inflection points\n * @returns {number} fwhm\n */\nLorentzian.widthToFWHM = function widthToFWHM(width) {\n  return width * ROOT_THREE;\n};\n\n/**\n * Calculate the area of a specific shape.\n * @param {number} fwhm - Full width at half maximum.\n * @param {*} [options = {}] - options.\n * @param {number} [options.height = 1] - Maximum y value of the shape.\n * @returns {number} - returns the area of the specific shape and parameters.\n */\nLorentzian.getArea = function getArea(fwhm, options = {}) {\n  let { height = 1 } = options;\n\n  return (height * Math.PI * fwhm) / 2;\n};\n\n/**\n * Calculate the number of times FWHM allows to reach a specific area coverage\n * @param {number} [area=0.9999]\n * @returns {number}\n */\nLorentzian.getFactor = function getFactor(area = 0.9999) {\n  return 2 * Math.tan(Math.PI * (area - 0.5));\n};\n","import {\n  GAUSSIAN_EXP_FACTOR,\n  ROOT_2LN2_MINUS_ONE,\n  ROOT_PI_OVER_LN2,\n} from '../util/constants';\n\nimport { Gaussian } from './Gaussian';\nimport { Lorentzian } from './Lorentzian';\n\nexport class PseudoVoigt {\n  /**\n   * @param {object} [options={}]\n   * @param {number} [options.height=1/(mu*FWHM/sqrt(4*LN2/PI)+(1-mu)*fwhm*PI*0.5)] Define the height of the peak, by default area=1 (normalized)\n   * @param {number} [options.fwhm=500] - Full Width at Half Maximum in the number of points in FWHM.\n   * @param {number} [options.mu=0.5] - ratio of gaussian contribution.\n   */\n\n  constructor(options = {}) {\n    this.mu = options.mu === undefined ? 0.5 : options.mu;\n    this.fwhm = options.fwhm === undefined ? 500 : options.fwhm;\n    this.height =\n      options.height === undefined\n        ? 1 /\n          ((this.mu / Math.sqrt(-GAUSSIAN_EXP_FACTOR / Math.PI)) * this.fwhm +\n            ((1 - this.mu) * this.fwhm * Math.PI) / 2)\n        : options.height;\n  }\n\n  /**\n   * Calculate a linear combination of gaussian and lorentzian function width an same full width at half maximum\n   * @param { object } [options = {}]\n   * @param { number } [options.factor = 2 * Math.tan(Math.PI * (0.9999 - 0.5))] - Number of time to take fwhm in the calculation of the length.Default covers 99.99 % of area.\n   * @param { number } [options.length = fwhm * factor + 1] - total number of points to calculate\n   * @return { object } - { fwhm, data<Float64Array>} - An with the number of points at half maximum and the array of y values covering the 99.99 % of the area.\n   */\n\n  getData(options = {}) {\n    let { length, factor = this.getFactor() } = options;\n    if (!length) {\n      length = Math.ceil(this.fwhm * factor);\n      if (length % 2 === 0) length++;\n    }\n\n    const center = (length - 1) / 2;\n\n    let data = new Float64Array(length);\n    for (let i = 0; i <= center; i++) {\n      data[i] = this.fct(i - center) * this.height;\n      data[length - 1 - i] = data[i];\n    }\n\n    return data;\n  }\n\n  /**\n   * Return a parameterized function of a linear combination of Gaussian and Lorentzian shapes where the full width at half maximum are the same for both kind of shapes (see README for equation).\n   * @param {number} [x] x value to calculate.\n   * @returns {number} - the y value of a pseudo voigt with the current parameters.\n   */\n\n  fct(x) {\n    return PseudoVoigt.fct(x, this.fwhm, this.mu);\n  }\n\n  /**\n   * Calculate the number of times FWHM allows to reach a specific area coverage\n   * @param {number} [area=0.9999] - required area to be coverage\n   * @param {number} [mu=this.mu] - ratio of gaussian contribution.\n   * @returns {number}\n   */\n  getFactor(area = 0.9999, mu = this.mu) {\n    return PseudoVoigt.getFactor(area, mu);\n  }\n\n  /**\n   * Calculate the area of the shape.\n   * @returns {number} - returns the area.\n   */\n  getArea() {\n    return PseudoVoigt.getArea(this.fwhm, { height: this.height, mu: this.mu });\n  }\n\n  /**\n   * Compute the value of Full Width at Half Maximum (FMHM) from width between the inflection points.\n   * @param {number} width - width between the inflection points\n   * @param {number} [mu = 0.5] - ratio of gaussian contribution.\n   * @returns {number} Full Width at Half Maximum (FMHM).\n   */\n  widthToFWHM(width, mu) {\n    return PseudoVoigt.widthToFWHM(width, mu);\n  }\n  /**\n   * Compute the value of width between the inflection points from Full Width at Half Maximum (FWHM).\n   * @param {number} fwhm - Full Width at Half Maximum.\n   * @param {number} [mu] - ratio of gaussian contribution.\n   * @returns {number} width between the inflection points.\n   */\n  fwhmToWidth(fwhm = this.fwhm, mu = this.mu) {\n    return PseudoVoigt.fwhmToWidth(fwhm, mu);\n  }\n\n  /**\n   * set a new full width at half maximum\n   * @param {number} fwhm - full width at half maximum\n   */\n  setFWHM(fwhm) {\n    this.fwhm = fwhm;\n  }\n\n  /**\n   * set a new height\n   * @param {number} height - The maximal intensity of the shape.\n   */\n  setHeight(height) {\n    this.height = height;\n  }\n\n  /**\n   * set a new mu\n   * @param {number} mu - ratio of gaussian contribution.\n   */\n  setMu(mu) {\n    this.mu = mu;\n  }\n}\n\n/**\n * Return a parameterized function of a gaussian shape (see README for equation).\n * @param {number} x - x value to calculate.\n * @param {number} fwhm - full width half maximum\n * @param {number} [mu=0.5] - ratio of gaussian contribution.\n * @returns {number} - the y value of gaussian with the current parameters.\n */\nPseudoVoigt.fct = function fct(x, fwhm, mu = 0.5) {\n  return (1 - mu) * Lorentzian.fct(x, fwhm) + mu * Gaussian.fct(x, fwhm);\n};\n\n/**\n * Compute the value of Full Width at Half Maximum (FMHM) from width between the inflection points.\n * @param {number} width - width between the inflection points\n * @param {number} [mu = 0.5] - ratio of gaussian contribution.\n * @returns {number} Full Width at Half Maximum (FMHM).\n */\nPseudoVoigt.widthToFWHM = function widthToFWHM(width, mu = 0.5) {\n  return width * (mu * ROOT_2LN2_MINUS_ONE + 1);\n};\n/**\n * Compute the value of width between the inflection points from Full Width at Half Maximum (FWHM).\n * @param {number} fwhm - Full Width at Half Maximum.\n * @param {number} [mu = 0.5] - ratio of gaussian contribution.\n * @returns {number} width between the inflection points.\n */\nPseudoVoigt.fwhmToWidth = function fwhmToWidth(fwhm, mu = 0.5) {\n  return fwhm / (mu * ROOT_2LN2_MINUS_ONE + 1);\n};\n\n/**\n * Calculate the area of a specific shape.\n * @param {number} fwhm - Full width at half maximum.\n * @param {*} [options = {}] - options.\n * @param {number} [options.height = 1] - Maximum y value of the shape.\n * @param {number} [options.mu = 0.5] - ratio of gaussian contribution.\n * @returns {number} - returns the area of the specific shape and parameters.\n */\nPseudoVoigt.getArea = function getArea(fwhm, options = {}) {\n  let { height = 1, mu = 0.5 } = options;\n  return (fwhm * height * (mu * ROOT_PI_OVER_LN2 + (1 - mu) * Math.PI)) / 2;\n};\n\n/**\n * Calculate the number of times FWHM allows to reach a specific area coverage\n * @param {number} [area=0.9999] - required area to be coverage\n * @param {number} [mu=this.mu] - ratio of gaussian contribution.\n * @returns {number}\n */\nPseudoVoigt.getFactor = function getFactor(area = 0.9999, mu = 0.5) {\n  return mu < 1 ? Lorentzian.getFactor(area) : Gaussian.getFactor(area);\n};\n","import { ROOT_2LN2, GAUSSIAN_EXP_FACTOR } from '../util/constants';\nimport erfinv from '../util/erfinv';\n\nlet axis = ['x', 'y'];\n\nexport class Gaussian2D {\n  /**\n   * @param {object} [options = {}]\n   * @param {number} [options.height=4*LN2/(PI*xFWHM*yFWHM)] Define the height of the peak, by default area=1 (normalized).\n   * @param {number} [options.fwhm = 500] - Full Width at Half Maximum in the number of points in FWHM used if x or y has not the fwhm property.\n   * @param {object} [options.x] - Options for x axis.\n   * @param {number} [options.x.fwhm = fwhm] - Full Width at Half Maximum in the number of points in FWHM for x axis.\n   * @param {number} [options.x.sd] - Standard deviation for x axis, if it's defined options.x.fwhm will be ignored and the value will be computed sd * Math.sqrt(8 * Math.LN2);\n   * @param {object} [options.y] - Options for y axis.\n   * @param {number} [options.y.fwhm = fwhm] - Full Width at Half Maximum in the number of points in FWHM for y axis.\n   * @param {number} [options.y.sd] - Standard deviation for y axis, if it's defined options.y.fwhm will be ignored and the value will be computed sd * Math.sqrt(8 * Math.LN2);\n   */\n  constructor(options = {}) {\n    let { fwhm: globalFWHM = 500 } = options;\n\n    for (let i of axis) {\n      let fwhm;\n      if (!options[i]) {\n        fwhm = globalFWHM;\n      } else {\n        fwhm = options[i].sd\n          ? Gaussian2D.widthToFWHM(2 * options[i].sd)\n          : options[i].fwhm || globalFWHM;\n      }\n      this[i] = { fwhm };\n    }\n\n    this.height =\n      options.height === undefined\n        ? -GAUSSIAN_EXP_FACTOR / Math.PI / this.x.fwhm / this.y.fwhm\n        : options.height;\n  }\n  /**\n   * Calculate a Gaussian2D shape\n   * @param {object} [options = {}]\n   * @param {number} [options.factor] - Number of time to take fwhm to calculate length. Default covers 99.99 % of area.\n   * @param {object} [options.x] - parameter for x axis.\n   * @param {number} [options.x.length=fwhm*factor+1] - length on x axis.\n   * @param {number} [options.x.factor=factor] - Number of time to take fwhm to calculate length. Default covers 99.99 % of area.\n   * @param {object} [options.y] - parameter for y axis.\n   * @param {number} [options.y.length=fwhm*factor+1] - length on y axis.\n   * @param {number} [options.y.factor=factor] - Number of time to take fwhm to calculate length. Default covers 99.99 % of area.\n   * @return {Array<Float64Array>} - z values.\n   */\n\n  getData(options = {}) {\n    let { x = {}, y = {}, factor = this.getFactor(), length } = options;\n\n    let xLength = x.length || length;\n    if (!xLength) {\n      let { factor: xFactor = factor } = x;\n      xLength = Math.min(Math.ceil(this.x.fwhm * xFactor), Math.pow(2, 25) - 1);\n      if (xLength % 2 === 0) xLength++;\n    }\n\n    let yLength = y.length || length;\n    if (!yLength) {\n      let { factor: yFactor = factor } = y;\n      yLength = Math.min(Math.ceil(this.y.fwhm * yFactor), Math.pow(2, 25) - 1);\n      if (yLength % 2 === 0) yLength++;\n    }\n\n    const xCenter = (xLength - 1) / 2;\n    const yCenter = (yLength - 1) / 2;\n    const data = new Array(xLength);\n    for (let i = 0; i < xLength; i++) {\n      data[i] = new Array(yLength);\n    }\n\n    for (let i = 0; i < xLength; i++) {\n      for (let j = 0; j < yLength; j++) {\n        data[i][j] = this.fct(i - xCenter, j - yCenter) * this.height;\n      }\n    }\n\n    return data;\n  }\n\n  /**\n   * Return the intensity value of a 2D gaussian shape (see README for equation).\n   * @param {number} x - x value to calculate.\n   * @param {number} y - y value to calculate.\n   * @returns {number} - the z value of bi-dimensional gaussian with the current parameters.\n   */\n  fct(x, y) {\n    return Gaussian2D.fct(x, y, this.x.fwhm, this.y.fwhm);\n  }\n\n  /**\n   * Calculate the number of times FWHM allows to reach a specific volume coverage.\n   * @param {number} [volume=0.9999]\n   * @returns {number}\n   */\n  getFactor(volume = 0.9999) {\n    return Gaussian2D.getFactor(volume);\n  }\n\n  /**\n   * Calculate the volume of the shape.\n   * @returns {number} - returns the volume.\n   */\n\n  getVolume() {\n    return Gaussian2D.getVolume(this.x.fwhm, this.y.fwhm, {\n      height: this.height,\n    });\n  }\n\n  /**\n   * Compute the value of Full Width at Half Maximum (FWHM) from the width between the inflection points.\n   * //https://mathworld.wolfram.com/Gaussian2DFunction.html\n   * @param {number} width - Width between the inflection points\n   * @returns {number} fwhm\n   */\n  widthToFWHM(width) {\n    //https://mathworld.wolfram.com/Gaussian2DFunction.html\n    return Gaussian2D.widthToFWHM(width);\n  }\n\n  /**\n   * Compute the value of width between the inflection points from Full Width at Half Maximum (FWHM).\n   * //https://mathworld.wolfram.com/Gaussian2DFunction.html\n   * @param {number} fwhm - Full Width at Half Maximum.\n   * @returns {number} width\n   */\n  fwhmToWidth(fwhm = this.x.fwhm) {\n    return Gaussian2D.fwhmToWidth(fwhm);\n  }\n\n  /**\n   * set a new full width at half maximum\n   * @param {number} fwhm - full width at half maximum\n   * @param {string|Array<string>} axisLabel - label of axis, if it is undefined fwhm is set to both axis.\n   */\n  setFWHM(fwhm, axisLabel) {\n    if (!axisLabel) axisLabel = axis;\n    if (!Array.isArray(axisLabel)) axisLabel = [axisLabel];\n    for (let i of axisLabel) {\n      let axisName = i.toLowerCase();\n      if (axisName !== 'y' && axisName !== 'x') {\n        throw new Error('axis label should be x or y');\n      }\n      this[axisName].fwhm = fwhm;\n    }\n  }\n\n  /**\n   * set a new height\n   * @param {number} height - The maximal intensity of the shape.\n   */\n  setHeight(height) {\n    this.height = height;\n  }\n}\n\n/**\n * Return a parameterized function of a Gaussian2D shape (see README for equation).\n * @param {number} x - x value to calculate.\n * @param {number} y - y value to calculate.\n * @param {number} fwhmX - full width half maximum in the x axis.\n * @param {number} fwhmY - full width half maximum in the y axis.\n * @returns {number} - the z value of bi-dimensional gaussian with the current parameters.\n */\nGaussian2D.fct = function fct(x, y, xFWHM = 500, yFWHM = 500) {\n  return Math.exp(\n    GAUSSIAN_EXP_FACTOR * (Math.pow(x / xFWHM, 2) + Math.pow(y / yFWHM, 2)),\n  );\n};\n\n/**\n * Compute the value of Full Width at Half Maximum (FWHM) from the width between the inflection points.\n * //https://mathworld.wolfram.com/Gaussian2DFunction.html\n * @param {number} width - Width between the inflection points\n * @returns {number} fwhm\n */\nGaussian2D.widthToFWHM = function widthToFWHM(width) {\n  return width * ROOT_2LN2;\n};\n\n/**\n * Compute the value of width between the inflection points from Full Width at Half Maximum (FWHM).\n * //https://mathworld.wolfram.com/Gaussian2DFunction.html\n * @param {number} fwhm - Full Width at Half Maximum.\n * @returns {number} width\n */\nGaussian2D.fwhmToWidth = function fwhmToWidth(fwhm) {\n  return fwhm / ROOT_2LN2;\n};\n\n/**\n * Calculate the volume of a specific shape.\n * @param {number} xFWHM - Full width at half maximum for x axis.\n * @param {number} yFWHM - Full width at half maximum for y axis.\n * @param {object} [options = {}] - options.\n * @param {number} [options.height = 1] - Maximum z value of the shape.\n * @returns {number} - returns the area of the specific shape and parameters.\n */\n\nGaussian2D.getVolume = function getVolume(xFWHM, yFWHM, options = {}) {\n  let { height = 1 } = options;\n  return (height * Math.PI * xFWHM * yFWHM) / Math.LN2 / 4;\n};\n\n/**@TODO look for a better factor\n * Calculate the number of times FWHM allows to reach a specific volume coverage.\n * @param {number} [volume=0.9999]\n * @returns {number}\n */\nGaussian2D.getFactor = function getFactor(volume = 0.9999) {\n  return Math.sqrt(2) * erfinv(volume);\n};\n","import { Gaussian } from '../classes/Gaussian';\nimport { Gaussian2D } from '../classes/Gaussian2D';\nimport { Lorentzian } from '../classes/Lorentzian';\nimport { PseudoVoigt } from '../classes/PseudoVoigt';\n\nexport function getShapeGenerator(options) {\n  let { kind = 'Gaussian', options: shapeOptions } = options;\n  switch (kind.toLowerCase().replace(/[^a-z^0-9]/g, '')) {\n    case 'gaussian':\n      return new Gaussian(shapeOptions);\n    case 'lorentzian':\n      return new Lorentzian(shapeOptions);\n    case 'pseudovoigt':\n      return new PseudoVoigt(shapeOptions);\n    case 'gaussian2d':\n      return new Gaussian2D(shapeOptions);\n    default:\n      throw new Error(`Unknown kind: ${kind}`);\n  }\n}\n","/**\n * Apply Savitzky Golay algorithm\n * @param {array} [ys] Array of y values\n * @param {array|number} [xs] Array of X or deltaX\n * @param {object} [options={}]\n * @param {number} [options.windowSize=9]\n * @param {number} [options.derivative=0]\n * @param {number} [options.polynomial=3]\n * @return {array} Array containing the new ys (same length)\n */\n\nexport default function SavitzkyGolay(ys, xs, options = {}) {\n  let { windowSize = 9, derivative = 0, polynomial = 3 } = options;\n\n  if (windowSize % 2 === 0 || windowSize < 5 || !Number.isInteger(windowSize)) {\n    throw new RangeError(\n      'Invalid window size (should be odd and at least 5 integer number)',\n    );\n  }\n  if (windowSize > ys.length) {\n    throw new RangeError(\n      `Window size is higher than the data length ${windowSize}>${ys.length}`,\n    );\n  }\n  if (derivative < 0 || !Number.isInteger(derivative)) {\n    throw new RangeError('Derivative should be a positive integer');\n  }\n  if (polynomial < 1 || !Number.isInteger(polynomial)) {\n    throw new RangeError('Polynomial should be a positive integer');\n  }\n  if (polynomial >= 6) {\n    // eslint-disable-next-line no-console\n    console.warn(\n      'You should not use polynomial grade higher than 5 if you are' +\n        ' not sure that your data arises from such a model. Possible polynomial oscillation problems',\n    );\n  }\n\n  let half = Math.floor(windowSize / 2);\n  let np = ys.length;\n  let ans = new Array(np);\n  let weights = fullWeights(windowSize, polynomial, derivative);\n  let hs = 0;\n  let constantH = true;\n  if (Array.isArray(xs)) {\n    constantH = false;\n  } else {\n    hs = Math.pow(xs, derivative);\n  }\n\n  //For the borders\n  for (let i = 0; i < half; i++) {\n    let wg1 = weights[half - i - 1];\n    let wg2 = weights[half + i + 1];\n    let d1 = 0;\n    let d2 = 0;\n    for (let l = 0; l < windowSize; l++) {\n      d1 += wg1[l] * ys[l];\n      d2 += wg2[l] * ys[np - windowSize + l];\n    }\n    if (constantH) {\n      ans[half - i - 1] = d1 / hs;\n      ans[np - half + i] = d2 / hs;\n    } else {\n      hs = getHs(xs, half - i - 1, half, derivative);\n      ans[half - i - 1] = d1 / hs;\n      hs = getHs(xs, np - half + i, half, derivative);\n      ans[np - half + i] = d2 / hs;\n    }\n  }\n\n  //For the internal points\n  let wg = weights[half];\n  for (let i = windowSize; i <= np; i++) {\n    let d = 0;\n    for (let l = 0; l < windowSize; l++) d += wg[l] * ys[l + i - windowSize];\n    if (!constantH) hs = getHs(xs, i - half - 1, half, derivative);\n    ans[i - half - 1] = d / hs;\n  }\n  return ans;\n}\n\nfunction getHs(h, center, half, derivative) {\n  let hs = 0;\n  let count = 0;\n  for (let i = center - half; i < center + half; i++) {\n    if (i >= 0 && i < h.length - 1) {\n      hs += h[i + 1] - h[i];\n      count++;\n    }\n  }\n  return Math.pow(hs / count, derivative);\n}\n\nfunction GramPoly(i, m, k, s) {\n  let Grampoly = 0;\n  if (k > 0) {\n    Grampoly =\n      ((4 * k - 2) / (k * (2 * m - k + 1))) *\n        (i * GramPoly(i, m, k - 1, s) + s * GramPoly(i, m, k - 1, s - 1)) -\n      (((k - 1) * (2 * m + k)) / (k * (2 * m - k + 1))) *\n        GramPoly(i, m, k - 2, s);\n  } else {\n    if (k === 0 && s === 0) {\n      Grampoly = 1;\n    } else {\n      Grampoly = 0;\n    }\n  }\n  return Grampoly;\n}\n\nfunction GenFact(a, b) {\n  let gf = 1;\n  if (a >= b) {\n    for (let j = a - b + 1; j <= a; j++) {\n      gf *= j;\n    }\n  }\n  return gf;\n}\n\nfunction Weight(i, t, m, n, s) {\n  let sum = 0;\n  for (let k = 0; k <= n; k++) {\n    //console.log(k);\n    sum +=\n      (2 * k + 1) *\n      (GenFact(2 * m, k) / GenFact(2 * m + k + 1, k + 1)) *\n      GramPoly(i, m, k, 0) *\n      GramPoly(t, m, k, s);\n  }\n  return sum;\n}\n\n/**\n *\n * @param m  Number of points\n * @param n  Polynomial grade\n * @param s  Derivative\n */\nfunction fullWeights(m, n, s) {\n  let weights = new Array(m);\n  let np = Math.floor(m / 2);\n  for (let t = -np; t <= np; t++) {\n    weights[t + np] = new Array(m);\n    for (let j = -np; j <= np; j++) {\n      weights[t + np][j + np] = Weight(j, t, np, n, s);\n    }\n  }\n  return weights;\n}\n\n/*function entropy(data,h,options){\n    var trend = SavitzkyGolay(data,h,trendOptions);\n    var copy = new Array(data.length);\n    var sum = 0;\n    var max = 0;\n    for(var i=0;i<data.length;i++){\n        copy[i] = data[i]-trend[i];\n    }\n\n    sum/=data.length;\n    console.log(sum+\" \"+max);\n    console.log(stat.array.standardDeviation(copy));\n    console.log(Math.abs(stat.array.mean(copy))/stat.array.standardDeviation(copy));\n    return sum;\n\n}\n\n\n\nfunction guessWindowSize(data, h){\n    console.log(\"entropy \"+entropy(data,h,trendOptions));\n    return 5;\n}\n*/\n","import { getShapeGenerator } from 'ml-peak-shape-generator';\nimport SG from 'ml-savitzky-golay-generalized';\n\n/**\n * Global spectra deconvolution\n * @param {object} data - Object data with x and y arrays\n * @param {Array<number>} [data.x] - Independent variable\n * @param {Array<number>} [data.y] - Dependent variable\n * @param {object} [options={}] - Options object\n * @param {object} [options.shape={}] - Object that specified the kind of shape to calculate the FWHM instead of width between inflection points. see https://mljs.github.io/peak-shape-generator/#inflectionpointswidthtofwhm\n * @param {object} [options.shape.kind='gaussian']\n * @param {object} [options.shape.options={}]\n * @param {object} [options.sgOptions] - Options object for Savitzky-Golay filter. See https://github.com/mljs/savitzky-golay-generalized#options\n * @param {number} [options.sgOptions.windowSize = 9] - points to use in the approximations\n * @param {number} [options.sgOptions.polynomial = 3] - degree of the polynomial to use in the approximations\n * @param {number} [options.minMaxRatio = 0.00025] - Threshold to determine if a given peak should be considered as a noise\n * @param {number} [options.broadRatio = 0.00] - If `broadRatio` is higher than 0, then all the peaks which second derivative\n * smaller than `broadRatio * maxAbsSecondDerivative` will be marked with the soft mask equal to true.\n * @param {number} [options.noiseLevel = 0] - Noise threshold in spectrum units\n * @param {boolean} [options.maxCriteria = true] - Peaks are local maximum(true) or minimum(false)\n * @param {boolean} [options.smoothY = true] - Select the peak intensities from a smoothed version of the independent variables\n * @param {boolean} [options.realTopDetection = false] - Use a quadratic optimizations with the peak and its 3 closest neighbors\n * to determine the true x,y values of the peak?\n * @param {number} [options.heightFactor = 0] - Factor to multiply the calculated height (usually 2)\n * @param {number} [options.derivativeThreshold = -1] - Filters based on the amplitude of the first derivative\n * @return {Array<object>}\n */\nexport function gsd(data, options = {}) {\n  let {\n    noiseLevel,\n    sgOptions = {\n      windowSize: 9,\n      polynomial: 3,\n    },\n    shape = {},\n    smoothY = true,\n    heightFactor = 0,\n    broadRatio = 0.0,\n    maxCriteria = true,\n    minMaxRatio = 0.00025,\n    derivativeThreshold = -1,\n    realTopDetection = false,\n  } = options;\n\n  let { y: yIn, x } = data;\n\n  const y = yIn.slice();\n  let equalSpaced = isEqualSpaced(x);\n\n  if (maxCriteria === false) {\n    for (let i = 0; i < y.length; i++) {\n      y[i] *= -1;\n    }\n  }\n\n  if (noiseLevel === undefined) {\n    noiseLevel = equalSpaced ? getNoiseLevel(y) : 0;\n  }\n  for (let i = 0; i < y.length; i++) {\n    y[i] -= noiseLevel;\n  }\n  for (let i = 0; i < y.length; i++) {\n    if (y[i] < 0) {\n      y[i] = 0;\n    }\n  }\n  // If the max difference between delta x is less than 5%, then,\n  // we can assume it to be equally spaced variable\n  let yData = y;\n  let dY, ddY;\n  const { windowSize, polynomial } = sgOptions;\n\n  if (equalSpaced) {\n    if (smoothY) {\n      yData = SG(y, x[1] - x[0], {\n        windowSize,\n        polynomial,\n        derivative: 0,\n      });\n    }\n    dY = SG(y, x[1] - x[0], {\n      windowSize,\n      polynomial,\n      derivative: 1,\n    });\n    ddY = SG(y, x[1] - x[0], {\n      windowSize,\n      polynomial,\n      derivative: 2,\n    });\n  } else {\n    if (smoothY) {\n      yData = SG(y, x, {\n        windowSize,\n        polynomial,\n        derivative: 0,\n      });\n    }\n    dY = SG(y, x, {\n      windowSize,\n      polynomial,\n      derivative: 1,\n    });\n    ddY = SG(y, x, {\n      windowSize,\n      polynomial,\n      derivative: 2,\n    });\n  }\n\n  const xData = x;\n  const dX = x[1] - x[0];\n  let maxDdy = 0;\n  let maxY = 0;\n  for (let i = 0; i < yData.length; i++) {\n    if (Math.abs(ddY[i]) > maxDdy) {\n      maxDdy = Math.abs(ddY[i]);\n    }\n    if (Math.abs(yData[i]) > maxY) {\n      maxY = Math.abs(yData[i]);\n    }\n  }\n\n  let lastMax = null;\n  let lastMin = null;\n  let minddY = [];\n  let intervalL = [];\n  let intervalR = [];\n  let broadMask = [];\n\n  // By the intermediate value theorem We cannot find 2 consecutive maximum or minimum\n  for (let i = 1; i < yData.length - 1; ++i) {\n    // filter based on derivativeThreshold\n    // console.log('pasa', y[i], dY[i], ddY[i]);\n    if (Math.abs(dY[i]) > derivativeThreshold) {\n      // Minimum in first derivative\n      if (\n        (dY[i] < dY[i - 1] && dY[i] <= dY[i + 1]) ||\n        (dY[i] <= dY[i - 1] && dY[i] < dY[i + 1])\n      ) {\n        lastMin = {\n          x: xData[i],\n          index: i,\n        };\n        if (dX > 0 && lastMax !== null) {\n          intervalL.push(lastMax);\n          intervalR.push(lastMin);\n        }\n      }\n\n      // Maximum in first derivative\n      if (\n        (dY[i] >= dY[i - 1] && dY[i] > dY[i + 1]) ||\n        (dY[i] > dY[i - 1] && dY[i] >= dY[i + 1])\n      ) {\n        lastMax = {\n          x: xData[i],\n          index: i,\n        };\n        if (dX < 0 && lastMin !== null) {\n          intervalL.push(lastMax);\n          intervalR.push(lastMin);\n        }\n      }\n    }\n\n    // Minimum in second derivative\n    if (ddY[i] < ddY[i - 1] && ddY[i] < ddY[i + 1]) {\n      minddY.push(i);\n      broadMask.push(Math.abs(ddY[i]) <= broadRatio * maxDdy);\n    }\n  }\n\n  let widthProcessor = shape.kind\n    ? getShapeGenerator(shape.kind, shape.options).widthToFWHM\n    : (x) => x;\n\n  let signals = [];\n  let lastK = -1;\n  let possible, frequency, distanceJ, minDistance, gettingCloser;\n  for (let j = 0; j < minddY.length; ++j) {\n    frequency = xData[minddY[j]];\n    possible = -1;\n    let k = lastK + 1;\n    minDistance = Number.MAX_VALUE;\n    distanceJ = 0;\n    gettingCloser = true;\n    while (possible === -1 && k < intervalL.length && gettingCloser) {\n      distanceJ = Math.abs(frequency - (intervalL[k].x + intervalR[k].x) / 2);\n\n      // Still getting closer?\n      if (distanceJ < minDistance) {\n        minDistance = distanceJ;\n      } else {\n        gettingCloser = false;\n      }\n      if (distanceJ < Math.abs(intervalL[k].x - intervalR[k].x) / 2) {\n        possible = k;\n        lastK = k;\n      }\n      ++k;\n    }\n\n    if (possible !== -1) {\n      if (Math.abs(yData[minddY[j]]) > minMaxRatio * maxY) {\n        let width = Math.abs(intervalR[possible].x - intervalL[possible].x);\n        signals.push({\n          index: minddY[j],\n          x: frequency,\n          y: maxCriteria\n            ? yData[minddY[j]] + noiseLevel\n            : -yData[minddY[j]] - noiseLevel,\n          width: widthProcessor(width),\n          soft: broadMask[j],\n        });\n\n        signals[signals.length - 1].left = intervalL[possible];\n        signals[signals.length - 1].right = intervalR[possible];\n\n        if (heightFactor) {\n          let yLeft = yData[intervalL[possible].index];\n          let yRight = yData[intervalR[possible].index];\n          signals[signals.length - 1].height =\n            heightFactor *\n            (signals[signals.length - 1].y - (yLeft + yRight) / 2);\n        }\n      }\n    }\n  }\n\n  if (realTopDetection) {\n    determineRealTop(signals, xData, yData);\n  }\n\n  // Correct the values to fit the original spectra data\n  for (let j = 0; j < signals.length; j++) {\n    signals[j].base = noiseLevel;\n  }\n\n  signals.sort(function (a, b) {\n    return a.x - b.x;\n  });\n\n  return signals;\n}\n\nconst isEqualSpaced = (x) => {\n  let tmp;\n  let maxDx = 0;\n  let minDx = Number.MAX_SAFE_INTEGER;\n  for (let i = 0; i < x.length - 1; ++i) {\n    tmp = Math.abs(x[i + 1] - x[i]);\n    if (tmp < minDx) {\n      minDx = tmp;\n    }\n    if (tmp > maxDx) {\n      maxDx = tmp;\n    }\n  }\n  return (maxDx - minDx) / maxDx < 0.05;\n};\n\nconst getNoiseLevel = (y) => {\n  let mean = 0;\n\n  let stddev = 0;\n  let length = y.length;\n  for (let i = 0; i < length; ++i) {\n    mean += y[i];\n  }\n  mean /= length;\n  let averageDeviations = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    averageDeviations[i] = Math.abs(y[i] - mean);\n  }\n  averageDeviations.sort((a, b) => a - b);\n  if (length % 2 === 1) {\n    stddev = averageDeviations[(length - 1) / 2] / 0.6745;\n  } else {\n    stddev =\n      (0.5 *\n        (averageDeviations[length / 2] + averageDeviations[length / 2 - 1])) /\n      0.6745;\n  }\n\n  return stddev;\n};\n\nconst determineRealTop = (peakList, x, y) => {\n  let alpha, beta, gamma, p, currentPoint;\n  for (let j = 0; j < peakList.length; j++) {\n    currentPoint = peakList[j].index; // peakList[j][2];\n    // The detected peak could be moved 1 or 2 units to left or right.\n    if (\n      y[currentPoint - 1] >= y[currentPoint - 2] &&\n      y[currentPoint - 1] >= y[currentPoint]\n    ) {\n      currentPoint--;\n    } else {\n      if (\n        y[currentPoint + 1] >= y[currentPoint] &&\n        y[currentPoint + 1] >= y[currentPoint + 2]\n      ) {\n        currentPoint++;\n      } else {\n        if (\n          y[currentPoint - 2] >= y[currentPoint - 3] &&\n          y[currentPoint - 2] >= y[currentPoint - 1]\n        ) {\n          currentPoint -= 2;\n        } else {\n          if (\n            y[currentPoint + 2] >= y[currentPoint + 1] &&\n            y[currentPoint + 2] >= y[currentPoint + 3]\n          ) {\n            currentPoint += 2;\n          }\n        }\n      }\n    }\n    // interpolation to a sin() function\n    if (\n      y[currentPoint - 1] > 0 &&\n      y[currentPoint + 1] > 0 &&\n      y[currentPoint] >= y[currentPoint - 1] &&\n      y[currentPoint] >= y[currentPoint + 1] &&\n      (y[currentPoint] !== y[currentPoint - 1] ||\n        y[currentPoint] !== y[currentPoint + 1])\n    ) {\n      alpha = 20 * Math.log10(y[currentPoint - 1]);\n      beta = 20 * Math.log10(y[currentPoint]);\n      gamma = 20 * Math.log10(y[currentPoint + 1]);\n      p = (0.5 * (alpha - gamma)) / (alpha - 2 * beta + gamma);\n      // console.log(alpha, beta, gamma, `p: ${p}`);\n      // console.log(x[currentPoint]+\" \"+tmp+\" \"+currentPoint);\n      peakList[j].x =\n        x[currentPoint] + (x[currentPoint] - x[currentPoint - 1]) * p;\n      peakList[j].y =\n        y[currentPoint] -\n        0.25 * (y[currentPoint - 1] - y[currentPoint + 1]) * p;\n    }\n  }\n};\n","import isArray from 'is-any-array';\nimport max from 'ml-array-max';\nimport min from 'ml-array-min';\n\nfunction rescale(input) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  } else if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var output;\n\n  if (options.output !== undefined) {\n    if (!isArray(options.output)) {\n      throw new TypeError('output option must be an array if specified');\n    }\n\n    output = options.output;\n  } else {\n    output = new Array(input.length);\n  }\n\n  var currentMin = min(input);\n  var currentMax = max(input);\n\n  if (currentMin === currentMax) {\n    throw new RangeError('minimum and maximum input values are equal. Cannot rescale a constant array');\n  }\n\n  var _options$min = options.min,\n      minValue = _options$min === void 0 ? options.autoMinMax ? currentMin : 0 : _options$min,\n      _options$max = options.max,\n      maxValue = _options$max === void 0 ? options.autoMinMax ? currentMax : 1 : _options$max;\n\n  if (minValue >= maxValue) {\n    throw new RangeError('min option must be smaller than max option');\n  }\n\n  var factor = (maxValue - minValue) / (currentMax - currentMin);\n\n  for (var i = 0; i < input.length; i++) {\n    output[i] = (input[i] - currentMin) * factor + minValue;\n  }\n\n  return output;\n}\n\nexport default rescale;\n","const indent = ' '.repeat(2);\nconst indentData = ' '.repeat(4);\n\nexport function inspectMatrix() {\n  return inspectMatrixWithOptions(this);\n}\n\nexport function inspectMatrixWithOptions(matrix, options = {}) {\n  const { maxRows = 15, maxColumns = 10, maxNumSize = 8 } = options;\n  return `${matrix.constructor.name} {\n${indent}[\n${indentData}${inspectData(matrix, maxRows, maxColumns, maxNumSize)}\n${indent}]\n${indent}rows: ${matrix.rows}\n${indent}columns: ${matrix.columns}\n}`;\n}\n\nfunction inspectData(matrix, maxRows, maxColumns, maxNumSize) {\n  const { rows, columns } = matrix;\n  const maxI = Math.min(rows, maxRows);\n  const maxJ = Math.min(columns, maxColumns);\n  const result = [];\n  for (let i = 0; i < maxI; i++) {\n    let line = [];\n    for (let j = 0; j < maxJ; j++) {\n      line.push(formatNumber(matrix.get(i, j), maxNumSize));\n    }\n    result.push(`${line.join(' ')}`);\n  }\n  if (maxJ !== columns) {\n    result[result.length - 1] += ` ... ${columns - maxColumns} more columns`;\n  }\n  if (maxI !== rows) {\n    result.push(`... ${rows - maxRows} more rows`);\n  }\n  return result.join(`\\n${indentData}`);\n}\n\nfunction formatNumber(num, maxNumSize) {\n  const numStr = String(num);\n  if (numStr.length <= maxNumSize) {\n    return numStr.padEnd(maxNumSize, ' ');\n  }\n  const precise = num.toPrecision(maxNumSize - 2);\n  if (precise.length <= maxNumSize) {\n    return precise;\n  }\n  const exponential = num.toExponential(maxNumSize - 2);\n  const eIndex = exponential.indexOf('e');\n  const e = exponential.slice(eIndex);\n  return exponential.slice(0, maxNumSize - e.length) + e;\n}\n","export function installMathOperations(AbstractMatrix, Matrix) {\n  AbstractMatrix.prototype.add = function add(value) {\n    if (typeof value === 'number') return this.addS(value);\n    return this.addM(value);\n  };\n\n  AbstractMatrix.prototype.addS = function addS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) + value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.addM = function addM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) + matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.add = function add(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.add(value);\n  };\n\n  AbstractMatrix.prototype.sub = function sub(value) {\n    if (typeof value === 'number') return this.subS(value);\n    return this.subM(value);\n  };\n\n  AbstractMatrix.prototype.subS = function subS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) - value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.subM = function subM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) - matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sub = function sub(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sub(value);\n  };\n  AbstractMatrix.prototype.subtract = AbstractMatrix.prototype.sub;\n  AbstractMatrix.prototype.subtractS = AbstractMatrix.prototype.subS;\n  AbstractMatrix.prototype.subtractM = AbstractMatrix.prototype.subM;\n  AbstractMatrix.subtract = AbstractMatrix.sub;\n\n  AbstractMatrix.prototype.mul = function mul(value) {\n    if (typeof value === 'number') return this.mulS(value);\n    return this.mulM(value);\n  };\n\n  AbstractMatrix.prototype.mulS = function mulS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) * value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.mulM = function mulM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) * matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.mul = function mul(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.mul(value);\n  };\n  AbstractMatrix.prototype.multiply = AbstractMatrix.prototype.mul;\n  AbstractMatrix.prototype.multiplyS = AbstractMatrix.prototype.mulS;\n  AbstractMatrix.prototype.multiplyM = AbstractMatrix.prototype.mulM;\n  AbstractMatrix.multiply = AbstractMatrix.mul;\n\n  AbstractMatrix.prototype.div = function div(value) {\n    if (typeof value === 'number') return this.divS(value);\n    return this.divM(value);\n  };\n\n  AbstractMatrix.prototype.divS = function divS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) / value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.divM = function divM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) / matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.div = function div(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.div(value);\n  };\n  AbstractMatrix.prototype.divide = AbstractMatrix.prototype.div;\n  AbstractMatrix.prototype.divideS = AbstractMatrix.prototype.divS;\n  AbstractMatrix.prototype.divideM = AbstractMatrix.prototype.divM;\n  AbstractMatrix.divide = AbstractMatrix.div;\n\n  AbstractMatrix.prototype.mod = function mod(value) {\n    if (typeof value === 'number') return this.modS(value);\n    return this.modM(value);\n  };\n\n  AbstractMatrix.prototype.modS = function modS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) % value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.modM = function modM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) % matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.mod = function mod(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.mod(value);\n  };\n  AbstractMatrix.prototype.modulus = AbstractMatrix.prototype.mod;\n  AbstractMatrix.prototype.modulusS = AbstractMatrix.prototype.modS;\n  AbstractMatrix.prototype.modulusM = AbstractMatrix.prototype.modM;\n  AbstractMatrix.modulus = AbstractMatrix.mod;\n\n  AbstractMatrix.prototype.and = function and(value) {\n    if (typeof value === 'number') return this.andS(value);\n    return this.andM(value);\n  };\n\n  AbstractMatrix.prototype.andS = function andS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) & value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.andM = function andM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) & matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.and = function and(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.and(value);\n  };\n\n  AbstractMatrix.prototype.or = function or(value) {\n    if (typeof value === 'number') return this.orS(value);\n    return this.orM(value);\n  };\n\n  AbstractMatrix.prototype.orS = function orS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) | value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.orM = function orM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) | matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.or = function or(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.or(value);\n  };\n\n  AbstractMatrix.prototype.xor = function xor(value) {\n    if (typeof value === 'number') return this.xorS(value);\n    return this.xorM(value);\n  };\n\n  AbstractMatrix.prototype.xorS = function xorS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) ^ value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.xorM = function xorM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) ^ matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.xor = function xor(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.xor(value);\n  };\n\n  AbstractMatrix.prototype.leftShift = function leftShift(value) {\n    if (typeof value === 'number') return this.leftShiftS(value);\n    return this.leftShiftM(value);\n  };\n\n  AbstractMatrix.prototype.leftShiftS = function leftShiftS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) << value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.leftShiftM = function leftShiftM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) << matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.leftShift = function leftShift(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.leftShift(value);\n  };\n\n  AbstractMatrix.prototype.signPropagatingRightShift = function signPropagatingRightShift(value) {\n    if (typeof value === 'number') return this.signPropagatingRightShiftS(value);\n    return this.signPropagatingRightShiftM(value);\n  };\n\n  AbstractMatrix.prototype.signPropagatingRightShiftS = function signPropagatingRightShiftS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) >> value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.signPropagatingRightShiftM = function signPropagatingRightShiftM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) >> matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.signPropagatingRightShift = function signPropagatingRightShift(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.signPropagatingRightShift(value);\n  };\n\n  AbstractMatrix.prototype.rightShift = function rightShift(value) {\n    if (typeof value === 'number') return this.rightShiftS(value);\n    return this.rightShiftM(value);\n  };\n\n  AbstractMatrix.prototype.rightShiftS = function rightShiftS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) >>> value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.rightShiftM = function rightShiftM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) >>> matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.rightShift = function rightShift(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.rightShift(value);\n  };\n  AbstractMatrix.prototype.zeroFillRightShift = AbstractMatrix.prototype.rightShift;\n  AbstractMatrix.prototype.zeroFillRightShiftS = AbstractMatrix.prototype.rightShiftS;\n  AbstractMatrix.prototype.zeroFillRightShiftM = AbstractMatrix.prototype.rightShiftM;\n  AbstractMatrix.zeroFillRightShift = AbstractMatrix.rightShift;\n\n  AbstractMatrix.prototype.not = function not() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, ~(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.not = function not(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.not();\n  };\n\n  AbstractMatrix.prototype.abs = function abs() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.abs(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.abs = function abs(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.abs();\n  };\n\n  AbstractMatrix.prototype.acos = function acos() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.acos(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.acos = function acos(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.acos();\n  };\n\n  AbstractMatrix.prototype.acosh = function acosh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.acosh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.acosh = function acosh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.acosh();\n  };\n\n  AbstractMatrix.prototype.asin = function asin() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.asin(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.asin = function asin(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.asin();\n  };\n\n  AbstractMatrix.prototype.asinh = function asinh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.asinh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.asinh = function asinh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.asinh();\n  };\n\n  AbstractMatrix.prototype.atan = function atan() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.atan(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.atan = function atan(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.atan();\n  };\n\n  AbstractMatrix.prototype.atanh = function atanh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.atanh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.atanh = function atanh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.atanh();\n  };\n\n  AbstractMatrix.prototype.cbrt = function cbrt() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.cbrt(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.cbrt = function cbrt(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.cbrt();\n  };\n\n  AbstractMatrix.prototype.ceil = function ceil() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.ceil(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.ceil = function ceil(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.ceil();\n  };\n\n  AbstractMatrix.prototype.clz32 = function clz32() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.clz32(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.clz32 = function clz32(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.clz32();\n  };\n\n  AbstractMatrix.prototype.cos = function cos() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.cos(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.cos = function cos(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.cos();\n  };\n\n  AbstractMatrix.prototype.cosh = function cosh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.cosh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.cosh = function cosh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.cosh();\n  };\n\n  AbstractMatrix.prototype.exp = function exp() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.exp(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.exp = function exp(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.exp();\n  };\n\n  AbstractMatrix.prototype.expm1 = function expm1() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.expm1(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.expm1 = function expm1(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.expm1();\n  };\n\n  AbstractMatrix.prototype.floor = function floor() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.floor(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.floor = function floor(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.floor();\n  };\n\n  AbstractMatrix.prototype.fround = function fround() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.fround(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.fround = function fround(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.fround();\n  };\n\n  AbstractMatrix.prototype.log = function log() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.log(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.log = function log(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.log();\n  };\n\n  AbstractMatrix.prototype.log1p = function log1p() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.log1p(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.log1p = function log1p(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.log1p();\n  };\n\n  AbstractMatrix.prototype.log10 = function log10() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.log10(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.log10 = function log10(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.log10();\n  };\n\n  AbstractMatrix.prototype.log2 = function log2() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.log2(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.log2 = function log2(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.log2();\n  };\n\n  AbstractMatrix.prototype.round = function round() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.round(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.round = function round(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.round();\n  };\n\n  AbstractMatrix.prototype.sign = function sign() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.sign(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sign = function sign(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sign();\n  };\n\n  AbstractMatrix.prototype.sin = function sin() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.sin(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sin = function sin(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sin();\n  };\n\n  AbstractMatrix.prototype.sinh = function sinh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.sinh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sinh = function sinh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sinh();\n  };\n\n  AbstractMatrix.prototype.sqrt = function sqrt() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.sqrt(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sqrt = function sqrt(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sqrt();\n  };\n\n  AbstractMatrix.prototype.tan = function tan() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.tan(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.tan = function tan(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.tan();\n  };\n\n  AbstractMatrix.prototype.tanh = function tanh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.tanh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.tanh = function tanh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.tanh();\n  };\n\n  AbstractMatrix.prototype.trunc = function trunc() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.trunc(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.trunc = function trunc(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.trunc();\n  };\n\n  AbstractMatrix.pow = function pow(matrix, arg0) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.pow(arg0);\n  };\n\n  AbstractMatrix.prototype.pow = function pow(value) {\n    if (typeof value === 'number') return this.powS(value);\n    return this.powM(value);\n  };\n\n  AbstractMatrix.prototype.powS = function powS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.pow(this.get(i, j), value));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.powM = function powM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.pow(this.get(i, j), matrix.get(i, j)));\n      }\n    }\n    return this;\n  };\n}\n","/**\n * @private\n * Check that a row index is not out of bounds\n * @param {Matrix} matrix\n * @param {number} index\n * @param {boolean} [outer]\n */\nexport function checkRowIndex(matrix, index, outer) {\n  let max = outer ? matrix.rows : matrix.rows - 1;\n  if (index < 0 || index > max) {\n    throw new RangeError('Row index out of range');\n  }\n}\n\n/**\n * @private\n * Check that a column index is not out of bounds\n * @param {Matrix} matrix\n * @param {number} index\n * @param {boolean} [outer]\n */\nexport function checkColumnIndex(matrix, index, outer) {\n  let max = outer ? matrix.columns : matrix.columns - 1;\n  if (index < 0 || index > max) {\n    throw new RangeError('Column index out of range');\n  }\n}\n\n/**\n * @private\n * Check that the provided vector is an array with the right length\n * @param {Matrix} matrix\n * @param {Array|Matrix} vector\n * @return {Array}\n * @throws {RangeError}\n */\nexport function checkRowVector(matrix, vector) {\n  if (vector.to1DArray) {\n    vector = vector.to1DArray();\n  }\n  if (vector.length !== matrix.columns) {\n    throw new RangeError(\n      'vector size must be the same as the number of columns',\n    );\n  }\n  return vector;\n}\n\n/**\n * @private\n * Check that the provided vector is an array with the right length\n * @param {Matrix} matrix\n * @param {Array|Matrix} vector\n * @return {Array}\n * @throws {RangeError}\n */\nexport function checkColumnVector(matrix, vector) {\n  if (vector.to1DArray) {\n    vector = vector.to1DArray();\n  }\n  if (vector.length !== matrix.rows) {\n    throw new RangeError('vector size must be the same as the number of rows');\n  }\n  return vector;\n}\n\nexport function checkIndices(matrix, rowIndices, columnIndices) {\n  return {\n    row: checkRowIndices(matrix, rowIndices),\n    column: checkColumnIndices(matrix, columnIndices),\n  };\n}\n\nexport function checkRowIndices(matrix, rowIndices) {\n  if (typeof rowIndices !== 'object') {\n    throw new TypeError('unexpected type for row indices');\n  }\n\n  let rowOut = rowIndices.some((r) => {\n    return r < 0 || r >= matrix.rows;\n  });\n\n  if (rowOut) {\n    throw new RangeError('row indices are out of range');\n  }\n\n  if (!Array.isArray(rowIndices)) rowIndices = Array.from(rowIndices);\n\n  return rowIndices;\n}\n\nexport function checkColumnIndices(matrix, columnIndices) {\n  if (typeof columnIndices !== 'object') {\n    throw new TypeError('unexpected type for column indices');\n  }\n\n  let columnOut = columnIndices.some((c) => {\n    return c < 0 || c >= matrix.columns;\n  });\n\n  if (columnOut) {\n    throw new RangeError('column indices are out of range');\n  }\n  if (!Array.isArray(columnIndices)) columnIndices = Array.from(columnIndices);\n\n  return columnIndices;\n}\n\nexport function checkRange(matrix, startRow, endRow, startColumn, endColumn) {\n  if (arguments.length !== 5) {\n    throw new RangeError('expected 4 arguments');\n  }\n  checkNumber('startRow', startRow);\n  checkNumber('endRow', endRow);\n  checkNumber('startColumn', startColumn);\n  checkNumber('endColumn', endColumn);\n  if (\n    startRow > endRow ||\n    startColumn > endColumn ||\n    startRow < 0 ||\n    startRow >= matrix.rows ||\n    endRow < 0 ||\n    endRow >= matrix.rows ||\n    startColumn < 0 ||\n    startColumn >= matrix.columns ||\n    endColumn < 0 ||\n    endColumn >= matrix.columns\n  ) {\n    throw new RangeError('Submatrix indices are out of range');\n  }\n}\n\nexport function newArray(length, value = 0) {\n  let array = [];\n  for (let i = 0; i < length; i++) {\n    array.push(value);\n  }\n  return array;\n}\n\nfunction checkNumber(name, value) {\n  if (typeof value !== 'number') {\n    throw new TypeError(`${name} must be a number`);\n  }\n}\n\nexport function checkNonEmpty(matrix) {\n  if (matrix.isEmpty()) {\n    throw new Error('Empty matrix has no elements to index');\n  }\n}\n","import { newArray } from './util';\n\nexport function sumByRow(matrix) {\n  let sum = newArray(matrix.rows);\n  for (let i = 0; i < matrix.rows; ++i) {\n    for (let j = 0; j < matrix.columns; ++j) {\n      sum[i] += matrix.get(i, j);\n    }\n  }\n  return sum;\n}\n\nexport function sumByColumn(matrix) {\n  let sum = newArray(matrix.columns);\n  for (let i = 0; i < matrix.rows; ++i) {\n    for (let j = 0; j < matrix.columns; ++j) {\n      sum[j] += matrix.get(i, j);\n    }\n  }\n  return sum;\n}\n\nexport function sumAll(matrix) {\n  let v = 0;\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      v += matrix.get(i, j);\n    }\n  }\n  return v;\n}\n\nexport function productByRow(matrix) {\n  let sum = newArray(matrix.rows, 1);\n  for (let i = 0; i < matrix.rows; ++i) {\n    for (let j = 0; j < matrix.columns; ++j) {\n      sum[i] *= matrix.get(i, j);\n    }\n  }\n  return sum;\n}\n\nexport function productByColumn(matrix) {\n  let sum = newArray(matrix.columns, 1);\n  for (let i = 0; i < matrix.rows; ++i) {\n    for (let j = 0; j < matrix.columns; ++j) {\n      sum[j] *= matrix.get(i, j);\n    }\n  }\n  return sum;\n}\n\nexport function productAll(matrix) {\n  let v = 1;\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      v *= matrix.get(i, j);\n    }\n  }\n  return v;\n}\n\nexport function varianceByRow(matrix, unbiased, mean) {\n  const rows = matrix.rows;\n  const cols = matrix.columns;\n  const variance = [];\n\n  for (let i = 0; i < rows; i++) {\n    let sum1 = 0;\n    let sum2 = 0;\n    let x = 0;\n    for (let j = 0; j < cols; j++) {\n      x = matrix.get(i, j) - mean[i];\n      sum1 += x;\n      sum2 += x * x;\n    }\n    if (unbiased) {\n      variance.push((sum2 - (sum1 * sum1) / cols) / (cols - 1));\n    } else {\n      variance.push((sum2 - (sum1 * sum1) / cols) / cols);\n    }\n  }\n  return variance;\n}\n\nexport function varianceByColumn(matrix, unbiased, mean) {\n  const rows = matrix.rows;\n  const cols = matrix.columns;\n  const variance = [];\n\n  for (let j = 0; j < cols; j++) {\n    let sum1 = 0;\n    let sum2 = 0;\n    let x = 0;\n    for (let i = 0; i < rows; i++) {\n      x = matrix.get(i, j) - mean[j];\n      sum1 += x;\n      sum2 += x * x;\n    }\n    if (unbiased) {\n      variance.push((sum2 - (sum1 * sum1) / rows) / (rows - 1));\n    } else {\n      variance.push((sum2 - (sum1 * sum1) / rows) / rows);\n    }\n  }\n  return variance;\n}\n\nexport function varianceAll(matrix, unbiased, mean) {\n  const rows = matrix.rows;\n  const cols = matrix.columns;\n  const size = rows * cols;\n\n  let sum1 = 0;\n  let sum2 = 0;\n  let x = 0;\n  for (let i = 0; i < rows; i++) {\n    for (let j = 0; j < cols; j++) {\n      x = matrix.get(i, j) - mean;\n      sum1 += x;\n      sum2 += x * x;\n    }\n  }\n  if (unbiased) {\n    return (sum2 - (sum1 * sum1) / size) / (size - 1);\n  } else {\n    return (sum2 - (sum1 * sum1) / size) / size;\n  }\n}\n\nexport function centerByRow(matrix, mean) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) - mean[i]);\n    }\n  }\n}\n\nexport function centerByColumn(matrix, mean) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) - mean[j]);\n    }\n  }\n}\n\nexport function centerAll(matrix, mean) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) - mean);\n    }\n  }\n}\n\nexport function getScaleByRow(matrix) {\n  const scale = [];\n  for (let i = 0; i < matrix.rows; i++) {\n    let sum = 0;\n    for (let j = 0; j < matrix.columns; j++) {\n      sum += Math.pow(matrix.get(i, j), 2) / (matrix.columns - 1);\n    }\n    scale.push(Math.sqrt(sum));\n  }\n  return scale;\n}\n\nexport function scaleByRow(matrix, scale) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) / scale[i]);\n    }\n  }\n}\n\nexport function getScaleByColumn(matrix) {\n  const scale = [];\n  for (let j = 0; j < matrix.columns; j++) {\n    let sum = 0;\n    for (let i = 0; i < matrix.rows; i++) {\n      sum += Math.pow(matrix.get(i, j), 2) / (matrix.rows - 1);\n    }\n    scale.push(Math.sqrt(sum));\n  }\n  return scale;\n}\n\nexport function scaleByColumn(matrix, scale) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) / scale[j]);\n    }\n  }\n}\n\nexport function getScaleAll(matrix) {\n  const divider = matrix.size - 1;\n  let sum = 0;\n  for (let j = 0; j < matrix.columns; j++) {\n    for (let i = 0; i < matrix.rows; i++) {\n      sum += Math.pow(matrix.get(i, j), 2) / divider;\n    }\n  }\n  return Math.sqrt(sum);\n}\n\nexport function scaleAll(matrix, scale) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) / scale);\n    }\n  }\n}\n","import rescale from 'ml-array-rescale';\n\nimport { inspectMatrix, inspectMatrixWithOptions } from './inspect';\nimport { installMathOperations } from './mathOperations';\nimport {\n  sumByRow,\n  sumByColumn,\n  sumAll,\n  productByRow,\n  productByColumn,\n  productAll,\n  varianceByRow,\n  varianceByColumn,\n  varianceAll,\n  centerByRow,\n  centerByColumn,\n  centerAll,\n  scaleByRow,\n  scaleByColumn,\n  scaleAll,\n  getScaleByRow,\n  getScaleByColumn,\n  getScaleAll,\n} from './stat';\nimport {\n  checkRowVector,\n  checkRowIndex,\n  checkColumnIndex,\n  checkColumnVector,\n  checkRange,\n  checkIndices,\n  checkNonEmpty,\n} from './util';\n\nexport class AbstractMatrix {\n  static from1DArray(newRows, newColumns, newData) {\n    let length = newRows * newColumns;\n    if (length !== newData.length) {\n      throw new RangeError('data length does not match given dimensions');\n    }\n    let newMatrix = new Matrix(newRows, newColumns);\n    for (let row = 0; row < newRows; row++) {\n      for (let column = 0; column < newColumns; column++) {\n        newMatrix.set(row, column, newData[row * newColumns + column]);\n      }\n    }\n    return newMatrix;\n  }\n\n  static rowVector(newData) {\n    let vector = new Matrix(1, newData.length);\n    for (let i = 0; i < newData.length; i++) {\n      vector.set(0, i, newData[i]);\n    }\n    return vector;\n  }\n\n  static columnVector(newData) {\n    let vector = new Matrix(newData.length, 1);\n    for (let i = 0; i < newData.length; i++) {\n      vector.set(i, 0, newData[i]);\n    }\n    return vector;\n  }\n\n  static zeros(rows, columns) {\n    return new Matrix(rows, columns);\n  }\n\n  static ones(rows, columns) {\n    return new Matrix(rows, columns).fill(1);\n  }\n\n  static rand(rows, columns, options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { random = Math.random } = options;\n    let matrix = new Matrix(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        matrix.set(i, j, random());\n      }\n    }\n    return matrix;\n  }\n\n  static randInt(rows, columns, options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { min = 0, max = 1000, random = Math.random } = options;\n    if (!Number.isInteger(min)) throw new TypeError('min must be an integer');\n    if (!Number.isInteger(max)) throw new TypeError('max must be an integer');\n    if (min >= max) throw new RangeError('min must be smaller than max');\n    let interval = max - min;\n    let matrix = new Matrix(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        let value = min + Math.round(random() * interval);\n        matrix.set(i, j, value);\n      }\n    }\n    return matrix;\n  }\n\n  static eye(rows, columns, value) {\n    if (columns === undefined) columns = rows;\n    if (value === undefined) value = 1;\n    let min = Math.min(rows, columns);\n    let matrix = this.zeros(rows, columns);\n    for (let i = 0; i < min; i++) {\n      matrix.set(i, i, value);\n    }\n    return matrix;\n  }\n\n  static diag(data, rows, columns) {\n    let l = data.length;\n    if (rows === undefined) rows = l;\n    if (columns === undefined) columns = rows;\n    let min = Math.min(l, rows, columns);\n    let matrix = this.zeros(rows, columns);\n    for (let i = 0; i < min; i++) {\n      matrix.set(i, i, data[i]);\n    }\n    return matrix;\n  }\n\n  static min(matrix1, matrix2) {\n    matrix1 = this.checkMatrix(matrix1);\n    matrix2 = this.checkMatrix(matrix2);\n    let rows = matrix1.rows;\n    let columns = matrix1.columns;\n    let result = new Matrix(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        result.set(i, j, Math.min(matrix1.get(i, j), matrix2.get(i, j)));\n      }\n    }\n    return result;\n  }\n\n  static max(matrix1, matrix2) {\n    matrix1 = this.checkMatrix(matrix1);\n    matrix2 = this.checkMatrix(matrix2);\n    let rows = matrix1.rows;\n    let columns = matrix1.columns;\n    let result = new this(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        result.set(i, j, Math.max(matrix1.get(i, j), matrix2.get(i, j)));\n      }\n    }\n    return result;\n  }\n\n  static checkMatrix(value) {\n    return AbstractMatrix.isMatrix(value) ? value : new Matrix(value);\n  }\n\n  static isMatrix(value) {\n    return value != null && value.klass === 'Matrix';\n  }\n\n  get size() {\n    return this.rows * this.columns;\n  }\n\n  apply(callback) {\n    if (typeof callback !== 'function') {\n      throw new TypeError('callback must be a function');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        callback.call(this, i, j);\n      }\n    }\n    return this;\n  }\n\n  to1DArray() {\n    let array = [];\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        array.push(this.get(i, j));\n      }\n    }\n    return array;\n  }\n\n  to2DArray() {\n    let copy = [];\n    for (let i = 0; i < this.rows; i++) {\n      copy.push([]);\n      for (let j = 0; j < this.columns; j++) {\n        copy[i].push(this.get(i, j));\n      }\n    }\n    return copy;\n  }\n\n  toJSON() {\n    return this.to2DArray();\n  }\n\n  isRowVector() {\n    return this.rows === 1;\n  }\n\n  isColumnVector() {\n    return this.columns === 1;\n  }\n\n  isVector() {\n    return this.rows === 1 || this.columns === 1;\n  }\n\n  isSquare() {\n    return this.rows === this.columns;\n  }\n\n  isEmpty() {\n    return this.rows === 0 || this.columns === 0;\n  }\n\n  isSymmetric() {\n    if (this.isSquare()) {\n      for (let i = 0; i < this.rows; i++) {\n        for (let j = 0; j <= i; j++) {\n          if (this.get(i, j) !== this.get(j, i)) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n    return false;\n  }\n\n  isEchelonForm() {\n    let i = 0;\n    let j = 0;\n    let previousColumn = -1;\n    let isEchelonForm = true;\n    let checked = false;\n    while (i < this.rows && isEchelonForm) {\n      j = 0;\n      checked = false;\n      while (j < this.columns && checked === false) {\n        if (this.get(i, j) === 0) {\n          j++;\n        } else if (this.get(i, j) === 1 && j > previousColumn) {\n          checked = true;\n          previousColumn = j;\n        } else {\n          isEchelonForm = false;\n          checked = true;\n        }\n      }\n      i++;\n    }\n    return isEchelonForm;\n  }\n\n  isReducedEchelonForm() {\n    let i = 0;\n    let j = 0;\n    let previousColumn = -1;\n    let isReducedEchelonForm = true;\n    let checked = false;\n    while (i < this.rows && isReducedEchelonForm) {\n      j = 0;\n      checked = false;\n      while (j < this.columns && checked === false) {\n        if (this.get(i, j) === 0) {\n          j++;\n        } else if (this.get(i, j) === 1 && j > previousColumn) {\n          checked = true;\n          previousColumn = j;\n        } else {\n          isReducedEchelonForm = false;\n          checked = true;\n        }\n      }\n      for (let k = j + 1; k < this.rows; k++) {\n        if (this.get(i, k) !== 0) {\n          isReducedEchelonForm = false;\n        }\n      }\n      i++;\n    }\n    return isReducedEchelonForm;\n  }\n\n  echelonForm() {\n    let result = this.clone();\n    let h = 0;\n    let k = 0;\n    while (h < result.rows && k < result.columns) {\n      let iMax = h;\n      for (let i = h; i < result.rows; i++) {\n        if (result.get(i, k) > result.get(iMax, k)) {\n          iMax = i;\n        }\n      }\n      if (result.get(iMax, k) === 0) {\n        k++;\n      } else {\n        result.swapRows(h, iMax);\n        let tmp = result.get(h, k);\n        for (let j = k; j < result.columns; j++) {\n          result.set(h, j, result.get(h, j) / tmp);\n        }\n        for (let i = h + 1; i < result.rows; i++) {\n          let factor = result.get(i, k) / result.get(h, k);\n          result.set(i, k, 0);\n          for (let j = k + 1; j < result.columns; j++) {\n            result.set(i, j, result.get(i, j) - result.get(h, j) * factor);\n          }\n        }\n        h++;\n        k++;\n      }\n    }\n    return result;\n  }\n\n  reducedEchelonForm() {\n    let result = this.echelonForm();\n    let m = result.columns;\n    let n = result.rows;\n    let h = n - 1;\n    while (h >= 0) {\n      if (result.maxRow(h) === 0) {\n        h--;\n      } else {\n        let p = 0;\n        let pivot = false;\n        while (p < n && pivot === false) {\n          if (result.get(h, p) === 1) {\n            pivot = true;\n          } else {\n            p++;\n          }\n        }\n        for (let i = 0; i < h; i++) {\n          let factor = result.get(i, p);\n          for (let j = p; j < m; j++) {\n            let tmp = result.get(i, j) - factor * result.get(h, j);\n            result.set(i, j, tmp);\n          }\n        }\n        h--;\n      }\n    }\n    return result;\n  }\n\n  set() {\n    throw new Error('set method is unimplemented');\n  }\n\n  get() {\n    throw new Error('get method is unimplemented');\n  }\n\n  repeat(options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { rows = 1, columns = 1 } = options;\n    if (!Number.isInteger(rows) || rows <= 0) {\n      throw new TypeError('rows must be a positive integer');\n    }\n    if (!Number.isInteger(columns) || columns <= 0) {\n      throw new TypeError('columns must be a positive integer');\n    }\n    let matrix = new Matrix(this.rows * rows, this.columns * columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        matrix.setSubMatrix(this, this.rows * i, this.columns * j);\n      }\n    }\n    return matrix;\n  }\n\n  fill(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, value);\n      }\n    }\n    return this;\n  }\n\n  neg() {\n    return this.mulS(-1);\n  }\n\n  getRow(index) {\n    checkRowIndex(this, index);\n    let row = [];\n    for (let i = 0; i < this.columns; i++) {\n      row.push(this.get(index, i));\n    }\n    return row;\n  }\n\n  getRowVector(index) {\n    return Matrix.rowVector(this.getRow(index));\n  }\n\n  setRow(index, array) {\n    checkRowIndex(this, index);\n    array = checkRowVector(this, array);\n    for (let i = 0; i < this.columns; i++) {\n      this.set(index, i, array[i]);\n    }\n    return this;\n  }\n\n  swapRows(row1, row2) {\n    checkRowIndex(this, row1);\n    checkRowIndex(this, row2);\n    for (let i = 0; i < this.columns; i++) {\n      let temp = this.get(row1, i);\n      this.set(row1, i, this.get(row2, i));\n      this.set(row2, i, temp);\n    }\n    return this;\n  }\n\n  getColumn(index) {\n    checkColumnIndex(this, index);\n    let column = [];\n    for (let i = 0; i < this.rows; i++) {\n      column.push(this.get(i, index));\n    }\n    return column;\n  }\n\n  getColumnVector(index) {\n    return Matrix.columnVector(this.getColumn(index));\n  }\n\n  setColumn(index, array) {\n    checkColumnIndex(this, index);\n    array = checkColumnVector(this, array);\n    for (let i = 0; i < this.rows; i++) {\n      this.set(i, index, array[i]);\n    }\n    return this;\n  }\n\n  swapColumns(column1, column2) {\n    checkColumnIndex(this, column1);\n    checkColumnIndex(this, column2);\n    for (let i = 0; i < this.rows; i++) {\n      let temp = this.get(i, column1);\n      this.set(i, column1, this.get(i, column2));\n      this.set(i, column2, temp);\n    }\n    return this;\n  }\n\n  addRowVector(vector) {\n    vector = checkRowVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) + vector[j]);\n      }\n    }\n    return this;\n  }\n\n  subRowVector(vector) {\n    vector = checkRowVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) - vector[j]);\n      }\n    }\n    return this;\n  }\n\n  mulRowVector(vector) {\n    vector = checkRowVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) * vector[j]);\n      }\n    }\n    return this;\n  }\n\n  divRowVector(vector) {\n    vector = checkRowVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) / vector[j]);\n      }\n    }\n    return this;\n  }\n\n  addColumnVector(vector) {\n    vector = checkColumnVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) + vector[i]);\n      }\n    }\n    return this;\n  }\n\n  subColumnVector(vector) {\n    vector = checkColumnVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) - vector[i]);\n      }\n    }\n    return this;\n  }\n\n  mulColumnVector(vector) {\n    vector = checkColumnVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) * vector[i]);\n      }\n    }\n    return this;\n  }\n\n  divColumnVector(vector) {\n    vector = checkColumnVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) / vector[i]);\n      }\n    }\n    return this;\n  }\n\n  mulRow(index, value) {\n    checkRowIndex(this, index);\n    for (let i = 0; i < this.columns; i++) {\n      this.set(index, i, this.get(index, i) * value);\n    }\n    return this;\n  }\n\n  mulColumn(index, value) {\n    checkColumnIndex(this, index);\n    for (let i = 0; i < this.rows; i++) {\n      this.set(i, index, this.get(i, index) * value);\n    }\n    return this;\n  }\n\n  max() {\n    if (this.isEmpty()) {\n      return NaN;\n    }\n    let v = this.get(0, 0);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        if (this.get(i, j) > v) {\n          v = this.get(i, j);\n        }\n      }\n    }\n    return v;\n  }\n\n  maxIndex() {\n    checkNonEmpty(this);\n    let v = this.get(0, 0);\n    let idx = [0, 0];\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        if (this.get(i, j) > v) {\n          v = this.get(i, j);\n          idx[0] = i;\n          idx[1] = j;\n        }\n      }\n    }\n    return idx;\n  }\n\n  min() {\n    if (this.isEmpty()) {\n      return NaN;\n    }\n    let v = this.get(0, 0);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        if (this.get(i, j) < v) {\n          v = this.get(i, j);\n        }\n      }\n    }\n    return v;\n  }\n\n  minIndex() {\n    checkNonEmpty(this);\n    let v = this.get(0, 0);\n    let idx = [0, 0];\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        if (this.get(i, j) < v) {\n          v = this.get(i, j);\n          idx[0] = i;\n          idx[1] = j;\n        }\n      }\n    }\n    return idx;\n  }\n\n  maxRow(row) {\n    checkRowIndex(this, row);\n    if (this.isEmpty()) {\n      return NaN;\n    }\n    let v = this.get(row, 0);\n    for (let i = 1; i < this.columns; i++) {\n      if (this.get(row, i) > v) {\n        v = this.get(row, i);\n      }\n    }\n    return v;\n  }\n\n  maxRowIndex(row) {\n    checkRowIndex(this, row);\n    checkNonEmpty(this);\n    let v = this.get(row, 0);\n    let idx = [row, 0];\n    for (let i = 1; i < this.columns; i++) {\n      if (this.get(row, i) > v) {\n        v = this.get(row, i);\n        idx[1] = i;\n      }\n    }\n    return idx;\n  }\n\n  minRow(row) {\n    checkRowIndex(this, row);\n    if (this.isEmpty()) {\n      return NaN;\n    }\n    let v = this.get(row, 0);\n    for (let i = 1; i < this.columns; i++) {\n      if (this.get(row, i) < v) {\n        v = this.get(row, i);\n      }\n    }\n    return v;\n  }\n\n  minRowIndex(row) {\n    checkRowIndex(this, row);\n    checkNonEmpty(this);\n    let v = this.get(row, 0);\n    let idx = [row, 0];\n    for (let i = 1; i < this.columns; i++) {\n      if (this.get(row, i) < v) {\n        v = this.get(row, i);\n        idx[1] = i;\n      }\n    }\n    return idx;\n  }\n\n  maxColumn(column) {\n    checkColumnIndex(this, column);\n    if (this.isEmpty()) {\n      return NaN;\n    }\n    let v = this.get(0, column);\n    for (let i = 1; i < this.rows; i++) {\n      if (this.get(i, column) > v) {\n        v = this.get(i, column);\n      }\n    }\n    return v;\n  }\n\n  maxColumnIndex(column) {\n    checkColumnIndex(this, column);\n    checkNonEmpty(this);\n    let v = this.get(0, column);\n    let idx = [0, column];\n    for (let i = 1; i < this.rows; i++) {\n      if (this.get(i, column) > v) {\n        v = this.get(i, column);\n        idx[0] = i;\n      }\n    }\n    return idx;\n  }\n\n  minColumn(column) {\n    checkColumnIndex(this, column);\n    if (this.isEmpty()) {\n      return NaN;\n    }\n    let v = this.get(0, column);\n    for (let i = 1; i < this.rows; i++) {\n      if (this.get(i, column) < v) {\n        v = this.get(i, column);\n      }\n    }\n    return v;\n  }\n\n  minColumnIndex(column) {\n    checkColumnIndex(this, column);\n    checkNonEmpty(this);\n    let v = this.get(0, column);\n    let idx = [0, column];\n    for (let i = 1; i < this.rows; i++) {\n      if (this.get(i, column) < v) {\n        v = this.get(i, column);\n        idx[0] = i;\n      }\n    }\n    return idx;\n  }\n\n  diag() {\n    let min = Math.min(this.rows, this.columns);\n    let diag = [];\n    for (let i = 0; i < min; i++) {\n      diag.push(this.get(i, i));\n    }\n    return diag;\n  }\n\n  norm(type = 'frobenius') {\n    let result = 0;\n    if (type === 'max') {\n      return this.max();\n    } else if (type === 'frobenius') {\n      for (let i = 0; i < this.rows; i++) {\n        for (let j = 0; j < this.columns; j++) {\n          result = result + this.get(i, j) * this.get(i, j);\n        }\n      }\n      return Math.sqrt(result);\n    } else {\n      throw new RangeError(`unknown norm type: ${type}`);\n    }\n  }\n\n  cumulativeSum() {\n    let sum = 0;\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        sum += this.get(i, j);\n        this.set(i, j, sum);\n      }\n    }\n    return this;\n  }\n\n  dot(vector2) {\n    if (AbstractMatrix.isMatrix(vector2)) vector2 = vector2.to1DArray();\n    let vector1 = this.to1DArray();\n    if (vector1.length !== vector2.length) {\n      throw new RangeError('vectors do not have the same size');\n    }\n    let dot = 0;\n    for (let i = 0; i < vector1.length; i++) {\n      dot += vector1[i] * vector2[i];\n    }\n    return dot;\n  }\n\n  mmul(other) {\n    other = Matrix.checkMatrix(other);\n\n    let m = this.rows;\n    let n = this.columns;\n    let p = other.columns;\n\n    let result = new Matrix(m, p);\n\n    let Bcolj = new Float64Array(n);\n    for (let j = 0; j < p; j++) {\n      for (let k = 0; k < n; k++) {\n        Bcolj[k] = other.get(k, j);\n      }\n\n      for (let i = 0; i < m; i++) {\n        let s = 0;\n        for (let k = 0; k < n; k++) {\n          s += this.get(i, k) * Bcolj[k];\n        }\n\n        result.set(i, j, s);\n      }\n    }\n    return result;\n  }\n\n  strassen2x2(other) {\n    other = Matrix.checkMatrix(other);\n    let result = new Matrix(2, 2);\n    const a11 = this.get(0, 0);\n    const b11 = other.get(0, 0);\n    const a12 = this.get(0, 1);\n    const b12 = other.get(0, 1);\n    const a21 = this.get(1, 0);\n    const b21 = other.get(1, 0);\n    const a22 = this.get(1, 1);\n    const b22 = other.get(1, 1);\n\n    // Compute intermediate values.\n    const m1 = (a11 + a22) * (b11 + b22);\n    const m2 = (a21 + a22) * b11;\n    const m3 = a11 * (b12 - b22);\n    const m4 = a22 * (b21 - b11);\n    const m5 = (a11 + a12) * b22;\n    const m6 = (a21 - a11) * (b11 + b12);\n    const m7 = (a12 - a22) * (b21 + b22);\n\n    // Combine intermediate values into the output.\n    const c00 = m1 + m4 - m5 + m7;\n    const c01 = m3 + m5;\n    const c10 = m2 + m4;\n    const c11 = m1 - m2 + m3 + m6;\n\n    result.set(0, 0, c00);\n    result.set(0, 1, c01);\n    result.set(1, 0, c10);\n    result.set(1, 1, c11);\n    return result;\n  }\n\n  strassen3x3(other) {\n    other = Matrix.checkMatrix(other);\n    let result = new Matrix(3, 3);\n\n    const a00 = this.get(0, 0);\n    const a01 = this.get(0, 1);\n    const a02 = this.get(0, 2);\n    const a10 = this.get(1, 0);\n    const a11 = this.get(1, 1);\n    const a12 = this.get(1, 2);\n    const a20 = this.get(2, 0);\n    const a21 = this.get(2, 1);\n    const a22 = this.get(2, 2);\n\n    const b00 = other.get(0, 0);\n    const b01 = other.get(0, 1);\n    const b02 = other.get(0, 2);\n    const b10 = other.get(1, 0);\n    const b11 = other.get(1, 1);\n    const b12 = other.get(1, 2);\n    const b20 = other.get(2, 0);\n    const b21 = other.get(2, 1);\n    const b22 = other.get(2, 2);\n\n    const m1 = (a00 + a01 + a02 - a10 - a11 - a21 - a22) * b11;\n    const m2 = (a00 - a10) * (-b01 + b11);\n    const m3 = a11 * (-b00 + b01 + b10 - b11 - b12 - b20 + b22);\n    const m4 = (-a00 + a10 + a11) * (b00 - b01 + b11);\n    const m5 = (a10 + a11) * (-b00 + b01);\n    const m6 = a00 * b00;\n    const m7 = (-a00 + a20 + a21) * (b00 - b02 + b12);\n    const m8 = (-a00 + a20) * (b02 - b12);\n    const m9 = (a20 + a21) * (-b00 + b02);\n    const m10 = (a00 + a01 + a02 - a11 - a12 - a20 - a21) * b12;\n    const m11 = a21 * (-b00 + b02 + b10 - b11 - b12 - b20 + b21);\n    const m12 = (-a02 + a21 + a22) * (b11 + b20 - b21);\n    const m13 = (a02 - a22) * (b11 - b21);\n    const m14 = a02 * b20;\n    const m15 = (a21 + a22) * (-b20 + b21);\n    const m16 = (-a02 + a11 + a12) * (b12 + b20 - b22);\n    const m17 = (a02 - a12) * (b12 - b22);\n    const m18 = (a11 + a12) * (-b20 + b22);\n    const m19 = a01 * b10;\n    const m20 = a12 * b21;\n    const m21 = a10 * b02;\n    const m22 = a20 * b01;\n    const m23 = a22 * b22;\n\n    const c00 = m6 + m14 + m19;\n    const c01 = m1 + m4 + m5 + m6 + m12 + m14 + m15;\n    const c02 = m6 + m7 + m9 + m10 + m14 + m16 + m18;\n    const c10 = m2 + m3 + m4 + m6 + m14 + m16 + m17;\n    const c11 = m2 + m4 + m5 + m6 + m20;\n    const c12 = m14 + m16 + m17 + m18 + m21;\n    const c20 = m6 + m7 + m8 + m11 + m12 + m13 + m14;\n    const c21 = m12 + m13 + m14 + m15 + m22;\n    const c22 = m6 + m7 + m8 + m9 + m23;\n\n    result.set(0, 0, c00);\n    result.set(0, 1, c01);\n    result.set(0, 2, c02);\n    result.set(1, 0, c10);\n    result.set(1, 1, c11);\n    result.set(1, 2, c12);\n    result.set(2, 0, c20);\n    result.set(2, 1, c21);\n    result.set(2, 2, c22);\n    return result;\n  }\n\n  mmulStrassen(y) {\n    y = Matrix.checkMatrix(y);\n    let x = this.clone();\n    let r1 = x.rows;\n    let c1 = x.columns;\n    let r2 = y.rows;\n    let c2 = y.columns;\n    if (c1 !== r2) {\n      // eslint-disable-next-line no-console\n      console.warn(\n        `Multiplying ${r1} x ${c1} and ${r2} x ${c2} matrix: dimensions do not match.`,\n      );\n    }\n\n    // Put a matrix into the top left of a matrix of zeros.\n    // `rows` and `cols` are the dimensions of the output matrix.\n    function embed(mat, rows, cols) {\n      let r = mat.rows;\n      let c = mat.columns;\n      if (r === rows && c === cols) {\n        return mat;\n      } else {\n        let resultat = AbstractMatrix.zeros(rows, cols);\n        resultat = resultat.setSubMatrix(mat, 0, 0);\n        return resultat;\n      }\n    }\n\n    // Make sure both matrices are the same size.\n    // This is exclusively for simplicity:\n    // this algorithm can be implemented with matrices of different sizes.\n\n    let r = Math.max(r1, r2);\n    let c = Math.max(c1, c2);\n    x = embed(x, r, c);\n    y = embed(y, r, c);\n\n    // Our recursive multiplication function.\n    function blockMult(a, b, rows, cols) {\n      // For small matrices, resort to naive multiplication.\n      if (rows <= 512 || cols <= 512) {\n        return a.mmul(b); // a is equivalent to this\n      }\n\n      // Apply dynamic padding.\n      if (rows % 2 === 1 && cols % 2 === 1) {\n        a = embed(a, rows + 1, cols + 1);\n        b = embed(b, rows + 1, cols + 1);\n      } else if (rows % 2 === 1) {\n        a = embed(a, rows + 1, cols);\n        b = embed(b, rows + 1, cols);\n      } else if (cols % 2 === 1) {\n        a = embed(a, rows, cols + 1);\n        b = embed(b, rows, cols + 1);\n      }\n\n      let halfRows = parseInt(a.rows / 2, 10);\n      let halfCols = parseInt(a.columns / 2, 10);\n      // Subdivide input matrices.\n      let a11 = a.subMatrix(0, halfRows - 1, 0, halfCols - 1);\n      let b11 = b.subMatrix(0, halfRows - 1, 0, halfCols - 1);\n\n      let a12 = a.subMatrix(0, halfRows - 1, halfCols, a.columns - 1);\n      let b12 = b.subMatrix(0, halfRows - 1, halfCols, b.columns - 1);\n\n      let a21 = a.subMatrix(halfRows, a.rows - 1, 0, halfCols - 1);\n      let b21 = b.subMatrix(halfRows, b.rows - 1, 0, halfCols - 1);\n\n      let a22 = a.subMatrix(halfRows, a.rows - 1, halfCols, a.columns - 1);\n      let b22 = b.subMatrix(halfRows, b.rows - 1, halfCols, b.columns - 1);\n\n      // Compute intermediate values.\n      let m1 = blockMult(\n        AbstractMatrix.add(a11, a22),\n        AbstractMatrix.add(b11, b22),\n        halfRows,\n        halfCols,\n      );\n      let m2 = blockMult(AbstractMatrix.add(a21, a22), b11, halfRows, halfCols);\n      let m3 = blockMult(a11, AbstractMatrix.sub(b12, b22), halfRows, halfCols);\n      let m4 = blockMult(a22, AbstractMatrix.sub(b21, b11), halfRows, halfCols);\n      let m5 = blockMult(AbstractMatrix.add(a11, a12), b22, halfRows, halfCols);\n      let m6 = blockMult(\n        AbstractMatrix.sub(a21, a11),\n        AbstractMatrix.add(b11, b12),\n        halfRows,\n        halfCols,\n      );\n      let m7 = blockMult(\n        AbstractMatrix.sub(a12, a22),\n        AbstractMatrix.add(b21, b22),\n        halfRows,\n        halfCols,\n      );\n\n      // Combine intermediate values into the output.\n      let c11 = AbstractMatrix.add(m1, m4);\n      c11.sub(m5);\n      c11.add(m7);\n      let c12 = AbstractMatrix.add(m3, m5);\n      let c21 = AbstractMatrix.add(m2, m4);\n      let c22 = AbstractMatrix.sub(m1, m2);\n      c22.add(m3);\n      c22.add(m6);\n\n      // Crop output to the desired size (undo dynamic padding).\n      let resultat = AbstractMatrix.zeros(2 * c11.rows, 2 * c11.columns);\n      resultat = resultat.setSubMatrix(c11, 0, 0);\n      resultat = resultat.setSubMatrix(c12, c11.rows, 0);\n      resultat = resultat.setSubMatrix(c21, 0, c11.columns);\n      resultat = resultat.setSubMatrix(c22, c11.rows, c11.columns);\n      return resultat.subMatrix(0, rows - 1, 0, cols - 1);\n    }\n    return blockMult(x, y, r, c);\n  }\n\n  scaleRows(options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { min = 0, max = 1 } = options;\n    if (!Number.isFinite(min)) throw new TypeError('min must be a number');\n    if (!Number.isFinite(max)) throw new TypeError('max must be a number');\n    if (min >= max) throw new RangeError('min must be smaller than max');\n    let newMatrix = new Matrix(this.rows, this.columns);\n    for (let i = 0; i < this.rows; i++) {\n      const row = this.getRow(i);\n      if (row.length > 0) {\n        rescale(row, { min, max, output: row });\n      }\n      newMatrix.setRow(i, row);\n    }\n    return newMatrix;\n  }\n\n  scaleColumns(options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { min = 0, max = 1 } = options;\n    if (!Number.isFinite(min)) throw new TypeError('min must be a number');\n    if (!Number.isFinite(max)) throw new TypeError('max must be a number');\n    if (min >= max) throw new RangeError('min must be smaller than max');\n    let newMatrix = new Matrix(this.rows, this.columns);\n    for (let i = 0; i < this.columns; i++) {\n      const column = this.getColumn(i);\n      if (column.length) {\n        rescale(column, {\n          min: min,\n          max: max,\n          output: column,\n        });\n      }\n      newMatrix.setColumn(i, column);\n    }\n    return newMatrix;\n  }\n\n  flipRows() {\n    const middle = Math.ceil(this.columns / 2);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < middle; j++) {\n        let first = this.get(i, j);\n        let last = this.get(i, this.columns - 1 - j);\n        this.set(i, j, last);\n        this.set(i, this.columns - 1 - j, first);\n      }\n    }\n    return this;\n  }\n\n  flipColumns() {\n    const middle = Math.ceil(this.rows / 2);\n    for (let j = 0; j < this.columns; j++) {\n      for (let i = 0; i < middle; i++) {\n        let first = this.get(i, j);\n        let last = this.get(this.rows - 1 - i, j);\n        this.set(i, j, last);\n        this.set(this.rows - 1 - i, j, first);\n      }\n    }\n    return this;\n  }\n\n  kroneckerProduct(other) {\n    other = Matrix.checkMatrix(other);\n\n    let m = this.rows;\n    let n = this.columns;\n    let p = other.rows;\n    let q = other.columns;\n\n    let result = new Matrix(m * p, n * q);\n    for (let i = 0; i < m; i++) {\n      for (let j = 0; j < n; j++) {\n        for (let k = 0; k < p; k++) {\n          for (let l = 0; l < q; l++) {\n            result.set(p * i + k, q * j + l, this.get(i, j) * other.get(k, l));\n          }\n        }\n      }\n    }\n    return result;\n  }\n\n  kroneckerSum(other) {\n    other = Matrix.checkMatrix(other);\n    if (!this.isSquare() || !other.isSquare()) {\n      throw new Error('Kronecker Sum needs two Square Matrices');\n    }\n    let m = this.rows;\n    let n = other.rows;\n    let AxI = this.kroneckerProduct(Matrix.eye(n, n));\n    let IxB = Matrix.eye(m, m).kroneckerProduct(other);\n    return AxI.add(IxB);\n  }\n\n  transpose() {\n    let result = new Matrix(this.columns, this.rows);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        result.set(j, i, this.get(i, j));\n      }\n    }\n    return result;\n  }\n\n  sortRows(compareFunction = compareNumbers) {\n    for (let i = 0; i < this.rows; i++) {\n      this.setRow(i, this.getRow(i).sort(compareFunction));\n    }\n    return this;\n  }\n\n  sortColumns(compareFunction = compareNumbers) {\n    for (let i = 0; i < this.columns; i++) {\n      this.setColumn(i, this.getColumn(i).sort(compareFunction));\n    }\n    return this;\n  }\n\n  subMatrix(startRow, endRow, startColumn, endColumn) {\n    checkRange(this, startRow, endRow, startColumn, endColumn);\n    let newMatrix = new Matrix(\n      endRow - startRow + 1,\n      endColumn - startColumn + 1,\n    );\n    for (let i = startRow; i <= endRow; i++) {\n      for (let j = startColumn; j <= endColumn; j++) {\n        newMatrix.set(i - startRow, j - startColumn, this.get(i, j));\n      }\n    }\n    return newMatrix;\n  }\n\n  subMatrixRow(indices, startColumn, endColumn) {\n    if (startColumn === undefined) startColumn = 0;\n    if (endColumn === undefined) endColumn = this.columns - 1;\n    if (\n      startColumn > endColumn ||\n      startColumn < 0 ||\n      startColumn >= this.columns ||\n      endColumn < 0 ||\n      endColumn >= this.columns\n    ) {\n      throw new RangeError('Argument out of range');\n    }\n\n    let newMatrix = new Matrix(indices.length, endColumn - startColumn + 1);\n    for (let i = 0; i < indices.length; i++) {\n      for (let j = startColumn; j <= endColumn; j++) {\n        if (indices[i] < 0 || indices[i] >= this.rows) {\n          throw new RangeError(`Row index out of range: ${indices[i]}`);\n        }\n        newMatrix.set(i, j - startColumn, this.get(indices[i], j));\n      }\n    }\n    return newMatrix;\n  }\n\n  subMatrixColumn(indices, startRow, endRow) {\n    if (startRow === undefined) startRow = 0;\n    if (endRow === undefined) endRow = this.rows - 1;\n    if (\n      startRow > endRow ||\n      startRow < 0 ||\n      startRow >= this.rows ||\n      endRow < 0 ||\n      endRow >= this.rows\n    ) {\n      throw new RangeError('Argument out of range');\n    }\n\n    let newMatrix = new Matrix(endRow - startRow + 1, indices.length);\n    for (let i = 0; i < indices.length; i++) {\n      for (let j = startRow; j <= endRow; j++) {\n        if (indices[i] < 0 || indices[i] >= this.columns) {\n          throw new RangeError(`Column index out of range: ${indices[i]}`);\n        }\n        newMatrix.set(j - startRow, i, this.get(j, indices[i]));\n      }\n    }\n    return newMatrix;\n  }\n\n  setSubMatrix(matrix, startRow, startColumn) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (matrix.isEmpty()) {\n      return this;\n    }\n    let endRow = startRow + matrix.rows - 1;\n    let endColumn = startColumn + matrix.columns - 1;\n    checkRange(this, startRow, endRow, startColumn, endColumn);\n    for (let i = 0; i < matrix.rows; i++) {\n      for (let j = 0; j < matrix.columns; j++) {\n        this.set(startRow + i, startColumn + j, matrix.get(i, j));\n      }\n    }\n    return this;\n  }\n\n  selection(rowIndices, columnIndices) {\n    let indices = checkIndices(this, rowIndices, columnIndices);\n    let newMatrix = new Matrix(rowIndices.length, columnIndices.length);\n    for (let i = 0; i < indices.row.length; i++) {\n      let rowIndex = indices.row[i];\n      for (let j = 0; j < indices.column.length; j++) {\n        let columnIndex = indices.column[j];\n        newMatrix.set(i, j, this.get(rowIndex, columnIndex));\n      }\n    }\n    return newMatrix;\n  }\n\n  trace() {\n    let min = Math.min(this.rows, this.columns);\n    let trace = 0;\n    for (let i = 0; i < min; i++) {\n      trace += this.get(i, i);\n    }\n    return trace;\n  }\n\n  clone() {\n    let newMatrix = new Matrix(this.rows, this.columns);\n    for (let row = 0; row < this.rows; row++) {\n      for (let column = 0; column < this.columns; column++) {\n        newMatrix.set(row, column, this.get(row, column));\n      }\n    }\n    return newMatrix;\n  }\n\n  sum(by) {\n    switch (by) {\n      case 'row':\n        return sumByRow(this);\n      case 'column':\n        return sumByColumn(this);\n      case undefined:\n        return sumAll(this);\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  product(by) {\n    switch (by) {\n      case 'row':\n        return productByRow(this);\n      case 'column':\n        return productByColumn(this);\n      case undefined:\n        return productAll(this);\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  mean(by) {\n    const sum = this.sum(by);\n    switch (by) {\n      case 'row': {\n        for (let i = 0; i < this.rows; i++) {\n          sum[i] /= this.columns;\n        }\n        return sum;\n      }\n      case 'column': {\n        for (let i = 0; i < this.columns; i++) {\n          sum[i] /= this.rows;\n        }\n        return sum;\n      }\n      case undefined:\n        return sum / this.size;\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  variance(by, options = {}) {\n    if (typeof by === 'object') {\n      options = by;\n      by = undefined;\n    }\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { unbiased = true, mean = this.mean(by) } = options;\n    if (typeof unbiased !== 'boolean') {\n      throw new TypeError('unbiased must be a boolean');\n    }\n    switch (by) {\n      case 'row': {\n        if (!Array.isArray(mean)) {\n          throw new TypeError('mean must be an array');\n        }\n        return varianceByRow(this, unbiased, mean);\n      }\n      case 'column': {\n        if (!Array.isArray(mean)) {\n          throw new TypeError('mean must be an array');\n        }\n        return varianceByColumn(this, unbiased, mean);\n      }\n      case undefined: {\n        if (typeof mean !== 'number') {\n          throw new TypeError('mean must be a number');\n        }\n        return varianceAll(this, unbiased, mean);\n      }\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  standardDeviation(by, options) {\n    if (typeof by === 'object') {\n      options = by;\n      by = undefined;\n    }\n    const variance = this.variance(by, options);\n    if (by === undefined) {\n      return Math.sqrt(variance);\n    } else {\n      for (let i = 0; i < variance.length; i++) {\n        variance[i] = Math.sqrt(variance[i]);\n      }\n      return variance;\n    }\n  }\n\n  center(by, options = {}) {\n    if (typeof by === 'object') {\n      options = by;\n      by = undefined;\n    }\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { center = this.mean(by) } = options;\n    switch (by) {\n      case 'row': {\n        if (!Array.isArray(center)) {\n          throw new TypeError('center must be an array');\n        }\n        centerByRow(this, center);\n        return this;\n      }\n      case 'column': {\n        if (!Array.isArray(center)) {\n          throw new TypeError('center must be an array');\n        }\n        centerByColumn(this, center);\n        return this;\n      }\n      case undefined: {\n        if (typeof center !== 'number') {\n          throw new TypeError('center must be a number');\n        }\n        centerAll(this, center);\n        return this;\n      }\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  scale(by, options = {}) {\n    if (typeof by === 'object') {\n      options = by;\n      by = undefined;\n    }\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    let scale = options.scale;\n    switch (by) {\n      case 'row': {\n        if (scale === undefined) {\n          scale = getScaleByRow(this);\n        } else if (!Array.isArray(scale)) {\n          throw new TypeError('scale must be an array');\n        }\n        scaleByRow(this, scale);\n        return this;\n      }\n      case 'column': {\n        if (scale === undefined) {\n          scale = getScaleByColumn(this);\n        } else if (!Array.isArray(scale)) {\n          throw new TypeError('scale must be an array');\n        }\n        scaleByColumn(this, scale);\n        return this;\n      }\n      case undefined: {\n        if (scale === undefined) {\n          scale = getScaleAll(this);\n        } else if (typeof scale !== 'number') {\n          throw new TypeError('scale must be a number');\n        }\n        scaleAll(this, scale);\n        return this;\n      }\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  toString(options) {\n    return inspectMatrixWithOptions(this, options);\n  }\n}\n\nAbstractMatrix.prototype.klass = 'Matrix';\nif (typeof Symbol !== 'undefined') {\n  AbstractMatrix.prototype[\n    Symbol.for('nodejs.util.inspect.custom')\n  ] = inspectMatrix;\n}\n\nfunction compareNumbers(a, b) {\n  return a - b;\n}\n\n// Synonyms\nAbstractMatrix.random = AbstractMatrix.rand;\nAbstractMatrix.randomInt = AbstractMatrix.randInt;\nAbstractMatrix.diagonal = AbstractMatrix.diag;\nAbstractMatrix.prototype.diagonal = AbstractMatrix.prototype.diag;\nAbstractMatrix.identity = AbstractMatrix.eye;\nAbstractMatrix.prototype.negate = AbstractMatrix.prototype.neg;\nAbstractMatrix.prototype.tensorProduct =\n  AbstractMatrix.prototype.kroneckerProduct;\n\nexport default class Matrix extends AbstractMatrix {\n  constructor(nRows, nColumns) {\n    super();\n    if (Matrix.isMatrix(nRows)) {\n      // eslint-disable-next-line no-constructor-return\n      return nRows.clone();\n    } else if (Number.isInteger(nRows) && nRows >= 0) {\n      // Create an empty matrix\n      this.data = [];\n      if (Number.isInteger(nColumns) && nColumns >= 0) {\n        for (let i = 0; i < nRows; i++) {\n          this.data.push(new Float64Array(nColumns));\n        }\n      } else {\n        throw new TypeError('nColumns must be a positive integer');\n      }\n    } else if (Array.isArray(nRows)) {\n      // Copy the values from the 2D array\n      const arrayData = nRows;\n      nRows = arrayData.length;\n      nColumns = nRows ? arrayData[0].length : 0;\n      if (typeof nColumns !== 'number') {\n        throw new TypeError(\n          'Data must be a 2D array with at least one element',\n        );\n      }\n      this.data = [];\n      for (let i = 0; i < nRows; i++) {\n        if (arrayData[i].length !== nColumns) {\n          throw new RangeError('Inconsistent array dimensions');\n        }\n        this.data.push(Float64Array.from(arrayData[i]));\n      }\n    } else {\n      throw new TypeError(\n        'First argument must be a positive number or an array',\n      );\n    }\n    this.rows = nRows;\n    this.columns = nColumns;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.data[rowIndex][columnIndex] = value;\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.data[rowIndex][columnIndex];\n  }\n\n  removeRow(index) {\n    checkRowIndex(this, index);\n    this.data.splice(index, 1);\n    this.rows -= 1;\n    return this;\n  }\n\n  addRow(index, array) {\n    if (array === undefined) {\n      array = index;\n      index = this.rows;\n    }\n    checkRowIndex(this, index, true);\n    array = Float64Array.from(checkRowVector(this, array));\n    this.data.splice(index, 0, array);\n    this.rows += 1;\n    return this;\n  }\n\n  removeColumn(index) {\n    checkColumnIndex(this, index);\n    for (let i = 0; i < this.rows; i++) {\n      const newRow = new Float64Array(this.columns - 1);\n      for (let j = 0; j < index; j++) {\n        newRow[j] = this.data[i][j];\n      }\n      for (let j = index + 1; j < this.columns; j++) {\n        newRow[j - 1] = this.data[i][j];\n      }\n      this.data[i] = newRow;\n    }\n    this.columns -= 1;\n    return this;\n  }\n\n  addColumn(index, array) {\n    if (typeof array === 'undefined') {\n      array = index;\n      index = this.columns;\n    }\n    checkColumnIndex(this, index, true);\n    array = checkColumnVector(this, array);\n    for (let i = 0; i < this.rows; i++) {\n      const newRow = new Float64Array(this.columns + 1);\n      let j = 0;\n      for (; j < index; j++) {\n        newRow[j] = this.data[i][j];\n      }\n      newRow[j++] = array[i];\n      for (; j < this.columns + 1; j++) {\n        newRow[j] = this.data[i][j - 1];\n      }\n      this.data[i] = newRow;\n    }\n    this.columns += 1;\n    return this;\n  }\n}\n\ninstallMathOperations(AbstractMatrix, Matrix);\n","import { AbstractMatrix } from '../matrix';\n\nexport default class BaseView extends AbstractMatrix {\n  constructor(matrix, rows, columns) {\n    super();\n    this.matrix = matrix;\n    this.rows = rows;\n    this.columns = columns;\n  }\n}\n","import BaseView from './base';\n\nexport default class MatrixTransposeView extends BaseView {\n  constructor(matrix) {\n    super(matrix, matrix.columns, matrix.rows);\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(columnIndex, rowIndex, value);\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.matrix.get(columnIndex, rowIndex);\n  }\n}\n","import { AbstractMatrix } from '../matrix';\n\nexport default class WrapperMatrix2D extends AbstractMatrix {\n  constructor(data) {\n    super();\n    this.data = data;\n    this.rows = data.length;\n    this.columns = data[0].length;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.data[rowIndex][columnIndex] = value;\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.data[rowIndex][columnIndex];\n  }\n}\n","import Matrix from '../matrix';\nimport WrapperMatrix2D from '../wrap/WrapperMatrix2D';\n\nexport default class LuDecomposition {\n  constructor(matrix) {\n    matrix = WrapperMatrix2D.checkMatrix(matrix);\n\n    let lu = matrix.clone();\n    let rows = lu.rows;\n    let columns = lu.columns;\n    let pivotVector = new Float64Array(rows);\n    let pivotSign = 1;\n    let i, j, k, p, s, t, v;\n    let LUcolj, kmax;\n\n    for (i = 0; i < rows; i++) {\n      pivotVector[i] = i;\n    }\n\n    LUcolj = new Float64Array(rows);\n\n    for (j = 0; j < columns; j++) {\n      for (i = 0; i < rows; i++) {\n        LUcolj[i] = lu.get(i, j);\n      }\n\n      for (i = 0; i < rows; i++) {\n        kmax = Math.min(i, j);\n        s = 0;\n        for (k = 0; k < kmax; k++) {\n          s += lu.get(i, k) * LUcolj[k];\n        }\n        LUcolj[i] -= s;\n        lu.set(i, j, LUcolj[i]);\n      }\n\n      p = j;\n      for (i = j + 1; i < rows; i++) {\n        if (Math.abs(LUcolj[i]) > Math.abs(LUcolj[p])) {\n          p = i;\n        }\n      }\n\n      if (p !== j) {\n        for (k = 0; k < columns; k++) {\n          t = lu.get(p, k);\n          lu.set(p, k, lu.get(j, k));\n          lu.set(j, k, t);\n        }\n\n        v = pivotVector[p];\n        pivotVector[p] = pivotVector[j];\n        pivotVector[j] = v;\n\n        pivotSign = -pivotSign;\n      }\n\n      if (j < rows && lu.get(j, j) !== 0) {\n        for (i = j + 1; i < rows; i++) {\n          lu.set(i, j, lu.get(i, j) / lu.get(j, j));\n        }\n      }\n    }\n\n    this.LU = lu;\n    this.pivotVector = pivotVector;\n    this.pivotSign = pivotSign;\n  }\n\n  isSingular() {\n    let data = this.LU;\n    let col = data.columns;\n    for (let j = 0; j < col; j++) {\n      if (data.get(j, j) === 0) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  solve(value) {\n    value = Matrix.checkMatrix(value);\n\n    let lu = this.LU;\n    let rows = lu.rows;\n\n    if (rows !== value.rows) {\n      throw new Error('Invalid matrix dimensions');\n    }\n    if (this.isSingular()) {\n      throw new Error('LU matrix is singular');\n    }\n\n    let count = value.columns;\n    let X = value.subMatrixRow(this.pivotVector, 0, count - 1);\n    let columns = lu.columns;\n    let i, j, k;\n\n    for (k = 0; k < columns; k++) {\n      for (i = k + 1; i < columns; i++) {\n        for (j = 0; j < count; j++) {\n          X.set(i, j, X.get(i, j) - X.get(k, j) * lu.get(i, k));\n        }\n      }\n    }\n    for (k = columns - 1; k >= 0; k--) {\n      for (j = 0; j < count; j++) {\n        X.set(k, j, X.get(k, j) / lu.get(k, k));\n      }\n      for (i = 0; i < k; i++) {\n        for (j = 0; j < count; j++) {\n          X.set(i, j, X.get(i, j) - X.get(k, j) * lu.get(i, k));\n        }\n      }\n    }\n    return X;\n  }\n\n  get determinant() {\n    let data = this.LU;\n    if (!data.isSquare()) {\n      throw new Error('Matrix must be square');\n    }\n    let determinant = this.pivotSign;\n    let col = data.columns;\n    for (let j = 0; j < col; j++) {\n      determinant *= data.get(j, j);\n    }\n    return determinant;\n  }\n\n  get lowerTriangularMatrix() {\n    let data = this.LU;\n    let rows = data.rows;\n    let columns = data.columns;\n    let X = new Matrix(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        if (i > j) {\n          X.set(i, j, data.get(i, j));\n        } else if (i === j) {\n          X.set(i, j, 1);\n        } else {\n          X.set(i, j, 0);\n        }\n      }\n    }\n    return X;\n  }\n\n  get upperTriangularMatrix() {\n    let data = this.LU;\n    let rows = data.rows;\n    let columns = data.columns;\n    let X = new Matrix(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        if (i <= j) {\n          X.set(i, j, data.get(i, j));\n        } else {\n          X.set(i, j, 0);\n        }\n      }\n    }\n    return X;\n  }\n\n  get pivotPermutationVector() {\n    return Array.from(this.pivotVector);\n  }\n}\n","export function hypotenuse(a, b) {\n  let r = 0;\n  if (Math.abs(a) > Math.abs(b)) {\n    r = b / a;\n    return Math.abs(a) * Math.sqrt(1 + r * r);\n  }\n  if (b !== 0) {\n    r = a / b;\n    return Math.abs(b) * Math.sqrt(1 + r * r);\n  }\n  return 0;\n}\n","import Matrix from '../matrix';\nimport WrapperMatrix2D from '../wrap/WrapperMatrix2D';\n\nimport { hypotenuse } from './util';\n\nexport default class QrDecomposition {\n  constructor(value) {\n    value = WrapperMatrix2D.checkMatrix(value);\n\n    let qr = value.clone();\n    let m = value.rows;\n    let n = value.columns;\n    let rdiag = new Float64Array(n);\n    let i, j, k, s;\n\n    for (k = 0; k < n; k++) {\n      let nrm = 0;\n      for (i = k; i < m; i++) {\n        nrm = hypotenuse(nrm, qr.get(i, k));\n      }\n      if (nrm !== 0) {\n        if (qr.get(k, k) < 0) {\n          nrm = -nrm;\n        }\n        for (i = k; i < m; i++) {\n          qr.set(i, k, qr.get(i, k) / nrm);\n        }\n        qr.set(k, k, qr.get(k, k) + 1);\n        for (j = k + 1; j < n; j++) {\n          s = 0;\n          for (i = k; i < m; i++) {\n            s += qr.get(i, k) * qr.get(i, j);\n          }\n          s = -s / qr.get(k, k);\n          for (i = k; i < m; i++) {\n            qr.set(i, j, qr.get(i, j) + s * qr.get(i, k));\n          }\n        }\n      }\n      rdiag[k] = -nrm;\n    }\n\n    this.QR = qr;\n    this.Rdiag = rdiag;\n  }\n\n  solve(value) {\n    value = Matrix.checkMatrix(value);\n\n    let qr = this.QR;\n    let m = qr.rows;\n\n    if (value.rows !== m) {\n      throw new Error('Matrix row dimensions must agree');\n    }\n    if (!this.isFullRank()) {\n      throw new Error('Matrix is rank deficient');\n    }\n\n    let count = value.columns;\n    let X = value.clone();\n    let n = qr.columns;\n    let i, j, k, s;\n\n    for (k = 0; k < n; k++) {\n      for (j = 0; j < count; j++) {\n        s = 0;\n        for (i = k; i < m; i++) {\n          s += qr.get(i, k) * X.get(i, j);\n        }\n        s = -s / qr.get(k, k);\n        for (i = k; i < m; i++) {\n          X.set(i, j, X.get(i, j) + s * qr.get(i, k));\n        }\n      }\n    }\n    for (k = n - 1; k >= 0; k--) {\n      for (j = 0; j < count; j++) {\n        X.set(k, j, X.get(k, j) / this.Rdiag[k]);\n      }\n      for (i = 0; i < k; i++) {\n        for (j = 0; j < count; j++) {\n          X.set(i, j, X.get(i, j) - X.get(k, j) * qr.get(i, k));\n        }\n      }\n    }\n\n    return X.subMatrix(0, n - 1, 0, count - 1);\n  }\n\n  isFullRank() {\n    let columns = this.QR.columns;\n    for (let i = 0; i < columns; i++) {\n      if (this.Rdiag[i] === 0) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  get upperTriangularMatrix() {\n    let qr = this.QR;\n    let n = qr.columns;\n    let X = new Matrix(n, n);\n    let i, j;\n    for (i = 0; i < n; i++) {\n      for (j = 0; j < n; j++) {\n        if (i < j) {\n          X.set(i, j, qr.get(i, j));\n        } else if (i === j) {\n          X.set(i, j, this.Rdiag[i]);\n        } else {\n          X.set(i, j, 0);\n        }\n      }\n    }\n    return X;\n  }\n\n  get orthogonalMatrix() {\n    let qr = this.QR;\n    let rows = qr.rows;\n    let columns = qr.columns;\n    let X = new Matrix(rows, columns);\n    let i, j, k, s;\n\n    for (k = columns - 1; k >= 0; k--) {\n      for (i = 0; i < rows; i++) {\n        X.set(i, k, 0);\n      }\n      X.set(k, k, 1);\n      for (j = k; j < columns; j++) {\n        if (qr.get(k, k) !== 0) {\n          s = 0;\n          for (i = k; i < rows; i++) {\n            s += qr.get(i, k) * X.get(i, j);\n          }\n\n          s = -s / qr.get(k, k);\n\n          for (i = k; i < rows; i++) {\n            X.set(i, j, X.get(i, j) + s * qr.get(i, k));\n          }\n        }\n      }\n    }\n    return X;\n  }\n}\n","import Matrix from '../matrix';\nimport WrapperMatrix2D from '../wrap/WrapperMatrix2D';\n\nimport { hypotenuse } from './util';\n\nexport default class SingularValueDecomposition {\n  constructor(value, options = {}) {\n    value = WrapperMatrix2D.checkMatrix(value);\n\n    if (value.isEmpty()) {\n      throw new Error('Matrix must be non-empty');\n    }\n\n    let m = value.rows;\n    let n = value.columns;\n\n    const {\n      computeLeftSingularVectors = true,\n      computeRightSingularVectors = true,\n      autoTranspose = false,\n    } = options;\n\n    let wantu = Boolean(computeLeftSingularVectors);\n    let wantv = Boolean(computeRightSingularVectors);\n\n    let swapped = false;\n    let a;\n    if (m < n) {\n      if (!autoTranspose) {\n        a = value.clone();\n        // eslint-disable-next-line no-console\n        console.warn(\n          'Computing SVD on a matrix with more columns than rows. Consider enabling autoTranspose',\n        );\n      } else {\n        a = value.transpose();\n        m = a.rows;\n        n = a.columns;\n        swapped = true;\n        let aux = wantu;\n        wantu = wantv;\n        wantv = aux;\n      }\n    } else {\n      a = value.clone();\n    }\n\n    let nu = Math.min(m, n);\n    let ni = Math.min(m + 1, n);\n    let s = new Float64Array(ni);\n    let U = new Matrix(m, nu);\n    let V = new Matrix(n, n);\n\n    let e = new Float64Array(n);\n    let work = new Float64Array(m);\n\n    let si = new Float64Array(ni);\n    for (let i = 0; i < ni; i++) si[i] = i;\n\n    let nct = Math.min(m - 1, n);\n    let nrt = Math.max(0, Math.min(n - 2, m));\n    let mrc = Math.max(nct, nrt);\n\n    for (let k = 0; k < mrc; k++) {\n      if (k < nct) {\n        s[k] = 0;\n        for (let i = k; i < m; i++) {\n          s[k] = hypotenuse(s[k], a.get(i, k));\n        }\n        if (s[k] !== 0) {\n          if (a.get(k, k) < 0) {\n            s[k] = -s[k];\n          }\n          for (let i = k; i < m; i++) {\n            a.set(i, k, a.get(i, k) / s[k]);\n          }\n          a.set(k, k, a.get(k, k) + 1);\n        }\n        s[k] = -s[k];\n      }\n\n      for (let j = k + 1; j < n; j++) {\n        if (k < nct && s[k] !== 0) {\n          let t = 0;\n          for (let i = k; i < m; i++) {\n            t += a.get(i, k) * a.get(i, j);\n          }\n          t = -t / a.get(k, k);\n          for (let i = k; i < m; i++) {\n            a.set(i, j, a.get(i, j) + t * a.get(i, k));\n          }\n        }\n        e[j] = a.get(k, j);\n      }\n\n      if (wantu && k < nct) {\n        for (let i = k; i < m; i++) {\n          U.set(i, k, a.get(i, k));\n        }\n      }\n\n      if (k < nrt) {\n        e[k] = 0;\n        for (let i = k + 1; i < n; i++) {\n          e[k] = hypotenuse(e[k], e[i]);\n        }\n        if (e[k] !== 0) {\n          if (e[k + 1] < 0) {\n            e[k] = 0 - e[k];\n          }\n          for (let i = k + 1; i < n; i++) {\n            e[i] /= e[k];\n          }\n          e[k + 1] += 1;\n        }\n        e[k] = -e[k];\n        if (k + 1 < m && e[k] !== 0) {\n          for (let i = k + 1; i < m; i++) {\n            work[i] = 0;\n          }\n          for (let i = k + 1; i < m; i++) {\n            for (let j = k + 1; j < n; j++) {\n              work[i] += e[j] * a.get(i, j);\n            }\n          }\n          for (let j = k + 1; j < n; j++) {\n            let t = -e[j] / e[k + 1];\n            for (let i = k + 1; i < m; i++) {\n              a.set(i, j, a.get(i, j) + t * work[i]);\n            }\n          }\n        }\n        if (wantv) {\n          for (let i = k + 1; i < n; i++) {\n            V.set(i, k, e[i]);\n          }\n        }\n      }\n    }\n\n    let p = Math.min(n, m + 1);\n    if (nct < n) {\n      s[nct] = a.get(nct, nct);\n    }\n    if (m < p) {\n      s[p - 1] = 0;\n    }\n    if (nrt + 1 < p) {\n      e[nrt] = a.get(nrt, p - 1);\n    }\n    e[p - 1] = 0;\n\n    if (wantu) {\n      for (let j = nct; j < nu; j++) {\n        for (let i = 0; i < m; i++) {\n          U.set(i, j, 0);\n        }\n        U.set(j, j, 1);\n      }\n      for (let k = nct - 1; k >= 0; k--) {\n        if (s[k] !== 0) {\n          for (let j = k + 1; j < nu; j++) {\n            let t = 0;\n            for (let i = k; i < m; i++) {\n              t += U.get(i, k) * U.get(i, j);\n            }\n            t = -t / U.get(k, k);\n            for (let i = k; i < m; i++) {\n              U.set(i, j, U.get(i, j) + t * U.get(i, k));\n            }\n          }\n          for (let i = k; i < m; i++) {\n            U.set(i, k, -U.get(i, k));\n          }\n          U.set(k, k, 1 + U.get(k, k));\n          for (let i = 0; i < k - 1; i++) {\n            U.set(i, k, 0);\n          }\n        } else {\n          for (let i = 0; i < m; i++) {\n            U.set(i, k, 0);\n          }\n          U.set(k, k, 1);\n        }\n      }\n    }\n\n    if (wantv) {\n      for (let k = n - 1; k >= 0; k--) {\n        if (k < nrt && e[k] !== 0) {\n          for (let j = k + 1; j < n; j++) {\n            let t = 0;\n            for (let i = k + 1; i < n; i++) {\n              t += V.get(i, k) * V.get(i, j);\n            }\n            t = -t / V.get(k + 1, k);\n            for (let i = k + 1; i < n; i++) {\n              V.set(i, j, V.get(i, j) + t * V.get(i, k));\n            }\n          }\n        }\n        for (let i = 0; i < n; i++) {\n          V.set(i, k, 0);\n        }\n        V.set(k, k, 1);\n      }\n    }\n\n    let pp = p - 1;\n    let iter = 0;\n    let eps = Number.EPSILON;\n    while (p > 0) {\n      let k, kase;\n      for (k = p - 2; k >= -1; k--) {\n        if (k === -1) {\n          break;\n        }\n        const alpha =\n          Number.MIN_VALUE + eps * Math.abs(s[k] + Math.abs(s[k + 1]));\n        if (Math.abs(e[k]) <= alpha || Number.isNaN(e[k])) {\n          e[k] = 0;\n          break;\n        }\n      }\n      if (k === p - 2) {\n        kase = 4;\n      } else {\n        let ks;\n        for (ks = p - 1; ks >= k; ks--) {\n          if (ks === k) {\n            break;\n          }\n          let t =\n            (ks !== p ? Math.abs(e[ks]) : 0) +\n            (ks !== k + 1 ? Math.abs(e[ks - 1]) : 0);\n          if (Math.abs(s[ks]) <= eps * t) {\n            s[ks] = 0;\n            break;\n          }\n        }\n        if (ks === k) {\n          kase = 3;\n        } else if (ks === p - 1) {\n          kase = 1;\n        } else {\n          kase = 2;\n          k = ks;\n        }\n      }\n\n      k++;\n\n      switch (kase) {\n        case 1: {\n          let f = e[p - 2];\n          e[p - 2] = 0;\n          for (let j = p - 2; j >= k; j--) {\n            let t = hypotenuse(s[j], f);\n            let cs = s[j] / t;\n            let sn = f / t;\n            s[j] = t;\n            if (j !== k) {\n              f = -sn * e[j - 1];\n              e[j - 1] = cs * e[j - 1];\n            }\n            if (wantv) {\n              for (let i = 0; i < n; i++) {\n                t = cs * V.get(i, j) + sn * V.get(i, p - 1);\n                V.set(i, p - 1, -sn * V.get(i, j) + cs * V.get(i, p - 1));\n                V.set(i, j, t);\n              }\n            }\n          }\n          break;\n        }\n        case 2: {\n          let f = e[k - 1];\n          e[k - 1] = 0;\n          for (let j = k; j < p; j++) {\n            let t = hypotenuse(s[j], f);\n            let cs = s[j] / t;\n            let sn = f / t;\n            s[j] = t;\n            f = -sn * e[j];\n            e[j] = cs * e[j];\n            if (wantu) {\n              for (let i = 0; i < m; i++) {\n                t = cs * U.get(i, j) + sn * U.get(i, k - 1);\n                U.set(i, k - 1, -sn * U.get(i, j) + cs * U.get(i, k - 1));\n                U.set(i, j, t);\n              }\n            }\n          }\n          break;\n        }\n        case 3: {\n          const scale = Math.max(\n            Math.abs(s[p - 1]),\n            Math.abs(s[p - 2]),\n            Math.abs(e[p - 2]),\n            Math.abs(s[k]),\n            Math.abs(e[k]),\n          );\n          const sp = s[p - 1] / scale;\n          const spm1 = s[p - 2] / scale;\n          const epm1 = e[p - 2] / scale;\n          const sk = s[k] / scale;\n          const ek = e[k] / scale;\n          const b = ((spm1 + sp) * (spm1 - sp) + epm1 * epm1) / 2;\n          const c = sp * epm1 * (sp * epm1);\n          let shift = 0;\n          if (b !== 0 || c !== 0) {\n            if (b < 0) {\n              shift = 0 - Math.sqrt(b * b + c);\n            } else {\n              shift = Math.sqrt(b * b + c);\n            }\n            shift = c / (b + shift);\n          }\n          let f = (sk + sp) * (sk - sp) + shift;\n          let g = sk * ek;\n          for (let j = k; j < p - 1; j++) {\n            let t = hypotenuse(f, g);\n            if (t === 0) t = Number.MIN_VALUE;\n            let cs = f / t;\n            let sn = g / t;\n            if (j !== k) {\n              e[j - 1] = t;\n            }\n            f = cs * s[j] + sn * e[j];\n            e[j] = cs * e[j] - sn * s[j];\n            g = sn * s[j + 1];\n            s[j + 1] = cs * s[j + 1];\n            if (wantv) {\n              for (let i = 0; i < n; i++) {\n                t = cs * V.get(i, j) + sn * V.get(i, j + 1);\n                V.set(i, j + 1, -sn * V.get(i, j) + cs * V.get(i, j + 1));\n                V.set(i, j, t);\n              }\n            }\n            t = hypotenuse(f, g);\n            if (t === 0) t = Number.MIN_VALUE;\n            cs = f / t;\n            sn = g / t;\n            s[j] = t;\n            f = cs * e[j] + sn * s[j + 1];\n            s[j + 1] = -sn * e[j] + cs * s[j + 1];\n            g = sn * e[j + 1];\n            e[j + 1] = cs * e[j + 1];\n            if (wantu && j < m - 1) {\n              for (let i = 0; i < m; i++) {\n                t = cs * U.get(i, j) + sn * U.get(i, j + 1);\n                U.set(i, j + 1, -sn * U.get(i, j) + cs * U.get(i, j + 1));\n                U.set(i, j, t);\n              }\n            }\n          }\n          e[p - 2] = f;\n          iter = iter + 1;\n          break;\n        }\n        case 4: {\n          if (s[k] <= 0) {\n            s[k] = s[k] < 0 ? -s[k] : 0;\n            if (wantv) {\n              for (let i = 0; i <= pp; i++) {\n                V.set(i, k, -V.get(i, k));\n              }\n            }\n          }\n          while (k < pp) {\n            if (s[k] >= s[k + 1]) {\n              break;\n            }\n            let t = s[k];\n            s[k] = s[k + 1];\n            s[k + 1] = t;\n            if (wantv && k < n - 1) {\n              for (let i = 0; i < n; i++) {\n                t = V.get(i, k + 1);\n                V.set(i, k + 1, V.get(i, k));\n                V.set(i, k, t);\n              }\n            }\n            if (wantu && k < m - 1) {\n              for (let i = 0; i < m; i++) {\n                t = U.get(i, k + 1);\n                U.set(i, k + 1, U.get(i, k));\n                U.set(i, k, t);\n              }\n            }\n            k++;\n          }\n          iter = 0;\n          p--;\n          break;\n        }\n        // no default\n      }\n    }\n\n    if (swapped) {\n      let tmp = V;\n      V = U;\n      U = tmp;\n    }\n\n    this.m = m;\n    this.n = n;\n    this.s = s;\n    this.U = U;\n    this.V = V;\n  }\n\n  solve(value) {\n    let Y = value;\n    let e = this.threshold;\n    let scols = this.s.length;\n    let Ls = Matrix.zeros(scols, scols);\n\n    for (let i = 0; i < scols; i++) {\n      if (Math.abs(this.s[i]) <= e) {\n        Ls.set(i, i, 0);\n      } else {\n        Ls.set(i, i, 1 / this.s[i]);\n      }\n    }\n\n    let U = this.U;\n    let V = this.rightSingularVectors;\n\n    let VL = V.mmul(Ls);\n    let vrows = V.rows;\n    let urows = U.rows;\n    let VLU = Matrix.zeros(vrows, urows);\n\n    for (let i = 0; i < vrows; i++) {\n      for (let j = 0; j < urows; j++) {\n        let sum = 0;\n        for (let k = 0; k < scols; k++) {\n          sum += VL.get(i, k) * U.get(j, k);\n        }\n        VLU.set(i, j, sum);\n      }\n    }\n\n    return VLU.mmul(Y);\n  }\n\n  solveForDiagonal(value) {\n    return this.solve(Matrix.diag(value));\n  }\n\n  inverse() {\n    let V = this.V;\n    let e = this.threshold;\n    let vrows = V.rows;\n    let vcols = V.columns;\n    let X = new Matrix(vrows, this.s.length);\n\n    for (let i = 0; i < vrows; i++) {\n      for (let j = 0; j < vcols; j++) {\n        if (Math.abs(this.s[j]) > e) {\n          X.set(i, j, V.get(i, j) / this.s[j]);\n        }\n      }\n    }\n\n    let U = this.U;\n\n    let urows = U.rows;\n    let ucols = U.columns;\n    let Y = new Matrix(vrows, urows);\n\n    for (let i = 0; i < vrows; i++) {\n      for (let j = 0; j < urows; j++) {\n        let sum = 0;\n        for (let k = 0; k < ucols; k++) {\n          sum += X.get(i, k) * U.get(j, k);\n        }\n        Y.set(i, j, sum);\n      }\n    }\n\n    return Y;\n  }\n\n  get condition() {\n    return this.s[0] / this.s[Math.min(this.m, this.n) - 1];\n  }\n\n  get norm2() {\n    return this.s[0];\n  }\n\n  get rank() {\n    let tol = Math.max(this.m, this.n) * this.s[0] * Number.EPSILON;\n    let r = 0;\n    let s = this.s;\n    for (let i = 0, ii = s.length; i < ii; i++) {\n      if (s[i] > tol) {\n        r++;\n      }\n    }\n    return r;\n  }\n\n  get diagonal() {\n    return Array.from(this.s);\n  }\n\n  get threshold() {\n    return (Number.EPSILON / 2) * Math.max(this.m, this.n) * this.s[0];\n  }\n\n  get leftSingularVectors() {\n    return this.U;\n  }\n\n  get rightSingularVectors() {\n    return this.V;\n  }\n\n  get diagonalMatrix() {\n    return Matrix.diag(this.s);\n  }\n}\n","import LuDecomposition from './dc/lu';\nimport QrDecomposition from './dc/qr';\nimport SingularValueDecomposition from './dc/svd';\nimport Matrix from './matrix';\nimport WrapperMatrix2D from './wrap/WrapperMatrix2D';\n\nexport function inverse(matrix, useSVD = false) {\n  matrix = WrapperMatrix2D.checkMatrix(matrix);\n  if (useSVD) {\n    return new SingularValueDecomposition(matrix).inverse();\n  } else {\n    return solve(matrix, Matrix.eye(matrix.rows));\n  }\n}\n\nexport function solve(leftHandSide, rightHandSide, useSVD = false) {\n  leftHandSide = WrapperMatrix2D.checkMatrix(leftHandSide);\n  rightHandSide = WrapperMatrix2D.checkMatrix(rightHandSide);\n  if (useSVD) {\n    return new SingularValueDecomposition(leftHandSide).solve(rightHandSide);\n  } else {\n    return leftHandSide.isSquare()\n      ? new LuDecomposition(leftHandSide).solve(rightHandSide)\n      : new QrDecomposition(leftHandSide).solve(rightHandSide);\n  }\n}\n","export function addStyle(serie, spectrum, options = {}) {\n    let { color = '#A9A9A9', opacity = 1, lineWidth = 1 } = options;\n    // eslint-disable-next-line @typescript-eslint/prefer-regexp-exec\n    if (color.match(/#[0-9A-F]{6}$/i)) {\n        color = (color + ((opacity * 255) >> 0).toString(16)).toUpperCase();\n    }\n    else {\n        color = color.replace(/rgb ?\\((.*)\\)/, `rgba($1,${opacity})`);\n    }\n    serie.style = [\n        {\n            name: 'unselected',\n            style: {\n                line: {\n                    color,\n                    width: lineWidth,\n                    dash: 1,\n                },\n            },\n        },\n        {\n            name: 'selected',\n            style: {\n                line: {\n                    color,\n                    width: lineWidth + 2,\n                    dash: 1,\n                },\n            },\n        },\n    ];\n    serie.name = spectrum.label || spectrum.id;\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWRkU3R5bGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvanNncmFwaC9hZGRTdHlsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFPQSxNQUFNLFVBQVUsUUFBUSxDQUN0QixLQUE4QixFQUM5QixRQUFrQixFQUNsQixVQUF3QixFQUFFO0lBRTFCLElBQUksRUFBRSxLQUFLLEdBQUcsU0FBUyxFQUFFLE9BQU8sR0FBRyxDQUFDLEVBQUUsU0FBUyxHQUFHLENBQUMsRUFBRSxHQUFHLE9BQU8sQ0FBQztJQUNoRSxpRUFBaUU7SUFDakUsSUFBSSxLQUFLLENBQUMsS0FBSyxDQUFDLGdCQUFnQixDQUFDLEVBQUU7UUFDakMsS0FBSyxHQUFHLENBQUMsS0FBSyxHQUFHLENBQUMsQ0FBQyxPQUFPLEdBQUcsR0FBRyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsV0FBVyxFQUFFLENBQUM7S0FDckU7U0FBTTtRQUNMLEtBQUssR0FBRyxLQUFLLENBQUMsT0FBTyxDQUFDLGVBQWUsRUFBRSxXQUFXLE9BQU8sR0FBRyxDQUFDLENBQUM7S0FDL0Q7SUFDRCxLQUFLLENBQUMsS0FBSyxHQUFHO1FBQ1o7WUFDRSxJQUFJLEVBQUUsWUFBWTtZQUNsQixLQUFLLEVBQUU7Z0JBQ0wsSUFBSSxFQUFFO29CQUNKLEtBQUs7b0JBQ0wsS0FBSyxFQUFFLFNBQVM7b0JBQ2hCLElBQUksRUFBRSxDQUFDO2lCQUNSO2FBQ0Y7U0FDRjtRQUNEO1lBQ0UsSUFBSSxFQUFFLFVBQVU7WUFDaEIsS0FBSyxFQUFFO2dCQUNMLElBQUksRUFBRTtvQkFDSixLQUFLO29CQUNMLEtBQUssRUFBRSxTQUFTLEdBQUcsQ0FBQztvQkFDcEIsSUFBSSxFQUFFLENBQUM7aUJBQ1I7YUFDRjtTQUNGO0tBQ0YsQ0FBQztJQUNGLEtBQUssQ0FBQyxJQUFJLEdBQUcsUUFBUSxDQUFDLEtBQUssSUFBSSxRQUFRLENBQUMsRUFBRSxDQUFDO0FBQzdDLENBQUMifQ==","export const COLORS = [\n    '#FFB300',\n    '#803E75',\n    '#FF6800',\n    '#A6BDD7',\n    '#C10020',\n    '#CEA262',\n    '#817066',\n    '#007D34',\n    '#F6768E',\n    '#00538A',\n    '#FF7A5C',\n    '#53377A',\n    '#FF8E00',\n    '#B32851',\n    '#F4C800',\n    '#7F180D',\n    '#93AA00',\n    '#593315',\n    '#F13A13',\n    '#232C16',\n];\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29sb3JzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2pzZ3JhcGgvY29sb3JzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE1BQU0sQ0FBQyxNQUFNLE1BQU0sR0FBRztJQUNwQixTQUFTO0lBQ1QsU0FBUztJQUNULFNBQVM7SUFDVCxTQUFTO0lBQ1QsU0FBUztJQUNULFNBQVM7SUFDVCxTQUFTO0lBQ1QsU0FBUztJQUNULFNBQVM7SUFDVCxTQUFTO0lBQ1QsU0FBUztJQUNULFNBQVM7SUFDVCxTQUFTO0lBQ1QsU0FBUztJQUNULFNBQVM7SUFDVCxTQUFTO0lBQ1QsU0FBUztJQUNULFNBQVM7SUFDVCxTQUFTO0lBQ1QsU0FBUztDQUNWLENBQUMifQ==","import { xyFilterXPositive } from 'ml-spectra-processing';\nimport { addStyle } from './addStyle';\nimport { COLORS } from './colors';\n/**\n * Generate a jsgraph chart format from an array of Analysis\n */\nexport function getJSGraph(analyses, options = {}) {\n    const { colors = COLORS, opacities = [1], linesWidth = [1], selector = {}, normalization, xAxis = {}, yAxis = {}, } = options;\n    let series = [];\n    let xLabel = '';\n    let yLabel = '';\n    for (let i = 0; i < analyses.length; i++) {\n        const analysis = analyses[i];\n        let serie = {};\n        let currentData = analysis.getNormalizedSpectrum({\n            selector,\n            normalization,\n        });\n        if (!currentData)\n            continue;\n        if (!xLabel)\n            xLabel = currentData.variables.x.label;\n        if (!yLabel)\n            yLabel = currentData.variables.y.label;\n        addStyle(serie, analysis, {\n            color: colors[i % colors.length],\n            opacity: opacities[i % opacities.length],\n            lineWidth: linesWidth[i % linesWidth.length],\n        });\n        serie.data = {\n            x: currentData.variables.x.data,\n            y: currentData.variables.y.data,\n        };\n        if (xAxis.logScale) {\n            serie.data = xyFilterXPositive(serie.data);\n        }\n        series.push(serie);\n    }\n    return {\n        axes: {\n            x: {\n                label: xLabel,\n                unit: '',\n                flipped: false,\n                display: true,\n                ...xAxis,\n            },\n            y: {\n                label: yLabel,\n                unit: '',\n                flipped: false,\n                display: true,\n                ...yAxis,\n            },\n        },\n        series,\n    };\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2V0SlNHcmFwaC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9qc2dyYXBoL2dldEpTR3JhcGgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFLMUQsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLFlBQVksQ0FBQztBQUN0QyxPQUFPLEVBQUUsTUFBTSxFQUFFLE1BQU0sVUFBVSxDQUFDO0FBdUJsQzs7R0FFRztBQUNILE1BQU0sVUFBVSxVQUFVLENBQUMsUUFBb0IsRUFBRSxVQUEwQixFQUFFO0lBQzNFLE1BQU0sRUFDSixNQUFNLEdBQUcsTUFBTSxFQUNmLFNBQVMsR0FBRyxDQUFDLENBQUMsQ0FBQyxFQUNmLFVBQVUsR0FBRyxDQUFDLENBQUMsQ0FBQyxFQUNoQixRQUFRLEdBQUcsRUFBRSxFQUNiLGFBQWEsRUFDYixLQUFLLEdBQUcsRUFBRSxFQUNWLEtBQUssR0FBRyxFQUFFLEdBQ1gsR0FBRyxPQUFPLENBQUM7SUFDWixJQUFJLE1BQU0sR0FBRyxFQUFFLENBQUM7SUFFaEIsSUFBSSxNQUFNLEdBQUcsRUFBRSxDQUFDO0lBQ2hCLElBQUksTUFBTSxHQUFHLEVBQUUsQ0FBQztJQUVoQixLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsUUFBUSxDQUFDLE1BQU0sRUFBRSxDQUFDLEVBQUUsRUFBRTtRQUN4QyxNQUFNLFFBQVEsR0FBRyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDN0IsSUFBSSxLQUFLLEdBQTRCLEVBQUUsQ0FBQztRQUN4QyxJQUFJLFdBQVcsR0FBRyxRQUFRLENBQUMscUJBQXFCLENBQUM7WUFDL0MsUUFBUTtZQUNSLGFBQWE7U0FDZCxDQUFDLENBQUM7UUFDSCxJQUFJLENBQUMsV0FBVztZQUFFLFNBQVM7UUFDM0IsSUFBSSxDQUFDLE1BQU07WUFBRSxNQUFNLEdBQUcsV0FBVyxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDO1FBQ3BELElBQUksQ0FBQyxNQUFNO1lBQUUsTUFBTSxHQUFHLFdBQVcsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQztRQUNwRCxRQUFRLENBQUMsS0FBSyxFQUFFLFFBQVEsRUFBRTtZQUN4QixLQUFLLEVBQUUsTUFBTSxDQUFDLENBQUMsR0FBRyxNQUFNLENBQUMsTUFBTSxDQUFDO1lBQ2hDLE9BQU8sRUFBRSxTQUFTLENBQUMsQ0FBQyxHQUFHLFNBQVMsQ0FBQyxNQUFNLENBQUM7WUFDeEMsU0FBUyxFQUFFLFVBQVUsQ0FBQyxDQUFDLEdBQUcsVUFBVSxDQUFDLE1BQU0sQ0FBQztTQUM3QyxDQUFDLENBQUM7UUFDSCxLQUFLLENBQUMsSUFBSSxHQUFHO1lBQ1gsQ0FBQyxFQUFFLFdBQVcsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLElBQUk7WUFDL0IsQ0FBQyxFQUFFLFdBQVcsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLElBQUk7U0FDaEMsQ0FBQztRQUVGLElBQUksS0FBSyxDQUFDLFFBQVEsRUFBRTtZQUNsQixLQUFLLENBQUMsSUFBSSxHQUFHLGlCQUFpQixDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsQ0FBQztTQUM1QztRQUVELE1BQU0sQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7S0FDcEI7SUFDRCxPQUFPO1FBQ0wsSUFBSSxFQUFFO1lBQ0osQ0FBQyxFQUFFO2dCQUNELEtBQUssRUFBRSxNQUFNO2dCQUNiLElBQUksRUFBRSxFQUFFO2dCQUNSLE9BQU8sRUFBRSxLQUFLO2dCQUNkLE9BQU8sRUFBRSxJQUFJO2dCQUNiLEdBQUcsS0FBSzthQUNUO1lBQ0QsQ0FBQyxFQUFFO2dCQUNELEtBQUssRUFBRSxNQUFNO2dCQUNiLElBQUksRUFBRSxFQUFFO2dCQUNSLE9BQU8sRUFBRSxLQUFLO2dCQUNkLE9BQU8sRUFBRSxJQUFJO2dCQUNiLEdBQUcsS0FBSzthQUNUO1NBQ0Y7UUFDRCxNQUFNO0tBQ1AsQ0FBQztBQUNKLENBQUMifQ==","export function getNormalizationAnnotations(filter = {}, boundary = { y: { min: '0px', max: '2000px' } }) {\n    let { exclusions = [] } = filter;\n    let annotations = [];\n    exclusions = exclusions.filter((exclusion) => !exclusion.ignore);\n    annotations = exclusions.map((exclusion) => {\n        let annotation = {\n            type: 'rect',\n            position: [\n                { x: exclusion.from, y: boundary.y.min },\n                { x: exclusion.to, y: boundary.y.max },\n            ],\n            strokeWidth: 0,\n            fillColor: 'rgba(255,255,224,1)',\n        };\n        return annotation;\n    });\n    if (filter.from !== undefined) {\n        annotations.push({\n            type: 'rect',\n            position: [\n                { x: Number.MIN_SAFE_INTEGER, y: boundary.y.min },\n                { x: filter.from, y: boundary.y.max },\n            ],\n            strokeWidth: 0,\n            fillColor: 'rgba(255,255,224,1)',\n        });\n    }\n    if (filter.to !== undefined) {\n        annotations.push({\n            type: 'rect',\n            position: [\n                { x: filter.to, y: boundary.y.min },\n                { x: Number.MAX_SAFE_INTEGER, y: boundary.y.max },\n            ],\n            strokeWidth: 0,\n            fillColor: 'rgba(255,255,224,1)',\n        });\n    }\n    return annotations;\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2V0Tm9ybWFsaXphdGlvbkFubm90YXRpb25zLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2pzZ3JhcGgvZ2V0Tm9ybWFsaXphdGlvbkFubm90YXRpb25zLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQVdBLE1BQU0sVUFBVSwyQkFBMkIsQ0FDekMsU0FBNEIsRUFBRSxFQUM5QixRQUFRLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxHQUFHLEVBQUUsS0FBSyxFQUFFLEdBQUcsRUFBRSxRQUFRLEVBQUUsRUFBRTtJQUUvQyxJQUFJLEVBQUUsVUFBVSxHQUFHLEVBQUUsRUFBRSxHQUFHLE1BQU0sQ0FBQztJQUVqQyxJQUFJLFdBQVcsR0FBRyxFQUFFLENBQUM7SUFDckIsVUFBVSxHQUFHLFVBQVUsQ0FBQyxNQUFNLENBQUMsQ0FBQyxTQUFTLEVBQUUsRUFBRSxDQUFDLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQ2pFLFdBQVcsR0FBRyxVQUFVLENBQUMsR0FBRyxDQUFDLENBQUMsU0FBUyxFQUFFLEVBQUU7UUFDekMsSUFBSSxVQUFVLEdBQUc7WUFDZixJQUFJLEVBQUUsTUFBTTtZQUNaLFFBQVEsRUFBRTtnQkFDUixFQUFFLENBQUMsRUFBRSxTQUFTLENBQUMsSUFBSSxFQUFFLENBQUMsRUFBRSxRQUFRLENBQUMsQ0FBQyxDQUFDLEdBQUcsRUFBRTtnQkFDeEMsRUFBRSxDQUFDLEVBQUUsU0FBUyxDQUFDLEVBQUUsRUFBRSxDQUFDLEVBQUUsUUFBUSxDQUFDLENBQUMsQ0FBQyxHQUFHLEVBQUU7YUFDdkM7WUFDRCxXQUFXLEVBQUUsQ0FBQztZQUNkLFNBQVMsRUFBRSxxQkFBcUI7U0FDakMsQ0FBQztRQUNGLE9BQU8sVUFBVSxDQUFDO0lBQ3BCLENBQUMsQ0FBQyxDQUFDO0lBQ0gsSUFBSSxNQUFNLENBQUMsSUFBSSxLQUFLLFNBQVMsRUFBRTtRQUM3QixXQUFXLENBQUMsSUFBSSxDQUFDO1lBQ2YsSUFBSSxFQUFFLE1BQU07WUFDWixRQUFRLEVBQUU7Z0JBQ1IsRUFBRSxDQUFDLEVBQUUsTUFBTSxDQUFDLGdCQUFnQixFQUFFLENBQUMsRUFBRSxRQUFRLENBQUMsQ0FBQyxDQUFDLEdBQUcsRUFBRTtnQkFDakQsRUFBRSxDQUFDLEVBQUUsTUFBTSxDQUFDLElBQUksRUFBRSxDQUFDLEVBQUUsUUFBUSxDQUFDLENBQUMsQ0FBQyxHQUFHLEVBQUU7YUFDdEM7WUFDRCxXQUFXLEVBQUUsQ0FBQztZQUNkLFNBQVMsRUFBRSxxQkFBcUI7U0FDakMsQ0FBQyxDQUFDO0tBQ0o7SUFDRCxJQUFJLE1BQU0sQ0FBQyxFQUFFLEtBQUssU0FBUyxFQUFFO1FBQzNCLFdBQVcsQ0FBQyxJQUFJLENBQUM7WUFDZixJQUFJLEVBQUUsTUFBTTtZQUNaLFFBQVEsRUFBRTtnQkFDUixFQUFFLENBQUMsRUFBRSxNQUFNLENBQUMsRUFBRSxFQUFFLENBQUMsRUFBRSxRQUFRLENBQUMsQ0FBQyxDQUFDLEdBQUcsRUFBRTtnQkFDbkMsRUFBRSxDQUFDLEVBQUUsTUFBTSxDQUFDLGdCQUFnQixFQUFFLENBQUMsRUFBRSxRQUFRLENBQUMsQ0FBQyxDQUFDLEdBQUcsRUFBRTthQUNsRDtZQUNELFdBQVcsRUFBRSxDQUFDO1lBQ2QsU0FBUyxFQUFFLHFCQUFxQjtTQUNqQyxDQUFDLENBQUM7S0FDSjtJQUNELE9BQU8sV0FBVyxDQUFDO0FBQ3JCLENBQUMifQ==","export function appendDistinctParameter(values, key, value) {\n    if (!values[key]) {\n        values[key] = {\n            key,\n            values: [],\n            count: 0,\n        };\n    }\n    if (!values[key].values.includes(value)) {\n        values[key].values.push(value);\n    }\n    values[key].count++;\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXBwZW5kRGlzdGluY3RQYXJhbWV0ZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvdXRpbC9hcHBlbmREaXN0aW5jdFBhcmFtZXRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQSxNQUFNLFVBQVUsdUJBQXVCLENBQ3JDLE1BQXFDLEVBQ3JDLEdBQVcsRUFDWCxLQUFhO0lBRWIsSUFBSSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsRUFBRTtRQUNoQixNQUFNLENBQUMsR0FBRyxDQUFDLEdBQUc7WUFDWixHQUFHO1lBQ0gsTUFBTSxFQUFFLEVBQUU7WUFDVixLQUFLLEVBQUUsQ0FBQztTQUNULENBQUM7S0FDSDtJQUNELElBQUksQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUMsRUFBRTtRQUN2QyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztLQUNoQztJQUNELE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQyxLQUFLLEVBQUUsQ0FBQztBQUN0QixDQUFDIn0=","export function appendDistinctValue(values, key) {\n    if (!values[key]) {\n        values[key] = {\n            key,\n            count: 0,\n        };\n    }\n    values[key].count++;\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXBwZW5kRGlzdGluY3RWYWx1ZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy91dGlsL2FwcGVuZERpc3RpbmN0VmFsdWUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsTUFBTSxVQUFVLG1CQUFtQixDQUNqQyxNQUFtQyxFQUNuQyxHQUFXO0lBRVgsSUFBSSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsRUFBRTtRQUNoQixNQUFNLENBQUMsR0FBRyxDQUFDLEdBQUc7WUFDWixHQUFHO1lBQ0gsS0FBSyxFQUFFLENBQUM7U0FDVCxDQUFDO0tBQ0g7SUFDRCxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUMsS0FBSyxFQUFFLENBQUM7QUFDdEIsQ0FBQyJ9","import { appendDistinctParameter } from './util/appendDistinctParameter';\nimport { appendDistinctValue } from './util/appendDistinctValue';\nexport class AnalysesManager {\n    constructor() {\n        this.analyses = [];\n    }\n    addAnalysis(analysis) {\n        let index = this.getAnalysisIndex(analysis.id);\n        if (index === undefined) {\n            this.analyses.push(analysis);\n        }\n        else {\n            this.analyses[index] = analysis;\n        }\n    }\n    getAnalyses(options = {}) {\n        const { ids } = options;\n        let analyses = [];\n        for (const analysis of this.analyses) {\n            if (!ids || ids.includes(analysis.id)) {\n                analyses.push(analysis);\n            }\n        }\n        return analyses;\n    }\n    getSpectra() {\n        const spectra = [];\n        for (const analysis of this.analyses) {\n            spectra.push(...analysis.spectra);\n        }\n        return spectra;\n    }\n    /**\n     * Get an array of objects (key + count) of all the titles\n     */\n    getDistinctTitles() {\n        let values = {};\n        for (let spectrum of this.getSpectra()) {\n            if (spectrum.title) {\n                appendDistinctValue(values, spectrum.title);\n            }\n        }\n        return Object.keys(values).map((key) => values[key]);\n    }\n    /**\n     * Get an array of objects (key + count) of all the units\n     */\n    getDistinctUnits() {\n        var _a;\n        let values = {};\n        for (let spectrum of this.getSpectra()) {\n            if (spectrum.variables) {\n                for (let key in spectrum.variables) {\n                    const units = (_a = spectrum.variables[key].units) === null || _a === void 0 ? void 0 : _a.replace(/\\s+\\[.*/, '');\n                    if (units) {\n                        appendDistinctValue(values, units);\n                    }\n                }\n            }\n        }\n        return Object.keys(values).map((key) => values[key]);\n    }\n    /**\n     * Get an array of objects (key + count) of all the labels\n     */\n    getDistinctLabels() {\n        let values = {};\n        for (let spectrum of this.getSpectra()) {\n            if (spectrum.variables) {\n                for (let key in spectrum.variables) {\n                    appendDistinctValue(values, spectrum.variables[key].label.replace(/\\s+\\[.*/, ''));\n                }\n            }\n        }\n        return Object.keys(values).map((key) => values[key]);\n    }\n    /**\n     * Get an array of objects (key + count) of all the dataTypes\n     */\n    getDistinctDataTypes() {\n        let values = {};\n        for (let spectrum of this.getSpectra()) {\n            if (spectrum.dataType) {\n                appendDistinctValue(values, spectrum.dataType);\n            }\n        }\n        return Object.keys(values).map((key) => values[key]);\n    }\n    /**\n     * Get an array of objects (key + count) of all the meta\n     */\n    getDistinctMeta() {\n        let values = {};\n        for (let spectrum of this.getSpectra()) {\n            if (spectrum.meta) {\n                for (let key in spectrum.meta) {\n                    appendDistinctParameter(values, key, spectrum.meta[key]);\n                }\n            }\n        }\n        return Object.keys(values).map((key) => values[key]);\n    }\n    removeAllAnalyses() {\n        this.analyses.splice(0);\n    }\n    /**\n     * Remove the analysis from the AnalysesManager for the specified id\n     */\n    removeAnalysis(id) {\n        let index = this.getAnalysisIndex(id);\n        if (index === undefined)\n            return undefined;\n        return this.analyses.splice(index, 1);\n    }\n    /**\n     * Returns the index of the analysis in the analyses array\n     */\n    getAnalysisIndex(id) {\n        if (!id)\n            return undefined;\n        for (let i = 0; i < this.analyses.length; i++) {\n            let analysis = this.analyses[i];\n            if (analysis.id === id)\n                return i;\n        }\n        return undefined;\n    }\n    /**\n     * Checks if the ID of an analysis exists in the AnalysesManager\n     */\n    includes(id) {\n        const index = this.getAnalysisIndex(id);\n        return index === undefined ? false : !isNaN(index);\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQW5hbHlzZXNNYW5hZ2VyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL0FuYWx5c2VzTWFuYWdlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQSxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSxnQ0FBZ0MsQ0FBQztBQUN6RSxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQztBQU1qRSxNQUFNLE9BQU8sZUFBZTtJQUcxQjtRQUNFLElBQUksQ0FBQyxRQUFRLEdBQUcsRUFBRSxDQUFDO0lBQ3JCLENBQUM7SUFFTSxXQUFXLENBQUMsUUFBa0I7UUFDbkMsSUFBSSxLQUFLLEdBQUcsSUFBSSxDQUFDLGdCQUFnQixDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQUMsQ0FBQztRQUMvQyxJQUFJLEtBQUssS0FBSyxTQUFTLEVBQUU7WUFDdkIsSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7U0FDOUI7YUFBTTtZQUNMLElBQUksQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLEdBQUcsUUFBUSxDQUFDO1NBQ2pDO0lBQ0gsQ0FBQztJQUVNLFdBQVcsQ0FBQyxVQUE4QixFQUFFO1FBQ2pELE1BQU0sRUFBRSxHQUFHLEVBQUUsR0FBRyxPQUFPLENBQUM7UUFDeEIsSUFBSSxRQUFRLEdBQWUsRUFBRSxDQUFDO1FBQzlCLEtBQUssTUFBTSxRQUFRLElBQUksSUFBSSxDQUFDLFFBQVEsRUFBRTtZQUNwQyxJQUFJLENBQUMsR0FBRyxJQUFJLEdBQUcsQ0FBQyxRQUFRLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxFQUFFO2dCQUNyQyxRQUFRLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO2FBQ3pCO1NBQ0Y7UUFDRCxPQUFPLFFBQVEsQ0FBQztJQUNsQixDQUFDO0lBRU0sVUFBVTtRQUNmLE1BQU0sT0FBTyxHQUFHLEVBQUUsQ0FBQztRQUNuQixLQUFLLE1BQU0sUUFBUSxJQUFJLElBQUks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","// Based on https://github.com/scijs/cholesky-solve\r\n\r\n/*\r\nThe MIT License (MIT)\r\n\r\nCopyright (c) 2013 Eric Arnebäck\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in\r\nall copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\nTHE SOFTWARE.\r\n*/\r\n\r\nfunction ldlSymbolic(\r\n  n /* A and L are n-by-n, where n >= 0 */,\r\n  Ap /* input of size n + 1, not modified */,\r\n  Ai /* input of size nz=Ap[n], not modified */,\r\n  Lp /* output of size n + 1, not defined on input */,\r\n  Parent /* output of size n, not defined on input */,\r\n  Lnz /* output of size n, not defined on input */,\r\n  Flag /* workspace of size n, not defn. on input or output */,\r\n) {\r\n  let i, k, p, kk, p2;\r\n\r\n  for (k = 0; k < n; k++) {\r\n    /* L(k,:) pattern: all nodes reachable in etree from nz in A(0:k-1,k) */\r\n    Parent[k] = -1; /* parent of k is not yet known */\r\n    Flag[k] = k; /* mark node k as visited */\r\n    Lnz[k] = 0; /* count of nonzeros in column k of L */\r\n    kk = k; /* kth original, or permuted, column */\r\n    p2 = Ap[kk + 1];\r\n    for (p = Ap[kk]; p < p2; p++) {\r\n      /* A (i,k) is nonzero (original or permuted A) */\r\n      i = Ai[p];\r\n\r\n      if (i < k) {\r\n        /* follow path from i to root of etree, stop at flagged node */\r\n        for (; Flag[i] !== k; i = Parent[i]) {\r\n          /* find parent of i if not yet determined */\r\n          if (Parent[i] === -1) Parent[i] = k;\r\n          Lnz[i]++; /* L (k,i) is nonzero */\r\n          Flag[i] = k; /* mark i as visited */\r\n        }\r\n      }\r\n    }\r\n  }\r\n  /* construct Lp index array from Lnz column counts */\r\n  Lp[0] = 0;\r\n  for (k = 0; k < n; k++) {\r\n    Lp[k + 1] = Lp[k] + Lnz[k];\r\n  }\r\n}\r\n\r\nfunction ldlNumeric(\r\n  n /* A and L are n-by-n, where n >= 0 */,\r\n  Ap /* input of size n+1, not modified */,\r\n  Ai /* input of size nz=Ap[n], not modified */,\r\n  Ax /* input of size nz=Ap[n], not modified */,\r\n  Lp /* input of size n+1, not modified */,\r\n  Parent /* input of size n, not modified */,\r\n  Lnz /* output of size n, not defn. on input */,\r\n  Li /* output of size lnz=Lp[n], not defined on input */,\r\n  Lx /* output of size lnz=Lp[n], not defined on input */,\r\n  D /* output of size n, not defined on input */,\r\n  Y /* workspace of size n, not defn. on input or output */,\r\n  Pattern /* workspace of size n, not defn. on input or output */,\r\n  Flag /* workspace of size n, not defn. on input or output */,\r\n) {\r\n  let yi, lKi;\r\n  let i, k, p, kk, p2, len, top;\r\n  for (k = 0; k < n; k++) {\r\n    /* compute nonzero Pattern of kth row of L, in topological order */\r\n    Y[k] = 0.0; /* Y(0:k) is now all zero */\r\n    top = n; /* stack for pattern is empty */\r\n    Flag[k] = k; /* mark node k as visited */\r\n    Lnz[k] = 0; /* count of nonzeros in column k of L */\r\n    kk = k; /* kth original, or permuted, column */\r\n    p2 = Ap[kk + 1];\r\n    for (p = Ap[kk]; p < p2; p++) {\r\n      i = Ai[p]; /* get A(i,k) */\r\n      if (i <= k) {\r\n        Y[i] += Ax[p]; /* scatter A(i,k) into Y (sum duplicates) */\r\n        for (len = 0; Flag[i] !== k; i = Parent[i]) {\r\n          Pattern[len++] = i; /* L(k,i) is nonzero */\r\n          Flag[i] = k; /* mark i as visited */\r\n        }\r\n        while (len > 0) Pattern[--top] = Pattern[--len];\r\n      }\r\n    }\r\n    /* compute numerical values kth row of L (a sparse triangular solve) */\r\n    D[k] = Y[k]; /* get D(k,k) and clear Y(k) */\r\n    Y[k] = 0.0;\r\n    for (; top < n; top++) {\r\n      i = Pattern[top]; /* Pattern[top:n-1] is pattern of L(:,k) */\r\n      yi = Y[i]; /* get and clear Y(i) */\r\n      Y[i] = 0.0;\r\n      p2 = Lp[i] + Lnz[i];\r\n      for (p = Lp[i]; p < p2; p++) {\r\n        Y[Li[p]] -= Lx[p] * yi;\r\n      }\r\n      lKi = yi / D[i]; /* the nonzero entry L(k,i) */\r\n      D[k] -= lKi * yi;\r\n      Li[p] = k; /* store L(k,i) in column form of L */\r\n      Lx[p] = lKi;\r\n      Lnz[i]++; /* increment count of nonzeros in col i */\r\n    }\r\n\r\n    if (D[k] === 0.0) return k; /* failure, D(k,k) is zero */\r\n  }\r\n\r\n  return n; /* success, diagonal of D is all nonzero */\r\n}\r\n\r\nfunction ldlLsolve(\r\n  n /* L is n-by-n, where n >= 0 */,\r\n  X /* size n. right-hand-side on input, soln. on output */,\r\n  Lp /* input of size n+1, not modified */,\r\n  Li /* input of size lnz=Lp[n], not modified */,\r\n  Lx /* input of size lnz=Lp[n], not modified */,\r\n) {\r\n  let j, p, p2;\r\n  for (j = 0; j < n; j++) {\r\n    p2 = Lp[j + 1];\r\n    for (p = Lp[j]; p < p2; p++) {\r\n      X[Li[p]] -= Lx[p] * X[j];\r\n    }\r\n  }\r\n}\r\nfunction ldlDsolve(\r\n  n /* D is n-by-n, where n >= 0 */,\r\n  X /* size n. right-hand-side on input, soln. on output */,\r\n  D /* input of size n, not modified */,\r\n) {\r\n  let j;\r\n  for (j = 0; j < n; j++) {\r\n    X[j] /= D[j];\r\n  }\r\n}\r\nfunction ldlLTsolve(\r\n  n /* L is n-by-n, where n >= 0 */,\r\n  X /* size n. right-hand-side on input, soln. on output */,\r\n  Lp /* input of size n+1, not modified */,\r\n  Li /* input of size lnz=Lp[n], not modified */,\r\n  Lx /* input of size lnz=Lp[n], not modified */,\r\n) {\r\n  let j, p, p2;\r\n  for (j = n - 1; j >= 0; j--) {\r\n    p2 = Lp[j + 1];\r\n    for (p = Lp[j]; p < p2; p++) {\r\n      X[j] -= Lx[p] * X[Li[p]];\r\n    }\r\n  }\r\n}\r\n\r\nfunction ldlPerm(\r\n  n /* size of X, B, and P */,\r\n  X /* output of size n. */,\r\n  B /* input of size n. */,\r\n  P /* input permutation array of size n. */,\r\n) {\r\n  let j;\r\n  for (j = 0; j < n; j++) {\r\n    X[j] = B[P[j]];\r\n  }\r\n}\r\n\r\nfunction ldlPermt(\r\n  n /* size of X, B, and P */,\r\n  X /* output of size n. */,\r\n  B /* input of size n. */,\r\n  P /* input permutation array of size n. */,\r\n) {\r\n  let j;\r\n  for (j = 0; j < n; j++) {\r\n    X[P[j]] = B[j];\r\n  }\r\n}\r\n\r\nfunction prepare(M, n, P) {\r\n  // if a permutation was specified, apply it.\r\n  if (P) {\r\n    let Pinv = new Array(n);\r\n\r\n    for (let k = 0; k < n; k++) {\r\n      Pinv[P[k]] = k;\r\n    }\r\n\r\n    let Mt = []; // scratch memory\r\n    // Apply permutation. We make M into P*M*P^T\r\n    for (let a = 0; a < M.length; ++a) {\r\n      let ar = Pinv[M[a][0]];\r\n      let ac = Pinv[M[a][1]];\r\n\r\n      // we only store the upper-diagonal elements(since we assume matrix is symmetric, we only need to store these)\r\n      // if permuted element is below diagonal, we simply transpose it.\r\n      if (ac < ar) {\r\n        let t = ac;\r\n        ac = ar;\r\n        ar = t;\r\n      }\r\n\r\n      Mt[a] = [];\r\n      Mt[a][0] = ar;\r\n      Mt[a][1] = ac;\r\n      Mt[a][2] = M[a][2];\r\n    }\r\n\r\n    M = Mt; // copy scratch memory.\r\n  } else {\r\n    // if P argument is null, we just use an identity permutation.\r\n    P = [];\r\n    for (let i = 0; i < n; ++i) {\r\n      P[i] = i;\r\n    }\r\n  }\r\n\r\n  // The sparse matrix we are decomposing is A.\r\n  // Now we shall create A from M.\r\n  let Ap = new Array(n + 1);\r\n  let Ai = new Array(M.length);\r\n  let Ax = new Array(M.length);\r\n\r\n  // count number of non-zero elements in columns.\r\n  let LNZ = [];\r\n  for (let i = 0; i < n; ++i) {\r\n    LNZ[i] = 0;\r\n  }\r\n  for (let a = 0; a < M.length; ++a) {\r\n    LNZ[M[a][1]]++;\r\n  }\r\n\r\n  Ap[0] = 0;\r\n  for (let i = 0; i < n; ++i) {\r\n    Ap[i + 1] = Ap[i] + LNZ[i];\r\n  }\r\n\r\n  let coloffset = [];\r\n  for (let a = 0; a < n; ++a) {\r\n    coloffset[a] = 0;\r\n  }\r\n\r\n  // go through all elements in M, and add them to sparse matrix A.\r\n  for (let i = 0; i < M.length; ++i) {\r\n    let e = M[i];\r\n    let col = e[1];\r\n\r\n    let adr = Ap[col] + coloffset[col];\r\n    Ai[adr] = e[0];\r\n    Ax[adr] = e[2];\r\n\r\n    coloffset[col]++;\r\n  }\r\n\r\n  let D = new Array(n);\r\n  let Y = new Array(n);\r\n  let Lp = new Array(n + 1);\r\n  let Parent = new Array(n);\r\n  let Lnz = new Array(n);\r\n  let Flag = new Array(n);\r\n  let Pattern = new Array(n);\r\n  let bp1 = new Array(n);\r\n  let x = new Array(n);\r\n  let d;\r\n\r\n  ldlSymbolic(n, Ap, Ai, Lp, Parent, Lnz, Flag);\r\n\r\n  let Lx = new Array(Lp[n]);\r\n  let Li = new Array(Lp[n]);\r\n\r\n  d = ldlNumeric(n, Ap, Ai, Ax, Lp, Parent, Lnz, Li, Lx, D, Y, Pattern, Flag);\r\n\r\n  if (d === n) {\r\n    return function (b) {\r\n      ldlPerm(n, bp1, b, P);\r\n      ldlLsolve(n, bp1, Lp, Li, Lx);\r\n      ldlDsolve(n, bp1, D);\r\n      ldlLTsolve(n, bp1, Lp, Li, Lx);\r\n      ldlPermt(n, x, bp1, P);\r\n\r\n      return x;\r\n    };\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport { prepare as default };\r\n","'use strict'\n\nmodule.exports = cuthillMckee\n\nfunction compareNum(a, b) { return a - b }\n\nfunction cuthillMckee(list, n) {\n  var adj = new Array(n)\n  var visited = new Array(n)\n  for(var i=0; i<n; ++i) {\n    adj[i]     = []\n    visited[i] = false\n  }\n\n  for(var i=0; i<list.length; ++i) {\n    var l = list[i]\n    adj[l[0]].push(l[1])\n  }\n\n  var toVisit = new Array(n)\n  var eol = 0\n  var ptr = 0\n  for(var i=0; i<n; ++i) {\n    if(visited[i]) {\n      continue\n    }\n    toVisit[eol++] = i\n    visited[i] = true\n    while(ptr < eol) {\n      var v = toVisit[ptr++]\n      var nbhd = adj[v]\n      nbhd.sort(compareNum)\n      for(var j=0; j<nbhd.length; ++j) {\n        var u = nbhd[j]\n        if(visited[u]) {\n          continue\n        }\n        visited[u] = true\n        toVisit[eol++] = u\n      }\n    }\n  }\n\n  var result = new Array(n)\n  for(var i=0; i<n; ++i) {\n    result[toVisit[i]] = i\n  }\n\n  return result\n}\n","import cuthillMckee from 'cuthill-mckee';\r\n\r\nconst getClosestNumber = (array = [], goal = 0) => {\r\n  const closest = array.reduce((prev, curr) => {\r\n    return Math.abs(curr - goal) < Math.abs(prev - goal) ? curr : prev;\r\n  });\r\n  return closest;\r\n};\r\n\r\nconst getCloseIndex = (array = [], goal = 0) => {\r\n  const closest = getClosestNumber(array, goal);\r\n  return array.indexOf(closest);\r\n};\r\n\r\nconst updateSystem = (matrix, y, weights) => {\r\n  let nbPoints = y.length;\r\n  let l = nbPoints - 1;\r\n  let newMatrix = new Array(matrix.length);\r\n  let newVector = new Float64Array(nbPoints);\r\n  for (let i = 0; i < l; i++) {\r\n    let w = weights[i];\r\n    let diag = i * 2;\r\n    let next = diag + 1;\r\n    newMatrix[diag] = matrix[diag].slice();\r\n    newMatrix[next] = matrix[next].slice();\r\n    if (w === 0) {\r\n      newVector[i] = 0;\r\n    } else {\r\n      newVector[i] = y[i] * w;\r\n      newMatrix[diag][2] += w;\r\n    }\r\n  }\r\n  newVector[l] = y[l] * weights[l];\r\n  newMatrix[l * 2] = matrix[l * 2].slice();\r\n  newMatrix[l * 2][2] += weights[l];\r\n\r\n  return [newMatrix, newVector];\r\n};\r\n\r\nconst getDeltaMatrix = (nbPoints, lambda) => {\r\n  let matrix = [];\r\n  let last = nbPoints - 1;\r\n  for (let i = 0; i < last; i++) {\r\n    matrix.push([i, i, lambda * 2]);\r\n    matrix.push([i + 1, i, -1 * lambda]);\r\n  }\r\n  matrix[0][2] = lambda;\r\n  matrix.push([last, last, lambda]);\r\n  return {\r\n    lowerTriangularNonZeros: matrix,\r\n    permutationEncodedArray: cuthillMckee(matrix, nbPoints),\r\n  };\r\n};\r\n\r\nexport { updateSystem, getDeltaMatrix, getCloseIndex, getClosestNumber };\r\n","import Cholesky from './choleskySolver';\r\nimport { updateSystem, getDeltaMatrix, getCloseIndex } from './utils';\r\n\r\n/**\r\n * Fit the baseline drift by iteratively changing weights of sum square error between the fitted baseline and original signals,\r\n * for further information about the parameters you can get the [paper of airPLS](https://github.com/zmzhang/airPLS/blob/master/airPLS_manuscript.pdf)\r\n * @param {Array<number>} x - x axis data useful when control points or zones are submitted\r\n * @param {Array<number>} y - Original data\r\n * @param {object} [options={}] - Options object\r\n * @param {number} [options.maxIterations = 100] - Maximal number of iterations if the method does not reach the stop criterion\r\n * @param {number} [options.factorCriterion = 0.001] - Factor of the sum of absolute value of original data, to compute stop criterion\r\n * @param {Array<number>} [options.weights = [1,1,...]] - Initial weights vector, default each point has the same weight\r\n * @param {number} [options.lambda = 100] - Factor of weights matrix in -> [I + lambda D'D]z = x\r\n * @param {Array<number>} [options.controlPoints = []] - Array of x axis values to force that baseline cross those points.\r\n * @param {Array<number>} [options.baseLineZones = []] - Array of x axis values (as from - to), to force that baseline cross those zones.\r\n * @returns {{corrected: Array<number>, error: number, iteration: number, baseline: Array<number>}}\r\n */\r\nfunction airPLS(x, y, options = {}) {\r\n  let {\r\n    maxIterations = 100,\r\n    lambda = 100,\r\n    factorCriterion = 0.001,\r\n    weights = new Array(y.length).fill(1),\r\n    controlPoints = [],\r\n    baseLineZones = [],\r\n  } = options;\r\n\r\n  if (controlPoints.length > 0) {\r\n    controlPoints.forEach((e, i, arr) => (arr[i] = getCloseIndex(x, e)));\r\n  }\r\n  if (baseLineZones.length > 0) {\r\n    baseLineZones.forEach((range) => {\r\n      let indexFrom = getCloseIndex(x, range.from);\r\n      let indexTo = getCloseIndex(x, range.to);\r\n      if (indexFrom > indexTo) [indexFrom, indexTo] = [indexTo, indexFrom];\r\n      for (let i = indexFrom; i < indexTo; i++) {\r\n        controlPoints.push(i);\r\n      }\r\n    });\r\n  }\r\n\r\n  let baseline, iteration;\r\n  let nbPoints = y.length;\r\n  let l = nbPoints - 1;\r\n  let sumNegDifferences = Number.MAX_SAFE_INTEGER;\r\n  let stopCriterion =\r\n    factorCriterion * y.reduce((sum, e) => Math.abs(e) + sum, 0);\r\n\r\n  let { lowerTriangularNonZeros, permutationEncodedArray } = getDeltaMatrix(\r\n    nbPoints,\r\n    lambda,\r\n  );\r\n\r\n  for (\r\n    iteration = 0;\r\n    iteration < maxIterations && Math.abs(sumNegDifferences) > stopCriterion;\r\n    iteration++\r\n  ) {\r\n    let [leftHandSide, rightHandSide] = updateSystem(\r\n      lowerTriangularNonZeros,\r\n      y,\r\n      weights,\r\n    );\r\n\r\n    let cho = Cholesky(leftHandSide, nbPoints, permutationEncodedArray);\r\n\r\n    baseline = cho(rightHandSide);\r\n\r\n    sumNegDifferences = 0;\r\n\r\n    let difference = y.map(calculateError);\r\n\r\n    let maxNegativeDiff = -1 * Number.MAX_SAFE_INTEGER;\r\n    for (let i = 1; i < l; i++) {\r\n      let diff = difference[i];\r\n      if (diff >= 0) {\r\n        weights[i] = 0;\r\n      } else {\r\n        weights[i] = Math.exp((iteration * diff) / sumNegDifferences);\r\n        if (maxNegativeDiff < diff) maxNegativeDiff = diff;\r\n      }\r\n    }\r\n\r\n    let value = Math.exp((iteration * maxNegativeDiff) / sumNegDifferences);\r\n    weights[0] = value;\r\n    weights[l] = value;\r\n    controlPoints.forEach((i) => (weights[i] = value));\r\n  }\r\n\r\n  return {\r\n    corrected: y.map((e, i) => e - baseline[i]),\r\n    baseline,\r\n    iteration,\r\n    error: sumNegDifferences,\r\n  };\r\n\r\n  function calculateError(e, i) {\r\n    let diff = e - baseline[i];\r\n    if (diff < 0) sumNegDifferences += diff;\r\n    return diff;\r\n  }\r\n}\r\n\r\nexport { airPLS as default };\r\n","import airpls from 'ml-airpls';\nimport sequentialFill from 'ml-array-sequential-fill';\n/**\n * Adaptive iteratively reweighted penalized least squares [1]\n *\n * This function calls ml-airpls\n *\n * References:\n * [1] Zhang, Z.-M.; Chen, S.; Liang, Y.-Z.\n * Baseline Correction Using Adaptive Iteratively Reweighted Penalized Least Squares.\n * Analyst 2010, 135 (5), 1138–1146. https://doi.org/10.1039/B922045C.\n * @export\n * @param {Array<number>} ys\n * @param {object} [options] - Options object\n * @param {Array<number>} [options.x] Optional, Independent axis variable. If not specified, we use a linear grid\n * @param {object} [options.regression] - Options for the regression\n * @param {number} [options.regression.maxIterations = 100] - Maximum number of allowed iterations\n * @param {function} [options.regression.§Regression = PolynomialRegression] - Regression class with a predict method\n * @param {*} [options.regression.regressionOptions] - Options for regressionFunction\n * @param {number} [options.regression.tolerance = 0.001] - Convergence error tolerance\n * @returns {BaselineOutput}\n */\nexport function airPLSBaseline(ys, options = {}) {\n  const numberPoints = ys.length;\n  let { x, regressionOptions } = options;\n  if (!x) {\n    x = sequentialFill({ from: 0, to: numberPoints - 1, size: numberPoints });\n  }\n  let output = airpls(x, ys, regressionOptions);\n\n  return { baseline: output.baseline, correctedSpectrum: output.corrected };\n}\n","export default function maybeToPrecision(value, digits) {\n  if (value < 0) {\n    value = 0 - value;\n    if (typeof digits === 'number') {\n      return `- ${value.toPrecision(digits)}`;\n    } else {\n      return `- ${value.toString()}`;\n    }\n  } else {\n    if (typeof digits === 'number') {\n      return value.toPrecision(digits);\n    } else {\n      return value.toString();\n    }\n  }\n}\n","import isAnyArray from 'is-any-array';\n\nexport default function checkArraySize(x, y) {\n  if (!isAnyArray(x) || !isAnyArray(y)) {\n    throw new TypeError('x and y must be arrays');\n  }\n  if (x.length !== y.length) {\n    throw new RangeError('x and y arrays must have the same length');\n  }\n}\n","import isAnyArray from 'is-any-array';\n\nexport { default as maybeToPrecision } from './maybeToPrecision';\nexport { default as checkArrayLength } from './checkArrayLength';\nexport default class BaseRegression {\n  constructor() {\n    if (new.target === BaseRegression) {\n      throw new Error('BaseRegression must be subclassed');\n    }\n  }\n\n  predict(x) {\n    if (typeof x === 'number') {\n      return this._predict(x);\n    } else if (isAnyArray(x)) {\n      const y = [];\n      for (let i = 0; i < x.length; i++) {\n        y.push(this._predict(x[i]));\n      }\n      return y;\n    } else {\n      throw new TypeError('x must be a number or array');\n    }\n  }\n\n  _predict() {\n    throw new Error('_predict must be implemented');\n  }\n\n  train() {\n    // Do nothing for this package\n  }\n\n  toString() {\n    return '';\n  }\n\n  toLaTeX() {\n    return '';\n  }\n\n  /**\n   * Return the correlation coefficient of determination (r) and chi-square.\n   * @param {Array<number>} x\n   * @param {Array<number>} y\n   * @return {object}\n   */\n  score(x, y) {\n    if (!isAnyArray(x) || !isAnyArray(y) || x.length !== y.length) {\n      throw new Error('x and y must be arrays of the same length');\n    }\n\n    const n = x.length;\n    const y2 = new Array(n);\n    for (let i = 0; i < n; i++) {\n      y2[i] = this._predict(x[i]);\n    }\n\n    let xSum = 0;\n    let ySum = 0;\n    let chi2 = 0;\n    let rmsd = 0;\n    let xSquared = 0;\n    let ySquared = 0;\n    let xY = 0;\n    for (let i = 0; i < n; i++) {\n      xSum += y2[i];\n      ySum += y[i];\n      xSquared += y2[i] * y2[i];\n      ySquared += y[i] * y[i];\n      xY += y2[i] * y[i];\n      if (y[i] !== 0) {\n        chi2 += ((y[i] - y2[i]) * (y[i] - y2[i])) / y[i];\n      }\n      rmsd += (y[i] - y2[i]) * (y[i] - y2[i]);\n    }\n\n    const r =\n      (n * xY - xSum * ySum) /\n      Math.sqrt((n * xSquared - xSum * xSum) * (n * ySquared - ySum * ySum));\n\n    return {\n      r: r,\n      r2: r * r,\n      chi2: chi2,\n      rmsd: Math.sqrt(rmsd / n),\n    };\n  }\n}\n","import { Matrix, MatrixTransposeView, solve } from 'ml-matrix';\nimport BaseRegression, {\n  checkArrayLength,\n  maybeToPrecision,\n} from 'ml-regression-base';\n\nexport default class PolynomialRegression extends BaseRegression {\n  constructor(x, y, degree) {\n    super();\n    if (x === true) {\n      this.degree = y.degree;\n      this.powers = y.powers;\n      this.coefficients = y.coefficients;\n    } else {\n      checkArrayLength(x, y);\n      regress(this, x, y, degree);\n    }\n  }\n\n  _predict(x) {\n    let y = 0;\n    for (let k = 0; k < this.powers.length; k++) {\n      y += this.coefficients[k] * Math.pow(x, this.powers[k]);\n    }\n    return y;\n  }\n\n  toJSON() {\n    return {\n      name: 'polynomialRegression',\n      degree: this.degree,\n      powers: this.powers,\n      coefficients: this.coefficients,\n    };\n  }\n\n  toString(precision) {\n    return this._toFormula(precision, false);\n  }\n\n  toLaTeX(precision) {\n    return this._toFormula(precision, true);\n  }\n\n  _toFormula(precision, isLaTeX) {\n    let sup = '^';\n    let closeSup = '';\n    let times = ' * ';\n    if (isLaTeX) {\n      sup = '^{';\n      closeSup = '}';\n      times = '';\n    }\n\n    let fn = '';\n    let str = '';\n    for (let k = 0; k < this.coefficients.length; k++) {\n      str = '';\n      if (this.coefficients[k] !== 0) {\n        if (this.powers[k] === 0) {\n          str = maybeToPrecision(this.coefficients[k], precision);\n        } else {\n          if (this.powers[k] === 1) {\n            str = `${maybeToPrecision(this.coefficients[k], precision) +\n              times}x`;\n          } else {\n            str = `${maybeToPrecision(this.coefficients[k], precision) +\n              times}x${sup}${this.powers[k]}${closeSup}`;\n          }\n        }\n\n        if (this.coefficients[k] > 0 && k !== this.coefficients.length - 1) {\n          str = ` + ${str}`;\n        } else if (k !== this.coefficients.length - 1) {\n          str = ` ${str}`;\n        }\n      }\n      fn = str + fn;\n    }\n    if (fn.charAt(0) === '+') {\n      fn = fn.slice(1);\n    }\n\n    return `f(x) = ${fn}`;\n  }\n\n  static load(json) {\n    if (json.name !== 'polynomialRegression') {\n      throw new TypeError('not a polynomial regression model');\n    }\n    return new PolynomialRegression(true, json);\n  }\n}\n\nfunction regress(pr, x, y, degree) {\n  const n = x.length;\n  let powers;\n  if (Array.isArray(degree)) {\n    powers = degree;\n    degree = powers.length;\n  } else {\n    degree++;\n    powers = new Array(degree);\n    for (let k = 0; k < degree; k++) {\n      powers[k] = k;\n    }\n  }\n  const F = new Matrix(n, degree);\n  const Y = new Matrix([y]);\n  for (let k = 0; k < degree; k++) {\n    for (let i = 0; i < n; i++) {\n      if (powers[k] === 0) {\n        F.set(i, k, 1);\n      } else {\n        F.set(i, k, Math.pow(x[i], powers[k]));\n      }\n    }\n  }\n\n  const FT = new MatrixTransposeView(F);\n  const A = FT.mmul(F);\n  const B = FT.mmul(new MatrixTransposeView(Y));\n\n  pr.degree = degree - 1;\n  pr.powers = powers;\n  pr.coefficients = solve(A, B).to1DArray();\n}\n","import PolynomialRegression from 'ml-regression-polynomial';\r\n\r\n/**\r\n * Iterative regression-based baseline correction\r\n * @param {Array<number>} x - Independent axis variable\r\n * @param {Array<number>} y - Dependent axis variable\r\n * @param {object} [options] - Options object\r\n * @param {number} [options.maxIterations = 100] - Maximum number of allowed iterations\r\n * @param {function} [options.Regression = PolynomialRegression] - Regression class with a predict method\r\n * @param {*} [options.regressionOptions] - Options for regressionFunction\r\n * @param {number} [options.tolerance = 0.001] - Convergence error tolerance\r\n * @return {{corrected: Array<number>, delta: number, iteration: number, baseline: Array<number>}}\r\n */\r\nexport default function baselineCorrectionRegression(x, y, options = {}) {\r\n  let {\r\n    maxIterations = 100,\r\n    Regression = PolynomialRegression,\r\n    regressionOptions,\r\n    tolerance = 0.001,\r\n  } = options;\r\n\r\n  if (!regressionOptions && Regression === PolynomialRegression) {\r\n    regressionOptions = 3;\r\n  }\r\n\r\n  let baseline = y.slice();\r\n  let fitting = y.slice();\r\n  let oldFitting = y;\r\n  let iteration = 0;\r\n  let delta;\r\n  let regression;\r\n  while (iteration < maxIterations) {\r\n    // Calculate the fitting result\r\n    regression = new Regression(x, baseline, regressionOptions);\r\n\r\n    delta = 0;\r\n    for (let i = 0; i < baseline.length; i++) {\r\n      fitting[i] = regression.predict(x[i]);\r\n      if (baseline[i] > fitting[i]) {\r\n        baseline[i] = fitting[i];\r\n      }\r\n\r\n      delta += Math.abs((fitting[i] - oldFitting[i]) / oldFitting[i]);\r\n    }\r\n\r\n    // Stop criterion\r\n    if (delta < tolerance) {\r\n      break;\r\n    } else {\r\n      oldFitting = fitting.slice();\r\n      iteration++;\r\n    }\r\n  }\r\n\r\n  // removes baseline\r\n  let corrected = new Array(baseline.length);\r\n  for (let j = 0; j < baseline.length; j++) {\r\n    corrected[j] = y[j] - baseline[j];\r\n  }\r\n\r\n  return {\r\n    corrected,\r\n    delta,\r\n    iteration,\r\n    baseline,\r\n    regression: regression,\r\n  };\r\n}\r\n","import sequentialFill from 'ml-array-sequential-fill';\nimport baselineCorrection from 'ml-baseline-correction-regression';\n\n/**\n * Iterative polynomial fitting [1]\n *\n * Implementation based on ml-baseline-correction-regression\n *\n * References:\n * [1] Gan, F.; Ruan, G.; Mo, J.\n * Baseline Correction by Improved Iterative Polynomial Fitting with Automatic Threshold.\n *  Chemometrics and Intelligent Laboratory Systems 2006, 82 (1), 59–65.\n * https://doi.org/10.1016/j.chemolab.2005.08.009.\n * @export\n * @param {Array<number>} ys\n * @param {object} [options] - Options object\n * @param {Array<number>} [options.x] Optional, Independent axis variable. If not specified, we use a linear grid\n * @param {Object} [options.regression]\n * @param {number} [options.regression.maxIterations = 100] - Maximum number of allowed iterations\n * @param {Object} [options.regression]\n * @param {function} [options.regression.Regression = PolynomialRegression] - Regression class with a predict method\n * @param {Object} [options.regression.regressionOptions] - Options for regressionFunction\n * @param {number} [options.regression.tolerance = 0.001] - Convergence error tolerance\n * @returns {BaselineOutput}\n */\nexport function iterativePolynomialBaseline(ys, options = {}) {\n  const numberPoints = ys.length;\n  let { x, regressionOptions } = options;\n  if (!x) {\n    x = sequentialFill({ from: 0, to: numberPoints - 1, size: numberPoints });\n  }\n\n  let output = baselineCorrection(x, ys, regressionOptions);\n\n  return { baseline: output.baseline, correctedSpectrum: output.corrected };\n}\n","import isArray from 'is-any-array';\n\n/**\n * Checks if input is valdi\n * @param {Array<number>} input\n\n */\nexport function xCheck(input) {\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n}\n\nexport function xCheckLengths(array1, array2) {\n  if (array1.length !== array2.length) {\n    throw new TypeError('Length of array1 and array2 must be identical');\n  }\n}\n","import { xCheck } from './xCheck';\n\n/**\n * This function pads an array\n * @param {Array} array - the array that will be padded\n * @param {object} [options={}]\n * @param {string} [options.algorithm=''] '', value, circular, duplicate\n * @param {number} [options.size=0] padding size before first element and after last element\n * @param {number} [options.value=0] value to use for padding (if algorithm='value')\n * @return {Array}\n */\nexport function xPadding(array, options = {}) {\n  const { size = 0, value = 0, algorithm = '' } = options;\n  xCheck(array);\n\n  if (!algorithm) {\n    if (array instanceof Float64Array) {\n      return array.slice();\n    } else {\n      return Float64Array.from(array);\n    }\n  }\n\n  let result = new Float64Array(array.length + size * 2);\n\n  for (let i = 0; i < array.length; i++) {\n    result[i + size] = array[i];\n  }\n\n  let fromEnd = size + array.length;\n  let toEnd = 2 * size + array.length;\n\n  switch (algorithm.toLowerCase()) {\n    case 'value':\n      for (let i = 0; i < size; i++) {\n        result[i] = value;\n      }\n      for (let i = fromEnd; i < toEnd; i++) {\n        result[i] = value;\n      }\n      break;\n    case 'duplicate':\n      for (let i = 0; i < size; i++) {\n        result[i] = array[0];\n      }\n      for (let i = fromEnd; i < toEnd; i++) {\n        result[i] = array[array.length - 1];\n      }\n      break;\n    case 'circular':\n      for (let i = 0; i < size; i++) {\n        result[i] =\n          array[(array.length - (size % array.length) + i) % array.length];\n      }\n      for (let i = 0; i < size; i++) {\n        result[i + fromEnd] = array[i % array.length];\n      }\n      break;\n    default:\n      throw Error('xPadding: unknown algorithm');\n  }\n\n  return result;\n}\n","import { xCheck } from './xCheck';\nimport { xPadding } from './xPadding';\n/**\n * This function calculates a rolling average\n * @param {Array<Number>} array - the array that will be rotated\n * @param {function} fct callback function that from an array returns a value.\n * @param {object} [options={}]\n * @param {number} [options.window=5] rolling window\n * @param {string} [options.padding.size=0] none, value, circular, duplicate\n * @param {string} [options.padding.algorithm='value'] none, value, circular, duplicate\n * @param {number} [options.padding.value=0] value to use for padding (if algorithm='value')\n * @return {Array<Number>}\n */\nexport function xRolling(array, fct, options = {}) {\n  xCheck(array);\n  if (typeof fct !== 'function') throw Error('fct has to be a function');\n\n  const { window = 5, padding = {} } = options;\n  const { size = window - 1, algorithm, value } = padding;\n\n  array = xPadding(array, { size, algorithm, value }); // ensure we get a copy and it is float64\n\n  const newArray = [];\n  for (let i = 0; i < array.length - window + 1; i++) {\n    let subArray = new Float64Array(array.buffer, i * 8, window);\n    // we will send a view to the original buffer\n    newArray.push(fct(subArray));\n  }\n\n  return newArray;\n}\n","import mean from 'ml-array-mean';\n\nimport { xRolling } from './xRolling';\n\n/**\n * This function calculates a rolling average\n * @param {Array<Number>} array - the array that will be rotated\n * @param {object} [options={}]\n * @param {number} [options.window=5] rolling window\n * @param {string} [options.padding.size=window-1] none, value, circular, duplicate\n * @param {string} [options.padding.algorithm=''] none, value, circular, duplicate\n * @param {number} [options.padding.value=0] value to use for padding (if algorithm='value')\n * @return {Array<Number>}\n */\nexport function xRollingAverage(array, options = {}) {\n  return xRolling(array, mean, options);\n}\n","import median from 'ml-array-median';\n\nimport { xRolling } from './xRolling';\n\n/**\n * This function calculates a rolling average\n * @param {Array<Number>} array - the array that will be rotated\n * @param {object} [options={}]\n * @param {number} [options.window=5] rolling window\n * @param {string} [options.padding.size=window-1] none, value, circular, duplicate\n * @param {string} [options.padding.algorithm=''] none, value, circular, duplicate\n * @param {number} [options.padding.value=0] value to use for padding (if algorithm='value')\n * @return {Array<Number>}\n */\nexport function xRollingMedian(array, options = {}) {\n  return xRolling(array, median, options);\n}\n","import { xRollingAverage } from 'ml-spectra-processing';\n\n/**\n\n *\n * @export\n * @param {Array<number>} ys\n * @param {Object} [options={}]\n * @param {number} [options.window] rolling window size, defaults to 10% of the length of the spectrum\n * @param {string} [options.padding.size=window-1] none, value, circular, duplicate\n * @param {string} [options.padding.algorithm='duplicate'] none, value, circular, duplicate\n * @param {number} [options.padding.value=0] value to use for padding (if algorithm='value')\n * @returns {BaselineOutput}\n */\nexport function rollingAverageBaseline(ys, options = {}) {\n  let window = Math.max(Math.round(ys.length * 0.1), 2);\n  let defaults = {\n    window: window,\n    padding: {\n      size: window - 1,\n      algorithm: 'duplicate',\n      value: 0,\n    },\n  };\n  let actualOptions = Object.assign({}, defaults, options);\n  let baseline = xRollingAverage(ys, actualOptions);\n  let corrected = new Float64Array(ys.length);\n  for (let i = 0; i < corrected.length; i++) {\n    corrected[i] = ys[i] - baseline[i];\n  }\n\n  return { baseline: baseline, correctedSpectrum: corrected };\n}\n","import isAnyArray from 'is-any-array';\nimport max from 'ml-array-max';\nimport mean from 'ml-array-mean';\nimport min from 'ml-array-min';\n\n/**\n * Rolling ball baseline correction algorithm.\n * From the abstract of (1):\n * \"This algorithm behaves equivalently to traditional polynomial backgrounds in simple spectra,\n * [...] and is considerably more robust for multiple overlapping peaks, rapidly varying background [...]\n *\n * The baseline is the trace one gets by rolling a ball below a spectrum. Algorithm has three steps:\n * Finding the minima in each window, find maxima among minima and then smooth over them by averaging.\n *\n * Reference:\n * (1) Kneen, M. A.; Annegarn, H. J.\n *     Algorithm for Fitting XRF, SEM and PIXE X-Ray Spectra Backgrounds.\n *     Nuclear Instruments and Methods in Physics Research Section B: Beam Interactions with Materials and Atoms 1996, 109–110, 209–213.\n *     https://doi.org/10.1016/0168-583X(95)00908-6.\n * (2) Kristian Hovde Liland, Bjørn-Helge Mevik, Roberto Canteri: baseline.\n *     https://cran.r-project.org/web/packages/baseline/index.html\n * @export\n * @param {Array} spectrum\n * @param {Object} [options={}]\n * @param {Number} [options.windowM] - width of local window for minimization/maximization, defaults to 4% of the spectrum length\n * @param {Number} [options.windowS] - width of local window for smoothing, defaults to 8% of the specturm length\n */\nexport function rollingBall(spectrum, options = {}) {\n  if (!isAnyArray(spectrum)) {\n    throw new Error('Spectrum must be an array');\n  }\n\n  if (spectrum.length === 0) {\n    throw new TypeError('Spectrum must not be empty');\n  }\n\n  const numberPoints = spectrum.length;\n  const maxima = new Float64Array(numberPoints);\n  const minima = new Float64Array(numberPoints);\n  const baseline = new Float64Array(numberPoints);\n\n  // windowM 4 percent of spectrum length\n  // windowS 8 percent of spectrum length\n  const {\n    windowM = Math.round(numberPoints * 0.04),\n    windowS = Math.round(numberPoints * 0.08),\n  } = options;\n\n  // fi(1) in original paper\n  for (let i = 0; i < spectrum.length; i++) {\n    let windowLeft = max([0, i - windowM]);\n    let windowRight = min([i + windowM + 1, spectrum.length]);\n    minima[i] = min(spectrum.slice(windowLeft, windowRight));\n  }\n\n  // fi in original paper\n  for (let i = 0; i < minima.length; i++) {\n    let windowLeft = max([0, i - windowM]);\n    let windowRight = min([i + windowM + 1, minima.length]);\n    maxima[i] = max(minima.slice(windowLeft, windowRight));\n  }\n\n  for (let i = 0; i < minima.length; i++) {\n    let windowLeft = max([0, i - windowS]);\n    let windowRight = min([i + windowS + 1, maxima.length]);\n    baseline[i] = mean(maxima.slice(windowLeft, windowRight));\n  }\n\n  return baseline;\n}\n","import { rollingBall } from 'ml-rolling-ball-baseline';\n\n/**\n * Rolling ball baseline correction algorithm.\n * From the abstract of (1):\n * \"This algorithm behaves equivalently to traditional polynomial backgrounds in simple spectra,\n * [...] and is considerably more robust for multiple overlapping peaks, rapidly varying background [...]\n *\n * The baseline is the trace one gets by rolling a ball below a spectrum. Algorithm has three steps:\n * Finding the minima in each window, find maxima among minima and then smooth over them by averaging.\n *\n * Algorithm described in (1), but in the implementation here the window width does not change.\n *\n * Reference:\n * (1) Kneen, M. A.; Annegarn, H. J.\n *     Algorithm for Fitting XRF, SEM and PIXE X-Ray Spectra Backgrounds.\n *     Nuclear Instruments and Methods in Physics Research Section B: Beam Interactions with Materials and Atoms 1996, 109–110, 209–213.\n *     https://doi.org/10.1016/0168-583X(95)00908-6.\n * (2) Kristian Hovde Liland, Bjørn-Helge Mevik, Roberto Canteri: baseline.\n *     https://cran.r-project.org/web/packages/baseline/index.html\n *\n * @export\n * @param {Array<number>} ys\n * @param {Object} [options={}]\n * @param {Number} [options.windowM] - width of local window for minimization/maximization, defaults to 4% of the spectrum length\n * @param {Number} [options.windowS] - width of local window for smoothing, defaults to 8% of the specturm length\n * @returns {BaselineOutput}\n */\nexport function rollingBallBaseline(ys, options = {}) {\n  const baseline = rollingBall(ys, options);\n  let corrected = new Float64Array(ys.length);\n  for (let i = 0; i < corrected.length; i++) {\n    corrected[i] = ys[i] - baseline[i];\n  }\n\n  return { baseline: baseline, correctedSpectrum: corrected };\n}\n","import { xRollingMedian } from 'ml-spectra-processing';\n\n/**\n\n *\n * @export\n * @param {Array<number>} ys\n * @param {Object} [options={}]\n * @param {number} [options.window] rolling window size, defaults to 10% of the length of the spectrum\n * @param {string} [options.padding.size=window-1] none, value, circular, duplicate\n * @param {string} [options.padding.algorithm='duplicate'] none, value, circular, duplicate\n * @param {number} [options.padding.value=0] value to use for padding (if algorithm='value')\n * @returns {BaselineOutput}\n */\nexport function rollingMedianBaseline(ys, options = {}) {\n  let window = Math.max(Math.round(ys.length * 0.1), 2);\n  let defaults = {\n    window: window,\n    padding: {\n      size: window - 1,\n      algorithm: 'duplicate',\n      value: 0,\n    },\n  };\n  let actualOptions = Object.assign({}, defaults, options);\n  let baseline = xRollingMedian(ys, actualOptions);\n  let corrected = new Float64Array(ys.length);\n  for (let i = 0; i < corrected.length; i++) {\n    corrected[i] = ys[i] - baseline[i];\n  }\n\n  return { baseline: baseline, correctedSpectrum: corrected };\n}\n","import isArray from 'is-any-array';\nimport max from 'ml-array-max';\nimport sum from 'ml-array-sum';\n\nfunction norm(input) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var _options$algorithm = options.algorithm,\n      algorithm = _options$algorithm === void 0 ? 'absolute' : _options$algorithm,\n      _options$sumValue = options.sumValue,\n      sumValue = _options$sumValue === void 0 ? 1 : _options$sumValue,\n      _options$maxValue = options.maxValue,\n      maxValue = _options$maxValue === void 0 ? 1 : _options$maxValue;\n\n  if (!isArray(input)) {\n    throw new Error('input must be an array');\n  }\n\n  var output;\n\n  if (options.output !== undefined) {\n    if (!isArray(options.output)) {\n      throw new TypeError('output option must be an array if specified');\n    }\n\n    output = options.output;\n  } else {\n    output = new Array(input.length);\n  }\n\n  if (input.length === 0) {\n    throw new Error('input must not be empty');\n  }\n\n  switch (algorithm.toLowerCase()) {\n    case 'absolute':\n      {\n        var absoluteSumValue = absoluteSum(input) / sumValue;\n        if (absoluteSumValue === 0) return input.slice(0);\n\n        for (var i = 0; i < input.length; i++) {\n          output[i] = input[i] / absoluteSumValue;\n        }\n\n        return output;\n      }\n\n    case 'max':\n      {\n        var currentMaxValue = max(input);\n        if (currentMaxValue === 0) return input.slice(0);\n        var factor = maxValue / currentMaxValue;\n\n        for (var _i = 0; _i < input.length; _i++) {\n          output[_i] = input[_i] * factor;\n        }\n\n        return output;\n      }\n\n    case 'sum':\n      {\n        var sumFactor = sum(input) / sumValue;\n        if (sumFactor === 0) return input.slice(0);\n\n        for (var _i2 = 0; _i2 < input.length; _i2++) {\n          output[_i2] = input[_i2] / sumFactor;\n        }\n\n        return output;\n      }\n\n    default:\n      throw new Error(\"norm: unknown algorithm: \".concat(algorithm));\n  }\n}\n\nfunction absoluteSum(input) {\n  var sumValue = 0;\n\n  for (var i = 0; i < input.length; i++) {\n    sumValue += Math.abs(input[i]);\n  }\n\n  return sumValue;\n}\n\nexport default norm;\n","/**\n * Normalize an array of zones:\n * - ensure than from < to\n * - merge overlapping zones\n *\n * The method will always check if from if lower than to and will swap if required.\n * @param {Array} [zones=[]]\n * @param {object} [options={}]\n * @param {number} [options.from=Number.NEGATIVE_INFINITY] Specify min value of a zone\n * @param {number} [options.to=Number.POSITIVE_INFINITY] Specify max value of a zone\n */\n\nexport function normalize(zones = [], options = {}) {\n  if (zones.length === 0) return [];\n  let {\n    from = Number.NEGATIVE_INFINITY,\n    to = Number.POSITIVE_INFINITY,\n  } = options;\n  if (from > to) [from, to] = [to, from];\n\n  zones = JSON.parse(JSON.stringify(zones)).map((zone) =>\n    zone.from > zone.to ? { from: zone.to, to: zone.from } : zone,\n  );\n  zones = zones.sort((a, b) => {\n    if (a.from !== b.from) return a.from - b.from;\n    return a.to - b.to;\n  });\n\n  zones.forEach((zone) => {\n    if (from > zone.from) zone.from = from;\n    if (to < zone.to) zone.to = to;\n  });\n\n  zones = zones.filter((zone) => zone.from <= zone.to);\n  if (zones.length === 0) return [];\n\n  let currentZone = zones[0];\n  let result = [currentZone];\n  for (let i = 1; i < zones.length; i++) {\n    let zone = zones[i];\n    if (zone.from <= currentZone.to) {\n      currentZone.to = zone.to;\n    } else {\n      currentZone = zone;\n      result.push(currentZone);\n    }\n  }\n  return result;\n}\n","import { normalize } from './normalize';\n\n/**\n * Convert an array of exclusions and keep only from / to\n *\n * The method will always check if from if lower than to and will swap if required.\n * @param {Array} [exclusions=[]]\n * @param {object} [options={}]\n * @param {number} [options.from=Number.NEGATIVE_INFINITY] Specify min value of zones (after inversion)\n * @param {number} [options.to=Number.POSITIVE_INFINITY] Specify max value of zones (after inversion)\n */\n\nexport function invert(exclusions = [], options = {}) {\n  let {\n    from = Number.NEGATIVE_INFINITY,\n    to = Number.POSITIVE_INFINITY,\n  } = options;\n  if (from > to) [from, to] = [to, from];\n\n  exclusions = normalize(exclusions, { from, to });\n  if (exclusions.length === 0) return [{ from, to }];\n\n  let zones = [];\n  for (let i = 0; i < exclusions.length; i++) {\n    let exclusion = exclusions[i];\n    let nextExclusion = exclusions[i + 1];\n    if (i === 0) {\n      if (exclusion.from > from) {\n        zones.push({ from, to: exclusion.from });\n      }\n    }\n    if (i === exclusions.length - 1) {\n      if (exclusion.to < to) {\n        zones.push({ from: exclusion.to, to });\n      }\n    } else {\n      zones.push({ from: exclusion.to, to: nextExclusion.from });\n    }\n  }\n\n  return zones;\n}\n","import { normalize } from './normalize';\n\n/**\n * Add the number of points per zone to reach a specified total\n * @param {Array} [zones=[]]\n * @param {number} [numberOfPoints] Total number of points to distribute between zones\n * @param {object} [options={}]\n * @param {number} [options.from=Number.NEGATIVE_INFINITY] Specify min value of a zone\n * @param {number} [options.to=Number.POSITIVE_INFINITY] Specify max value of a zone\n */\n\nexport function zonesWithPoints(zones, numberOfPoints, options = {}) {\n  if (zones.length === 0) return zones;\n  zones = normalize(zones, options);\n\n  const totalSize = zones.reduce((previous, current) => {\n    return previous + (current.to - current.from);\n  }, 0);\n\n  let unitsPerPoint = totalSize / numberOfPoints;\n  let currentTotal = 0;\n  for (let i = 0; i < zones.length - 1; i++) {\n    let zone = zones[i];\n    zone.numberOfPoints = Math.min(\n      Math.round((zone.to - zone.from) / unitsPerPoint),\n      numberOfPoints - currentTotal,\n    );\n    currentTotal += zone.numberOfPoints;\n  }\n\n  zones[zones.length - 1].numberOfPoints = numberOfPoints - currentTotal;\n\n  return zones;\n}\n","/**\n * function that retrieves the getEquallySpacedData with the variant \"slot\"\n *\n * @param {Array<number>} x\n * @param {Array<number>} y\n * @param {number} from - Initial point\n * @param {number} to - Final point\n * @param {number} numberOfPoints\n * @return {Array} - Array of y's equally spaced with the variant \"slot\"\n */\nexport default function equallySpacedSlot(x, y, from, to, numberOfPoints) {\n  let xLength = x.length;\n\n  let step = (to - from) / (numberOfPoints > 1 ? numberOfPoints - 1 : 1);\n  let halfStep = step / 2;\n  let lastStep = x[x.length - 1] - x[x.length - 2];\n\n  let start = from - halfStep;\n  let output = new Array(numberOfPoints);\n\n  // Init main variables\n  let min = start;\n  let max = start + step;\n\n  let previousX = -Number.MAX_VALUE;\n  let previousY = 0;\n  let nextX = x[0];\n  let nextY = y[0];\n  let frontOutsideSpectra = 0;\n  let backOutsideSpectra = true;\n\n  let currentValue = 0;\n\n  // for slot algorithm\n  let currentPoints = 0;\n\n  let i = 1; // index of input\n  let j = 0; // index of output\n\n  main: while (true) {\n    if (previousX >= nextX) throw new Error('x must be an increasing serie');\n    while (previousX - max > 0) {\n      // no overlap with original point, just consume current value\n      if (backOutsideSpectra) {\n        currentPoints++;\n        backOutsideSpectra = false;\n      }\n\n      output[j] = currentPoints <= 0 ? 0 : currentValue / currentPoints;\n      j++;\n\n      if (j === numberOfPoints) {\n        break main;\n      }\n\n      min = max;\n      max += step;\n      currentValue = 0;\n      currentPoints = 0;\n    }\n\n    if (previousX > min) {\n      currentValue += previousY;\n      currentPoints++;\n    }\n\n    if (previousX === -Number.MAX_VALUE || frontOutsideSpectra > 1) {\n      currentPoints--;\n    }\n\n    previousX = nextX;\n    previousY = nextY;\n\n    if (i < xLength) {\n      nextX = x[i];\n      nextY = y[i];\n      i++;\n    } else {\n      nextX += lastStep;\n      nextY = 0;\n      frontOutsideSpectra++;\n    }\n  }\n\n  return output;\n}\n","/**\n * Function that calculates the integral of the line between two\n * x-coordinates, given the slope and intercept of the line.\n * @param {number} x0\n * @param {number} x1\n * @param {number} slope\n * @param {number} intercept\n * @return {number} integral value.\n */\nexport default function integral(x0, x1, slope, intercept) {\n  return (\n    0.5 * slope * x1 * x1 +\n    intercept * x1 -\n    (0.5 * slope * x0 * x0 + intercept * x0)\n  );\n}\n","import integral from './integral';\n\n/**\n * function that retrieves the getEquallySpacedData with the variant \"smooth\"\n *\n * @param {Array<number>} x\n * @param {Array<number>} y\n * @param {number} from - Initial point\n * @param {number} to - Final point\n * @param {number} numberOfPoints\n * @return {Array} - Array of y's equally spaced with the variant \"smooth\"\n */\nexport default function equallySpacedSmooth(x, y, from, to, numberOfPoints) {\n  let xLength = x.length;\n\n  let step = (to - from) / (numberOfPoints > 1 ? numberOfPoints - 1 : 1);\n  let halfStep = step / 2;\n\n  let output = new Array(numberOfPoints);\n\n  let initialOriginalStep = x[1] - x[0];\n  let lastOriginalStep = x[xLength - 1] - x[xLength - 2];\n\n  // Init main variables\n  let min = from - halfStep;\n  let max = from + halfStep;\n\n  let previousX = Number.MIN_VALUE;\n  let previousY = 0;\n  let nextX = x[0] - initialOriginalStep;\n  let nextY = 0;\n\n  let currentValue = 0;\n  let slope = 0;\n  let intercept = 0;\n  let sumAtMin = 0;\n  let sumAtMax = 0;\n\n  let i = 0; // index of input\n  let j = 0; // index of output\n\n  function getSlope(x0, y0, x1, y1) {\n    return (y1 - y0) / (x1 - x0);\n  }\n\n  let add = 0;\n  main: while (true) {\n    if (previousX <= min && min <= nextX) {\n      add = integral(0, min - previousX, slope, previousY);\n      sumAtMin = currentValue + add;\n    }\n\n    while (nextX - max >= 0) {\n      // no overlap with original point, just consume current value\n      add = integral(0, max - previousX, slope, previousY);\n      sumAtMax = currentValue + add;\n\n      output[j++] = (sumAtMax - sumAtMin) / step;\n\n      if (j === numberOfPoints) {\n        break main;\n      }\n\n      min = max;\n      max += step;\n      sumAtMin = sumAtMax;\n    }\n\n    currentValue += integral(previousX, nextX, slope, intercept);\n\n    previousX = nextX;\n    previousY = nextY;\n\n    if (i < xLength) {\n      nextX = x[i];\n      nextY = y[i];\n      i++;\n    } else if (i === xLength) {\n      nextX += lastOriginalStep;\n      nextY = 0;\n    }\n\n    slope = getSlope(previousX, previousY, nextX, nextY);\n    intercept = -slope * previousX + previousY;\n  }\n\n  return output;\n}\n","import sequentialFill from 'ml-array-sequential-fill';\nimport { zonesWithPoints, invert } from 'ml-zones';\n\nimport equallySpacedSlot from './equallySpacedSlot';\nimport equallySpacedSmooth from './equallySpacedSmooth';\n\n/**\n * Function that returns a Number array of equally spaced numberOfPoints\n * containing a representation of intensities of the spectra arguments x\n * and y.\n *\n * The options parameter contains an object in the following form:\n * from: starting point\n * to: last point\n * numberOfPoints: number of points between from and to\n * variant: \"slot\" or \"smooth\" - smooth is the default option\n *\n * The slot variant consist that each point in the new array is calculated\n * averaging the existing points between the slot that belongs to the current\n * value. The smooth variant is the same but takes the integral of the range\n * of the slot and divide by the step size between two points in the new array.\n *\n * If exclusions zone are present, zones are ignored !\n * @param {object} [arrayXY={}] - object containing 2 properties x and y (both an array)\n * @param {object} [options={}]\n * @param {number} [options.from=x[0]]\n * @param {number} [options.to=x[x.length-1]]\n * @param {string} [options.variant='smooth']\n * @param {number} [options.numberOfPoints=100]\n * @param {Array} [options.exclusions=[]] array of from / to that should be skipped for the generation of the points\n * @param {Array} [options.zones=[]] array of from / to that should be kept\n * @return {object<x: Array, y:Array>} new object with x / y array with the equally spaced data.\n */\n\nexport default function equallySpaced(arrayXY = {}, options = {}) {\n  let { x, y } = arrayXY;\n  let xLength = x.length;\n  let reverse = false;\n  if (x.length > 1 && x[0] > x[1]) {\n    x = x.slice().reverse();\n    y = y.slice().reverse();\n    reverse = true;\n  }\n\n  let {\n    from = x[0],\n    to = x[xLength - 1],\n    variant = 'smooth',\n    numberOfPoints = 100,\n    exclusions = [],\n    zones = [],\n  } = options;\n\n  if (xLength !== y.length) {\n    throw new RangeError(\"the x and y vector doesn't have the same size.\");\n  }\n\n  if (typeof from !== 'number' || isNaN(from)) {\n    throw new RangeError(\"'from' option must be a number\");\n  }\n\n  if (typeof to !== 'number' || isNaN(to)) {\n    throw new RangeError(\"'to' option must be a number\");\n  }\n\n  if (typeof numberOfPoints !== 'number' || isNaN(numberOfPoints)) {\n    throw new RangeError(\"'numberOfPoints' option must be a number\");\n  }\n\n  if (numberOfPoints < 2) {\n    throw new RangeError(\"'numberOfPoints' option must be greater than 1\");\n  }\n\n  if (zones.length === 0) {\n    zones = invert(exclusions, { from, to });\n  }\n\n  zones = zonesWithPoints(zones, numberOfPoints, { from, to });\n\n  let xResult = [];\n  let yResult = [];\n  for (let zone of zones) {\n    let zoneResult = processZone(\n      x,\n      y,\n      zone.from,\n      zone.to,\n      zone.numberOfPoints,\n      variant,\n      reverse,\n    );\n\n    xResult = xResult.concat(zoneResult.x);\n    yResult = yResult.concat(zoneResult.y);\n  }\n  if (reverse) {\n    if (from < to) {\n      return { x: xResult.reverse(), y: yResult.reverse() };\n    } else {\n      return { x: xResult, y: yResult };\n    }\n  } else {\n    if (from < to) {\n      return { x: xResult, y: yResult };\n    } else {\n      return { x: xResult.reverse(), y: yResult.reverse() };\n    }\n  }\n}\n\nfunction processZone(x, y, from, to, numberOfPoints, variant) {\n  if (numberOfPoints < 1) {\n    throw new RangeError('the number of points must be at least 1');\n  }\n  let output =\n    variant === 'slot'\n      ? equallySpacedSlot(x, y, from, to, numberOfPoints)\n      : equallySpacedSmooth(x, y, from, to, numberOfPoints);\n\n  return {\n    x: sequentialFill({\n      from,\n      to,\n      size: numberOfPoints,\n    }),\n    y: output,\n  };\n}\n","export default function getZones(from, to, exclusions = []) {\n  if (from > to) {\n    [from, to] = [to, from];\n  }\n\n  // in exclusions from and to have to be defined\n  exclusions = exclusions.filter(\n    (exclusion) => exclusion.from !== undefined && exclusion.to !== undefined,\n  );\n\n  exclusions = JSON.parse(JSON.stringify(exclusions));\n  // we ensure that from before to\n  exclusions.forEach((exclusion) => {\n    if (exclusion.from > exclusion.to) {\n      [exclusion.to, exclusion.from] = [exclusion.from, exclusion.to];\n    }\n  });\n\n  exclusions.sort((a, b) => a.from - b.from);\n\n  // we will rework the exclusions in order to remove overlap and outside range (from / to)\n  exclusions.forEach((exclusion) => {\n    if (exclusion.from < from) exclusion.from = from;\n    if (exclusion.to > to) exclusion.to = to;\n  });\n  for (let i = 0; i < exclusions.length - 1; i++) {\n    if (exclusions[i].to > exclusions[i + 1].from) {\n      exclusions[i].to = exclusions[i + 1].from;\n    }\n  }\n  exclusions = exclusions.filter((exclusion) => exclusion.from < exclusion.to);\n\n  if (!exclusions || exclusions.length === 0) {\n    return [{ from, to }];\n  }\n\n  let zones = [];\n  let currentFrom = from;\n  for (let exclusion of exclusions) {\n    if (currentFrom < exclusion.from) {\n      zones.push({\n        from: currentFrom,\n        to: exclusion.from,\n      });\n    }\n\n    currentFrom = exclusion.to;\n  }\n  if (currentFrom < to) {\n    zones.push({\n      from: currentFrom,\n      to: to,\n    });\n  }\n\n  return zones;\n}\n","import getZones from './getZones';\n\n/**\n * Filter an array x/y based on various criteria\n * x points are expected to be sorted\n *\n * @param {object} points\n * @param {object} [options={}]\n * @param {array} [options.from]\n * @param {array} [options.to]\n * @param {array} [options.exclusions=[]]\n * @return {{x: Array<number>, y: Array<number>}}\n */\n\nexport default function filterX(points, options = {}) {\n  const { x, y } = points;\n  const { from = x[0], to = x[x.length - 1], exclusions = [] } = options;\n\n  let zones = getZones(from, to, exclusions);\n\n  let currentZoneIndex = 0;\n  let newX = [];\n  let newY = [];\n  let position = 0;\n  while (position < x.length) {\n    if (\n      x[position] <= zones[currentZoneIndex].to &&\n      x[position] >= zones[currentZoneIndex].from\n    ) {\n      newX.push(x[position]);\n      newY.push(y[position]);\n    } else {\n      if (x[position] > zones[currentZoneIndex].to) {\n        currentZoneIndex++;\n        if (!zones[currentZoneIndex]) break;\n      }\n    }\n    position++;\n  }\n\n  return {\n    x: newX,\n    y: newY,\n  };\n}\n","'use strict';\n\nvar defaultOptions = {\n  size: 1,\n  value: 0\n};\n\n/**\n * Case when the entry is an array\n * @param data\n * @param options\n * @returns {Array}\n */\nfunction arrayCase(data, options) {\n  var len = data.length;\n  if (typeof options.size === 'number') {\n    options.size = [options.size, options.size];\n  }\n\n  var cond = len + options.size[0] + options.size[1];\n\n  var output;\n  if (options.output) {\n    if (options.output.length !== cond) {\n      throw new RangeError('Wrong output size');\n    }\n    output = options.output;\n  } else {\n    output = new Array(cond);\n  }\n\n  var i;\n  if (options.value === 'circular') {\n    for (i = 0; i < cond; i++) {\n      if (i < options.size[0]) {\n        output[i] = data[(len - (options.size[0] % len) + i) % len];\n      } else if (i < options.size[0] + len) {\n        output[i] = data[i - options.size[0]];\n      } else {\n        output[i] = data[(i - options.size[0]) % len];\n      }\n    }\n  } else if (options.value === 'replicate') {\n    for (i = 0; i < cond; i++) {\n      if (i < options.size[0]) output[i] = data[0];\n      else if (i < options.size[0] + len) output[i] = data[i - options.size[0]];\n      else output[i] = data[len - 1];\n    }\n  } else if (options.value === 'symmetric') {\n    if (options.size[0] > len || options.size[1] > len) {\n      throw new RangeError(\n        'expanded value should not be bigger than the data length'\n      );\n    }\n    for (i = 0; i < cond; i++) {\n      if (i < options.size[0]) output[i] = data[options.size[0] - 1 - i];\n      else if (i < options.size[0] + len) output[i] = data[i - options.size[0]];\n      else output[i] = data[2 * len + options.size[0] - i - 1];\n    }\n  } else {\n    for (i = 0; i < cond; i++) {\n      if (i < options.size[0]) output[i] = options.value;\n      else if (i < options.size[0] + len) output[i] = data[i - options.size[0]];\n      else output[i] = options.value;\n    }\n  }\n\n  return output;\n}\n\n/**\n * Case when the entry is a matrix\n * @param data\n * @param options\n * @returns {Array}\n */\nfunction matrixCase(data, options) {\n  // var row = data.length;\n  // var col = data[0].length;\n  if (options.size[0] === undefined) {\n    options.size = [options.size, options.size, options.size, options.size];\n  }\n  throw new Error('matrix not supported yet, sorry');\n}\n\n/**\n * Pads and array\n * @param {Array <number>} data\n * @param {object} options\n */\nfunction padArray(data, options) {\n  options = Object.assign({}, defaultOptions, options);\n  if (Array.isArray(data)) {\n    if (Array.isArray(data[0])) return matrixCase(data, options);\n    else return arrayCase(data, options);\n  } else {\n    throw new TypeError('data should be an array');\n  }\n}\n\nmodule.exports = padArray;\n","import { Matrix, MatrixTransposeView, inverse } from 'ml-matrix';\nimport padArray from 'ml-pad-array';\n\n/**\n * Factorial of a number\n * @ignore\n * @param n\n * @return {number}\n */\nfunction factorial(n) {\n  let r = 1;\n  while (n > 0) r *= n--;\n  return r;\n}\n\nconst defaultOptions = {\n  windowSize: 5,\n  derivative: 1,\n  polynomial: 2,\n  pad: 'none',\n  padValue: 'replicate',\n};\n\n/**\n * Savitzky-Golay filter\n * @param {Array <number>} data\n * @param {number} h\n * @param {Object} options\n * @returns {Array}\n */\nexport default function savitzkyGolay(data, h, options) {\n  options = Object.assign({}, defaultOptions, options);\n  if (\n    options.windowSize % 2 === 0 ||\n    options.windowSize < 5 ||\n    !Number.isInteger(options.windowSize)\n  ) {\n    throw new RangeError(\n      'Invalid window size (should be odd and at least 5 integer number)',\n    );\n  }\n  if (options.derivative < 0 || !Number.isInteger(options.derivative)) {\n    throw new RangeError('Derivative should be a positive integer');\n  }\n  if (options.polynomial < 1 || !Number.isInteger(options.polynomial)) {\n    throw new RangeError('Polynomial should be a positive integer');\n  }\n\n  let C, norm;\n  let step = Math.floor(options.windowSize / 2);\n\n  if (options.pad === 'pre') {\n    data = padArray(data, { size: step, value: options.padValue });\n  }\n\n  let ans = new Array(data.length - 2 * step);\n\n  if (\n    options.windowSize === 5 &&\n    options.polynomial === 2 &&\n    (options.derivative === 1 || options.derivative === 2)\n  ) {\n    if (options.derivative === 1) {\n      C = [-2, -1, 0, 1, 2];\n      norm = 10;\n    } else {\n      C = [2, -1, -2, -1, 2];\n      norm = 7;\n    }\n  } else {\n    let J = Matrix.ones(options.windowSize, options.polynomial + 1);\n    let inic = -(options.windowSize - 1) / 2;\n    for (let i = 0; i < J.rows; i++) {\n      for (let j = 0; j < J.columns; j++) {\n        if (inic + 1 !== 0 || j !== 0) J.set(i, j, Math.pow(inic + i, j));\n      }\n    }\n    let Jtranspose = new MatrixTransposeView(J);\n    let Jinv = inverse(Jtranspose.mmul(J));\n    C = Jinv.mmul(Jtranspose);\n    C = C.getRow(options.derivative);\n    norm = 1 / factorial(options.derivative);\n  }\n  let det = norm * Math.pow(h, options.derivative);\n  for (let k = step; k < data.length - step; k++) {\n    let d = 0;\n    for (let l = 0; l < C.length; l++) d += (C[l] * data[l + k - step]) / det;\n    ans[k - step] = d;\n  }\n\n  if (options.pad === 'post') {\n    ans = padArray(ans, { size: step, value: options.padValue });\n  }\n\n  return ans;\n}\n","'use strict';\n\nfunction compareNumbers(a, b) {\n    return a - b;\n}\n\n/**\n * Computes the sum of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.sum = function sum(values) {\n    var sum = 0;\n    for (var i = 0; i < values.length; i++) {\n        sum += values[i];\n    }\n    return sum;\n};\n\n/**\n * Computes the maximum of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.max = function max(values) {\n    var max = values[0];\n    var l = values.length;\n    for (var i = 1; i < l; i++) {\n        if (values[i] > max) max = values[i];\n    }\n    return max;\n};\n\n/**\n * Computes the minimum of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.min = function min(values) {\n    var min = values[0];\n    var l = values.length;\n    for (var i = 1; i < l; i++) {\n        if (values[i] < min) min = values[i];\n    }\n    return min;\n};\n\n/**\n * Computes the min and max of the given values\n * @param {Array} values\n * @returns {{min: number, max: number}}\n */\nexports.minMax = function minMax(values) {\n    var min = values[0];\n    var max = values[0];\n    var l = values.length;\n    for (var i = 1; i < l; i++) {\n        if (values[i] < min) min = values[i];\n        if (values[i] > max) max = values[i];\n    }\n    return {\n        min: min,\n        max: max\n    };\n};\n\n/**\n * Computes the arithmetic mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.arithmeticMean = function arithmeticMean(values) {\n    var sum = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        sum += values[i];\n    }\n    return sum / l;\n};\n\n/**\n * {@link arithmeticMean}\n */\nexports.mean = exports.arithmeticMean;\n\n/**\n * Computes the geometric mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.geometricMean = function geometricMean(values) {\n    var mul = 1;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        mul *= values[i];\n    }\n    return Math.pow(mul, 1 / l);\n};\n\n/**\n * Computes the mean of the log of the given values\n * If the return value is exponentiated, it gives the same result as the\n * geometric mean.\n * @param {Array} values\n * @returns {number}\n */\nexports.logMean = function logMean(values) {\n    var lnsum = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        lnsum += Math.log(values[i]);\n    }\n    return lnsum / l;\n};\n\n/**\n * Computes the weighted grand mean for a list of means and sample sizes\n * @param {Array} means - Mean values for each set of samples\n * @param {Array} samples - Number of original values for each set of samples\n * @returns {number}\n */\nexports.grandMean = function grandMean(means, samples) {\n    var sum = 0;\n    var n = 0;\n    var l = means.length;\n    for (var i = 0; i < l; i++) {\n        sum += samples[i] * means[i];\n        n += samples[i];\n    }\n    return sum / n;\n};\n\n/**\n * Computes the truncated mean of the given values using a given percentage\n * @param {Array} values\n * @param {number} percent - The percentage of values to keep (range: [0,1])\n * @param {boolean} [alreadySorted=false]\n * @returns {number}\n */\nexports.truncatedMean = function truncatedMean(values, percent, alreadySorted) {\n    if (alreadySorted === undefined) alreadySorted = false;\n    if (!alreadySorted) {\n        values = [].concat(values).sort(compareNumbers);\n    }\n    var l = values.length;\n    var k = Math.floor(l * percent);\n    var sum = 0;\n    for (var i = k; i < (l - k); i++) {\n        sum += values[i];\n    }\n    return sum / (l - 2 * k);\n};\n\n/**\n * Computes the harmonic mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.harmonicMean = function harmonicMean(values) {\n    var sum = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        if (values[i] === 0) {\n            throw new RangeError('value at index ' + i + 'is zero');\n        }\n        sum += 1 / values[i];\n    }\n    return l / sum;\n};\n\n/**\n * Computes the contraharmonic mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.contraHarmonicMean = function contraHarmonicMean(values) {\n    var r1 = 0;\n    var r2 = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        r1 += values[i] * values[i];\n        r2 += values[i];\n    }\n    if (r2 < 0) {\n        throw new RangeError('sum of values is negative');\n    }\n    return r1 / r2;\n};\n\n/**\n * Computes the median of the given values\n * @param {Array} values\n * @param {boolean} [alreadySorted=false]\n * @returns {number}\n */\nexports.median = function median(values, alreadySorted) {\n    if (alreadySorted === undefined) alreadySorted = false;\n    if (!alreadySorted) {\n        values = [].concat(values).sort(compareNumbers);\n    }\n    var l = values.length;\n    var half = Math.floor(l / 2);\n    if (l % 2 === 0) {\n        return (values[half - 1] + values[half]) * 0.5;\n    } else {\n        return values[half];\n    }\n};\n\n/**\n * Computes the variance of the given values\n * @param {Array} values\n * @param {boolean} [unbiased=true] - if true, divide by (n-1); if false, divide by n.\n * @returns {number}\n */\nexports.variance = function variance(values, unbiased) {\n    if (unbiased === undefined) unbiased = true;\n    var theMean = exports.mean(values);\n    var theVariance = 0;\n    var l = values.length;\n\n    for (var i = 0; i < l; i++) {\n        var x = values[i] - theMean;\n        theVariance += x * x;\n    }\n\n    if (unbiased) {\n        return theVariance / (l - 1);\n    } else {\n        return theVariance / l;\n    }\n};\n\n/**\n * Computes the standard deviation of the given values\n * @param {Array} values\n * @param {boolean} [unbiased=true] - if true, divide by (n-1); if false, divide by n.\n * @returns {number}\n */\nexports.standardDeviation = function standardDeviation(values, unbiased) {\n    return Math.sqrt(exports.variance(values, unbiased));\n};\n\nexports.standardError = function standardError(values) {\n    return exports.standardDeviation(values) / Math.sqrt(values.length);\n};\n\n/**\n * IEEE Transactions on biomedical engineering, vol. 52, no. 1, january 2005, p. 76-\n * Calculate the standard deviation via the Median of the absolute deviation\n *  The formula for the standard deviation only holds for Gaussian random variables.\n * @returns {{mean: number, stdev: number}}\n */\nexports.robustMeanAndStdev = function robustMeanAndStdev(y) {\n    var mean = 0, stdev = 0;\n    var length = y.length, i = 0;\n    for (i = 0; i < length; i++) {\n        mean += y[i];\n    }\n    mean /= length;\n    var averageDeviations = new Array(length);\n    for (i = 0; i < length; i++)\n        averageDeviations[i] = Math.abs(y[i] - mean);\n    averageDeviations.sort(compareNumbers);\n    if (length % 2 === 1) {\n        stdev = averageDeviations[(length - 1) / 2] / 0.6745;\n    } else {\n        stdev = 0.5 * (averageDeviations[length / 2] + averageDeviations[length / 2 - 1]) / 0.6745;\n    }\n\n    return {\n        mean: mean,\n        stdev: stdev\n    };\n};\n\nexports.quartiles = function quartiles(values, alreadySorted) {\n    if (typeof (alreadySorted) === 'undefined') alreadySorted = false;\n    if (!alreadySorted) {\n        values = [].concat(values).sort(compareNumbers);\n    }\n\n    var quart = values.length / 4;\n    var q1 = values[Math.ceil(quart) - 1];\n    var q2 = exports.median(values, true);\n    var q3 = values[Math.ceil(quart * 3) - 1];\n\n    return {q1: q1, q2: q2, q3: q3};\n};\n\nexports.pooledStandardDeviation = function pooledStandardDeviation(samples, unbiased) {\n    return Math.sqrt(exports.pooledVariance(samples, unbiased));\n};\n\nexports.pooledVariance = function pooledVariance(samples, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var sum = 0;\n    var length = 0, l = samples.length;\n    for (var i = 0; i < l; i++) {\n        var values = samples[i];\n        var vari = exports.variance(values);\n\n        sum += (values.length - 1) * vari;\n\n        if (unbiased)\n            length += values.length - 1;\n        else\n            length += values.length;\n    }\n    return sum / length;\n};\n\nexports.mode = function mode(values) {\n    var l = values.length,\n        itemCount = new Array(l),\n        i;\n    for (i = 0; i < l; i++) {\n        itemCount[i] = 0;\n    }\n    var itemArray = new Array(l);\n    var count = 0;\n\n    for (i = 0; i < l; i++) {\n        var index = itemArray.indexOf(values[i]);\n        if (index >= 0)\n            itemCount[index]++;\n        else {\n            itemArray[count] = values[i];\n            itemCount[count] = 1;\n            count++;\n        }\n    }\n\n    var maxValue = 0, maxIndex = 0;\n    for (i = 0; i < count; i++) {\n        if (itemCount[i] > maxValue) {\n            maxValue = itemCount[i];\n            maxIndex = i;\n        }\n    }\n\n    return itemArray[maxIndex];\n};\n\nexports.covariance = function covariance(vector1, vector2, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var mean1 = exports.mean(vector1);\n    var mean2 = exports.mean(vector2);\n\n    if (vector1.length !== vector2.length)\n        throw 'Vectors do not have the same dimensions';\n\n    var cov = 0, l = vector1.length;\n    for (var i = 0; i < l; i++) {\n        var x = vector1[i] - mean1;\n        var y = vector2[i] - mean2;\n        cov += x * y;\n    }\n\n    if (unbiased)\n        return cov / (l - 1);\n    else\n        return cov / l;\n};\n\nexports.skewness = function skewness(values, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var theMean = exports.mean(values);\n\n    var s2 = 0, s3 = 0, l = values.length;\n    for (var i = 0; i < l; i++) {\n        var dev = values[i] - theMean;\n        s2 += dev * dev;\n        s3 += dev * dev * dev;\n    }\n    var m2 = s2 / l;\n    var m3 = s3 / l;\n\n    var g = m3 / (Math.pow(m2, 3 / 2.0));\n    if (unbiased) {\n        var a = Math.sqrt(l * (l - 1));\n        var b = l - 2;\n        return (a / b) * g;\n    } else {\n        return g;\n    }\n};\n\nexports.kurtosis = function kurtosis(values, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var theMean = exports.mean(values);\n    var n = values.length, s2 = 0, s4 = 0;\n\n    for (var i = 0; i < n; i++) {\n        var dev = values[i] - theMean;\n        s2 += dev * dev;\n        s4 += dev * dev * dev * dev;\n    }\n    var m2 = s2 / n;\n    var m4 = s4 / n;\n\n    if (unbiased) {\n        var v = s2 / (n - 1);\n        var a = (n * (n + 1)) / ((n - 1) * (n - 2) * (n - 3));\n        var b = s4 / (v * v);\n        var c = ((n - 1) * (n - 1)) / ((n - 2) * (n - 3));\n\n        return a * b - 3 * c;\n    } else {\n        return m4 / (m2 * m2) - 3;\n    }\n};\n\nexports.entropy = function entropy(values, eps) {\n    if (typeof (eps) === 'undefined') eps = 0;\n    var sum = 0, l = values.length;\n    for (var i = 0; i < l; i++)\n        sum += values[i] * Math.log(values[i] + eps);\n    return -sum;\n};\n\nexports.weightedMean = function weightedMean(values, weights) {\n    var sum = 0, l = values.length;\n    for (var i = 0; i < l; i++)\n        sum += values[i] * weights[i];\n    return sum;\n};\n\nexports.weightedStandardDeviation = function weightedStandardDeviation(values, weights) {\n    return Math.sqrt(exports.weightedVariance(values, weights));\n};\n\nexports.weightedVariance = function weightedVariance(values, weights) {\n    var theMean = exports.weightedMean(values, weights);\n    var vari = 0, l = values.length;\n    var a = 0, b = 0;\n\n    for (var i = 0; i < l; i++) {\n        var z = values[i] - theMean;\n        var w = weights[i];\n\n        vari += w * (z * z);\n        b += w;\n        a += w * w;\n    }\n\n    return vari * (b / (b * b - a));\n};\n\nexports.center = function center(values, inPlace) {\n    if (typeof (inPlace) === 'undefined') inPlace = false;\n\n    var result = values;\n    if (!inPlace)\n        result = [].concat(values);\n\n    var theMean = exports.mean(result), l = result.length;\n    for (var i = 0; i < l; i++)\n        result[i] -= theMean;\n};\n\nexports.standardize = function standardize(values, standardDev, inPlace) {\n    if (typeof (standardDev) === 'undefined') standardDev = exports.standardDeviation(values);\n    if (typeof (inPlace) === 'undefined') inPlace = false;\n    var l = values.length;\n    var result = inPlace ? values : new Array(l);\n    for (var i = 0; i < l; i++)\n        result[i] = values[i] / standardDev;\n    return result;\n};\n\nexports.cumulativeSum = function cumulativeSum(array) {\n    var l = array.length;\n    var result = new Array(l);\n    result[0] = array[0];\n    for (var i = 1; i < l; i++)\n        result[i] = result[i - 1] + array[i];\n    return result;\n};\n","import { airPLSBaseline, rollingAverageBaseline, iterativePolynomialBaseline, rollingBallBaseline, rollingMedianBaseline, } from 'baselines';\nimport max from 'ml-array-max';\nimport min from 'ml-array-min';\nimport normed from 'ml-array-normed';\nimport rescale from 'ml-array-rescale';\nimport equallySpaced from 'ml-array-xy-equally-spaced';\nimport filterX from 'ml-array-xy-filter-x';\nimport savitzkyGolay from 'ml-savitzky-golay';\nimport { xDivide, xSubtract, xMultiply, xAdd, xIsMonotone, xyEnsureGrowingX, } from 'ml-spectra-processing';\nimport Stat from 'ml-stat/array';\nexport function getNormalizedSpectrum(spectrum, options = {}) {\n    var _a;\n    let data = {\n        x: spectrum.variables.x.data,\n        y: spectrum.variables.y.data,\n    };\n    let newSpectrum = {\n        variables: {\n            x: {\n                data: spectrum.variables.x.data,\n                units: spectrum.variables.x.units,\n                label: spectrum.variables.x.label,\n            },\n            y: {\n                data: spectrum.variables.y.data,\n                units: spectrum.variables.y.units,\n                label: spectrum.variables.y.label,\n            },\n        },\n    };\n    if (spectrum.title)\n        newSpectrum.title = spectrum.title;\n    if (spectrum.dataType)\n        newSpectrum.dataType = spectrum.dataType;\n    if (spectrum.meta)\n        newSpectrum.meta = spectrum.meta;\n    let { from = spectrum.variables.x.min, to = spectrum.variables.x.max, numberOfPoints, filters = [], exclusions = [], processing = '', keepYUnits = false, } = options;\n    let { x, y } = filterX(data, { from, to });\n    switch (processing) {\n        case 'firstDerivative':\n            if (options.processing) {\n                newSpectrum.variables.y.units = '';\n                newSpectrum.variables.y.label =\n                    newSpectrum.variables.y.label &&\n                        `1st derivative of ${newSpectrum.variables.y.label.replace(/\\s*\\[.*\\]/, '')}`;\n                y = savitzkyGolay(y, 1, {\n                    derivative: 1,\n                    polynomial: 2,\n                    windowSize: 5,\n                });\n                x = x.slice(2, x.length - 2);\n            }\n            break;\n        case 'secondDerivative':\n            if (options.processing) {\n                newSpectrum.variables.y.units = '';\n                newSpectrum.variables.y.label =\n                    newSpectrum.variables.y.label &&\n                        `2nd derivative of ${newSpectrum.variables.y.label.replace(/\\s*\\[.*\\]/, '')}`;\n                y = savitzkyGolay(y, 1, {\n                    derivative: 2,\n                    polynomial: 2,\n                    windowSize: 5,\n                });\n                x = x.slice(2, x.length - 2);\n            }\n            break;\n        case 'thirdDerivative':\n            if (options.processing) {\n                newSpectrum.variables.y.units = '';\n                newSpectrum.variables.y.label =\n                    newSpectrum.variables.y.label &&\n                        `3rd derivative of ${newSpectrum.variables.y.label.replace(/\\s*\\[.*\\]/, '')}`;\n                y = savitzkyGolay(y, 1, {\n                    derivative: 3,\n                    polynomial: 2,\n                    windowSize: 5,\n                });\n                x = x.slice(2, x.length - 2);\n            }\n            break;\n        default:\n    }\n    if (!keepYUnits && filters.length) {\n        // filters change the y axis, we get rid of the units\n        newSpectrum.variables.y.units = '';\n        newSpectrum.variables.y.label = (_a = newSpectrum.variables.y.label) === null || _a === void 0 ? void 0 : _a.replace(/\\s*\\[.*\\]/, '');\n    }\n    for (let filter of filters) {\n        let filterOptions = filter.options || {};\n        switch (filter.name.toLowerCase()) {\n            case 'centermean': {\n                let mean = Stat.mean(y);\n                y = xSubtract(y, mean);\n                break;\n            }\n            case 'dividebysd': {\n                let std = Stat.standardDeviation(y);\n                y = xDivide(y, std);\n                break;\n            }\n            case 'normalize': {\n                y = normed(y, {\n                    sumValue: filterOptions.value ? Number(filterOptions.value) : 1,\n                    algorithm: 'absolute',\n                });\n                break;\n            }\n            case 'rescale': {\n                y = rescale(y, {\n                    min: filterOptions.min ? Number(filterOptions.min) : 0,\n                    max: filterOptions.max ? Number(filterOptions.max) : 1,\n                });\n                break;\n            }\n            case 'dividebymax': {\n                let maxValue = max(y);\n                y = xDivide(y, maxValue);\n                break;\n            }\n            case 'multiply': {\n                y = xMultiply(y, filterOptions.value ? Number(filterOptions.value) : 1);\n                break;\n            }\n            case 'add': {\n                y = xAdd(y, filterOptions.value ? Number(filterOptions.value) : 0);\n                break;\n            }\n            case 'airplsbaseline': {\n                y = airPLSBaseline(y, filterOptions).correctedSpectrum;\n                break;\n            }\n            case 'rollingaveragebaseline': {\n                y = rollingAverageBaseline(y, filterOptions).correctedSpectrum;\n                break;\n            }\n            case 'iterativepolynomialbaseline': {\n                y = iterativePolynomialBaseline(y, undefined, filterOptions).correctedSpectrum;\n                break;\n            }\n            case 'rollingballbaseline': {\n                y = rollingBallBaseline(y, filterOptions).correctedSpectrum;\n                break;\n            }\n            case 'rollingmedianbaseline': {\n                y = rollingMedianBaseline(y, filterOptions).correctedSpectrum;\n                break;\n            }\n            case 'ensuregrowing': {\n                const ans = xyEnsureGrowingX({ x, y });\n                x = ans.x;\n                y = ans.y;\n                break;\n            }\n            case '':\n            case undefined:\n                break;\n            default:\n                throw new Error(`Unknown process kind: ${filter.name}`);\n        }\n    }\n    if (!numberOfPoints) {\n        data = filterX({ x, y }, { from, to, exclusions });\n    }\n    else {\n        data = equallySpaced({ x, y }, { from, to, numberOfPoints, exclusions });\n    }\n    newSpectrum.variables.x.data = x;\n    newSpectrum.variables.x.min = min(x);\n    newSpectrum.variables.x.max = max(x);\n    newSpectrum.variables.x.isMonotone = xIsMonotone(x);\n    newSpectrum.variables.y.data = y;\n    newSpectrum.variables.y.min = min(y);\n    newSpectrum.variables.y.max = max(y);\n    newSpectrum.variables.y.isMonotone = xIsMonotone(y);\n    return newSpectrum;\n}\n//# sourceMappingURL=data:application/json;base64,","/*\nThe MIT License (MIT)\nCopyright © 2006-2007 Kevin C. Olbrich\nCopyright © 2010-2016 LIM SAS (http://lim.eu) - Julien Sanchez\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\nof the Software, and to permit persons to whom the Software is furnished to do\nso, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n*/\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.Qty = factory());\n}(this, (function () { 'use strict';\n\n  /**\n   * Tests if a value is a string\n   *\n   * @param {*} value - Value to test\n   *\n   * @returns {boolean} true if value is a string, false otherwise\n   */\n  function isString(value) {\n    return typeof value === \"string\" || value instanceof String;\n  }\n\n  /*\n   * Prefer stricter Number.isFinite if currently supported.\n   * To be dropped when ES6 is finalized. Obsolete browsers will\n   * have to use ES6 polyfills.\n   */\n  var isFiniteImpl = Number.isFinite || window.isFinite;\n  /**\n   * Tests if a value is a number\n   *\n   * @param {*} value - Value to test\n   *\n   * @returns {boolean} true if value is a number, false otherwise\n   */\n  function isNumber(value) {\n    // Number.isFinite allows not to consider NaN or '1' as numbers\n    return isFiniteImpl(value);\n  }\n\n  /*\n   * Identity function\n   */\n  function identity(value) {\n    return value;\n  }\n\n  /**\n   * Returns unique strings from list\n   *\n   * @param {string[]} strings - array of strings\n   *\n   *\n   * @returns {string[]} a new array of strings without duplicates\n   */\n  function uniq(strings) {\n    var seen = {};\n    return strings.filter(function(item) {\n      return seen.hasOwnProperty(item) ? false : (seen[item] = true);\n    });\n  }\n\n  function compareArray(array1, array2) {\n    if (array2.length !== array1.length) {\n      return false;\n    }\n    for (var i = 0; i < array1.length; i++) {\n      if (array2[i].compareArray) {\n        if (!array2[i].compareArray(array1[i])) {\n          return false;\n        }\n      }\n      if (array2[i] !== array1[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  function assign(target, properties) {\n    Object.keys(properties).forEach(function(key) {\n      target[key] = properties[key];\n    });\n  }\n\n  /**\n   * Safely multiplies numbers while avoiding floating errors\n   * like 0.1 * 0.1 => 0.010000000000000002\n   *\n   * @param {...number} numbers - numbers to multiply\n   *\n   * @returns {number} result\n   */\n  function mulSafe() {\n    var result = 1, decimals = 0;\n    for (var i = 0; i < arguments.length; i++) {\n      var arg = arguments[i];\n      decimals = decimals + getFractional(arg);\n      result *= arg;\n    }\n\n    return decimals !== 0 ? round(result, decimals) : result;\n  }\n\n  /**\n   * Safely divides two numbers while avoiding floating errors\n   * like 0.3 / 0.05 => 5.999999999999999\n   *\n   * @returns {number} result\n   * @param {number} num Numerator\n   * @param {number} den Denominator\n   */\n  function divSafe(num, den) {\n    if (den === 0) {\n      throw new Error(\"Divide by zero\");\n    }\n\n    var factor = Math.pow(10, getFractional(den));\n    var invDen = factor / (factor * den);\n\n    return mulSafe(num, invDen);\n  }\n\n  /**\n   * Rounds value at the specified number of decimals\n   *\n   * @param {number} val - value to round\n   * @param {number} decimals - number of decimals\n   *\n   * @returns {number} rounded number\n   */\n  function round(val, decimals) {\n    return Math.round(val * Math.pow(10, decimals)) / Math.pow(10, decimals);\n  }\n\n  function getFractional(num) {\n    // Check for NaNs or Infinities\n    if (!isFinite(num)) {\n      return 0;\n    }\n\n    // Faster than parsing strings\n    // http://jsperf.com/count-decimals/2\n    var count = 0;\n    while (num % 1 !== 0) {\n      num *= 10;\n      count++;\n    }\n    return count;\n  }\n\n  /**\n   * Custom error type definition\n   * @constructor\n   */\n  function QtyError() {\n    var err;\n    if (!this) { // Allows to instantiate QtyError without new()\n      err = Object.create(QtyError.prototype);\n      QtyError.apply(err, arguments);\n      return err;\n    }\n    err = Error.apply(this, arguments);\n    this.name = \"QtyError\";\n    this.message = err.message;\n    this.stack = err.stack;\n  }\n  QtyError.prototype = Object.create(Error.prototype, {constructor: { value: QtyError }});\n\n  /*\n   * Throws incompatible units error\n   * @param {string} left - units\n   * @param {string} right - units incompatible with first argument\n   * @throws \"Incompatible units\" error\n   */\n  function throwIncompatibleUnits(left, right) {\n    throw new QtyError(\"Incompatible units: \" + left + \" and \" + right);\n  }\n\n  var UNITS = {\n    /* prefixes */\n    \"<googol>\" : [[\"googol\"], 1e100, \"prefix\"],\n    \"<kibi>\"  :  [[\"Ki\",\"Kibi\",\"kibi\"], Math.pow(2,10), \"prefix\"],\n    \"<mebi>\"  :  [[\"Mi\",\"Mebi\",\"mebi\"], Math.pow(2,20), \"prefix\"],\n    \"<gibi>\"  :  [[\"Gi\",\"Gibi\",\"gibi\"], Math.pow(2,30), \"prefix\"],\n    \"<tebi>\"  :  [[\"Ti\",\"Tebi\",\"tebi\"], Math.pow(2,40), \"prefix\"],\n    \"<pebi>\"  :  [[\"Pi\",\"Pebi\",\"pebi\"], Math.pow(2,50), \"prefix\"],\n    \"<exi>\"   :  [[\"Ei\",\"Exi\",\"exi\"], Math.pow(2,60), \"prefix\"],\n    \"<zebi>\"  :  [[\"Zi\",\"Zebi\",\"zebi\"], Math.pow(2,70), \"prefix\"],\n    \"<yebi>\"  :  [[\"Yi\",\"Yebi\",\"yebi\"], Math.pow(2,80), \"prefix\"],\n    \"<yotta>\" :  [[\"Y\",\"Yotta\",\"yotta\"], 1e24, \"prefix\"],\n    \"<zetta>\" :  [[\"Z\",\"Zetta\",\"zetta\"], 1e21, \"prefix\"],\n    \"<exa>\"   :  [[\"E\",\"Exa\",\"exa\"], 1e18, \"prefix\"],\n    \"<peta>\"  :  [[\"P\",\"Peta\",\"peta\"], 1e15, \"prefix\"],\n    \"<tera>\"  :  [[\"T\",\"Tera\",\"tera\"], 1e12, \"prefix\"],\n    \"<giga>\"  :  [[\"G\",\"Giga\",\"giga\"], 1e9, \"prefix\"],\n    \"<mega>\"  :  [[\"M\",\"Mega\",\"mega\"], 1e6, \"prefix\"],\n    \"<kilo>\"  :  [[\"k\",\"kilo\"], 1e3, \"prefix\"],\n    \"<hecto>\" :  [[\"h\",\"Hecto\",\"hecto\"], 1e2, \"prefix\"],\n    \"<deca>\"  :  [[\"da\",\"Deca\",\"deca\",\"deka\"], 1e1, \"prefix\"],\n    \"<deci>\"  :  [[\"d\",\"Deci\",\"deci\"], 1e-1, \"prefix\"],\n    \"<centi>\"  : [[\"c\",\"Centi\",\"centi\"], 1e-2, \"prefix\"],\n    \"<milli>\" :  [[\"m\",\"Milli\",\"milli\"], 1e-3, \"prefix\"],\n    \"<micro>\"  : [\n      [\"u\",\"\\u03BC\"/*µ as greek letter*/,\"\\u00B5\"/*µ as micro sign*/,\"Micro\",\"mc\",\"micro\"],\n      1e-6,\n      \"prefix\"\n    ],\n    \"<nano>\"  :  [[\"n\",\"Nano\",\"nano\"], 1e-9, \"prefix\"],\n    \"<pico>\"  :  [[\"p\",\"Pico\",\"pico\"], 1e-12, \"prefix\"],\n    \"<femto>\" :  [[\"f\",\"Femto\",\"femto\"], 1e-15, \"prefix\"],\n    \"<atto>\"  :  [[\"a\",\"Atto\",\"atto\"], 1e-18, \"prefix\"],\n    \"<zepto>\" :  [[\"z\",\"Zepto\",\"zepto\"], 1e-21, \"prefix\"],\n    \"<yocto>\" :  [[\"y\",\"Yocto\",\"yocto\"], 1e-24, \"prefix\"],\n\n    \"<1>\"     :  [[\"1\", \"<1>\"], 1, \"\"],\n    /* length units */\n    \"<meter>\" :  [[\"m\",\"meter\",\"meters\",\"metre\",\"metres\"], 1.0, \"length\", [\"<meter>\"] ],\n    \"<inch>\"  :  [[\"in\",\"inch\",\"inches\",\"\\\"\"], 0.0254, \"length\", [\"<meter>\"]],\n    \"<foot>\"  :  [[\"ft\",\"foot\",\"feet\",\"'\"], 0.3048, \"length\", [\"<meter>\"]],\n    \"<yard>\"  :  [[\"yd\",\"yard\",\"yards\"], 0.9144, \"length\", [\"<meter>\"]],\n    \"<mile>\"  :  [[\"mi\",\"mile\",\"miles\"], 1609.344, \"length\", [\"<meter>\"]],\n    \"<naut-mile>\" : [[\"nmi\",\"naut-mile\"], 1852, \"length\", [\"<meter>\"]],\n    \"<league>\":  [[\"league\",\"leagues\"], 4828, \"length\", [\"<meter>\"]],\n    \"<furlong>\": [[\"furlong\",\"furlongs\"], 201.2, \"length\", [\"<meter>\"]],\n    \"<rod>\"   :  [[\"rd\",\"rod\",\"rods\"], 5.029, \"length\", [\"<meter>\"]],\n    \"<mil>\"   :  [[\"mil\",\"mils\"], 0.0000254, \"length\", [\"<meter>\"]],\n    \"<angstrom>\"  :[[\"ang\",\"angstrom\",\"angstroms\"], 1e-10, \"length\", [\"<meter>\"]],\n    \"<fathom>\" : [[\"fathom\",\"fathoms\"], 1.829, \"length\", [\"<meter>\"]],\n    \"<pica>\"  : [[\"pica\",\"picas\"], 0.00423333333, \"length\", [\"<meter>\"]],\n    \"<point>\" : [[\"pt\",\"point\",\"points\"], 0.000352777778, \"length\", [\"<meter>\"]],\n    \"<redshift>\" : [[\"z\",\"red-shift\", \"redshift\"], 1.302773e26, \"length\", [\"<meter>\"]],\n    \"<AU>\"    : [[\"AU\",\"astronomical-unit\"], 149597900000, \"length\", [\"<meter>\"]],\n    \"<light-second>\":[[\"ls\",\"light-second\"], 299792500, \"length\", [\"<meter>\"]],\n    \"<light-minute>\":[[\"lmin\",\"light-minute\"], 17987550000, \"length\", [\"<meter>\"]],\n    \"<light-year>\" : [[\"ly\",\"light-year\"], 9460528000000000, \"length\", [\"<meter>\"]],\n    \"<parsec>\"  : [[\"pc\",\"parsec\",\"parsecs\"], 30856780000000000, \"length\", [\"<meter>\"]],\n    \"<datamile>\"  :  [[\"DM\",\"datamile\"], 1828.8, \"length\", [\"<meter>\"]],\n\n    /* mass */\n    \"<kilogram>\" : [[\"kg\",\"kilogram\",\"kilograms\"], 1.0, \"mass\", [\"<kilogram>\"]],\n    \"<AMU>\" : [[\"u\",\"AMU\",\"amu\"], 1.660538921e-27, \"mass\", [\"<kilogram>\"]],\n    \"<dalton>\" : [[\"Da\",\"Dalton\",\"Daltons\",\"dalton\",\"daltons\"], 1.660538921e-27, \"mass\", [\"<kilogram>\"]],\n    \"<slug>\" : [[\"slug\",\"slugs\"], 14.5939029, \"mass\", [\"<kilogram>\"]],\n    \"<short-ton>\" : [[\"tn\",\"ton\",\"short-ton\"], 907.18474, \"mass\", [\"<kilogram>\"]],\n    \"<metric-ton>\":[[\"tonne\",\"metric-ton\"], 1000, \"mass\", [\"<kilogram>\"]],\n    \"<carat>\" : [[\"ct\",\"carat\",\"carats\"], 0.0002, \"mass\", [\"<kilogram>\"]],\n    \"<pound>\" : [[\"lbs\",\"lb\",\"pound\",\"pounds\",\"#\"], 0.45359237, \"mass\", [\"<kilogram>\"]],\n    \"<ounce>\" : [[\"oz\",\"ounce\",\"ounces\"], 0.0283495231, \"mass\", [\"<kilogram>\"]],\n    \"<gram>\"    :  [[\"g\",\"gram\",\"grams\",\"gramme\",\"grammes\"], 1e-3, \"mass\", [\"<kilogram>\"]],\n    \"<grain>\" : [[\"grain\",\"grains\",\"gr\"], 6.479891e-5, \"mass\", [\"<kilogram>\"]],\n    \"<dram>\"  : [[\"dram\",\"drams\",\"dr\"], 0.0017718452, \"mass\",[\"<kilogram>\"]],\n    \"<stone>\" : [[\"stone\",\"stones\",\"st\"],6.35029318, \"mass\",[\"<kilogram>\"]],\n\n    /* area */\n    \"<hectare>\":[[\"hectare\"], 10000, \"area\", [\"<meter>\",\"<meter>\"]],\n    \"<acre>\":[[\"acre\",\"acres\"], 4046.85642, \"area\", [\"<meter>\",\"<meter>\"]],\n    \"<sqft>\":[[\"sqft\"], 1, \"area\", [\"<foot>\",\"<foot>\"]],\n\n    /* volume */\n    \"<liter>\" : [[\"l\",\"L\",\"liter\",\"liters\",\"litre\",\"litres\"], 0.001, \"volume\", [\"<meter>\",\"<meter>\",\"<meter>\"]],\n    \"<gallon>\":  [[\"gal\",\"gallon\",\"gallons\"], 0.0037854118, \"volume\", [\"<meter>\",\"<meter>\",\"<meter>\"]],\n    \"<gallon-imp>\":  [[\"galimp\",\"gallon-imp\",\"gallons-imp\"], 0.0045460900, \"volume\", [\"<meter>\",\"<meter>\",\"<meter>\"]],\n    \"<quart>\":  [[\"qt\",\"quart\",\"quarts\"], 0.00094635295, \"volume\", [\"<meter>\",\"<meter>\",\"<meter>\"]],\n    \"<pint>\":  [[\"pt\",\"pint\",\"pints\"], 0.000473176475, \"volume\", [\"<meter>\",\"<meter>\",\"<meter>\"]],\n    \"<pint-imp>\":  [[\"ptimp\",\"pint-imp\",\"pints-imp\"], 5.6826125e-4, \"volume\", [\"<meter>\",\"<meter>\",\"<meter>\"]],\n    \"<cup>\":  [[\"cu\",\"cup\",\"cups\"], 0.000236588238, \"volume\", [\"<meter>\",\"<meter>\",\"<meter>\"]],\n    \"<fluid-ounce>\":  [[\"floz\",\"fluid-ounce\",\"fluid-ounces\"], 2.95735297e-5, \"volume\", [\"<meter>\",\"<meter>\",\"<meter>\"]],\n    \"<fluid-ounce-imp>\":  [[\"flozimp\", \"floz-imp\",\"fluid-ounce-imp\",\"fluid-ounces-imp\"], 2.84130625e-5, \"volume\", [\"<meter>\",\"<meter>\",\"<meter>\"]],\n    \"<tablespoon>\":  [[\"tb\",\"tbsp\",\"tbs\",\"tablespoon\",\"tablespoons\"], 1.47867648e-5, \"volume\", [\"<meter>\",\"<meter>\",\"<meter>\"]],\n    \"<teaspoon>\":  [[\"tsp\",\"teaspoon\",\"teaspoons\"], 4.92892161e-6, \"volume\", [\"<meter>\",\"<meter>\",\"<meter>\"]],\n    \"<bushel>\":  [[\"bu\",\"bsh\",\"bushel\",\"bushels\"], 0.035239072, \"volume\", [\"<meter>\",\"<meter>\",\"<meter>\"]],\n    \"<oilbarrel>\":  [[\"bbl\",\"oilbarrel\", \"oilbarrels\", \"oil-barrel\",\"oil-barrels\"], 0.158987294928, \"volume\", [\"<meter>\",\"<meter>\",\"<meter>\"]],\n    \"<beerbarrel>\":  [[\"bl\",\"bl-us\",\"beerbarrel\", \"beerbarrels\", \"beer-barrel\",\"beer-barrels\"], 0.1173477658, \"volume\", [\"<meter>\",\"<meter>\",\"<meter>\"]],\n    \"<beerbarrel-imp>\":  [[\"blimp\",\"bl-imp\",\"beerbarrel-imp\", \"beerbarrels-imp\", \"beer-barrel-imp\",\"beer-barrels-imp\"], 0.16365924, \"volume\", [\"<meter>\",\"<meter>\",\"<meter>\"]],\n\n    /* speed */\n    \"<kph>\" : [[\"kph\"], 0.277777778, \"speed\", [\"<meter>\"], [\"<second>\"]],\n    \"<mph>\" : [[\"mph\"], 0.44704, \"speed\", [\"<meter>\"], [\"<second>\"]],\n    \"<knot>\" : [[\"kt\",\"kn\",\"kts\",\"knot\",\"knots\"], 0.514444444, \"speed\", [\"<meter>\"], [\"<second>\"]],\n    \"<fps>\"  : [[\"fps\"], 0.3048, \"speed\", [\"<meter>\"], [\"<second>\"]],\n\n    /* acceleration */\n    \"<gee>\" : [[\"gee\"], 9.80665, \"acceleration\", [\"<meter>\"], [\"<second>\",\"<second>\"]],\n    \"<Gal>\" : [[\"Gal\"], 1e-2, \"acceleration\", [\"<meter>\"], [\"<second>\",\"<second>\"]],\n\n    /* temperature_difference */\n    \"<kelvin>\" : [[\"degK\",\"kelvin\"], 1.0, \"temperature\", [\"<kelvin>\"]],\n    \"<celsius>\" : [[\"degC\",\"celsius\",\"celsius\",\"centigrade\"], 1.0, \"temperature\", [\"<kelvin>\"]],\n    \"<fahrenheit>\" : [[\"degF\",\"fahrenheit\"], 5 / 9, \"temperature\", [\"<kelvin>\"]],\n    \"<rankine>\" : [[\"degR\",\"rankine\"], 5 / 9, \"temperature\", [\"<kelvin>\"]],\n    \"<temp-K>\"  : [[\"tempK\",\"temp-K\"], 1.0, \"temperature\", [\"<temp-K>\"]],\n    \"<temp-C>\"  : [[\"tempC\",\"temp-C\"], 1.0, \"temperature\", [\"<temp-K>\"]],\n    \"<temp-F>\"  : [[\"tempF\",\"temp-F\"], 5 / 9, \"temperature\", [\"<temp-K>\"]],\n    \"<temp-R>\"  : [[\"tempR\",\"temp-R\"], 5 / 9, \"temperature\", [\"<temp-K>\"]],\n\n    /* time */\n    \"<second>\":  [[\"s\",\"sec\",\"secs\",\"second\",\"seconds\"], 1.0, \"time\", [\"<second>\"]],\n    \"<minute>\":  [[\"min\",\"mins\",\"minute\",\"minutes\"], 60.0, \"time\", [\"<second>\"]],\n    \"<hour>\":  [[\"h\",\"hr\",\"hrs\",\"hour\",\"hours\"], 3600.0, \"time\", [\"<second>\"]],\n    \"<day>\":  [[\"d\",\"day\",\"days\"], 3600 * 24, \"time\", [\"<second>\"]],\n    \"<week>\":  [[\"wk\",\"week\",\"weeks\"], 7 * 3600 * 24, \"time\", [\"<second>\"]],\n    \"<fortnight>\": [[\"fortnight\",\"fortnights\"], 1209600, \"time\", [\"<second>\"]],\n    \"<year>\":  [[\"y\",\"yr\",\"year\",\"years\",\"annum\"], 31556926, \"time\", [\"<second>\"]],\n    \"<decade>\":[[\"decade\",\"decades\"], 315569260, \"time\", [\"<second>\"]],\n    \"<century>\":[[\"century\",\"centuries\"], 3155692600, \"time\", [\"<second>\"]],\n\n    /* pressure */\n    \"<pascal>\" : [[\"Pa\",\"pascal\",\"Pascal\"], 1.0, \"pressure\", [\"<kilogram>\"],[\"<meter>\",\"<second>\",\"<second>\"]],\n    \"<bar>\" : [[\"bar\",\"bars\"], 100000, \"pressure\", [\"<kilogram>\"],[\"<meter>\",\"<second>\",\"<second>\"]],\n    \"<mmHg>\" : [[\"mmHg\"], 133.322368, \"pressure\", [\"<kilogram>\"],[\"<meter>\",\"<second>\",\"<second>\"]],\n    \"<inHg>\" : [[\"inHg\"], 3386.3881472, \"pressure\", [\"<kilogram>\"],[\"<meter>\",\"<second>\",\"<second>\"]],\n    \"<torr>\" : [[\"torr\"], 133.322368, \"pressure\", [\"<kilogram>\"],[\"<meter>\",\"<second>\",\"<second>\"]],\n    \"<atm>\" : [[\"atm\",\"ATM\",\"atmosphere\",\"atmospheres\"], 101325, \"pressure\", [\"<kilogram>\"],[\"<meter>\",\"<second>\",\"<second>\"]],\n    \"<psi>\" : [[\"psi\"], 6894.76, \"pressure\", [\"<kilogram>\"],[\"<meter>\",\"<second>\",\"<second>\"]],\n    \"<cmh2o>\" : [[\"cmH2O\",\"cmh2o\"], 98.0638, \"pressure\", [\"<kilogram>\"],[\"<meter>\",\"<second>\",\"<second>\"]],\n    \"<inh2o>\" : [[\"inH2O\",\"inh2o\"], 249.082052, \"pressure\", [\"<kilogram>\"],[\"<meter>\",\"<second>\",\"<second>\"]],\n\n    /* viscosity */\n    \"<poise>\"  : [[\"P\",\"poise\"], 0.1, \"viscosity\", [\"<kilogram>\"],[\"<meter>\",\"<second>\"] ],\n    \"<stokes>\" : [[\"St\",\"stokes\"], 1e-4, \"viscosity\", [\"<meter>\",\"<meter>\"], [\"<second>\"]],\n\n    /* substance */\n    \"<mole>\"  :  [[\"mol\",\"mole\"], 1.0, \"substance\", [\"<mole>\"]],\n\n    /* concentration */\n    \"<molar>\" : [[\"M\",\"molar\"], 1000, \"concentration\", [\"<mole>\"], [\"<meter>\",\"<meter>\",\"<meter>\"]],\n    \"<wtpercent>\"  : [[\"wt%\",\"wtpercent\"], 10, \"concentration\", [\"<kilogram>\"], [\"<meter>\",\"<meter>\",\"<meter>\"]],\n\n    /* activity */\n    \"<katal>\" :  [[\"kat\",\"katal\",\"Katal\"], 1.0, \"activity\", [\"<mole>\"], [\"<second>\"]],\n    \"<unit>\"  :  [[\"U\",\"enzUnit\",\"unit\"], 16.667e-16, \"activity\", [\"<mole>\"], [\"<second>\"]],\n\n    /* capacitance */\n    \"<farad>\" :  [[\"F\",\"farad\",\"Farad\"], 1.0, \"capacitance\", [\"<second>\",\"<second>\",\"<second>\",\"<second>\",\"<ampere>\",\"<ampere>\"], [\"<meter>\", \"<meter>\", \"<kilogram>\"]],\n\n    /* charge */\n    \"<coulomb>\" :  [[\"C\",\"coulomb\",\"Coulomb\"], 1.0, \"charge\", [\"<ampere>\",\"<second>\"]],\n    \"<Ah>\" :  [[\"Ah\"], 3600, \"charge\", [\"<ampere>\",\"<second>\"]],\n\n    /* current */\n    \"<ampere>\"  :  [[\"A\",\"Ampere\",\"ampere\",\"amp\",\"amps\"], 1.0, \"current\", [\"<ampere>\"]],\n\n    /* conductance */\n    \"<siemens>\" : [[\"S\",\"Siemens\",\"siemens\"], 1.0, \"conductance\", [\"<second>\",\"<second>\",\"<second>\",\"<ampere>\",\"<ampere>\"], [\"<kilogram>\",\"<meter>\",\"<meter>\"]],\n\n    /* inductance */\n    \"<henry>\" :  [[\"H\",\"Henry\",\"henry\"], 1.0, \"inductance\", [\"<meter>\",\"<meter>\",\"<kilogram>\"], [\"<second>\",\"<second>\",\"<ampere>\",\"<ampere>\"]],\n\n    /* potential */\n    \"<volt>\"  :  [[\"V\",\"Volt\",\"volt\",\"volts\"], 1.0, \"potential\", [\"<meter>\",\"<meter>\",\"<kilogram>\"], [\"<second>\",\"<second>\",\"<second>\",\"<ampere>\"]],\n\n    /* resistance */\n    \"<ohm>\" :  [\n      [\"Ohm\",\"ohm\",\"\\u03A9\"/*Ω as greek letter*/,\"\\u2126\"/*Ω as ohm sign*/],\n      1.0,\n      \"resistance\",\n      [\"<meter>\",\"<meter>\",\"<kilogram>\"],[\"<second>\",\"<second>\",\"<second>\",\"<ampere>\",\"<ampere>\"]\n    ],\n    /* magnetism */\n    \"<weber>\" : [[\"Wb\",\"weber\",\"webers\"], 1.0, \"magnetism\", [\"<meter>\",\"<meter>\",\"<kilogram>\"], [\"<second>\",\"<second>\",\"<ampere>\"]],\n    \"<tesla>\"  : [[\"T\",\"tesla\",\"teslas\"], 1.0, \"magnetism\", [\"<kilogram>\"], [\"<second>\",\"<second>\",\"<ampere>\"]],\n    \"<gauss>\" : [[\"G\",\"gauss\"], 1e-4, \"magnetism\",  [\"<kilogram>\"], [\"<second>\",\"<second>\",\"<ampere>\"]],\n    \"<maxwell>\" : [[\"Mx\",\"maxwell\",\"maxwells\"], 1e-8, \"magnetism\", [\"<meter>\",\"<meter>\",\"<kilogram>\"], [\"<second>\",\"<second>\",\"<ampere>\"]],\n    \"<oersted>\"  : [[\"Oe\",\"oersted\",\"oersteds\"], 250.0 / Math.PI, \"magnetism\", [\"<ampere>\"], [\"<meter>\"]],\n\n    /* energy */\n    \"<joule>\" :  [[\"J\",\"joule\",\"Joule\",\"joules\"], 1.0, \"energy\", [\"<meter>\",\"<meter>\",\"<kilogram>\"], [\"<second>\",\"<second>\"]],\n    \"<erg>\"   :  [[\"erg\",\"ergs\"], 1e-7, \"energy\", [\"<meter>\",\"<meter>\",\"<kilogram>\"], [\"<second>\",\"<second>\"]],\n    \"<btu>\"   :  [[\"BTU\",\"btu\",\"BTUs\"], 1055.056, \"energy\", [\"<meter>\",\"<meter>\",\"<kilogram>\"], [\"<second>\",\"<second>\"]],\n    \"<calorie>\" :  [[\"cal\",\"calorie\",\"calories\"], 4.18400, \"energy\",[\"<meter>\",\"<meter>\",\"<kilogram>\"], [\"<second>\",\"<second>\"]],\n    \"<Calorie>\" :  [[\"Cal\",\"Calorie\",\"Calories\"], 4184.00, \"energy\",[\"<meter>\",\"<meter>\",\"<kilogram>\"], [\"<second>\",\"<second>\"]],\n    \"<therm-US>\" : [[\"th\",\"therm\",\"therms\",\"Therm\",\"therm-US\"], 105480400, \"energy\",[\"<meter>\",\"<meter>\",\"<kilogram>\"], [\"<second>\",\"<second>\"]],\n    \"<Wh>\" : [[\"Wh\"], 3600, \"energy\",[\"<meter>\",\"<meter>\",\"<kilogram>\"], [\"<second>\",\"<second>\"]],\n\n    /* force */\n    \"<newton>\"  : [[\"N\",\"Newton\",\"newton\"], 1.0, \"force\", [\"<kilogram>\",\"<meter>\"], [\"<second>\",\"<second>\"]],\n    \"<dyne>\"  : [[\"dyn\",\"dyne\"], 1e-5, \"force\", [\"<kilogram>\",\"<meter>\"], [\"<second>\",\"<second>\"]],\n    \"<pound-force>\"  : [[\"lbf\",\"pound-force\"], 4.448222, \"force\", [\"<kilogram>\",\"<meter>\"], [\"<second>\",\"<second>\"]],\n\n    /* frequency */\n    \"<hertz>\" : [[\"Hz\",\"hertz\",\"Hertz\"], 1.0, \"frequency\", [\"<1>\"], [\"<second>\"]],\n\n    /* angle */\n    \"<radian>\" :[[\"rad\",\"radian\",\"radians\"], 1.0, \"angle\", [\"<radian>\"]],\n    \"<degree>\" :[[\"deg\",\"degree\",\"degrees\"], Math.PI / 180.0, \"angle\", [\"<radian>\"]],\n    \"<gradian>\"   :[[\"gon\",\"grad\",\"gradian\",\"grads\"], Math.PI / 200.0, \"angle\", [\"<radian>\"]],\n    \"<steradian>\"  : [[\"sr\",\"steradian\",\"steradians\"], 1.0, \"solid_angle\", [\"<steradian>\"]],\n\n    /* rotation */\n    \"<rotation>\" : [[\"rotation\"], 2.0 * Math.PI, \"angle\", [\"<radian>\"]],\n    \"<rpm>\"   :[[\"rpm\"], 2.0 * Math.PI / 60.0, \"angular_velocity\", [\"<radian>\"], [\"<second>\"]],\n\n    /* information */\n    \"<byte>\"  :[[\"B\",\"byte\",\"bytes\"], 1.0, \"information\", [\"<byte>\"]],\n    \"<bit>\"  :[[\"b\",\"bit\",\"bits\"], 0.125, \"information\", [\"<byte>\"]],\n\n    /* information rate */\n    \"<Bps>\" : [[\"Bps\"], 1.0, \"information_rate\", [\"<byte>\"], [\"<second>\"]],\n    \"<bps>\" : [[\"bps\"], 0.125, \"information_rate\", [\"<byte>\"], [\"<second>\"]],\n\n    /* currency */\n    \"<dollar>\":[[\"USD\",\"dollar\"], 1.0, \"currency\", [\"<dollar>\"]],\n    \"<cents>\" :[[\"cents\"], 0.01, \"currency\", [\"<dollar>\"]],\n\n    /* luminosity */\n    \"<candela>\" : [[\"cd\",\"candela\"], 1.0, \"luminosity\", [\"<candela>\"]],\n    \"<lumen>\" : [[\"lm\",\"lumen\"], 1.0, \"luminous_power\", [\"<candela>\",\"<steradian>\"]],\n    \"<lux>\" :[[\"lux\"], 1.0, \"illuminance\", [\"<candela>\",\"<steradian>\"], [\"<meter>\",\"<meter>\"]],\n\n    /* power */\n    \"<watt>\"  : [[\"W\",\"watt\",\"watts\"], 1.0, \"power\", [\"<kilogram>\",\"<meter>\",\"<meter>\"], [\"<second>\",\"<second>\",\"<second>\"]],\n    \"<volt-ampere>\"  : [[\"VA\",\"volt-ampere\"], 1.0, \"power\", [\"<kilogram>\",\"<meter>\",\"<meter>\"], [\"<second>\",\"<second>\",\"<second>\"]],\n    \"<volt-ampere-reactive>\"  : [[\"var\",\"Var\",\"VAr\",\"VAR\",\"volt-ampere-reactive\"], 1.0, \"power\", [\"<kilogram>\",\"<meter>\",\"<meter>\"], [\"<second>\",\"<second>\",\"<second>\"]],\n    \"<horsepower>\"  :  [[\"hp\",\"horsepower\"], 745.699872, \"power\", [\"<kilogram>\",\"<meter>\",\"<meter>\"], [\"<second>\",\"<second>\",\"<second>\"]],\n\n    /* radiation */\n    \"<gray>\" : [[\"Gy\",\"gray\",\"grays\"], 1.0, \"radiation\", [\"<meter>\",\"<meter>\"], [\"<second>\",\"<second>\"]],\n    \"<roentgen>\" : [[\"R\",\"roentgen\"], 0.009330, \"radiation\", [\"<meter>\",\"<meter>\"], [\"<second>\",\"<second>\"]],\n    \"<sievert>\" : [[\"Sv\",\"sievert\",\"sieverts\"], 1.0, \"radiation\", [\"<meter>\",\"<meter>\"], [\"<second>\",\"<second>\"]],\n    \"<becquerel>\" : [[\"Bq\",\"becquerel\",\"becquerels\"], 1.0, \"radiation\", [\"<1>\"],[\"<second>\"]],\n    \"<curie>\" : [[\"Ci\",\"curie\",\"curies\"], 3.7e10, \"radiation\", [\"<1>\"],[\"<second>\"]],\n\n    /* rate */\n    \"<cpm>\" : [[\"cpm\"], 1.0 / 60.0, \"rate\", [\"<count>\"],[\"<second>\"]],\n    \"<dpm>\" : [[\"dpm\"], 1.0 / 60.0, \"rate\", [\"<count>\"],[\"<second>\"]],\n    \"<bpm>\" : [[\"bpm\"], 1.0 / 60.0, \"rate\", [\"<count>\"],[\"<second>\"]],\n\n    /* resolution / typography */\n    \"<dot>\" : [[\"dot\",\"dots\"], 1, \"resolution\", [\"<each>\"]],\n    \"<pixel>\" : [[\"pixel\",\"px\"], 1, \"resolution\", [\"<each>\"]],\n    \"<ppi>\" : [[\"ppi\"], 1, \"resolution\", [\"<pixel>\"], [\"<inch>\"]],\n    \"<dpi>\" : [[\"dpi\"], 1, \"typography\", [\"<dot>\"], [\"<inch>\"]],\n\n    /* other */\n    \"<cell>\" : [[\"cells\",\"cell\"], 1, \"counting\", [\"<each>\"]],\n    \"<each>\" : [[\"each\"], 1.0, \"counting\", [\"<each>\"]],\n    \"<count>\" : [[\"count\"], 1.0, \"counting\", [\"<each>\"]],\n    \"<base-pair>\"  : [[\"bp\",\"base-pair\"], 1.0, \"counting\", [\"<each>\"]],\n    \"<nucleotide>\" : [[\"nt\",\"nucleotide\"], 1.0, \"counting\", [\"<each>\"]],\n    \"<molecule>\" : [[\"molecule\",\"molecules\"], 1.0, \"counting\", [\"<1>\"]],\n    \"<dozen>\" :  [[\"doz\",\"dz\",\"dozen\"],12.0,\"prefix_only\", [\"<each>\"]],\n    \"<percent>\": [[\"%\",\"percent\"], 0.01, \"prefix_only\", [\"<1>\"]],\n    \"<ppm>\" :  [[\"ppm\"],1e-6, \"prefix_only\", [\"<1>\"]],\n    \"<ppt>\" :  [[\"ppt\"],1e-9, \"prefix_only\", [\"<1>\"]],\n    \"<gross>\" :  [[\"gr\",\"gross\"],144.0, \"prefix_only\", [\"<dozen>\",\"<dozen>\"]],\n    \"<decibel>\"  : [[\"dB\",\"decibel\",\"decibels\"], 1.0, \"logarithmic\", [\"<decibel>\"]]\n  };\n\n  var BASE_UNITS = [\"<meter>\",\"<kilogram>\",\"<second>\",\"<mole>\", \"<ampere>\",\"<radian>\",\"<kelvin>\",\"<temp-K>\",\"<byte>\",\"<dollar>\",\"<candela>\",\"<each>\",\"<steradian>\",\"<decibel>\"];\n\n  var UNITY = \"<1>\";\n  var UNITY_ARRAY = [UNITY];\n\n  // Setup\n\n  /**\n   * Asserts unit definition is valid\n   *\n   * @param {string} unitDef - Name of unit to test\n   * @param {Object} definition - Definition of unit to test\n   *\n   * @returns {void}\n   * @throws {QtyError} if unit definition is not valid\n   */\n  function validateUnitDefinition(unitDef, definition) {\n    var scalar = definition[1];\n    var numerator = definition[3] || [];\n    var denominator = definition[4] || [];\n    if (!isNumber(scalar)) {\n      throw new QtyError(unitDef + \": Invalid unit definition. \" +\n                         \"'scalar' must be a number\");\n    }\n\n    numerator.forEach(function(unit) {\n      if (UNITS[unit] === undefined) {\n        throw new QtyError(unitDef + \": Invalid unit definition. \" +\n                           \"Unit \" + unit + \" in 'numerator' is not recognized\");\n      }\n    });\n\n    denominator.forEach(function(unit) {\n      if (UNITS[unit] === undefined) {\n        throw new QtyError(unitDef + \": Invalid unit definition. \" +\n                           \"Unit \" + unit + \" in 'denominator' is not recognized\");\n      }\n    });\n  }\n\n  var PREFIX_VALUES = {};\n  var PREFIX_MAP = {};\n  var UNIT_VALUES = {};\n  var UNIT_MAP = {};\n  var OUTPUT_MAP = {};\n  for (var unitDef in UNITS) {\n    if (UNITS.hasOwnProperty(unitDef)) {\n      var definition = UNITS[unitDef];\n      if (definition[2] === \"prefix\") {\n        PREFIX_VALUES[unitDef] = definition[1];\n        for (var i = 0; i < definition[0].length; i++) {\n          PREFIX_MAP[definition[0][i]] = unitDef;\n        }\n      }\n      else {\n        validateUnitDefinition(unitDef, definition);\n        UNIT_VALUES[unitDef] = {\n          scalar: definition[1],\n          numerator: definition[3],\n          denominator: definition[4]\n        };\n        for (var j = 0; j < definition[0].length; j++) {\n          UNIT_MAP[definition[0][j]] = unitDef;\n        }\n      }\n      OUTPUT_MAP[unitDef] = definition[0][0];\n    }\n  }\n\n  /**\n   * Returns a list of available units of kind\n   *\n   * @param {string} [kind] - kind of units\n   * @returns {array} names of units\n   * @throws {QtyError} if kind is unknown\n   */\n  function getUnits(kind) {\n    var i;\n    var units = [];\n    var unitKeys = Object.keys(UNITS);\n    if (typeof kind === \"undefined\") {\n      for (i = 0; i < unitKeys.length; i++) {\n        if ([\"\", \"prefix\"].indexOf(UNITS[unitKeys[i]][2]) === -1) {\n          units.push(unitKeys[i].substr(1, unitKeys[i].length - 2));\n        }\n      }\n    }\n    else if (this.getKinds().indexOf(kind) === -1) {\n      throw new QtyError(\"Kind not recognized\");\n    }\n    else {\n      for (i = 0; i < unitKeys.length; i++) {\n        if (UNITS[unitKeys[i]][2] === kind) {\n          units.push(unitKeys[i].substr(1, unitKeys[i].length - 2));\n        }\n      }\n    }\n\n    return units.sort(function(a, b) {\n      if (a.toLowerCase() < b.toLowerCase()) {\n        return -1;\n      }\n      if (a.toLowerCase() > b.toLowerCase()) {\n        return 1;\n      }\n      return 0;\n    });\n  }\n\n  /**\n   * Returns a list of alternative names for a unit\n   *\n   * @param {string} unitName - name of unit\n   * @returns {string[]} aliases for unit\n   * @throws {QtyError} if unit is unknown\n   */\n  function getAliases(unitName) {\n    if (!UNIT_MAP[unitName]) {\n      throw new QtyError(\"Unit not recognized\");\n    }\n    return UNITS[UNIT_MAP[unitName]][0];\n  }\n\n  var SIGNATURE_VECTOR = [\"length\", \"time\", \"temperature\", \"mass\", \"current\", \"substance\", \"luminosity\", \"currency\", \"information\", \"angle\"];\n\n  /*\n  calculates the unit signature id for use in comparing compatible units and simplification\n  the signature is based on a simple classification of units and is based on the following publication\n\n  Novak, G.S., Jr. \"Conversion of units of measurement\", IEEE Transactions on Software Engineering,\n  21(8), Aug 1995, pp.651-661\n  doi://10.1109/32.403789\n  http://ieeexplore.ieee.org/Xplore/login.jsp?url=/iel1/32/9079/00403789.pdf?isnumber=9079&prod=JNL&arnumber=403789&arSt=651&ared=661&arAuthor=Novak%2C+G.S.%2C+Jr.\n  */\n  function unitSignature() {\n    if (this.signature) {\n      return this.signature;\n    }\n    var vector = unitSignatureVector.call(this);\n    for (var i = 0; i < vector.length; i++) {\n      vector[i] *= Math.pow(20, i);\n    }\n\n    return vector.reduce(\n      function(previous, current) {\n        return previous + current;\n      },\n      0\n    );\n  }\n\n  // calculates the unit signature vector used by unit_signature\n  function unitSignatureVector() {\n    if (!this.isBase()) {\n      return unitSignatureVector.call(this.toBase());\n    }\n\n    var vector = new Array(SIGNATURE_VECTOR.length);\n    for (var i = 0; i < vector.length; i++) {\n      vector[i] = 0;\n    }\n    var r, n;\n    for (var j = 0; j < this.numerator.length; j++) {\n      if ((r = UNITS[this.numerator[j]])) {\n        n = SIGNATURE_VECTOR.indexOf(r[2]);\n        if (n >= 0) {\n          vector[n] = vector[n] + 1;\n        }\n      }\n    }\n\n    for (var k = 0; k < this.denominator.length; k++) {\n      if ((r = UNITS[this.denominator[k]])) {\n        n = SIGNATURE_VECTOR.indexOf(r[2]);\n        if (n >= 0) {\n          vector[n] = vector[n] - 1;\n        }\n      }\n    }\n    return vector;\n  }\n\n  var SIGN = \"[+-]\";\n  var INTEGER = \"\\\\d+\";\n  var SIGNED_INTEGER = SIGN + \"?\" + INTEGER;\n  var FRACTION = \"\\\\.\" + INTEGER;\n  var FLOAT = \"(?:\" + INTEGER + \"(?:\" + FRACTION + \")?\" + \")\" +\n              \"|\" +\n              \"(?:\" + FRACTION + \")\";\n  var EXPONENT = \"[Ee]\" + SIGNED_INTEGER;\n  var SCI_NUMBER = \"(?:\" + FLOAT + \")(?:\" + EXPONENT + \")?\";\n  var SIGNED_NUMBER = SIGN + \"?\\\\s*\" + SCI_NUMBER;\n  var QTY_STRING = \"(\" + SIGNED_NUMBER + \")?\" + \"\\\\s*([^/]*)(?:\\/(.+))?\";\n  var QTY_STRING_REGEX = new RegExp(\"^\" + QTY_STRING + \"$\");\n\n  var POWER_OP = \"\\\\^|\\\\*{2}\";\n  // Allow unit powers representing scalar, length, area, volume; 4 is for some\n  // special case representations in SI base units.\n  var SAFE_POWER = \"[01234]\";\n  var TOP_REGEX = new RegExp (\"([^ \\\\*\\\\d]+?)(?:\" + POWER_OP + \")?(-?\" + SAFE_POWER + \"(?![a-zA-Z]))\");\n  var BOTTOM_REGEX = new RegExp(\"([^ \\\\*\\\\d]+?)(?:\" + POWER_OP + \")?(\" + SAFE_POWER + \"(?![a-zA-Z]))\");\n\n  /* parse a string into a unit object.\n   * Typical formats like :\n   * \"5.6 kg*m/s^2\"\n   * \"5.6 kg*m*s^-2\"\n   * \"5.6 kilogram*meter*second^-2\"\n   * \"2.2 kPa\"\n   * \"37 degC\"\n   * \"1\"  -- creates a unitless constant with value 1\n   * \"GPa\"  -- creates a unit with scalar 1 with units 'GPa'\n   * 6'4\"  -- recognized as 6 feet + 4 inches\n   * 8 lbs 8 oz -- recognized as 8 lbs + 8 ounces\n   */\n  function parse(val) {\n    if (!isString(val)) {\n      val = val.toString();\n    }\n    val = val.trim();\n\n    var result = QTY_STRING_REGEX.exec(val);\n    if (!result) {\n      throw new QtyError(val + \": Quantity not recognized\");\n    }\n\n    var scalarMatch = result[1];\n    if (scalarMatch) {\n      // Allow whitespaces between sign and scalar for loose parsing\n      scalarMatch = scalarMatch.replace(/\\s/g, \"\");\n      this.scalar = parseFloat(scalarMatch);\n    }\n    else {\n      this.scalar = 1;\n    }\n    var top = result[2];\n    var bottom = result[3];\n\n    var n, x, nx;\n    // TODO DRY me\n    while ((result = TOP_REGEX.exec(top))) {\n      n = parseFloat(result[2]);\n      if (isNaN(n)) {\n        // Prevents infinite loops\n        throw new QtyError(\"Unit exponent is not a number\");\n      }\n      // Disallow unrecognized unit even if exponent is 0\n      if (n === 0 && !UNIT_TEST_REGEX.test(result[1])) {\n        throw new QtyError(\"Unit not recognized\");\n      }\n      x = result[1] + \" \";\n      nx = \"\";\n      for (var i = 0; i < Math.abs(n) ; i++) {\n        nx += x;\n      }\n      if (n >= 0) {\n        top = top.replace(result[0], nx);\n      }\n      else {\n        bottom = bottom ? bottom + nx : nx;\n        top = top.replace(result[0], \"\");\n      }\n    }\n\n    while ((result = BOTTOM_REGEX.exec(bottom))) {\n      n = parseFloat(result[2]);\n      if (isNaN(n)) {\n        // Prevents infinite loops\n        throw new QtyError(\"Unit exponent is not a number\");\n      }\n      // Disallow unrecognized unit even if exponent is 0\n      if (n === 0 && !UNIT_TEST_REGEX.test(result[1])) {\n        throw new QtyError(\"Unit not recognized\");\n      }\n      x = result[1] + \" \";\n      nx = \"\";\n      for (var j = 0; j < n ; j++) {\n        nx += x;\n      }\n\n      bottom = bottom.replace(result[0], nx);\n    }\n\n    if (top) {\n      this.numerator = parseUnits(top.trim());\n    }\n    if (bottom) {\n      this.denominator = parseUnits(bottom.trim());\n    }\n  }\n\n  var PREFIX_REGEX = Object.keys(PREFIX_MAP).sort(function(a, b) {\n    return b.length - a.length;\n  }).join(\"|\");\n  var UNIT_REGEX = Object.keys(UNIT_MAP).sort(function(a, b) {\n    return b.length - a.length;\n  }).join(\"|\");\n  /*\n   * Minimal boundary regex to support units with Unicode characters\n   * \\b only works for ASCII\n   */\n  var BOUNDARY_REGEX = \"\\\\b|$\";\n  var UNIT_MATCH = \"(\" + PREFIX_REGEX + \")??(\" +\n                   UNIT_REGEX +\n                   \")(?:\" + BOUNDARY_REGEX + \")\";\n  var UNIT_TEST_REGEX = new RegExp(\"^\\\\s*(\" + UNIT_MATCH + \"[\\\\s\\\\*]*)+$\");\n  var UNIT_MATCH_REGEX = new RegExp(UNIT_MATCH, \"g\"); // g flag for multiple occurences\n  var parsedUnitsCache = {};\n  /**\n   * Parses and converts units string to normalized unit array.\n   * Result is cached to speed up next calls.\n   *\n   * @param {string} units Units string\n   * @returns {string[]} Array of normalized units\n   *\n   * @example\n   * // Returns [\"<second>\", \"<meter>\", \"<second>\"]\n   * parseUnits(\"s m s\");\n   *\n   */\n  function parseUnits(units) {\n    var cached = parsedUnitsCache[units];\n    if (cached) {\n      return cached;\n    }\n\n    var unitMatch, normalizedUnits = [];\n\n    // Scan\n    if (!UNIT_TEST_REGEX.test(units)) {\n      throw new QtyError(\"Unit not recognized\");\n    }\n\n    while ((unitMatch = UNIT_MATCH_REGEX.exec(units))) {\n      normalizedUnits.push(unitMatch.slice(1));\n    }\n\n    normalizedUnits = normalizedUnits.map(function(item) {\n      return PREFIX_MAP[item[0]] ? [PREFIX_MAP[item[0]], UNIT_MAP[item[1]]] : [UNIT_MAP[item[1]]];\n    });\n\n    // Flatten and remove null elements\n    normalizedUnits = normalizedUnits.reduce(function(a,b) {\n      return a.concat(b);\n    }, []);\n    normalizedUnits = normalizedUnits.filter(function(item) {\n      return item;\n    });\n\n    parsedUnitsCache[units] = normalizedUnits;\n\n    return normalizedUnits;\n  }\n\n  /**\n   * Parses a string as a quantity\n   * @param {string} value - quantity as text\n   * @throws if value is not a string\n   * @returns {Qty|null} Parsed quantity or null if unrecognized\n   */\n  function globalParse(value) {\n    if (!isString(value)) {\n      throw new QtyError(\"Argument should be a string\");\n    }\n\n    try {\n      return this(value);\n    }\n    catch (e) {\n      return null;\n    }\n  }\n\n  /**\n   * Tests if a value is a Qty instance\n   *\n   * @param {*} value - Value to test\n   *\n   * @returns {boolean} true if value is a Qty instance, false otherwise\n   */\n  function isQty(value) {\n    return value instanceof Qty;\n  }\n\n  function Qty(initValue, initUnits) {\n    assertValidConstructorArgs.apply(null, arguments);\n\n    if (!(isQty(this))) {\n      return new Qty(initValue, initUnits);\n    }\n\n    this.scalar = null;\n    this.baseScalar = null;\n    this.signature = null;\n    this._conversionCache = {};\n    this.numerator = UNITY_ARRAY;\n    this.denominator = UNITY_ARRAY;\n\n    if (isDefinitionObject(initValue)) {\n      this.scalar = initValue.scalar;\n      this.numerator = (initValue.numerator && initValue.numerator.length !== 0) ? initValue.numerator : UNITY_ARRAY;\n      this.denominator = (initValue.denominator && initValue.denominator.length !== 0) ? initValue.denominator : UNITY_ARRAY;\n    }\n    else if (initUnits) {\n      parse.call(this, initUnits);\n      this.scalar = initValue;\n    }\n    else {\n      parse.call(this, initValue);\n    }\n\n    // math with temperatures is very limited\n    if (this.denominator.join(\"*\").indexOf(\"temp\") >= 0) {\n      throw new QtyError(\"Cannot divide with temperatures\");\n    }\n    if (this.numerator.join(\"*\").indexOf(\"temp\") >= 0) {\n      if (this.numerator.length > 1) {\n        throw new QtyError(\"Cannot multiply by temperatures\");\n      }\n      if (!compareArray(this.denominator, UNITY_ARRAY)) {\n        throw new QtyError(\"Cannot divide with temperatures\");\n      }\n    }\n\n    this.initValue = initValue;\n    updateBaseScalar.call(this);\n\n    if (this.isTemperature() && this.baseScalar < 0) {\n      throw new QtyError(\"Temperatures must not be less than absolute zero\");\n    }\n  }\n\n  Qty.prototype = {\n    // Properly set up constructor\n    constructor: Qty,\n  };\n\n  /**\n   * Asserts constructor arguments are valid\n   *\n   * @param {*} value - Value to test\n   * @param {string} [units] - Optional units when value is passed as a number\n   *\n   * @returns {void}\n   * @throws {QtyError} if constructor arguments are invalid\n   */\n  function assertValidConstructorArgs(value, units) {\n    if (units) {\n      if (!(isNumber(value) && isString(units))) {\n        throw new QtyError(\"Only number accepted as initialization value \" +\n                           \"when units are explicitly provided\");\n      }\n    }\n    else {\n      if (!(isString(value) ||\n            isNumber(value) ||\n            isQty(value)    ||\n            isDefinitionObject(value))) {\n        throw new QtyError(\"Only string, number or quantity accepted as \" +\n                           \"single initialization value\");\n      }\n    }\n  }\n\n  /**\n   * Tests if a value is a Qty definition object\n   *\n   * @param {*} value - Value to test\n   *\n   * @returns {boolean} true if value is a definition object, false otherwise\n   */\n  function isDefinitionObject(value) {\n    return value && typeof value === \"object\" && value.hasOwnProperty(\"scalar\");\n  }\n\n  function updateBaseScalar() {\n    if (this.baseScalar) {\n      return this.baseScalar;\n    }\n    if (this.isBase()) {\n      this.baseScalar = this.scalar;\n      this.signature = unitSignature.call(this);\n    }\n    else {\n      var base = this.toBase();\n      this.baseScalar = base.scalar;\n      this.signature = base.signature;\n    }\n  }\n\n  var KINDS = {\n    \"-312078\": \"elastance\",\n    \"-312058\": \"resistance\",\n    \"-312038\": \"inductance\",\n    \"-152058\": \"potential\",\n    \"-152040\": \"magnetism\",\n    \"-152038\": \"magnetism\",\n    \"-7997\": \"specific_volume\",\n    \"-79\": \"snap\",\n    \"-59\": \"jolt\",\n    \"-39\": \"acceleration\",\n    \"-38\": \"radiation\",\n    \"-20\": \"frequency\",\n    \"-19\": \"speed\",\n    \"-18\": \"viscosity\",\n    \"-17\": \"volumetric_flow\",\n    \"-1\": \"wavenumber\",\n    \"0\": \"unitless\",\n    \"1\": \"length\",\n    \"2\": \"area\",\n    \"3\": \"volume\",\n    \"20\": \"time\",\n    \"400\": \"temperature\",\n    \"7941\": \"yank\",\n    \"7942\": \"power\",\n    \"7959\": \"pressure\",\n    \"7961\": \"force\",\n    \"7962\": \"energy\",\n    \"7979\": \"viscosity\",\n    \"7981\": \"momentum\",\n    \"7982\": \"angular_momentum\",\n    \"7997\": \"density\",\n    \"7998\": \"area_density\",\n    \"8000\": \"mass\",\n    \"152020\": \"radiation_exposure\",\n    \"159999\": \"magnetism\",\n    \"160000\": \"current\",\n    \"160020\": \"charge\",\n    \"312058\": \"conductance\",\n    \"312078\": \"capacitance\",\n    \"3199980\": \"activity\",\n    \"3199997\": \"molar_concentration\",\n    \"3200000\": \"substance\",\n    \"63999998\": \"illuminance\",\n    \"64000000\": \"luminous_power\",\n    \"1280000000\": \"currency\",\n    \"25599999980\": \"information_rate\",\n    \"25600000000\": \"information\",\n    \"511999999980\": \"angular_velocity\",\n    \"512000000000\": \"angle\"\n  };\n\n  /**\n   * Returns the list of available well-known kinds of units, e.g.\n   * \"radiation\" or \"length\".\n   *\n   * @returns {string[]} names of kinds of units\n   */\n  function getKinds() {\n    return uniq(Object.keys(KINDS).map(function(knownSignature) {\n      return KINDS[knownSignature];\n    }));\n  }\n\n  Qty.prototype.kind = function() {\n    return KINDS[this.signature.toString()];\n  };\n\n  assign(Qty.prototype, {\n    isDegrees: function() {\n      // signature may not have been calculated yet\n      return (this.signature === null || this.signature === 400) &&\n        this.numerator.length === 1 &&\n        compareArray(this.denominator, UNITY_ARRAY) &&\n        (this.numerator[0].match(/<temp-[CFRK]>/) || this.numerator[0].match(/<(kelvin|celsius|rankine|fahrenheit)>/));\n    },\n\n    isTemperature: function() {\n      return this.isDegrees() && this.numerator[0].match(/<temp-[CFRK]>/);\n    }\n  });\n\n  function subtractTemperatures(lhs,rhs) {\n    var lhsUnits = lhs.units();\n    var rhsConverted = rhs.to(lhsUnits);\n    var dstDegrees = Qty(getDegreeUnits(lhsUnits));\n    return Qty({\"scalar\": lhs.scalar - rhsConverted.scalar, \"numerator\": dstDegrees.numerator, \"denominator\": dstDegrees.denominator});\n  }\n\n  function subtractTempDegrees(temp,deg) {\n    var tempDegrees = deg.to(getDegreeUnits(temp.units()));\n    return Qty({\"scalar\": temp.scalar - tempDegrees.scalar, \"numerator\": temp.numerator, \"denominator\": temp.denominator});\n  }\n\n  function addTempDegrees(temp,deg) {\n    var tempDegrees = deg.to(getDegreeUnits(temp.units()));\n    return Qty({\"scalar\": temp.scalar + tempDegrees.scalar, \"numerator\": temp.numerator, \"denominator\": temp.denominator});\n  }\n\n  function getDegreeUnits(units) {\n    if (units === \"tempK\") {\n      return \"degK\";\n    }\n    else if (units === \"tempC\") {\n      return \"degC\";\n    }\n    else if (units === \"tempF\") {\n      return \"degF\";\n    }\n    else if (units === \"tempR\") {\n      return \"degR\";\n    }\n    else {\n      throw new QtyError(\"Unknown type for temp conversion from: \" + units);\n    }\n  }\n\n  function toDegrees(src,dst) {\n    var srcDegK = toDegK(src);\n    var dstUnits = dst.units();\n    var dstScalar;\n\n    if (dstUnits === \"degK\") {\n      dstScalar = srcDegK.scalar;\n    }\n    else if (dstUnits === \"degC\") {\n      dstScalar = srcDegK.scalar ;\n    }\n    else if (dstUnits === \"degF\") {\n      dstScalar = srcDegK.scalar * 9 / 5;\n    }\n    else if (dstUnits === \"degR\") {\n      dstScalar = srcDegK.scalar * 9 / 5;\n    }\n    else {\n      throw new QtyError(\"Unknown type for degree conversion to: \" + dstUnits);\n    }\n\n    return Qty({\"scalar\": dstScalar, \"numerator\": dst.numerator, \"denominator\": dst.denominator});\n  }\n\n  function toDegK(qty) {\n    var units = qty.units();\n    var q;\n    if (units.match(/(deg)[CFRK]/)) {\n      q = qty.baseScalar;\n    }\n    else if (units === \"tempK\") {\n      q = qty.scalar;\n    }\n    else if (units === \"tempC\") {\n      q = qty.scalar;\n    }\n    else if (units === \"tempF\") {\n      q = qty.scalar * 5 / 9;\n    }\n    else if (units === \"tempR\") {\n      q = qty.scalar * 5 / 9;\n    }\n    else {\n      throw new QtyError(\"Unknown type for temp conversion from: \" + units);\n    }\n\n    return Qty({\"scalar\": q, \"numerator\": [\"<kelvin>\"], \"denominator\": UNITY_ARRAY});\n  }\n\n  function toTemp(src,dst) {\n    var dstUnits = dst.units();\n    var dstScalar;\n\n    if (dstUnits === \"tempK\") {\n      dstScalar = src.baseScalar;\n    }\n    else if (dstUnits === \"tempC\") {\n      dstScalar = src.baseScalar - 273.15;\n    }\n    else if (dstUnits === \"tempF\") {\n      dstScalar = (src.baseScalar * 9 / 5) - 459.67;\n    }\n    else if (dstUnits === \"tempR\") {\n      dstScalar = src.baseScalar * 9 / 5;\n    }\n    else {\n      throw new QtyError(\"Unknown type for temp conversion to: \" + dstUnits);\n    }\n\n    return Qty({\"scalar\": dstScalar, \"numerator\": dst.numerator, \"denominator\": dst.denominator});\n  }\n\n  function toTempK(qty) {\n    var units = qty.units();\n    var q;\n    if (units.match(/(deg)[CFRK]/)) {\n      q = qty.baseScalar;\n    }\n    else if (units === \"tempK\") {\n      q = qty.scalar;\n    }\n    else if (units === \"tempC\") {\n      q = qty.scalar + 273.15;\n    }\n    else if (units === \"tempF\") {\n      q = (qty.scalar + 459.67) * 5 / 9;\n    }\n    else if (units === \"tempR\") {\n      q = qty.scalar * 5 / 9;\n    }\n    else {\n      throw new QtyError(\"Unknown type for temp conversion from: \" + units);\n    }\n\n    return Qty({\"scalar\": q, \"numerator\": [\"<temp-K>\"], \"denominator\": UNITY_ARRAY});\n  }\n\n  assign(Qty.prototype, {\n    /**\n     * Converts to other compatible units.\n     * Instance's converted quantities are cached for faster subsequent calls.\n     *\n     * @param {(string|Qty)} other - Target units as string or retrieved from\n     *                               other Qty instance (scalar is ignored)\n     *\n     * @returns {Qty} New converted Qty instance with target units\n     *\n     * @throws {QtyError} if target units are incompatible\n     *\n     * @example\n     * var weight = Qty(\"25 kg\");\n     * weight.to(\"lb\"); // => Qty(\"55.11556554621939 lbs\");\n     * weight.to(Qty(\"3 g\")); // => Qty(\"25000 g\"); // scalar of passed Qty is ignored\n     */\n    to: function(other) {\n      var cached, target;\n\n      if (other === undefined || other === null) {\n        return this;\n      }\n\n      if (!isString(other)) {\n        return this.to(other.units());\n      }\n\n      cached = this._conversionCache[other];\n      if (cached) {\n        return cached;\n      }\n\n      // Instantiating target to normalize units\n      target = Qty(other);\n      if (target.units() === this.units()) {\n        return this;\n      }\n\n      if (!this.isCompatible(target)) {\n        if (this.isInverse(target)) {\n          target = this.inverse().to(other);\n        }\n        else {\n          throwIncompatibleUnits(this.units(), target.units());\n        }\n      }\n      else {\n        if (target.isTemperature()) {\n          target = toTemp(this,target);\n        }\n        else if (target.isDegrees()) {\n          target = toDegrees(this,target);\n        }\n        else {\n          var q = divSafe(this.baseScalar, target.baseScalar);\n          target = Qty({\"scalar\": q, \"numerator\": target.numerator, \"denominator\": target.denominator});\n        }\n      }\n\n      this._conversionCache[other] = target;\n      return target;\n    },\n\n    // convert to base SI units\n    // results of the conversion are cached so subsequent calls to this will be fast\n    toBase: function() {\n      if (this.isBase()) {\n        return this;\n      }\n\n      if (this.isTemperature()) {\n        return toTempK(this);\n      }\n\n      var cached = baseUnitCache[this.units()];\n      if (!cached) {\n        cached = toBaseUnits(this.numerator,this.denominator);\n        baseUnitCache[this.units()] = cached;\n      }\n      return cached.mul(this.scalar);\n    },\n\n    // Converts the unit back to a float if it is unitless.  Otherwise raises an exception\n    toFloat: function() {\n      if (this.isUnitless()) {\n        return this.scalar;\n      }\n      throw new QtyError(\"Can't convert to Float unless unitless.  Use Unit#scalar\");\n    },\n\n    /**\n     * Returns the nearest multiple of quantity passed as\n     * precision\n     *\n     * @param {(Qty|string|number)} precQuantity - Quantity, string formated\n     *   quantity or number as expected precision\n     *\n     * @returns {Qty} Nearest multiple of precQuantity\n     *\n     * @example\n     * Qty('5.5 ft').toPrec('2 ft'); // returns 6 ft\n     * Qty('0.8 cu').toPrec('0.25 cu'); // returns 0.75 cu\n     * Qty('6.3782 m').toPrec('cm'); // returns 6.38 m\n     * Qty('1.146 MPa').toPrec('0.1 bar'); // returns 1.15 MPa\n     *\n     */\n    toPrec: function(precQuantity) {\n      if (isString(precQuantity)) {\n        precQuantity = Qty(precQuantity);\n      }\n      if (isNumber(precQuantity)) {\n        precQuantity = Qty(precQuantity + \" \" + this.units());\n      }\n\n      if (!this.isUnitless()) {\n        precQuantity = precQuantity.to(this.units());\n      }\n      else if (!precQuantity.isUnitless()) {\n        throwIncompatibleUnits(this.units(), precQuantity.units());\n      }\n\n      if (precQuantity.scalar === 0) {\n        throw new QtyError(\"Divide by zero\");\n      }\n\n      var precRoundedResult = mulSafe(\n        Math.round(this.scalar / precQuantity.scalar),\n        precQuantity.scalar\n      );\n\n      return Qty(precRoundedResult + this.units());\n    }\n  });\n\n  /**\n   * Configures and returns a fast function to convert\n   * Number values from units to others.\n   * Useful to efficiently convert large array of values\n   * with same units into others with iterative methods.\n   * Does not take care of rounding issues.\n   *\n   * @param {string} srcUnits Units of values to convert\n   * @param {string} dstUnits Units to convert to\n   *\n   * @returns {Function} Converting function accepting Number value\n   *   and returning converted value\n   *\n   * @throws \"Incompatible units\" if units are incompatible\n   *\n   * @example\n   * // Converting large array of numbers with the same units\n   * // into other units\n   * var converter = Qty.swiftConverter(\"m/h\", \"ft/s\");\n   * var convertedSerie = largeSerie.map(converter);\n   *\n   */\n  function swiftConverter(srcUnits, dstUnits) {\n    var srcQty = Qty(srcUnits);\n    var dstQty = Qty(dstUnits);\n\n    if (srcQty.eq(dstQty)) {\n      return identity;\n    }\n\n    var convert;\n    if (!srcQty.isTemperature()) {\n      convert = function(value) {\n        return value * srcQty.baseScalar / dstQty.baseScalar;\n      };\n    }\n    else {\n      convert = function(value) {\n        // TODO Not optimized\n        return srcQty.mul(value).to(dstQty).scalar;\n      };\n    }\n\n    return function converter(value) {\n      var i, length, result;\n      if (!Array.isArray(value)) {\n        return convert(value);\n      }\n      else {\n        length = value.length;\n        result = [];\n        for (i = 0; i < length; i++) {\n          result.push(convert(value[i]));\n        }\n        return result;\n      }\n    };\n  }\n\n  var baseUnitCache = {};\n\n  function toBaseUnits(numerator,denominator) {\n    var num = [];\n    var den = [];\n    var q = 1;\n    var unit;\n    for (var i = 0; i < numerator.length; i++) {\n      unit = numerator[i];\n      if (PREFIX_VALUES[unit]) {\n        // workaround to fix\n        // 0.1 * 0.1 => 0.010000000000000002\n        q = mulSafe(q, PREFIX_VALUES[unit]);\n      }\n      else {\n        if (UNIT_VALUES[unit]) {\n          q *= UNIT_VALUES[unit].scalar;\n\n          if (UNIT_VALUES[unit].numerator) {\n            num.push(UNIT_VALUES[unit].numerator);\n          }\n          if (UNIT_VALUES[unit].denominator) {\n            den.push(UNIT_VALUES[unit].denominator);\n          }\n        }\n      }\n    }\n    for (var j = 0; j < denominator.length; j++) {\n      unit = denominator[j];\n      if (PREFIX_VALUES[unit]) {\n        q /= PREFIX_VALUES[unit];\n      }\n      else {\n        if (UNIT_VALUES[unit]) {\n          q /= UNIT_VALUES[unit].scalar;\n\n          if (UNIT_VALUES[unit].numerator) {\n            den.push(UNIT_VALUES[unit].numerator);\n          }\n          if (UNIT_VALUES[unit].denominator) {\n            num.push(UNIT_VALUES[unit].denominator);\n          }\n        }\n      }\n    }\n\n    // Flatten\n    num = num.reduce(function(a,b) {\n      return a.concat(b);\n    }, []);\n    den = den.reduce(function(a,b) {\n      return a.concat(b);\n    }, []);\n\n    return Qty({\"scalar\": q, \"numerator\": num, \"denominator\": den});\n  }\n\n  Qty.parse = globalParse;\n\n  Qty.getUnits = getUnits;\n  Qty.getAliases = getAliases;\n\n  Qty.mulSafe = mulSafe;\n  Qty.divSafe = divSafe;\n\n  Qty.getKinds = getKinds;\n\n  Qty.swiftConverter = swiftConverter;\n\n  Qty.Error = QtyError;\n\n  assign(Qty.prototype, {\n    // Returns new instance with units of this\n    add: function(other) {\n      if (isString(other)) {\n        other = Qty(other);\n      }\n\n      if (!this.isCompatible(other)) {\n        throwIncompatibleUnits(this.units(), other.units());\n      }\n\n      if (this.isTemperature() && other.isTemperature()) {\n        throw new QtyError(\"Cannot add two temperatures\");\n      }\n      else if (this.isTemperature()) {\n        return addTempDegrees(this, other);\n      }\n      else if (other.isTemperature()) {\n        return addTempDegrees(other, this);\n      }\n\n      return Qty({\"scalar\": this.scalar + other.to(this).scalar, \"numerator\": this.numerator, \"denominator\": this.denominator});\n    },\n\n    sub: function(other) {\n      if (isString(other)) {\n        other = Qty(other);\n      }\n\n      if (!this.isCompatible(other)) {\n        throwIncompatibleUnits(this.units(), other.units());\n      }\n\n      if (this.isTemperature() && other.isTemperature()) {\n        return subtractTemperatures(this,other);\n      }\n      else if (this.isTemperature()) {\n        return subtractTempDegrees(this,other);\n      }\n      else if (other.isTemperature()) {\n        throw new QtyError(\"Cannot subtract a temperature from a differential degree unit\");\n      }\n\n      return Qty({\"scalar\": this.scalar - other.to(this).scalar, \"numerator\": this.numerator, \"denominator\": this.denominator});\n    },\n\n    mul: function(other) {\n      if (isNumber(other)) {\n        return Qty({\"scalar\": mulSafe(this.scalar, other), \"numerator\": this.numerator, \"denominator\": this.denominator});\n      }\n      else if (isString(other)) {\n        other = Qty(other);\n      }\n\n      if ((this.isTemperature() || other.isTemperature()) && !(this.isUnitless() || other.isUnitless())) {\n        throw new QtyError(\"Cannot multiply by temperatures\");\n      }\n\n      // Quantities should be multiplied with same units if compatible, with base units else\n      var op1 = this;\n      var op2 = other;\n\n      // so as not to confuse results, multiplication and division between temperature degrees will maintain original unit info in num/den\n      // multiplication and division between deg[CFRK] can never factor each other out, only themselves: \"degK*degC/degC^2\" == \"degK/degC\"\n      if (op1.isCompatible(op2) && op1.signature !== 400) {\n        op2 = op2.to(op1);\n      }\n      var numdenscale = cleanTerms(op1.numerator, op1.denominator, op2.numerator, op2.denominator);\n\n      return Qty({\"scalar\": mulSafe(op1.scalar, op2.scalar, numdenscale[2]), \"numerator\": numdenscale[0], \"denominator\": numdenscale[1]});\n    },\n\n    div: function(other) {\n      if (isNumber(other)) {\n        if (other === 0) {\n          throw new QtyError(\"Divide by zero\");\n        }\n        return Qty({\"scalar\": this.scalar / other, \"numerator\": this.numerator, \"denominator\": this.denominator});\n      }\n      else if (isString(other)) {\n        other = Qty(other);\n      }\n\n      if (other.scalar === 0) {\n        throw new QtyError(\"Divide by zero\");\n      }\n\n      if (other.isTemperature()) {\n        throw new QtyError(\"Cannot divide with temperatures\");\n      }\n      else if (this.isTemperature() && !other.isUnitless()) {\n        throw new QtyError(\"Cannot divide with temperatures\");\n      }\n\n      // Quantities should be multiplied with same units if compatible, with base units else\n      var op1 = this;\n      var op2 = other;\n\n      // so as not to confuse results, multiplication and division between temperature degrees will maintain original unit info in num/den\n      // multiplication and division between deg[CFRK] can never factor each other out, only themselves: \"degK*degC/degC^2\" == \"degK/degC\"\n      if (op1.isCompatible(op2) && op1.signature !== 400) {\n        op2 = op2.to(op1);\n      }\n      var numdenscale = cleanTerms(op1.numerator, op1.denominator, op2.denominator, op2.numerator);\n\n      return Qty({\"scalar\": mulSafe(op1.scalar, numdenscale[2]) / op2.scalar, \"numerator\": numdenscale[0], \"denominator\": numdenscale[1]});\n    },\n\n    // Returns a Qty that is the inverse of this Qty,\n    inverse: function() {\n      if (this.isTemperature()) {\n        throw new QtyError(\"Cannot divide with temperatures\");\n      }\n      if (this.scalar === 0) {\n        throw new QtyError(\"Divide by zero\");\n      }\n      return Qty({\"scalar\": 1 / this.scalar, \"numerator\": this.denominator, \"denominator\": this.numerator});\n    }\n  });\n\n  function cleanTerms(num1, den1, num2, den2) {\n    function notUnity(val) {\n      return val !== UNITY;\n    }\n\n    num1 = num1.filter(notUnity);\n    num2 = num2.filter(notUnity);\n    den1 = den1.filter(notUnity);\n    den2 = den2.filter(notUnity);\n\n    var combined = {};\n\n    function combineTerms(terms, direction) {\n      var k;\n      var prefix;\n      var prefixValue;\n      for (var i = 0; i < terms.length; i++) {\n        if (PREFIX_VALUES[terms[i]]) {\n          k = terms[i + 1];\n          prefix = terms[i];\n          prefixValue = PREFIX_VALUES[prefix];\n          i++;\n        }\n        else {\n          k = terms[i];\n          prefix = null;\n          prefixValue = 1;\n        }\n        if (k && k !== UNITY) {\n          if (combined[k]) {\n            combined[k][0] += direction;\n            var combinedPrefixValue = combined[k][2] ? PREFIX_VALUES[combined[k][2]] : 1;\n            combined[k][direction === 1 ? 3 : 4] *= divSafe(prefixValue, combinedPrefixValue);\n          }\n          else {\n            combined[k] = [direction, k, prefix, 1, 1];\n          }\n        }\n      }\n    }\n\n    combineTerms(num1, 1);\n    combineTerms(den1, -1);\n    combineTerms(num2, 1);\n    combineTerms(den2, -1);\n\n    var num = [];\n    var den = [];\n    var scale = 1;\n\n    for (var prop in combined) {\n      if (combined.hasOwnProperty(prop)) {\n        var item = combined[prop];\n        var n;\n        if (item[0] > 0) {\n          for (n = 0; n < item[0]; n++) {\n            num.push(item[2] === null ? item[1] : [item[2], item[1]]);\n          }\n        }\n        else if (item[0] < 0) {\n          for (n = 0; n < -item[0]; n++) {\n            den.push(item[2] === null ? item[1] : [item[2], item[1]]);\n          }\n        }\n        scale *= divSafe(item[3], item[4]);\n      }\n    }\n\n    if (num.length === 0) {\n      num = UNITY_ARRAY;\n    }\n    if (den.length === 0) {\n      den = UNITY_ARRAY;\n    }\n\n    // Flatten\n    num = num.reduce(function(a,b) {\n      return a.concat(b);\n    }, []);\n    den = den.reduce(function(a,b) {\n      return a.concat(b);\n    }, []);\n\n    return [num, den, scale];\n  }\n\n  assign(Qty.prototype, {\n    eq: function(other) {\n      return this.compareTo(other) === 0;\n    },\n\n    lt: function(other) {\n      return this.compareTo(other) === -1;\n    },\n\n    lte: function(other) {\n      return this.eq(other) || this.lt(other);\n    },\n\n    gt: function(other) {\n      return this.compareTo(other) === 1;\n    },\n\n    gte: function(other) {\n      return this.eq(other) || this.gt(other);\n    },\n\n    // Compare two Qty objects. Throws an exception if they are not of compatible types.\n    // Comparisons are done based on the value of the quantity in base SI units.\n    //\n    // NOTE: We cannot compare inverses as that breaks the general compareTo contract:\n    //   if a.compareTo(b) < 0 then b.compareTo(a) > 0\n    //   if a.compareTo(b) == 0 then b.compareTo(a) == 0\n    //\n    //   Since \"10S\" == \".1ohm\" (10 > .1) and \"10ohm\" == \".1S\" (10 > .1)\n    //     Qty(\"10S\").inverse().compareTo(\"10ohm\") == -1\n    //     Qty(\"10ohm\").inverse().compareTo(\"10S\") == -1\n    //\n    //   If including inverses in the sort is needed, I suggest writing: Qty.sort(qtyArray,units)\n    compareTo: function(other) {\n      if (isString(other)) {\n        return this.compareTo(Qty(other));\n      }\n      if (!this.isCompatible(other)) {\n        throwIncompatibleUnits(this.units(), other.units());\n      }\n      if (this.baseScalar < other.baseScalar) {\n        return -1;\n      }\n      else if (this.baseScalar === other.baseScalar) {\n        return 0;\n      }\n      else if (this.baseScalar > other.baseScalar) {\n        return 1;\n      }\n    },\n\n    // Return true if quantities and units match\n    // Unit(\"100 cm\").same(Unit(\"100 cm\"))  # => true\n    // Unit(\"100 cm\").same(Unit(\"1 m\"))     # => false\n    same: function(other) {\n      return (this.scalar === other.scalar) && (this.units() === other.units());\n    }\n  });\n\n  assign(Qty.prototype, {\n    // returns true if no associated units\n    // false, even if the units are \"unitless\" like 'radians, each, etc'\n    isUnitless: function() {\n      return [this.numerator, this.denominator].every(function(item) {\n        return compareArray(item, UNITY_ARRAY);\n      });\n    },\n\n    /*\n    check to see if units are compatible, but not the scalar part\n    this check is done by comparing signatures for performance reasons\n    if passed a string, it will create a unit object with the string and then do the comparison\n    this permits a syntax like:\n    unit =~ \"mm\"\n    if you want to do a regexp on the unit string do this ...\n    unit.units =~ /regexp/\n    */\n    isCompatible: function(other) {\n      if (isString(other)) {\n        return this.isCompatible(Qty(other));\n      }\n\n      if (!(isQty(other))) {\n        return false;\n      }\n\n      if (other.signature !== undefined) {\n        return this.signature === other.signature;\n      }\n      else {\n        return false;\n      }\n    },\n\n    /*\n    check to see if units are inverse of each other, but not the scalar part\n    this check is done by comparing signatures for performance reasons\n    if passed a string, it will create a unit object with the string and then do the comparison\n    this permits a syntax like:\n    unit =~ \"mm\"\n    if you want to do a regexp on the unit string do this ...\n    unit.units =~ /regexp/\n    */\n    isInverse: function(other) {\n      return this.inverse().isCompatible(other);\n    },\n\n    // Returns 'true' if the Unit is represented in base units\n    isBase: function() {\n      if (this._isBase !== undefined) {\n        return this._isBase;\n      }\n      if (this.isDegrees() && this.numerator[0].match(/<(kelvin|temp-K)>/)) {\n        this._isBase = true;\n        return this._isBase;\n      }\n\n      this.numerator.concat(this.denominator).forEach(function(item) {\n        if (item !== UNITY && BASE_UNITS.indexOf(item) === -1 ) {\n          this._isBase = false;\n        }\n      }, this);\n      if (this._isBase === false) {\n        return this._isBase;\n      }\n      this._isBase = true;\n      return this._isBase;\n    }\n  });\n\n  function NestedMap() {}\n\n  NestedMap.prototype.get = function(keys) {\n\n    // Allows to pass key1, key2, ... instead of [key1, key2, ...]\n    if (arguments.length > 1) {\n      // Slower with Firefox but faster with Chrome than\n      // Array.prototype.slice.call(arguments)\n      // See http://jsperf.com/array-apply-versus-array-prototype-slice-call\n      keys = Array.apply(null, arguments);\n    }\n\n    return keys.reduce(function(map, key, index) {\n      if (map) {\n\n        var childMap = map[key];\n\n        if (index === keys.length - 1) {\n          return childMap ? childMap.data : undefined;\n        }\n        else {\n          return childMap;\n        }\n      }\n    },\n    this);\n  };\n\n  NestedMap.prototype.set = function(keys, value) {\n\n    if (arguments.length > 2) {\n      keys = Array.prototype.slice.call(arguments, 0, -1);\n      value = arguments[arguments.length - 1];\n    }\n\n    return keys.reduce(function(map, key, index) {\n\n      var childMap = map[key];\n      if (childMap === undefined) {\n        childMap = map[key] = {};\n      }\n\n      if (index === keys.length - 1) {\n        childMap.data = value;\n        return value;\n      }\n      else {\n        return childMap;\n      }\n    }, this);\n  };\n\n  /**\n   * Default formatter\n   *\n   * @param {number} scalar - scalar value\n   * @param {string} units - units as string\n   *\n   * @returns {string} formatted result\n   */\n  function defaultFormatter(scalar, units) {\n    return (scalar + \" \" + units).trim();\n  }\n\n  /**\n   *\n   * Configurable Qty default formatter\n   *\n   * @type {function}\n   *\n   * @param {number} scalar\n   * @param {string} units\n   *\n   * @returns {string} formatted result\n   */\n  Qty.formatter = defaultFormatter;\n\n  assign(Qty.prototype, {\n\n    // returns the 'unit' part of the Unit object without the scalar\n    units: function() {\n      if (this._units !== undefined) {\n        return this._units;\n      }\n\n      var numIsUnity = compareArray(this.numerator, UNITY_ARRAY);\n      var denIsUnity = compareArray(this.denominator, UNITY_ARRAY);\n      if (numIsUnity && denIsUnity) {\n        this._units = \"\";\n        return this._units;\n      }\n\n      var numUnits = stringifyUnits(this.numerator);\n      var denUnits = stringifyUnits(this.denominator);\n      this._units = numUnits + (denIsUnity ? \"\" : (\"/\" + denUnits));\n      return this._units;\n    },\n\n    /**\n     * Stringifies the quantity\n     * Deprecation notice: only units parameter is supported.\n     *\n     * @param {(number|string|Qty)} targetUnitsOrMaxDecimalsOrPrec -\n     *                              target units if string,\n     *                              max number of decimals if number,\n     *                              passed to #toPrec before converting if Qty\n     *\n     * @param {number=} maxDecimals - Maximum number of decimals of\n     *                                formatted output\n     *\n     * @returns {string} reparseable quantity as string\n     */\n    toString: function(targetUnitsOrMaxDecimalsOrPrec, maxDecimals) {\n      var targetUnits;\n      if (isNumber(targetUnitsOrMaxDecimalsOrPrec)) {\n        targetUnits = this.units();\n        maxDecimals = targetUnitsOrMaxDecimalsOrPrec;\n      }\n      else if (isString(targetUnitsOrMaxDecimalsOrPrec)) {\n        targetUnits = targetUnitsOrMaxDecimalsOrPrec;\n      }\n      else if (isQty(targetUnitsOrMaxDecimalsOrPrec)) {\n        return this.toPrec(targetUnitsOrMaxDecimalsOrPrec).toString(maxDecimals);\n      }\n\n      var out = this.to(targetUnits);\n\n      var outScalar = maxDecimals !== undefined ? round(out.scalar, maxDecimals) : out.scalar;\n      out = (outScalar + \" \" + out.units()).trim();\n      return out;\n    },\n\n    /**\n     * Format the quantity according to optional passed target units\n     * and formatter\n     *\n     * @param {string} [targetUnits=current units] -\n     *                 optional units to convert to before formatting\n     *\n     * @param {function} [formatter=Qty.formatter] -\n     *                   delegates formatting to formatter callback.\n     *                   formatter is called back with two parameters (scalar, units)\n     *                   and should return formatted result.\n     *                   If unspecified, formatting is delegated to default formatter\n     *                   set to Qty.formatter\n     *\n     * @example\n     * var roundingAndLocalizingFormatter = function(scalar, units) {\n     *   // localize or limit scalar to n max decimals for instance\n     *   // return formatted result\n     * };\n     * var qty = Qty('1.1234 m');\n     * qty.format(); // same units, default formatter => \"1.234 m\"\n     * qty.format(\"cm\"); // converted to \"cm\", default formatter => \"123.45 cm\"\n     * qty.format(roundingAndLocalizingFormatter); // same units, custom formatter => \"1,2 m\"\n     * qty.format(\"cm\", roundingAndLocalizingFormatter); // convert to \"cm\", custom formatter => \"123,4 cm\"\n     *\n     * @returns {string} quantity as string\n     */\n    format: function(targetUnits, formatter) {\n      if (arguments.length === 1) {\n        if (typeof targetUnits === \"function\") {\n          formatter = targetUnits;\n          targetUnits = undefined;\n        }\n      }\n\n      formatter = formatter || Qty.formatter;\n      var targetQty = this.to(targetUnits);\n      return formatter.call(this, targetQty.scalar, targetQty.units());\n    }\n  });\n\n  var stringifiedUnitsCache = new NestedMap();\n  /**\n   * Returns a string representing a normalized unit array\n   *\n   * @param {string[]} units Normalized unit array\n   * @returns {string} String representing passed normalized unit array and\n   *   suitable for output\n   *\n   */\n  function stringifyUnits(units) {\n\n    var stringified = stringifiedUnitsCache.get(units);\n    if (stringified) {\n      return stringified;\n    }\n\n    var isUnity = compareArray(units, UNITY_ARRAY);\n    if (isUnity) {\n      stringified = \"1\";\n    }\n    else {\n      stringified = simplify(getOutputNames(units)).join(\"*\");\n    }\n\n    // Cache result\n    stringifiedUnitsCache.set(units, stringified);\n\n    return stringified;\n  }\n\n  function getOutputNames(units) {\n    var unitNames = [], token, tokenNext;\n    for (var i = 0; i < units.length; i++) {\n      token = units[i];\n      tokenNext = units[i + 1];\n      if (PREFIX_VALUES[token]) {\n        unitNames.push(OUTPUT_MAP[token] + OUTPUT_MAP[tokenNext]);\n        i++;\n      }\n      else {\n        unitNames.push(OUTPUT_MAP[token]);\n      }\n    }\n    return unitNames;\n  }\n\n  function simplify(units) {\n    // this turns ['s','m','s'] into ['s2','m']\n\n    var unitCounts = units.reduce(function(acc, unit) {\n      var unitCounter = acc[unit];\n      if (!unitCounter) {\n        acc.push(unitCounter = acc[unit] = [unit, 0]);\n      }\n\n      unitCounter[1]++;\n\n      return acc;\n    }, []);\n\n    return unitCounts.map(function(unitCount) {\n      return unitCount[0] + (unitCount[1] > 1 ? unitCount[1] : \"\");\n    });\n  }\n\n  Qty.version = \"1.7.6\";\n\n  return Qty;\n\n})));\n","import Qty from 'js-quantities';\nexport function convertUnit(array, fromUnit, toUnit) {\n    fromUnit = normalize(fromUnit);\n    toUnit = normalize(toUnit);\n    if (fromUnit === toUnit)\n        return array;\n    try {\n        const convert = Qty.swiftConverter(fromUnit, toUnit); // Configures converter\n        return convert(array);\n    }\n    catch (e) {\n        return undefined;\n    }\n}\nfunction normalize(unit) {\n    unit = unit.replace(/°C/g, 'tempC');\n    unit = unit.replace(/°F/g, 'tempF');\n    unit = unit.replace(/(^|\\W)K(\\W|$)/g, '$1tempK$2');\n    return unit;\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29udmVydFVuaXQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvdXRpbC9jb252ZXJ0VW5pdC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEdBQUcsTUFBTSxlQUFlLENBQUM7QUFjaEMsTUFBTSxVQUFVLFdBQVcsQ0FDekIsS0FBVSxFQUNWLFFBQWdCLEVBQ2hCLE1BQWM7SUFFZCxRQUFRLEdBQUcsU0FBUyxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQy9CLE1BQU0sR0FBRyxTQUFTLENBQUMsTUFBTSxDQUFDLENBQUM7SUFFM0IsSUFBSSxRQUFRLEtBQUssTUFBTTtRQUFFLE9BQU8sS0FBSyxDQUFDO0lBRXRDLElBQUk7UUFDRixNQUFNLE9BQU8sR0FBRyxHQUFHLENBQUMsY0FBYyxDQUFDLFFBQVEsRUFBRSxNQUFNLENBQUMsQ0FBQyxDQUFDLHVCQUF1QjtRQUM3RSxPQUFPLE9BQU8sQ0FBQyxLQUFLLENBQUMsQ0FBQztLQUN2QjtJQUFDLE9BQU8sQ0FBQyxFQUFFO1FBQ1YsT0FBTyxTQUFTLENBQUM7S0FDbEI7QUFDSCxDQUFDO0FBRUQsU0FBUyxTQUFTLENBQUMsSUFBWTtJQUM3QixJQUFJLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxLQUFLLEVBQUUsT0FBTyxDQUFDLENBQUM7SUFDcEMsSUFBSSxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsS0FBSyxFQUFFLE9BQU8sQ0FBQyxDQUFDO0lBQ3BDLElBQUksR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLGdCQUFnQixFQUFFLFdBQVcsQ0FBQyxDQUFDO0lBQ25ELE9BQU8sSUFBSSxDQUFDO0FBQ2QsQ0FBQyJ9","const testRegExp = /^\\/((?:\\\\\\/|[^/])+)\\/([migyu]{0,5})?$/;\nexport function ensureRegexp(string) {\n    const parts = testRegExp.exec(string);\n    if (parts) {\n        try {\n            return new RegExp(parts[1], parts[2]);\n        }\n        catch (err) {\n            return stringToRegexp(string);\n        }\n    }\n    else {\n        return stringToRegexp(string);\n    }\n}\nfunction stringToRegexp(string, flags = 'i') {\n    return new RegExp(string.replace(/[[\\]\\\\{}()+*?.$^|]/g, function (match) {\n        return `\\\\${match}`;\n    }), flags);\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZW5zdXJlUmVnZXhwLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL3V0aWwvZW5zdXJlUmVnZXhwLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE1BQU0sVUFBVSxHQUFHLHVDQUF1QyxDQUFDO0FBRTNELE1BQU0sVUFBVSxZQUFZLENBQUMsTUFBVztJQUN0QyxNQUFNLEtBQUssR0FBRyxVQUFVLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQ3RDLElBQUksS0FBSyxFQUFFO1FBQ1QsSUFBSTtZQUNGLE9BQU8sSUFBSSxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxFQUFFLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1NBQ3ZDO1FBQUMsT0FBTyxHQUFHLEVBQUU7WUFDWixPQUFPLGNBQWMsQ0FBQyxNQUFNLENBQUMsQ0FBQztTQUMvQjtLQUNGO1NBQU07UUFDTCxPQUFPLGNBQWMsQ0FBQyxNQUFNLENBQUMsQ0FBQztLQUMvQjtBQUNILENBQUM7QUFFRCxTQUFTLGNBQWMsQ0FBQyxNQUFXLEVBQUUsS0FBSyxHQUFHLEdBQUc7SUFDOUMsT0FBTyxJQUFJLE1BQU0sQ0FDZixNQUFNLENBQUMsT0FBTyxDQUFDLHFCQUFxQixFQUFFLFVBQVUsS0FBYTtRQUMzRCxPQUFPLEtBQUssS0FBSyxFQUFFLENBQUM7SUFDdEIsQ0FBQyxDQUFDLEVBQ0YsS0FBSyxDQUNOLENBQUM7QUFDSixDQUFDIn0=","import max from 'ml-array-max';\nimport min from 'ml-array-min';\nimport { xIsMonotone } from 'ml-spectra-processing';\nimport { convertUnit } from './convertUnit';\nexport function getConvertedVariable(variable, newUnits) {\n    const data = variable.units !== undefined && variable.units !== newUnits // would be nice if convertUnit would allow typedArray\n        ? convertUnit(Array.from(variable.data), variable.units, newUnits)\n        : variable.data;\n    return {\n        units: newUnits,\n        label: variable.label.replace(`[${variable.units || ''}]`, `[${newUnits}]`),\n        data: data || [],\n        min: data ? min(data) : undefined,\n        max: data ? max(data) : undefined,\n        isMonotone: xIsMonotone(data),\n    };\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2V0Q29udmVydGVkVmFyaWFibGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvdXRpbC9nZXRDb252ZXJ0ZWRWYXJpYWJsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEdBQUcsTUFBTSxjQUFjLENBQUM7QUFDL0IsT0FBTyxHQUFHLE1BQU0sY0FBYyxDQUFDO0FBQy9CLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUlwRCxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRTVDLE1BQU0sVUFBVSxvQkFBb0IsQ0FDbEMsUUFBc0IsRUFDdEIsUUFBZ0I7SUFFaEIsTUFBTSxJQUFJLEdBQ1IsUUFBUSxDQUFDLEtBQUssS0FBSyxTQUFTLElBQUksUUFBUSxDQUFDLEtBQUssS0FBSyxRQUFRLENBQUMsc0RBQXNEO1FBQ2hILENBQUMsQ0FBQyxXQUFXLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLEVBQUUsUUFBUSxDQUFDLEtBQUssRUFBRSxRQUFRLENBQUM7UUFDbEUsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUM7SUFDcEIsT0FBTztRQUNMLEtBQUssRUFBRSxRQUFRO1FBQ2YsS0FBSyxFQUFFLFFBQVEsQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLElBQUksUUFBUSxDQUFDLEtBQUssSUFBSSxFQUFFLEdBQUcsRUFBRSxJQUFJLFFBQVEsR0FBRyxDQUFDO1FBQzNFLElBQUksRUFBRSxJQUFJLElBQUksRUFBRTtRQUNoQixHQUFHLEVBQUUsSUFBSSxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLFNBQVM7UUFDakMsR0FBRyxFQUFFLElBQUksQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxTQUFTO1FBQ2pDLFVBQVUsRUFBRSxXQUFXLENBQUMsSUFBSSxDQUFDO0tBQzlCLENBQUM7QUFDSixDQUFDIn0=","import { convertUnit } from './convertUnit';\nimport { ensureRegexp } from './ensureRegexp';\nimport { getConvertedVariable } from './getConvertedVariable';\n/**\n * Retrieve the spectrum with only X/Y data that match all the selectors\n * If more than one variable match the selector the 'x' or 'y' variable will be\n * taken\n */\nexport function getXYSpectrum(spectra = [], selector = {}) {\n    if (spectra.length < 1)\n        return;\n    for (let spectrum of spectra) {\n        let variableNames = Object.keys(spectrum.variables);\n        if (!(variableNames.length > 1))\n            continue;\n        let { dataType, title, xUnits, yUnits, variables, xVariable = 'x', yVariable = 'y', units, labels, xLabel, yLabel, meta, } = selector;\n        // we filter on general spectrum information\n        if (dataType) {\n            dataType = ensureRegexp(dataType);\n            if (!spectrum.dataType || !spectrum.dataType.match(dataType))\n                continue;\n        }\n        if (title) {\n            title = ensureRegexp(title);\n            if (!spectrum.title || !spectrum.title.match(title))\n                continue;\n        }\n        if (meta && typeof meta === 'object') {\n            if (!spectrum.meta)\n                continue;\n            for (let key in spectrum.meta) {\n                if (!spectrum.meta[key])\n                    continue;\n                let value = ensureRegexp(spectrum.meta[key]);\n                if (!spectrum.meta[key].match(value))\n                    continue;\n            }\n        }\n        if (units && !xUnits && !yUnits)\n            [yUnits, xUnits] = units.split(/\\s*vs\\s*/);\n        if (labels && !xLabel && !yLabel) {\n            [yLabel, xLabel] = labels.split(/\\s*vs\\s*/);\n        }\n        if (variables)\n            [yVariable, xVariable] = variables.split(/\\s*vs\\s*/);\n        if (xLabel)\n            xLabel = ensureRegexp(xLabel);\n        if (yLabel)\n            yLabel = ensureRegexp(yLabel);\n        let x = getPossibleVariable(spectrum.variables, {\n            units: xUnits,\n            label: xLabel,\n            variableName: xVariable,\n        });\n        let y = getPossibleVariable(spectrum.variables, {\n            units: yUnits,\n            label: yLabel,\n            variableName: yVariable,\n        });\n        if (x && y) {\n            return {\n                title: spectrum.title,\n                dataType: spectrum.dataType,\n                meta: spectrum.meta,\n                variables: { x, y },\n            };\n        }\n    }\n    return;\n}\nfunction getPossibleVariable(variables, selector = {}) {\n    const { units, label, variableName } = selector;\n    let possible = { ...variables };\n    if (units !== undefined) {\n        for (let key in possible) {\n            let converted = convertUnit(1, variables[key].units || '', units);\n            if (converted) {\n                possible[key] = getConvertedVariable(variables[key], units);\n            }\n            else {\n                possible[key] = undefined;\n            }\n        }\n    }\n    if (label !== undefined) {\n        for (let key in possible) {\n            if (!variables[key].label.match(label)) {\n                possible[key] = undefined;\n            }\n        }\n    }\n    if (variableName !== undefined) {\n        if (possible[variableName])\n            return possible[variableName];\n        if (possible[variableName.toUpperCase()]) {\n            return possible[variableName.toUpperCase()];\n        }\n        if (possible[variableName.toLowerCase()]) {\n            return possible[variableName.toLowerCase()];\n        }\n    }\n    const possibleFiltered = Object.values(possible).filter((val) => val !== undefined);\n    if (possibleFiltered.length > 0) {\n        return possibleFiltered[0];\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2V0WFlTcGVjdHJ1bS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy91dGlsL2dldFhZU3BlY3RydW0udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBR0EsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUM1QyxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFDOUMsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFFOUQ7Ozs7R0FJRztBQUNILE1BQU0sVUFBVSxhQUFhLENBQzNCLFVBQStCLEVBQUUsRUFDakMsV0FBeUIsRUFBRTtJQUUzQixJQUFJLE9BQU8sQ0FBQyxNQUFNLEdBQUcsQ0FBQztRQUFFLE9BQU87SUFFL0IsS0FBSyxJQUFJLFFBQVEsSUFBSSxPQUFPLEVBQUU7UUFDNUIsSUFBSSxhQUFhLEdBQUcsTUFBTSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsU0FBUyxDQUFDLENBQUM7UUFDcEQsSUFBSSxDQUFDLENBQUMsYUFBYSxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUM7WUFBRSxTQUFTO1FBQzFDLElBQUksRUFDRixRQUFRLEVBQ1IsS0FBSyxFQUNMLE1BQU0sRUFDTixNQUFNLEVBQ04sU0FBUyxFQUNULFNBQVMsR0FBRyxHQUFHLEVBQ2YsU0FBUyxHQUFHLEdBQUcsRUFDZixLQUFLLEVBQ0wsTUFBTSxFQUNOLE1BQU0sRUFDTixNQUFNLEVBQ04sSUFBSSxHQUNMLEdBQUcsUUFBUSxDQUFDO1FBRWIsNENBQTRDO1FBQzVDLElBQUksUUFBUSxFQUFFO1lBQ1osUUFBUSxHQUFHLFlBQVksQ0FBQyxRQUFRLENBQUMsQ0FBQztZQUNsQyxJQUFJLENBQUMsUUFBUSxDQUFDLFFBQVEsSUFBSSxDQUFDLFFBQVEsQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLFFBQVEsQ0FBQztnQkFBRSxTQUFTO1NBQ3hFO1FBRUQsSUFBSSxLQUFLLEVBQUU7WUFDVCxLQUFLLEdBQUcsWUFBWSxDQUFDLEtBQUssQ0FBQyxDQUFDO1lBQzVCLElBQUksQ0FBQyxRQUFRLENBQUMsS0FBSyxJQUFJLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDO2dCQUFFLFNBQVM7U0FDL0Q7UUFFRCxJQUFJLElBQUksSUFBSSxPQUFPLElBQUksS0FBSyxRQUFRLEVBQUU7WUFDcEMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJO2dCQUFFLFNBQVM7WUFDN0IsS0FBSyxJQUFJLEdBQUcsSUFBSSxRQUFRLENBQUMsSUFBSSxFQUFFO2dCQUM3QixJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUM7b0JBQUUsU0FBUztnQkFDbEMsSUFBSSxLQUFLLEdBQUcsWUFBWSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQztnQkFDN0MsSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQztvQkFBRSxTQUFTO2FBQ2hEO1NBQ0Y7UUFFRCxJQUFJLEtBQUssSUFBSSxDQUFDLE1BQU0sSUFBSSxDQUFDLE1BQU07WUFBRSxDQUFDLE1BQU0sRUFBRSxNQUFNLENBQUMsR0FBRyxLQUFLLENBQUMsS0FBSyxDQUFDLFVBQVUsQ0FBQyxDQUFDO1FBQzVFLElBQUksTUFBTSxJQUFJLENBQUMsTUFBTSxJQUFJLENBQUMsTUFBTSxFQUFFO1lBQ2hDLENBQUMsTUFBTSxFQUFFLE1BQU0sQ0FBQyxHQUFHLE1BQU0sQ0FBQyxLQUFLLENBQUMsVUFBVSxDQUFDLENBQUM7U0FDN0M7UUFDRCxJQUFJLFNBQVM7WUFBRSxDQUFDLFNBQVMsRUFBRSxTQUFTLENBQUMsR0FBRyxTQUFTLENBQUMsS0FBSyxDQUFDLFVBQVUsQ0FBQyxDQUFDO1FBRXBFLElBQUksTUFBTTtZQUFFLE1BQU0sR0FBRyxZQUFZLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDMUMsSUFBSSxNQUFNO1lBQUUsTUFBTSxHQUFHLFlBQVksQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUUxQyxJQUFJLENBQUMsR0FBRyxtQkFBbUIsQ0FBQyxRQUFRLENBQUMsU0FBUyxFQUFFO1lBQzlDLEtBQUssRUFBRSxNQUFNO1lBQ2IsS0FBSyxFQUFFLE1BQU07WUFDYixZQUFZLEVBQUUsU0FBUztTQUN4QixDQUFDLENBQUM7UUFDSCxJQUFJLENBQUMsR0FBRyxtQkFBbUIsQ0FBQyxRQUFRLENBQUMsU0FBUyxFQUFFO1lBQzlDLEtBQUssRUFBRSxNQUFNO1lBQ2IsS0FBSyxFQUFFLE1BQU07WUFDYixZQUFZLEVBQUUsU0FBUztTQUN4QixDQUFDLENBQUM7UUFFSCxJQUFJLENBQUMsSUFBSSxDQUFDLEVBQUU7WUFDVixPQUFPO2dCQUNMLEtBQUssRUFBRSxRQUFRLENBQUMsS0FBSztnQkFDckIsUUFBUSxFQUFFLFFBQVEsQ0FBQyxRQUFRO2dCQUMzQixJQUFJLEVBQUUsUUFBUSxDQUFDLElBQUk7Z0JBQ25CLFNBQVMsRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUU7YUFDcEIsQ0FBQztTQUNIO0tBQ0Y7SUFDRCxPQUFPO0FBQ1QsQ0FBQztBQU9ELFNBQVMsbUJBQW1CLENBQzFCLFNBQXVDLEVBQ3ZDLFdBQXFCLEVBQUU7SUFFdkIsTUFBTSxFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsWUFBWSxFQUFFLEdBQUcsUUFBUSxDQUFDO0lBQ2hELElBQUksUUFBUSxHQUE2QyxFQUFFLEdBQUcsU0FBUyxFQUFFLENBQUM7SUFDMUUsSUFBSSxLQUFLLEtBQUssU0FBUyxFQUFFO1FBQ3ZCLEtBQUssSUFBSSxHQUFHLElBQUksUUFBUSxFQUFFO1lBQ3hCLElBQUksU0FBUyxHQUFHLFdBQVcsQ0FBQyxDQUFDLEVBQUUsU0FBUyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEtBQUssSUFBSSxFQUFFLEVBQUUsS0FBSyxDQUFDLENBQUM7WUFDbEUsSUFBSSxTQUFTLEVBQUU7Z0JBQ2IsUUFBUSxDQUFDLEdBQUcsQ0FBQyxHQUFHLG9CQUFvQixDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsRUFBRSxLQUFLLENBQUMsQ0FBQzthQUM3RDtpQkFBTTtnQkFDTCxRQUFRLENBQUMsR0FBRyxDQUFDLEdBQUcsU0FBUyxDQUFDO2FBQzNCO1NBQ0Y7S0FDRjtJQUVELElBQUksS0FBSyxLQUFLLFNBQVMsRUFBRTtRQUN2QixLQUFLLElBQUksR0FBRyxJQUFJLFFBQVEsRUFBRTtZQUN4QixJQUFJLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLEVBQUU7Z0JBQ3RDLFFBQVEsQ0FBQyxHQUFHLENBQUMsR0FBRyxTQUFTLENBQUM7YUFDM0I7U0FDRjtLQUNGO0lBRUQsSUFBSSxZQUFZLEtBQUssU0FBUyxFQUFFO1FBQzlCLElBQUksUUFBUSxDQUFDLFlBQVksQ0FBQztZQUFFLE9BQU8sUUFBUSxDQUFDLFlBQVksQ0FBQyxDQUFDO1FBQzFELElBQUksUUFBUSxDQUFDLFlBQVksQ0FBQyxXQUFXLEVBQUUsQ0FBQyxFQUFFO1lBQ3hDLE9BQU8sUUFBUSxDQUFDLFlBQVksQ0FBQyxXQUFXLEVBQUUsQ0FBQyxDQUFDO1NBQzdDO1FBQ0QsSUFBSSxRQUFRLENBQUMsWUFBWSxDQUFDLFdBQVcsRUFBRSxDQUFDLEVBQUU7WUFDeEMsT0FBTyxRQUFRLENBQUMsWUFBWSxDQUFDLFdBQVcsRUFBRSxDQUFDLENBQUM7U0FDN0M7S0FDRjtJQUVELE1BQU0sZ0JBQWdCLEdBQUcsTUFBTSxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsQ0FBQyxNQUFNLENBQ3JELENBQUMsR0FBRyxFQUFFLEVBQUUsQ0FBQyxHQUFHLEtBQUssU0FBUyxDQUMzQixDQUFDO0lBQ0YsSUFBSSxnQkFBZ0IsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxFQUFFO1FBQy9CLE9BQU8sZ0JBQWdCLENBQUMsQ0FBQyxDQUFDLENBQUM7S0FDNUI7QUFDSCxDQUFDIn0=","import isAnyArray from 'is-any-array';\nimport max from 'ml-array-max';\nimport min from 'ml-array-min';\nimport { xIsMonotone } from 'ml-spectra-processing';\nimport { getNormalizedSpectrum } from './util/getNormalizedSpectrum';\nimport { getXYSpectrum } from './util/getXYSpectrum';\n/**\n * Class allowing to store and manipulate an analysis.\n * An analysis may contain one or more spectra that can be selected\n * based on their units\n */\nexport class Analysis {\n    constructor(options = {}) {\n        this.id = options.id || Math.random().toString(36).substring(2, 10);\n        this.label = options.label || this.id;\n        this.spectrumCallback = options.spectrumCallback;\n        this.spectra = [];\n        this.cache = {};\n    }\n    /**\n     * Add a spectrum in the internal spectra variable\n     */\n    pushSpectrum(variables, options = {}) {\n        this.spectra.push(standardizeData(variables, options, {\n            spectrumCallback: this.spectrumCallback,\n        }));\n        this.cache = {};\n    }\n    /**\n     * Retrieve a Spectrum based on x/y units\n     * @param selector.units Units separated by vs like for example \"g vs °C\"\n     * @param selector.xUnits if undefined takes the first variable\n     * @param selector.yUnits if undefined takes the second variable\n     */\n    getXYSpectrum(selector = {}) {\n        let id = JSON.stringify(selector);\n        if (!this.cache[id]) {\n            this.cache[id] = getXYSpectrum(this.spectra, selector);\n        }\n        return this.cache[id];\n    }\n    /**\n     * Retrieve a xy object\n     * @param selector.units Units separated by vs like for example \"g vs °C\"\n     * @param selector.xUnits if undefined takes the first variable\n     * @param selector.yUnits if undefined takes the second variable\n     */\n    getXY(selector = {}) {\n        let spectrum = this.getXYSpectrum(selector);\n        if (!spectrum)\n            return undefined;\n        return {\n            x: spectrum.variables.x.data,\n            y: spectrum.variables.y.data,\n        };\n    }\n    /**\n     * Return the data object for specific x/y units with possibly some\n     * normalization options\n     * @param options.selector.xUnits // if undefined takes the first variable\n     * @param options.selector.yUnits // if undefined takes the second variable\n     */\n    getNormalizedSpectrum(options = {}) {\n        const { normalization, selector } = options;\n        const spectrum = this.getXYSpectrum(selector);\n        if (!spectrum)\n            return undefined;\n        return getNormalizedSpectrum(spectrum, normalization);\n    }\n    /**\n     * Returns the first spectrum. This method could be improved in the future\n     * @returns\n     */\n    getSpectrum() {\n        return this.spectra[0];\n    }\n    /**\n     * Returns the xLabel\n     * @param selector.xUnits // if undefined takes the first variable\n     * @param selector.yUnits // if undefined takes the second variable\n     */\n    getXLabel(selector) {\n        var _a;\n        return (_a = this.getXYSpectrum(selector)) === null || _a === void 0 ? void 0 : _a.variables.x.label;\n    }\n    /**\n     * Returns the yLabel\n     * @param selector.xUnits // if undefined takes the first variable\n     * @param selector.yUnits // if undefined takes the second variable\n     */\n    getYLabel(selector) {\n        var _a;\n        return (_a = this.getXYSpectrum(selector)) === null || _a === void 0 ? void 0 : _a.variables.y.label;\n    }\n}\n/**\n * Internal function that ensure the order of x / y array\n */\nfunction standardizeData(variables, options, analysisOptions) {\n    let { meta = {}, tmp = {}, dataType = '', title = '' } = options;\n    const { spectrumCallback } = analysisOptions;\n    if (spectrumCallback) {\n        spectrumCallback(variables);\n    }\n    let xVariable = variables.x;\n    let yVariable = variables.y;\n    if (!xVariable || !yVariable) {\n        throw Error('A spectrum must contain at least x and y variables');\n    }\n    if (!isAnyArray(xVariable.data) || !isAnyArray(yVariable.data)) {\n        throw Error('x and y variables must contain an array data');\n    }\n    let x = xVariable.data;\n    let reverse = x && x.length > 1 && x[0] > x[x.length - 1];\n    for (let key in variables) {\n        let variable = variables[key];\n        if (reverse)\n            variable.data = variable.data.reverse();\n        variable.label = variable.label || key;\n        variable.units =\n            variable.units ||\n                variable.label.replace(/^.*[([](?<units>.*)[)\\]].*$/, '$<units>');\n        variable.min = min(variable.data);\n        variable.max = max(variable.data);\n        variable.isMonotone = xIsMonotone(variable.data);\n    }\n    return {\n        variables,\n        title,\n        dataType,\n        meta,\n        tmp,\n    };\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQW5hbHlzaXMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvQW5hbHlzaXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxVQUFVLE1BQU0sY0FBYyxDQUFDO0FBQ3RDLE9BQU8sR0FBRyxNQUFNLGNBQWMsQ0FBQztBQUMvQixPQUFPLEdBQUcsTUFBTSxjQUFjLENBQUM7QUFDL0IsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBUXBELE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLDhCQUE4QixDQUFDO0FBQ3JFLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQWdCckQ7Ozs7R0FJRztBQUNILE1BQU0sT0FBTyxRQUFRO0lBT25CLFlBQW1CLFVBQTJCLEVBQUU7UUFDOUMsSUFBSSxDQUFDLEVBQUUsR0FBRyxPQUFPLENBQUMsRUFBRSxJQUFJLElBQUksQ0FBQyxNQUFNLEVBQUUsQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDLENBQUMsU0FBUyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQztRQUNwRSxJQUFJLENBQUMsS0FBSyxHQUFHLE9BQU8sQ0FBQyxLQUFLLElBQUksSUFBSSxDQUFDLEVBQUUsQ0FBQztRQUN0QyxJQUFJLENBQUMsZ0JBQWdCLEdBQUcsT0FBTyxDQUFDLGdCQUFnQixDQUFDO1FBQ2pELElBQUksQ0FBQyxPQUFPLEdBQUcsRUFBRSxDQUFDO1FBQ2xCLElBQUksQ0FBQyxLQUFLLEdBQUcsRUFBRSxDQUFDO0lBQ2xCLENBQUM7SUFFRDs7T0FFRztJQUNJLFlBQVksQ0FDakIsU0FBdUMsRUFDdkMsVUFBMkMsRUFBRTtRQUU3QyxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FDZixlQUFlLENBQUMsU0FBUyxFQUFFLE9BQU8sRUFBRTtZQUNsQyxnQkFBZ0IsRUFBRSxJQUFJLENBQUMsZ0JBQWdCO1NBQ3hDLENBQUMsQ0FDSCxDQUFDO1FBQ0YsSUFBSSxD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","/**\n * Ensure that the data is string. If it is an ArrayBuffer it will be converted to string using TextDecoder.\n * @param {string|ArrayBuffer} blob\n * @param {object} [options={}]\n * @param {string} [options.encoding='utf8']\n * @returns {string}\n */\n\nexport function ensureString(blob, options = {}) {\n  const { encoding = 'utf8' } = options;\n  if (ArrayBuffer.isView(blob) || blob instanceof ArrayBuffer) {\n    const decoder = new TextDecoder(encoding);\n    return decoder.decode(blob);\n  }\n  return blob;\n}\n","const GC_MS_FIELDS = ['TIC', '.RIC', 'SCANNUMBER'];\n\nexport function complexChromatogram(result) {\n  let spectra = result.spectra;\n  let length = spectra.length;\n  let chromatogram = {\n    times: new Array(length),\n    series: {\n      ms: {\n        dimension: 2,\n        data: new Array(length),\n      },\n    },\n  };\n\n  let existingGCMSFields = [];\n  for (let i = 0; i < GC_MS_FIELDS.length; i++) {\n    let label = convertMSFieldToLabel(GC_MS_FIELDS[i]);\n    if (spectra[0][label]) {\n      existingGCMSFields.push(label);\n      chromatogram.series[label] = {\n        dimension: 1,\n        data: new Array(length),\n      };\n    }\n  }\n\n  for (let i = 0; i < length; i++) {\n    let spectrum = spectra[i];\n    chromatogram.times[i] = spectrum.pageValue;\n    for (let j = 0; j < existingGCMSFields.length; j++) {\n      chromatogram.series[existingGCMSFields[j]].data[i] = parseFloat(\n        spectrum[existingGCMSFields[j]],\n      );\n    }\n    if (spectrum.data) {\n      chromatogram.series.ms.data[i] = [spectrum.data.x, spectrum.data.y];\n    }\n  }\n  result.chromatogram = chromatogram;\n}\n\nexport function isMSField(canonicDataLabel) {\n  return GC_MS_FIELDS.indexOf(canonicDataLabel) !== -1;\n}\n\nexport function convertMSFieldToLabel(value) {\n  return value.toLowerCase().replace(/[^a-z0-9]/g, '');\n}\n","export default function convertToFloatArray(stringArray) {\n  let floatArray = [];\n  for (let i = 0; i < stringArray.length; i++) {\n    floatArray.push(parseFloat(stringArray[i]));\n  }\n  return floatArray;\n}\n","export default function fastParseXYData(spectrum, value) {\n  // TODO need to deal with result\n  //  console.log(value);\n  // we check if deltaX is defined otherwise we calculate it\n\n  let yFactor = spectrum.yFactor;\n  let deltaX = spectrum.deltaX;\n\n  spectrum.isXYdata = true;\n  let currentData = { x: [], y: [] };\n  spectrum.data = currentData;\n\n  let currentX = spectrum.firstX;\n  let currentY = spectrum.firstY;\n\n  // we skip the first line\n  //\n  let endLine = false;\n  let ascii;\n  let i = 0;\n  for (; i < value.length; i++) {\n    ascii = value.charCodeAt(i);\n    if (ascii === 13 || ascii === 10) {\n      endLine = true;\n    } else {\n      if (endLine) break;\n    }\n  }\n\n  // we proceed taking the i after the first line\n  let newLine = true;\n  let isDifference = false;\n  let isLastDifference = false;\n  let lastDifference = 0;\n  let isDuplicate = false;\n  let inComment = false;\n  let currentValue = 0; // can be a difference or a duplicate\n  let lastValue = 0; // must be the real last value\n  let isNegative = false;\n  let inValue = false;\n  let skipFirstValue = false;\n  let decimalPosition = 0;\n  for (; i <= value.length; i++) {\n    if (i === value.length) ascii = 13;\n    else ascii = value.charCodeAt(i);\n    if (inComment) {\n      // we should ignore the text if we are after $$\n      if (ascii === 13 || ascii === 10) {\n        newLine = true;\n        inComment = false;\n      }\n    } else {\n      // when is it a new value ?\n      // when it is not a digit, . or comma\n      // it is a number that is either new or we continue\n      if (ascii <= 57 && ascii >= 48) {\n        // a number\n        inValue = true;\n        if (decimalPosition > 0) {\n          currentValue += (ascii - 48) / Math.pow(10, decimalPosition++);\n        } else {\n          currentValue *= 10;\n          currentValue += ascii - 48;\n        }\n      } else if (ascii === 44 || ascii === 46) {\n        // a \",\" or \".\"\n        inValue = true;\n        decimalPosition++;\n      } else {\n        if (inValue) {\n          // need to process the previous value\n          if (newLine) {\n            newLine = false; // we don't check the X value\n            // console.log(\"NEW LINE\",isDifference, lastDifference);\n            // if new line and lastDifference, the first value is just a check !\n            // that we don't check ...\n            if (isLastDifference) skipFirstValue = true;\n          } else {\n            // need to deal with duplicate and differences\n            if (skipFirstValue) {\n              skipFirstValue = false;\n            } else {\n              if (isDifference) {\n                lastDifference = isNegative ? 0 - currentValue : currentValue;\n                isLastDifference = true;\n                isDifference = false;\n              } else if (!isDuplicate) {\n                lastValue = isNegative ? 0 - currentValue : currentValue;\n              }\n              let duplicate = isDuplicate ? currentValue - 1 : 1;\n              for (let j = 0; j < duplicate; j++) {\n                if (isLastDifference) {\n                  currentY += lastDifference;\n                } else {\n                  currentY = lastValue;\n                }\n                currentData.x.push(currentX);\n                currentData.y.push(currentY * yFactor);\n                currentX += deltaX;\n              }\n            }\n          }\n          isNegative = false;\n          currentValue = 0;\n          decimalPosition = 0;\n          inValue = false;\n          isDuplicate = false;\n        }\n\n        // positive SQZ digits @ A B C D E F G H I (ascii 64-73)\n        if (ascii < 74 && ascii > 63) {\n          inValue = true;\n          isLastDifference = false;\n          currentValue = ascii - 64;\n        } else if (ascii > 96 && ascii < 106) {\n          // negative SQZ digits a b c d e f g h i (ascii 97-105)\n          inValue = true;\n          isLastDifference = false;\n          currentValue = ascii - 96;\n          isNegative = true;\n        } else if (ascii === 115) {\n          // DUP digits S T U V W X Y Z s (ascii 83-90, 115)\n          inValue = true;\n          isDuplicate = true;\n          currentValue = 9;\n        } else if (ascii > 82 && ascii < 91) {\n          inValue = true;\n          isDuplicate = true;\n          currentValue = ascii - 82;\n        } else if (ascii > 73 && ascii < 83) {\n          // positive DIF digits % J K L M N O P Q R (ascii 37, 74-82)\n          inValue = true;\n          isDifference = true;\n          currentValue = ascii - 73;\n        } else if (ascii > 105 && ascii < 115) {\n          // negative DIF digits j k l m n o p q r (ascii 106-114)\n          inValue = true;\n          isDifference = true;\n          currentValue = ascii - 105;\n          isNegative = true;\n        } else if (ascii === 36 && value.charCodeAt(i + 1) === 36) {\n          // $ sign, we need to check the next one\n          inValue = true;\n          inComment = true;\n        } else if (ascii === 37) {\n          // positive DIF digits % J K L M N O P Q R (ascii 37, 74-82)\n          inValue = true;\n          isDifference = true;\n          currentValue = 0;\n          isNegative = false;\n        } else if (ascii === 45) {\n          // a \"-\"\n          // check if after there is a number, decimal or comma\n          let ascii2 = value.charCodeAt(i + 1);\n          if (\n            (ascii2 >= 48 && ascii2 <= 57) ||\n            ascii2 === 44 ||\n            ascii2 === 46\n          ) {\n            inValue = true;\n            if (!newLine) isLastDifference = false;\n            isNegative = true;\n          }\n        } else if (ascii === 13 || ascii === 10) {\n          newLine = true;\n          inComment = false;\n        }\n        // and now analyse the details ... space or tabulation\n        // if \"+\" we just don't care\n      }\n    }\n  }\n}\n","const removeCommentRegExp = /\\$\\$.*/;\nconst peakTableSplitRegExp = /[,\\t ]+/;\n\nexport default function parsePeakTable(spectrum, value, result) {\n  spectrum.isPeaktable = true;\n\n  if (!spectrum.variables || Object.keys(spectrum.variables) === 2) {\n    parseXY(spectrum, value, result);\n  } else {\n    parseXYZ(spectrum, value, result);\n  }\n\n  // we will add the data in the variables\n  if (spectrum.variables) {\n    for (let key in spectrum.variables) {\n      spectrum.variables[key].data = spectrum.data[key];\n    }\n  }\n}\n\nfunction parseXY(spectrum, value, result) {\n  let currentData = { x: [], y: [] };\n  spectrum.data = currentData;\n\n  // counts for around 20% of the time\n  let lines = value.split(/,? *,?[;\\r\\n]+ */);\n\n  for (let i = 1; i < lines.length; i++) {\n    let values = lines[i]\n      .trim()\n      .replace(removeCommentRegExp, '')\n      .split(peakTableSplitRegExp);\n    if (values.length % 2 === 0) {\n      for (let j = 0; j < values.length; j = j + 2) {\n        // takes around 40% of the time to add and parse the 2 values nearly exclusively because of parseFloat\n        currentData.x.push(parseFloat(values[j]) * spectrum.xFactor);\n        currentData.y.push(parseFloat(values[j + 1]) * spectrum.yFactor);\n      }\n    } else {\n      result.logs.push(`Format error: ${values}`);\n    }\n  }\n}\n\nfunction parseXYZ(spectrum, value, result) {\n  let currentData = {};\n  let variables = Object.keys(spectrum.variables);\n  let numberOfVariables = variables.length;\n  variables.forEach((variable) => (currentData[variable] = []));\n  spectrum.data = currentData;\n\n  // counts for around 20% of the time\n  let lines = value.split(/,? *,?[;\\r\\n]+ */);\n\n  for (let i = 1; i < lines.length; i++) {\n    let values = lines[i]\n      .trim()\n      .replace(removeCommentRegExp, '')\n      .split(peakTableSplitRegExp);\n    if (values.length % numberOfVariables === 0) {\n      for (let j = 0; j < values.length; j++) {\n        // todo should try to find a xFactor (y, ...)\n        currentData[variables[j % numberOfVariables]].push(\n          parseFloat(values[j]),\n        );\n      }\n    } else {\n      result.logs.push(`Format error: ${values}`);\n    }\n  }\n}\n","export default function parseXYA(spectrum, value) {\n  let removeSymbolRegExp = /(\\(+|\\)+|<+|>+|\\s+)/g;\n\n  spectrum.isXYAdata = true;\n  let values;\n  let currentData = { x: [], y: [] };\n  spectrum.data = currentData;\n\n  let lines = value.split(/,? *,?[;\\r\\n]+ */);\n\n  for (let i = 1; i < lines.length; i++) {\n    values = lines[i].trim().replace(removeSymbolRegExp, '').split(',');\n    currentData.x.push(parseFloat(values[0]));\n    currentData.y.push(parseFloat(values[1]));\n  }\n}\n","import getMedian from 'ml-array-median';\n\nexport default function convertTo3DZ(spectra) {\n  let minZ = spectra[0].data.y[0];\n  let maxZ = minZ;\n  let ySize = spectra.length;\n  let xSize = spectra[0].data.x.length;\n\n  let z = new Array(ySize);\n  for (let i = 0; i < ySize; i++) {\n    z[i] = spectra[i].data.y;\n    for (let j = 0; j < xSize; j++) {\n      let value = z[i][j];\n      if (value < minZ) minZ = value;\n      if (value > maxZ) maxZ = value;\n    }\n  }\n\n  const firstX = spectra[0].data.x[0];\n  const lastX = spectra[0].data.x[spectra[0].data.x.length - 1]; // has to be -2 because it is a 1D array [x,y,x,y,...]\n  const firstY = spectra[0].pageValue;\n  const lastY = spectra[ySize - 1].pageValue;\n\n  // Because the min / max value are the only information about the matrix if we invert\n  // min and max we need to invert the array\n  if (firstX > lastX) {\n    for (let spectrum of z) {\n      spectrum.reverse();\n    }\n  }\n  if (firstY > lastY) {\n    z.reverse();\n  }\n\n  const medians = [];\n  for (let i = 0; i < z.length; i++) {\n    const row = Float64Array.from(z[i]);\n    for (let i = 0; i < row.length; i++) {\n      if (row[i] < 0) row[i] = -row[i];\n    }\n    medians.push(getMedian(row));\n  }\n  const median = getMedian(medians);\n\n  return {\n    z: z,\n    minX: Math.min(firstX, lastX),\n    maxX: Math.max(firstX, lastX),\n    minY: Math.min(firstY, lastY),\n    maxY: Math.max(firstY, lastY),\n    minZ: minZ,\n    maxZ: maxZ,\n    noise: median,\n  };\n}\n","export default function generateContourLines(zData, options) {\n  let noise = zData.noise;\n  let z = zData.z;\n  let povarHeight0, povarHeight1, povarHeight2, povarHeight3;\n  let isOver0, isOver1, isOver2, isOver3;\n  let nbSubSpectra = z.length;\n  let nbPovars = z[0].length;\n  let pAx, pAy, pBx, pBy;\n\n  let x0 = zData.minX;\n  let xN = zData.maxX;\n  let dx = (xN - x0) / (nbPovars - 1);\n  let y0 = zData.minY;\n  let yN = zData.maxY;\n  let dy = (yN - y0) / (nbSubSpectra - 1);\n  let minZ = zData.minZ;\n  let maxZ = zData.maxZ;\n\n  // System.out.prvarln('y0 '+y0+' yN '+yN);\n  // -------------------------\n  // Povars attribution\n  //\n  // 0----1\n  // |  / |\n  // | /  |\n  // 2----3\n  //\n  // ---------------------d------\n\n  let iter = options.nbContourLevels * 2;\n  let contourLevels = new Array(iter);\n  let lineZValue;\n  for (let level = 0; level < iter; level++) {\n    // multiply by 2 for positif and negatif\n    let contourLevel = {};\n    contourLevels[level] = contourLevel;\n    let side = level % 2;\n    let factor =\n      (maxZ - options.noiseMultiplier * noise) *\n      Math.exp((level >> 1) - options.nbContourLevels);\n    if (side === 0) {\n      lineZValue = factor + options.noiseMultiplier * noise;\n    } else {\n      lineZValue = 0 - factor - options.noiseMultiplier * noise;\n    }\n    let lines = [];\n    contourLevel.zValue = lineZValue;\n    contourLevel.lines = lines;\n\n    if (lineZValue <= minZ || lineZValue >= maxZ) continue;\n\n    for (let iSubSpectra = 0; iSubSpectra < nbSubSpectra - 1; iSubSpectra++) {\n      let subSpectra = z[iSubSpectra];\n      let subSpectraAfter = z[iSubSpectra + 1];\n      for (let povar = 0; povar < nbPovars - 1; povar++) {\n        povarHeight0 = subSpectra[povar];\n        povarHeight1 = subSpectra[povar + 1];\n        povarHeight2 = subSpectraAfter[povar];\n        povarHeight3 = subSpectraAfter[povar + 1];\n\n        isOver0 = povarHeight0 > lineZValue;\n        isOver1 = povarHeight1 > lineZValue;\n        isOver2 = povarHeight2 > lineZValue;\n        isOver3 = povarHeight3 > lineZValue;\n\n        // Example povar0 is over the plane and povar1 and\n        // povar2 are below, we find the varersections and add\n        // the segment\n        if (isOver0 !== isOver1 && isOver0 !== isOver2) {\n          pAx =\n            povar + (lineZValue - povarHeight0) / (povarHeight1 - povarHeight0);\n          pAy = iSubSpectra;\n          pBx = povar;\n          pBy =\n            iSubSpectra +\n            (lineZValue - povarHeight0) / (povarHeight2 - povarHeight0);\n          lines.push(pAx * dx + x0);\n          lines.push(pAy * dy + y0);\n          lines.push(pBx * dx + x0);\n          lines.push(pBy * dy + y0);\n        }\n        // remove push does not help !!!!\n        if (isOver3 !== isOver1 && isOver3 !== isOver2) {\n          pAx = povar + 1;\n          pAy =\n            iSubSpectra +\n            1 -\n            (lineZValue - povarHeight3) / (povarHeight1 - povarHeight3);\n          pBx =\n            povar +\n            1 -\n            (lineZValue - povarHeight3) / (povarHeight2 - povarHeight3);\n          pBy = iSubSpectra + 1;\n          lines.push(pAx * dx + x0);\n          lines.push(pAy * dy + y0);\n          lines.push(pBx * dx + x0);\n          lines.push(pBy * dy + y0);\n        }\n        // test around the diagonal\n        if (isOver1 !== isOver2) {\n          pAx =\n            (povar +\n              1 -\n              (lineZValue - povarHeight1) / (povarHeight2 - povarHeight1)) *\n              dx +\n            x0;\n          pAy =\n            (iSubSpectra +\n              (lineZValue - povarHeight1) / (povarHeight2 - povarHeight1)) *\n              dy +\n            y0;\n          if (isOver1 !== isOver0) {\n            pBx =\n              povar +\n              1 -\n              (lineZValue - povarHeight1) / (povarHeight0 - povarHeight1);\n            pBy = iSubSpectra;\n            lines.push(pAx);\n            lines.push(pAy);\n            lines.push(pBx * dx + x0);\n            lines.push(pBy * dy + y0);\n          }\n          if (isOver2 !== isOver0) {\n            pBx = povar;\n            pBy =\n              iSubSpectra +\n              1 -\n              (lineZValue - povarHeight2) / (povarHeight0 - povarHeight2);\n            lines.push(pAx);\n            lines.push(pAy);\n            lines.push(pBx * dx + x0);\n            lines.push(pBy * dy + y0);\n          }\n          if (isOver1 !== isOver3) {\n            pBx = povar + 1;\n            pBy =\n              iSubSpectra +\n              (lineZValue - povarHeight1) / (povarHeight3 - povarHeight1);\n            lines.push(pAx);\n            lines.push(pAy);\n            lines.push(pBx * dx + x0);\n            lines.push(pBy * dy + y0);\n          }\n          if (isOver2 !== isOver3) {\n            pBx =\n              povar +\n              (lineZValue - povarHeight2) / (povarHeight3 - povarHeight2);\n            pBy = iSubSpectra + 1;\n            lines.push(pAx);\n            lines.push(pAy);\n            lines.push(pBx * dx + x0);\n            lines.push(pBy * dy + y0);\n          }\n        }\n      }\n    }\n  }\n\n  return {\n    minX: zData.minX,\n    maxX: zData.maxX,\n    minY: zData.minY,\n    maxY: zData.maxY,\n    segments: contourLevels,\n  };\n}\n","import convertTo3DZ from './convertTo3DZ';\nimport generateContourLines from './generateContourLines';\n\nexport default function add2D(result, options) {\n  let zData = convertTo3DZ(result.spectra);\n  if (!options.noContour) {\n    result.contourLines = generateContourLines(zData, options);\n    delete zData.z;\n  }\n  result.minMax = zData;\n}\n","// sources:\n// https://en.wikipedia.org/wiki/Gyromagnetic_ratio\n\n// TODO: #13 can we have a better source and more digits ? @jwist\n\nexport const gyromagneticRatio = {\n  '1H': 267.52218744e6,\n  '2H': 41.065e6,\n  '3H': 285.3508e6,\n  '3He': -203.789e6,\n  '7Li': 103.962e6,\n  '13C': 67.28284e6,\n  '14N': 19.331e6,\n  '15N': -27.116e6,\n  '17O': -36.264e6,\n  '19F': 251.662e6,\n  '23Na': 70.761e6,\n  '27Al': 69.763e6,\n  '29Si': -53.19e6,\n  '31P': 108.291e6,\n  '57Fe': 8.681e6,\n  '63Cu': 71.118e6,\n  '67Zn': 16.767e6,\n  '129Xe': -73.997e6,\n};\n","import { gyromagneticRatio } from 'nmr-processing';\n\nexport default function postProcessingNMR(entriesFlat) {\n  // specific NMR functions\n\n  for (let entry of entriesFlat) {\n    let observeFrequency = 0;\n    let shiftOffsetVal = 0;\n    for (let spectrum of entry.spectra) {\n      if (entry.ntuples && entry.ntuples.symbol) {\n        if (!observeFrequency && spectrum.observeFrequency) {\n          observeFrequency = spectrum.observeFrequency;\n        }\n        if (!shiftOffsetVal && spectrum.shiftOffsetVal) {\n          shiftOffsetVal = spectrum.shiftOffsetVal;\n        }\n      } else {\n        observeFrequency = spectrum.observeFrequency;\n        shiftOffsetVal = spectrum.shiftOffsetVal;\n      }\n\n      if (observeFrequency) {\n        if (spectrum.xUnits && spectrum.xUnits.toUpperCase().includes('HZ')) {\n          spectrum.xUnits = 'PPM';\n          spectrum.xFactor = spectrum.xFactor / observeFrequency;\n          spectrum.firstX = spectrum.firstX / observeFrequency;\n          spectrum.lastX = spectrum.lastX / observeFrequency;\n          spectrum.deltaX = spectrum.deltaX / observeFrequency;\n          for (let i = 0; i < spectrum.data.x.length; i++) {\n            spectrum.data.x[i] /= observeFrequency;\n          }\n        }\n      }\n      if (shiftOffsetVal) {\n        let shift = spectrum.firstX - shiftOffsetVal;\n        spectrum.firstX = spectrum.firstX - shift;\n        spectrum.lastX = spectrum.lastX - shift;\n        for (let i = 0; i < spectrum.data.x.length; i++) {\n          spectrum.data.x[i] -= shift;\n        }\n      }\n\n      // we will check if some nucleus are missing ...\n      if (entry.ntuples && entry.ntuples.nucleus && entry.ntuples.symbol) {\n        for (let i = 0; i < entry.ntuples.nucleus.length; i++) {\n          let symbol = entry.ntuples.symbol[i];\n          let nucleus = entry.ntuples.nucleus[i];\n          if (symbol.startsWith('F') && !nucleus) {\n            if (symbol === 'F1') {\n              // if F1 is defined we will use F2\n              if (entry.tmp.$NUC2) {\n                entry.ntuples.nucleus[i] = entry.tmp.$NUC2;\n              } else {\n                let f2index = entry.ntuples.symbol.indexOf('F2');\n                if (f2index && entry.ntuples.nucleus[f2index]) {\n                  entry.ntuples.nucleus[i] = entry.ntuples.nucleus[f2index];\n                }\n              }\n            }\n            if (symbol === 'F2') entry.ntuples.nucleus[i] = entry.tmp.$NUC1;\n          }\n          if (symbol === 'F2') {\n            entry.yType = entry.ntuples.nucleus[0];\n          }\n        }\n      }\n\n      if (\n        observeFrequency &&\n        entry.ntuples &&\n        entry.ntuples.symbol &&\n        entry.ntuples.nucleus\n      ) {\n        let unit = '';\n        let pageSymbolIndex = entry.ntuples.symbol.indexOf(spectrum.pageSymbol);\n        if (entry.ntuples.units && entry.ntuples.units[pageSymbolIndex]) {\n          unit = entry.ntuples.units[pageSymbolIndex];\n        }\n        if (unit !== 'PPM') {\n          if (pageSymbolIndex !== 0) {\n            throw Error('Not sure about this ntuples format');\n          }\n\n          let ratio0 = gyromagneticRatio[entry.ntuples.nucleus[0]];\n          let ratio1 = gyromagneticRatio[entry.ntuples.nucleus[1]];\n          if (!ratio0 || !ratio1) {\n            throw Error('Problem with determination of gyromagnetic ratio');\n          }\n          let ratio = (ratio0 / ratio1) * observeFrequency;\n          spectrum.pageValue /= ratio;\n        }\n      }\n    }\n  }\n}\n","export default function profiling(result, action, options) {\n  if (result.profiling) {\n    result.profiling.push({\n      action,\n      time: Date.now() - options.start,\n    });\n  }\n}\n","export default function simpleChromatogram(result) {\n  let data = result.spectra[0].data;\n  result.chromatogram = {\n    times: data.x.slice(),\n    series: {\n      intensity: {\n        dimension: 1,\n        data: data.y.slice(),\n      },\n    },\n  };\n}\n","import add2D from './2d/add2D';\nimport { complexChromatogram } from './complexChromatogram';\nimport postProcessingNMR from './postProcessingNMR';\nimport profiling from './profiling';\nimport simpleChromatogram from './simpleChromatogram';\n\nexport default function postProcessing(entriesFlat, result, options) {\n  // converting Hz to ppm\n  postProcessingNMR(entriesFlat);\n\n  for (let entry of entriesFlat) {\n    if (Object.keys(entry.ntuples).length > 0) {\n      let newNtuples = [];\n      let keys = Object.keys(entry.ntuples);\n      for (let i = 0; i < keys.length; i++) {\n        let key = keys[i];\n        let values = entry.ntuples[key];\n        for (let j = 0; j < values.length; j++) {\n          if (!newNtuples[j]) newNtuples[j] = {};\n          newNtuples[j][key] = values[j];\n        }\n      }\n      entry.ntuples = newNtuples;\n    }\n\n    if (entry.twoD && options.wantXY) {\n      add2D(entry, options);\n\n      profiling(result, 'Finished countour plot calculation', options);\n\n      if (!options.keepSpectra) {\n        delete entry.spectra;\n      }\n    }\n\n    // maybe it is a GC (HPLC) / MS. In this case we add a new format\n    if (options.chromatogram) {\n      if (entry.spectra.length > 1) {\n        complexChromatogram(entry);\n      } else {\n        simpleChromatogram(entry);\n      }\n      profiling(result, 'Finished chromatogram calculation', options);\n    }\n\n    delete entry.tmp;\n  }\n}\n","export default function prepareNtuplesDatatable(currentEntry, spectrum, kind) {\n  let xIndex = -1;\n  let yIndex = -1;\n  let firstVariable = '';\n  let secondVariable = '';\n  if (kind.indexOf('++') > 0) {\n    firstVariable = kind.replace(/.*\\(([a-zA-Z0-9]+)\\+\\+.*/, '$1');\n    secondVariable = kind.replace(/.*\\.\\.([a-zA-Z0-9]+).*/, '$1');\n  } else {\n    kind = kind.replace(/[^a-zA-Z]/g, '');\n    firstVariable = kind.charAt(0);\n    secondVariable = kind.charAt(1);\n    spectrum.variables = {};\n    for (let symbol of kind) {\n      let lowerCaseSymbol = symbol.toLowerCase();\n      let index = currentEntry.ntuples.symbol.indexOf(symbol);\n      if (index === -1) throw Error(`Symbol undefined: ${symbol}`);\n      spectrum.variables[lowerCaseSymbol] = {};\n      for (let key in currentEntry.ntuples) {\n        if (currentEntry.ntuples[key][index]) {\n          spectrum.variables[lowerCaseSymbol][key.replace(/^var/, '')] =\n            currentEntry.ntuples[key][index];\n        }\n      }\n    }\n  }\n  xIndex = currentEntry.ntuples.symbol.indexOf(firstVariable);\n  yIndex = currentEntry.ntuples.symbol.indexOf(secondVariable);\n\n  if (xIndex === -1) xIndex = 0;\n  if (yIndex === -1) yIndex = 0;\n\n  if (currentEntry.ntuples.first) {\n    if (currentEntry.ntuples.first.length > xIndex) {\n      spectrum.firstX = currentEntry.ntuples.first[xIndex];\n    }\n    if (currentEntry.ntuples.first.length > yIndex) {\n      spectrum.firstY = currentEntry.ntuples.first[yIndex];\n    }\n  }\n  if (currentEntry.ntuples.last) {\n    if (currentEntry.ntuples.last.length > xIndex) {\n      spectrum.lastX = currentEntry.ntuples.last[xIndex];\n    }\n    if (currentEntry.ntuples.last.length > yIndex) {\n      spectrum.lastY = currentEntry.ntuples.last[yIndex];\n    }\n  }\n  if (\n    currentEntry.ntuples.vardim &&\n    currentEntry.ntuples.vardim.length > xIndex\n  ) {\n    spectrum.nbPoints = currentEntry.ntuples.vardim[xIndex];\n  }\n  if (currentEntry.ntuples.factor) {\n    if (currentEntry.ntuples.factor.length > xIndex) {\n      spectrum.xFactor = currentEntry.ntuples.factor[xIndex];\n    }\n    if (currentEntry.ntuples.factor.length > yIndex) {\n      spectrum.yFactor = currentEntry.ntuples.factor[yIndex];\n    }\n  }\n  if (currentEntry.ntuples.units) {\n    if (currentEntry.ntuples.units.length > xIndex) {\n      if (\n        currentEntry.ntuples.varname &&\n        currentEntry.ntuples.varname[xIndex]\n      ) {\n        spectrum.xUnits = `${currentEntry.ntuples.varname[xIndex]} [${currentEntry.ntuples.units[xIndex]}]`;\n      } else {\n        spectrum.xUnits = currentEntry.ntuples.units[xIndex];\n      }\n    }\n    if (currentEntry.ntuples.units.length > yIndex) {\n      if (\n        currentEntry.ntuples.varname &&\n        currentEntry.ntuples.varname[yIndex]\n      ) {\n        spectrum.yUnits = `${currentEntry.ntuples.varname[yIndex]} [${currentEntry.ntuples.units[yIndex]}]`;\n      } else {\n        spectrum.yUnits = currentEntry.ntuples.units[yIndex];\n      }\n    }\n  }\n}\n","export default function prepareSpectrum(spectrum) {\n  if (!spectrum.xFactor) spectrum.xFactor = 1;\n  if (!spectrum.yFactor) spectrum.yFactor = 1;\n}\n","import { ensureString } from 'ensure-string';\n\nimport { isMSField, convertMSFieldToLabel } from './complexChromatogram';\nimport convertToFloatArray from './convertToFloatArray';\nimport fastParseXYData from './parse/fastParseXYData';\nimport parsePeakTable from './parse/parsePeakTable';\nimport parseXYA from './parse/parseXYA';\nimport postProcessing from './postProcessing';\nimport prepareNtuplesDatatable from './prepareNtuplesDatatable';\nimport prepareSpectrum from './prepareSpectrum';\nimport profiling from './profiling';\n\n// the following RegExp can only be used for XYdata, some peakTables have values with a \"E-5\" ...\nconst ntuplesSeparatorRegExp = /[ \\t]*,[ \\t]*/;\n\nclass Spectrum {}\n\nconst defaultOptions = {\n  keepRecordsRegExp: /^$/,\n  canonicDataLabels: true,\n  canonicMetadataLabels: false,\n  dynamicTyping: true,\n  withoutXY: false,\n  chromatogram: false,\n  keepSpectra: false,\n  noContour: false,\n  nbContourLevels: 7,\n  noiseMultiplier: 5,\n  profiling: false,\n};\n\n/**\n *\n * @param {string|ArrayBuffer} jcamp\n * @param {object} [options]\n * @param {number} [options.keepRecordsRegExp=/^$/] By default we don't keep meta information\n * @param {number} [options.canonicDataLabels=true] Canonize the Labels (uppercase without symbol)\n * @param {number} [options.canonicMetadataLabels=false] Canonize the metadata Labels (uppercase without symbol)\n * @param {number} [options.dynamicTyping=false] Convert numbers to Number\n * @param {number} [options.withoutXY=false] Remove the XY data\n * @param {number} [options.chromatogram=false] Special post-processing for GC / HPLC / MS\n * @param {number} [options.keepSpectra=false] Force to keep the spectra in case of 2D\n * @param {number} [options.noContour=false] Don't calculate countour in case of 2D\n * @param {number} [options.nbContourLevels=7] Number of positive / negative contour levels to calculate\n * @param {number} [options.noiseMultiplier=5] Define for 2D the level as 5 times the median as default\n * @param {number} [options.profiling=false] Add profiling information\n */\n\nexport default function convert(jcamp, options = {}) {\n  jcamp = ensureString(jcamp);\n  options = { ...defaultOptions, ...options };\n  options.wantXY = !options.withoutXY;\n  options.start = Date.now();\n\n  let entriesFlat = [];\n\n  let result = {\n    profiling: options.profiling ? [] : false,\n    logs: [],\n    entries: [],\n  };\n\n  let tmpResult = { children: [] };\n  let currentEntry = tmpResult;\n  let parentsStack = [];\n\n  let spectrum = new Spectrum();\n\n  if (typeof jcamp !== 'string') {\n    throw new TypeError('the JCAMP should be a string');\n  }\n\n  profiling(result, 'Before split to LDRS', options);\n\n  let ldrs = jcamp.replace(/[\\r\\n]+##/g, '\\n##').split('\\n##');\n\n  profiling(result, 'Split to LDRS', options);\n\n  if (ldrs[0]) ldrs[0] = ldrs[0].replace(/^[\\r\\n ]*##/, '');\n\n  for (let ldr of ldrs) {\n    // This is a new LDR\n    let position = ldr.indexOf('=');\n    let dataLabel = position > 0 ? ldr.substring(0, position) : ldr;\n    let dataValue = position > 0 ? ldr.substring(position + 1).trim() : '';\n\n    let canonicDataLabel = dataLabel.replace(/[_ -]/g, '').toUpperCase();\n\n    if (canonicDataLabel === 'DATATABLE') {\n      let endLine = dataValue.indexOf('\\n');\n      if (endLine === -1) endLine = dataValue.indexOf('\\r');\n      if (endLine > 0) {\n        // ##DATA TABLE= (X++(I..I)), XYDATA\n        // We need to find the variables\n\n        let infos = dataValue.substring(0, endLine).split(/[ ,;\\t]+/);\n        prepareNtuplesDatatable(currentEntry, spectrum, infos[0]);\n\n        spectrum.datatable = infos[0];\n        if (infos[1] && infos[1].indexOf('PEAKS') > -1) {\n          canonicDataLabel = 'PEAKTABLE';\n        } else if (\n          infos[1] &&\n          (infos[1].indexOf('XYDATA') || infos[0].indexOf('++') > 0)\n        ) {\n          canonicDataLabel = 'XYDATA';\n          spectrum.deltaX =\n            (spectrum.lastX - spectrum.firstX) / (spectrum.nbPoints - 1);\n        }\n      }\n    }\n\n    if (canonicDataLabel === 'XYDATA') {\n      if (options.wantXY) {\n        prepareSpectrum(spectrum);\n        // well apparently we should still consider it is a PEAK TABLE if there are no '++' after\n        if (dataValue.match(/.*\\+\\+.*/)) {\n          // ex: (X++(Y..Y))\n          spectrum.deltaX =\n            (spectrum.lastX - spectrum.firstX) / (spectrum.nbPoints - 1);\n\n          fastParseXYData(spectrum, dataValue, result);\n        } else {\n          parsePeakTable(spectrum, dataValue, result);\n        }\n        currentEntry.spectra.push(spectrum);\n        spectrum = new Spectrum();\n      }\n      continue;\n    } else if (canonicDataLabel === 'PEAKTABLE') {\n      if (options.wantXY) {\n        prepareSpectrum(spectrum);\n        parsePeakTable(spectrum, dataValue, result);\n        currentEntry.spectra.push(spectrum);\n        spectrum = new Spectrum();\n      }\n      continue;\n    }\n    if (canonicDataLabel === 'PEAKASSIGNMENTS') {\n      if (options.wantXY) {\n        if (dataValue.match(/.*(XYA).*/)) {\n          // ex: (XYA)\n          parseXYA(spectrum, dataValue);\n        }\n        currentEntry.spectra.push(spectrum);\n        spectrum = new Spectrum();\n      }\n      continue;\n    }\n\n    if (canonicDataLabel === 'TITLE') {\n      let parentEntry = currentEntry;\n      if (!parentEntry.children) {\n        parentEntry.children = [];\n      }\n      currentEntry = {\n        spectra: [],\n        ntuples: {},\n        info: {},\n        meta: {},\n        tmp: {}, // tmp information we need to keep for postprocessing\n      };\n      parentEntry.children.push(currentEntry);\n      parentsStack.push(parentEntry);\n      entriesFlat.push(currentEntry);\n      currentEntry.title = dataValue;\n    } else if (canonicDataLabel === 'DATATYPE') {\n      currentEntry.dataType = dataValue;\n      if (dataValue.match(/(^nd|\\snd\\s)/i)) {\n        currentEntry.twoD = true;\n      }\n    } else if (canonicDataLabel === 'NTUPLES') {\n      if (dataValue.match(/(^nd|\\snd\\s)/i)) {\n        currentEntry.twoD = true;\n      }\n    } else if (canonicDataLabel === 'DATACLASS') {\n      currentEntry.dataClass = dataValue;\n    } else if (canonicDataLabel === 'XUNITS') {\n      spectrum.xUnits = dataValue;\n    } else if (canonicDataLabel === 'YUNITS') {\n      spectrum.yUnits = dataValue;\n    } else if (canonicDataLabel === 'FIRSTX') {\n      spectrum.firstX = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'LASTX') {\n      spectrum.lastX = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'FIRSTY') {\n      spectrum.firstY = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'LASTY') {\n      spectrum.lastY = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'NPOINTS') {\n      spectrum.nbPoints = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'XFACTOR') {\n      spectrum.xFactor = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'YFACTOR') {\n      spectrum.yFactor = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'MAXX') {\n      spectrum.maxX = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'MINX') {\n      spectrum.minX = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'MAXY') {\n      spectrum.maxY = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'MINY') {\n      spectrum.minY = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'DELTAX') {\n      spectrum.deltaX = parseFloat(dataValue);\n    } else if (\n      canonicDataLabel === '.OBSERVEFREQUENCY' ||\n      canonicDataLabel === '$SFO1'\n    ) {\n      if (!spectrum.observeFrequency) {\n        spectrum.observeFrequency = parseFloat(dataValue);\n      }\n    } else if (canonicDataLabel === '.OBSERVENUCLEUS') {\n      if (!spectrum.xType) {\n        currentEntry.xType = dataValue.replace(/[^a-zA-Z0-9]/g, '');\n      }\n    } else if (canonicDataLabel === '$OFFSET') {\n      // OFFSET for Bruker spectra\n      currentEntry.shiftOffsetNum = 0;\n      if (!spectrum.shiftOffsetVal) {\n        spectrum.shiftOffsetVal = parseFloat(dataValue);\n      }\n    } else if (canonicDataLabel === '$REFERENCEPOINT') {\n      // OFFSET for Varian spectra\n      // if we activate this part it does not work for ACD specmanager\n      //         } else if (canonicDataLabel=='.SHIFTREFERENCE') {   // OFFSET FOR Bruker Spectra\n      //                 var parts = dataValue.split(/ *, */);\n      //                 currentEntry.shiftOffsetNum = parseInt(parts[2].trim());\n      //                 spectrum.shiftOffsetVal = parseFloat(parts[3].trim());\n    } else if (canonicDataLabel === 'VARNAME') {\n      currentEntry.ntuples.varname = dataValue.split(ntuplesSeparatorRegExp);\n    } else if (canonicDataLabel === 'SYMBOL') {\n      currentEntry.ntuples.symbol = dataValue.split(ntuplesSeparatorRegExp);\n    } else if (canonicDataLabel === 'VARTYPE') {\n      currentEntry.ntuples.vartype = dataValue.split(ntuplesSeparatorRegExp);\n    } else if (canonicDataLabel === 'VARFORM') {\n      currentEntry.ntuples.varform = dataValue.split(ntuplesSeparatorRegExp);\n    } else if (canonicDataLabel === 'VARDIM') {\n      currentEntry.ntuples.vardim = convertToFloatArray(\n        dataValue.split(ntuplesSeparatorRegExp),\n      );\n    } else if (canonicDataLabel === 'UNITS') {\n      currentEntry.ntuples.units = dataValue.split(ntuplesSeparatorRegExp);\n    } else if (canonicDataLabel === 'FACTOR') {\n      currentEntry.ntuples.factor = convertToFloatArray(\n        dataValue.split(ntuplesSeparatorRegExp),\n      );\n    } else if (canonicDataLabel === 'FIRST') {\n      currentEntry.ntuples.first = convertToFloatArray(\n        dataValue.split(ntuplesSeparatorRegExp),\n      );\n    } else if (canonicDataLabel === 'LAST') {\n      currentEntry.ntuples.last = convertToFloatArray(\n        dataValue.split(ntuplesSeparatorRegExp),\n      );\n    } else if (canonicDataLabel === 'MIN') {\n      currentEntry.ntuples.min = convertToFloatArray(\n        dataValue.split(ntuplesSeparatorRegExp),\n      );\n    } else if (canonicDataLabel === 'MAX') {\n      currentEntry.ntuples.max = convertToFloatArray(\n        dataValue.split(ntuplesSeparatorRegExp),\n      );\n    } else if (canonicDataLabel === '.NUCLEUS') {\n      if (currentEntry.ntuples) {\n        currentEntry.ntuples.nucleus = dataValue.split(ntuplesSeparatorRegExp);\n      }\n    } else if (canonicDataLabel === 'PAGE') {\n      spectrum.page = dataValue.trim();\n      spectrum.pageValue = parseFloat(dataValue.replace(/^.*=/, ''));\n      spectrum.pageSymbol = spectrum.page.replace(/[=].*/, '');\n    } else if (canonicDataLabel === 'RETENTIONTIME') {\n      spectrum.pageValue = parseFloat(dataValue);\n    } else if (isMSField(canonicDataLabel)) {\n      spectrum[convertMSFieldToLabel(canonicDataLabel)] = dataValue;\n    } else if (canonicDataLabel === 'SAMPLEDESCRIPTION') {\n      spectrum.sampleDescription = dataValue;\n    } else if (canonicDataLabel.startsWith('$NUC')) {\n      if (!currentEntry.tmp[canonicDataLabel] && !dataValue.includes('off')) {\n        currentEntry.tmp[canonicDataLabel] = dataValue.replace(/[<>]/g, '');\n      }\n    } else if (canonicDataLabel === 'END') {\n      currentEntry = parentsStack.pop();\n    }\n\n    if (\n      currentEntry &&\n      currentEntry.info &&\n      currentEntry.meta &&\n      canonicDataLabel.match(options.keepRecordsRegExp)\n    ) {\n      let value = dataValue.trim();\n      let target, label;\n      if (dataLabel.startsWith('$')) {\n        label = options.canonicMetadataLabels\n          ? canonicDataLabel.substring(1)\n          : dataLabel.substring(1);\n        target = currentEntry.meta;\n      } else {\n        label = options.canonicDataLabels ? canonicDataLabel : dataLabel;\n        target = currentEntry.info;\n      }\n\n      if (options.dynamicTyping) {\n        if (value === 'true' || value === 'TRUE') {\n          value = true;\n        } else if (value === 'false' || value === 'FALSE') {\n          value = false;\n        } else if (value !== '' && !isNaN(value)) {\n          value = parseFloat(value);\n        }\n      }\n      if (target[label]) {\n        if (!Array.isArray(target[label])) {\n          target[label] = [target[label]];\n        }\n        target[label].push(value);\n      } else {\n        target[label] = value;\n      }\n    }\n  }\n\n  profiling(result, 'Finished parsing', options);\n\n  postProcessing(entriesFlat, result, options);\n\n  profiling(result, 'Total time', options);\n\n  /*\n  if (result.children && result.children.length>0) {\n    result = { ...result, ...result.children[0] };\n  }\n  */\n  result.entries = tmpResult.children;\n  result.flatten = entriesFlat;\n\n  return result;\n}\n","import { convert } from 'jcampconverter';\nimport { Analysis } from '../Analysis';\n/**\n * Creates a new Analysis from a JCAMP string\n * @param {string} jcamp - String containing the JCAMP data\n * @param {object} [options={}]\n * @param {object} [options.id=Math.random()]\n * @param {string} [options.label=options.id] human redeable label\n * @param {string} [options.spectrumCallback] a callback to apply on variables when creating spectrum\n * @return {Analysis} - New class element with the given data\n */\nexport function fromJcamp(jcamp, options = {}) {\n    let analysis = new Analysis(options);\n    addJcamp(analysis, jcamp);\n    return analysis;\n}\nfunction addJcamp(analysis, jcamp) {\n    let converted = convert(jcamp, {\n        keepRecordsRegExp: /.*/,\n    });\n    for (let entry of converted.flatten) {\n        let currentSpectrum = entry.spectra[0];\n        // we ensure variables\n        if (!currentSpectrum.variables) {\n            const variables = {};\n            currentSpectrum.variables = variables;\n            variables.x = {\n                label: currentSpectrum.xUnits,\n                symbol: 'X',\n                data: currentSpectrum.data.x || currentSpectrum.data.X,\n            };\n            variables.y = {\n                label: currentSpectrum.yUnits,\n                symbol: 'Y',\n                data: currentSpectrum.data.y || currentSpectrum.data.Y,\n            };\n        }\n        else {\n            for (let key in currentSpectrum.variables) {\n                const variable = currentSpectrum.variables[key];\n                if (variable.label)\n                    continue;\n                variable.label = variable.name || variable.symbol || key;\n                if (variable.units && !variable.label.includes(variable.units)) {\n                    variable.label += ` [${variable.units}]`;\n                }\n            }\n        }\n        analysis.pushSpectrum(currentSpectrum.variables, {\n            dataType: entry.dataType,\n            title: entry.title,\n            meta: entry.meta,\n        });\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZnJvbUpjYW1wLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2Zyb20vZnJvbUpjYW1wLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUV6QyxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sYUFBYSxDQUFDO0FBR3ZDOzs7Ozs7OztHQVFHO0FBQ0gsTUFBTSxVQUFVLFNBQVMsQ0FBQyxLQUEyQixFQUFFLE9BQU8sR0FBRyxFQUFFO0lBQ2pFLElBQUksUUFBUSxHQUFHLElBQUksUUFBUSxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQ3JDLFFBQVEsQ0FBQyxRQUFRLEVBQUUsS0FBSyxDQUFDLENBQUM7SUFDMUIsT0FBTyxRQUFRLENBQUM7QUFDbEIsQ0FBQztBQUVELFNBQVMsUUFBUSxDQUFDLFFBQWtCLEVBQUUsS0FBMkI7SUFDL0QsSUFBSSxTQUFTLEdBQUcsT0FBTyxDQUFDLEtBQUssRUFBRTtRQUM3QixpQkFBaUIsRUFBRSxJQUFJO0tBQ3hCLENBQUMsQ0FBQztJQUVILEtBQUssSUFBSSxLQUFLLElBQUksU0FBUyxDQUFDLE9BQU8sRUFBRTtRQUNuQyxJQUFJLGVBQWUsR0FBRyxLQUFLLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBRXZDLHNCQUFzQjtRQUN0QixJQUFJLENBQUMsZUFBZSxDQUFDLFNBQVMsRUFBRTtZQUM5QixNQUFNLFNBQVMsR0FBaUMsRUFBRSxDQUFDO1lBQ25ELGVBQWUsQ0FBQyxTQUFTLEdBQUcsU0FBUyxDQUFDO1lBQ3RDLFNBQVMsQ0FBQyxDQUFDLEdBQUc7Z0JBQ1osS0FBSyxFQUFFLGVBQWUsQ0FBQyxNQUFNO2dCQUM3QixNQUFNLEVBQUUsR0FBRztnQkFDWCxJQUFJLEVBQUUsZUFBZSxDQUFDLElBQUksQ0FBQyxDQUFDLElBQUksZUFBZSxDQUFDLElBQUksQ0FBQyxDQUFDO2FBQ3ZELENBQUM7WUFDRixTQUFTLENBQUMsQ0FBQyxHQUFHO2dCQUNaLEtBQUssRUFBRSxlQUFlLENBQUMsTUFBTTtnQkFDN0IsTUFBTSxFQUFFLEdBQUc7Z0JBQ1gsSUFBSSxFQUFFLGVBQWUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxJQUFJLGVBQWUsQ0FBQyxJQUFJLENBQUMsQ0FBQzthQUN2RCxDQUFDO1NBQ0g7YUFBTTtZQUNMLEtBQUssSUFBSSxHQUFHLElBQUksZUFBZSxDQUFDLFNBQVMsRUFBRTtnQkFDekMsTUFBTSxRQUFRLEdBQUcsZUFBZSxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsQ0FBQztnQkFDaEQsSUFBSSxRQUFRLENBQUMsS0FBSztvQkFBRSxTQUFTO2dCQUM3QixRQUFRLENBQUMsS0FBSyxHQUFHLFFBQVEsQ0FBQyxJQUFJLElBQUksUUFBUSxDQUFDLE1BQU0sSUFBSSxHQUFHLENBQUM7Z0JBQ3pELElBQUksUUFBUSxDQUFDLEtBQUssSUFBSSxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUMsRUFBRTtvQkFDOUQsUUFBUSxDQUFDLEtBQUssSUFBSSxLQUFLLFFBQVEsQ0FBQyxLQUFLLEdBQUcsQ0FBQztpQkFDMUM7YUFDRjtTQUNGO1FBRUQsUUFBUSxDQUFDLFlBQVksQ0FBQyxlQUFlLENBQUMsU0FBUyxFQUFFO1lBQy9DLFFBQVEsRUFBRSxLQUFLLENBQUMsUUFBUTtZQUN4QixLQUFLLEVBQUUsS0FBSyxDQUFDLEtBQUs7WUFDbEIsSUFBSSxFQUFFLEtBQUssQ0FBQyxJQUFJO1NBQ2pCLENBQUMsQ0FBQztLQUNKO0FBQ0gsQ0FBQyJ9","import maxFct from 'ml-array-max';\nimport minFct from 'ml-array-min';\n\n/**\n * Parse from a xyxy data array\n * @param {Array<Array<number>>} variables\n * @param {object} [meta] - same metadata object format that the fromText\n * @return {string} JCAMP of the input\n */\nexport default function creatorNtuples(variables, options) {\n  const { meta = {}, info = {} } = options;\n\n  const { title = '', owner = '', origin = '', dataType = '' } = info;\n\n  const symbol = [];\n  const varName = [];\n  const varType = [];\n  const varDim = [];\n  const units = [];\n  const first = [];\n  const last = [];\n  const min = [];\n  const max = [];\n  const factor = [];\n\n  const keys = Object.keys(variables);\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    let variable = variables[key];\n\n    let name = variable.label && variable.label.replace(/ *\\[.*/, '');\n    let unit = variable.label && variable.label.replace(/.*\\[(.*)\\].*/, '$1');\n\n    symbol.push(variable.symbol || key);\n    varName.push(variable.name || name || key);\n    varDim.push(variables[key].data.length);\n\n    varType.push(\n      variable.type\n        ? variable.type.toUpperCase()\n        : i === 0\n        ? 'INDEPENDENT'\n        : 'DEPENDENT',\n    );\n    units.push(variable.units || unit || '');\n    first.push(variables[key][0]);\n    last.push(variables[key][variables[key].length - 1]);\n    min.push(minFct(variables[key].data));\n    max.push(maxFct(variables[key].data));\n    factor.push(1);\n  }\n\n  let header = `##TITLE=${title}\n##JCAMP-DX=6.00\n##DATA TYPE=${dataType}\n##ORIGIN=${origin}\n##OWNER=${owner}\\n`;\n\n  for (const key in meta) {\n    header +=\n      typeof meta[key] === 'object'\n        ? `##$${key}=${JSON.stringify(meta[key])}\\n`\n        : `##$${key}=${meta[key]}\\n`;\n  }\n\n  header += `##NTUPLES= ${dataType}\n##VAR_NAME=  ${varName.join()}\n##SYMBOL=    ${symbol.join()}\n##VAR_TYPE=  ${varType.join()}\n##VAR_DIM=   ${varDim.join()}\n##UNITS=     ${units.join()}\n##PAGE= N=1\\n`;\n\n  header += `##DATA TABLE= (${symbol.join('')}..${symbol.join('')}), PEAKS\\n`;\n\n  for (let i = 0; i < variables[keys[0]].data.length; i++) {\n    let point = [];\n    for (let key of keys) {\n      point.push(variables[key].data[i]);\n    }\n    header += `${point.join('\\t')}\\n`;\n  }\n\n  header += '##END';\n  return header;\n}\n","/**\n * Create a jcamp\n * @param {object} data - object of array\n * @param {object} [options={}] - metadata object\n * @param {string} [options.info={}] - metadata of the file\n * @param {string} [options.info.title = ''] - title of the file\n * @param {string} [options.info.owner = ''] - owner of the file\n * @param {string} [options.info.origin = ''] - origin of the file\n * @param {string} [options.info.dataType = ''] - type of data\n * @param {string} [options.info.xUnits = ''] - units for the x axis for variables===undefined\n * @param {string} [options.info.yUnits = ''] - units for the y axis for variables===undefined\n * @param {object} [options.meta = {}] - comments to add to the file\n * @return {string} JCAMP of the input\n */\nexport function fromJSON(data, options = {}) {\n  const { meta = {}, info = {} } = options;\n\n  const {\n    title = '',\n    owner = '',\n    origin = '',\n    dataType = '',\n    xUnits = '',\n    yUnits = '',\n  } = info;\n  let firstX = Number.POSITIVE_INFINITY;\n  let lastX = Number.NEGATIVE_INFINITY;\n  let firstY = Number.POSITIVE_INFINITY;\n  let lastY = Number.NEGATIVE_INFINITY;\n  let points = [];\n\n  for (let i = 0; i < data.x.length; i++) {\n    let x = data.x[i];\n    let y = data.y[i];\n    if (firstX > x) {\n      firstX = x;\n    }\n    if (lastX < x) {\n      lastX = x;\n    }\n    if (firstY > y) {\n      firstY = y;\n    }\n    if (lastY < y) {\n      lastY = y;\n    }\n    points.push(`${x} ${y}`);\n  }\n\n  let header = `##TITLE=${title}\n##JCAMP-DX=4.24\n##DATA TYPE=${dataType}\n##ORIGIN=${origin}\n##OWNER=${owner}\n##XUNITS=${xUnits}\n##YUNITS=${yUnits}\n##FIRSTX=${firstX}\n##LASTX=${lastX}\n##FIRSTY=${firstY}\n##LASTY=${lastY}\\n`;\n\n  for (const key in meta) {\n    header +=\n      key.toLowerCase() === 'cheminfo'\n        ? `##$${key}=${JSON.stringify(meta[key])}\\n`\n        : `##$${key}=${meta[key]}\\n`;\n  }\n\n  // we leave the header and utf8 fonts ${header.replace(/[^\\t\\r\\n\\x20-\\x7F]/g, '')\n\n  return `${header}##NPOINTS=${points.length}\n##PEAK TABLE=(XY..XY)\n${points.join('\\n')}\n##END`;\n}\n","import creatorNtuples from './creatorNtuples';\nimport { fromJSON } from './fromJSON';\n\n/**\n * Create a jcamp from variables\n * @param {Array<Variable} [variables={}] - object of variables\n * @param {string} [options.info={}] - metadata of the file\n * @param {string} [options.info.title = ''] - title of the file\n * @param {string} [options.info.owner = ''] - owner of the file\n * @param {string} [options.info.origin = ''] - origin of the file\n * @param {string} [options.info.dataType = ''] - type of data\n * @param {object} [options.meta = {}] - comments to add to the file\n * @param {object} [options.forceNtuples = false] - force the ntuples format even if there is only x and y variables\n */\nexport function fromVariables(variables = {}, options = {}) {\n  const { info, meta, forceNtuples } = options;\n\n  let jcampOptions = {\n    info,\n    meta,\n  };\n\n  let keys = Object.keys(variables).map((key) => key.toLowerCase());\n  if (\n    keys.length === 2 &&\n    keys.includes('x') &&\n    keys.includes('y') &&\n    !forceNtuples\n  ) {\n    let x = variables.x;\n    let xLabel = x.label || x.name || 'x';\n\n    jcampOptions.info.xUnits = xLabel.includes(variables.x.units)\n      ? xLabel\n      : `${xLabel} [${variables.x.units}]`;\n\n    let y = variables.y;\n    let yLabel = y.label || y.name || 'y';\n\n    jcampOptions.info.yUnits = yLabel.includes(variables.y.units)\n      ? yLabel\n      : `${yLabel} [${variables.y.units}]`;\n    return fromJSON({ x: variables.x.data, y: variables.y.data }, jcampOptions);\n  } else {\n    return creatorNtuples(variables, options);\n  }\n}\n","import { fromVariables } from 'convert-to-jcamp';\nexport function toJcamps(analysis, options = {}) {\n    let jcamps = [];\n    for (let spectrum of analysis.spectra) {\n        jcamps.push(getJcamp(spectrum, options));\n    }\n    return jcamps;\n}\nfunction getJcamp(spectrum, options) {\n    const { info = {}, meta = {} } = options;\n    let jcampOptions = {\n        options: {},\n        info: {\n            title: spectrum.title,\n            dataType: spectrum.dataType,\n            ...info,\n        },\n        meta: { ...spectrum.meta, ...meta },\n    };\n    return fromVariables(spectrum.variables, jcampOptions);\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG9KY2FtcHMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvdG8vdG9KY2FtcHMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBU2pELE1BQU0sVUFBVSxRQUFRLENBQUMsUUFBa0IsRUFBRSxVQUEyQixFQUFFO0lBQ3hFLElBQUksTUFBTSxHQUFHLEVBQUUsQ0FBQztJQUNoQixLQUFLLElBQUksUUFBUSxJQUFJLFFBQVEsQ0FBQyxPQUFPLEVBQUU7UUFDckMsTUFBTSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsUUFBUSxFQUFFLE9BQU8sQ0FBQyxDQUFDLENBQUM7S0FDMUM7SUFDRCxPQUFPLE1BQU0sQ0FBQztBQUNoQixDQUFDO0FBRUQsU0FBUyxRQUFRLENBQUMsUUFBc0IsRUFBRSxPQUF3QjtJQUNoRSxNQUFNLEVBQUUsSUFBSSxHQUFHLEVBQUUsRUFBRSxJQUFJLEdBQUcsRUFBRSxFQUFFLEdBQUcsT0FBTyxDQUFDO0lBRXpDLElBQUksWUFBWSxHQUFHO1FBQ2pCLE9BQU8sRUFBRSxFQUFFO1FBQ1gsSUFBSSxFQUFFO1lBQ0osS0FBSyxFQUFFLFFBQVEsQ0FBQyxLQUFLO1lBQ3JCLFFBQVEsRUFBRSxRQUFRLENBQUMsUUFBUTtZQUMzQixHQUFHLElBQUk7U0FDUjtRQUNELElBQUksRUFBRSxFQUFFLEdBQUcsUUFBUSxDQUFDLElBQUksRUFBRSxHQUFHLElBQUksRUFBRTtLQUNwQyxDQUFDO0lBRUYsT0FBTyxhQUFhLENBQUMsUUFBUSxDQUFDLFNBQVMsRUFBRSxZQUFZLENBQUMsQ0FBQztBQUN6RCxDQUFDIn0=","import { toJcamps } from './toJcamps';\nexport function toJcamp(analysis, options = {}) {\n    return toJcamps(analysis, options).join('\\n');\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG9KY2FtcC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy90by90b0pjYW1wLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxZQUFZLENBQUM7QUFNdEMsTUFBTSxVQUFVLE9BQU8sQ0FBQyxRQUFrQixFQUFFLFVBQTJCLEVBQUU7SUFDdkUsT0FBTyxRQUFRLENBQUMsUUFBUSxFQUFFLE9BQU8sQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztBQUNoRCxDQUFDIn0=","import { xyMinClosestYPoint, xyMaxClosestYPoint, xFindClosestIndex, } from 'ml-spectra-processing';\n/** Based on a x value we will return a peak*/\nexport function peakPicking(spectrum, \n/** value to search (on x axis) */\ntarget, options = {}) {\n    var _a, _b;\n    const { xVariable = 'x', yVariable = 'y', optimize = false, max = true, } = options;\n    const x = (_a = spectrum.variables[xVariable]) === null || _a === void 0 ? void 0 : _a.data;\n    const y = (_b = spectrum.variables[yVariable]) === null || _b === void 0 ? void 0 : _b.data;\n    if (!x || !y)\n        return;\n    let targetIndex;\n    if (optimize) {\n        targetIndex = max\n            ? xyMaxClosestYPoint({ x, y }, { target }).index\n            : xyMinClosestYPoint({ x, y }, { target }).index;\n    }\n    else {\n        targetIndex = xFindClosestIndex(x, target);\n    }\n    const result = {};\n    for (let key in spectrum.variables) {\n        result[key] = spectrum.variables[key].data[targetIndex];\n    }\n    return result;\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGVha1BpY2tpbmcuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvdXRpbC9wZWFrUGlja2luZy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQ0wsa0JBQWtCLEVBQ2xCLGtCQUFrQixFQUNsQixpQkFBaUIsR0FDbEIsTUFBTSx1QkFBdUIsQ0FBQztBQUkvQiw4Q0FBOEM7QUFDOUMsTUFBTSxVQUFVLFdBQVcsQ0FDekIsUUFBc0I7QUFDdEIsa0NBQWtDO0FBQ2xDLE1BQWMsRUFDZCxVQUE4QixFQUFFOztJQUVoQyxNQUFNLEVBQ0osU0FBUyxHQUFHLEdBQUcsRUFDZixTQUFTLEdBQUcsR0FBRyxFQUNmLFFBQVEsR0FBRyxLQUFLLEVBQ2hCLEdBQUcsR0FBRyxJQUFJLEdBQ1gsR0FBRyxPQUFPLENBQUM7SUFFWixNQUFNLENBQUMsR0FBRyxNQUFBLFFBQVEsQ0FBQyxTQUFTLENBQUMsU0FBUyxDQUFDLDBDQUFFLElBQUksQ0FBQztJQUM5QyxNQUFNLENBQUMsR0FBRyxNQUFBLFFBQVEsQ0FBQyxTQUFTLENBQUMsU0FBUyxDQUFDLDBDQUFFLElBQUksQ0FBQztJQUM5QyxJQUFJLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUFFLE9BQU87SUFDckIsSUFBSSxXQUFXLENBQUM7SUFDaEIsSUFBSSxRQUFRLEVBQUU7UUFDWixXQUFXLEdBQUcsR0FBRztZQUNmLENBQUMsQ0FBQyxrQkFBa0IsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLE1BQU0sRUFBRSxDQUFDLENBQUMsS0FBSztZQUNoRCxDQUFDLENBQUMsa0JBQWtCLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxNQUFNLEVBQUUsQ0FBQyxDQUFDLEtBQUssQ0FBQztLQUNwRDtTQUFNO1FBQ0wsV0FBVyxHQUFHLGlCQUFpQixDQUFDLENBQUMsRUFBRSxNQUFNLENBQUMsQ0FBQztLQUM1QztJQUNELE1BQU0sTUFBTSxHQUEyQixFQUFFLENBQUM7SUFDMUMsS0FBSyxJQUFJLEdBQUcsSUFBSSxRQUFRLENBQUMsU0FBUyxFQUFFO1FBQ2xDLE1BQU0sQ0FBQyxHQUFHLENBQUMsR0FBRyxRQUFRLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQyxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQztLQUN6RDtJQUNELE9BQU8sTUFBTSxDQUFDO0FBQ2hCLENBQUMifQ==","// @ts-ignore\nimport { gsd } from 'ml-gsd';\nimport { xyMaxClosestYPoint, xyMinClosestYPoint } from 'ml-spectra-processing';\nimport { getNormalizedSpectrum } from './getNormalizedSpectrum';\n/** Based on a x value we will return a peak*/\nexport function autoPeakPicking(spectrum, options = {}) {\n    var _a, _b;\n    const { xVariable = 'x', yVariable = 'y', normalizationOptions, minPeakWidth, } = options;\n    let x = (_a = spectrum.variables[xVariable]) === null || _a === void 0 ? void 0 : _a.data;\n    let y = (_b = spectrum.variables[yVariable]) === null || _b === void 0 ? void 0 : _b.data;\n    if (normalizationOptions) {\n        const tempSpectrum = {\n            variables: {\n                x: { data: x, label: '' },\n                y: { data: y, label: '' },\n            },\n        };\n        const normalizedSpectrum = getNormalizedSpectrum(tempSpectrum, normalizationOptions);\n        x = normalizedSpectrum.variables.x.data;\n        y = normalizedSpectrum.variables.y.data;\n    }\n    if (!x || !y)\n        return;\n    let { from, to } = options;\n    let peaks = gsd({ x, y }, options);\n    if (normalizationOptions) {\n        // we need to recalculate the real count\n        const xyClosestYPoint = options.maxCriteria === undefined || options.maxCriteria\n            ? xyMaxClosestYPoint\n            : xyMinClosestYPoint;\n        for (let peak of peaks) {\n            const closest = xyClosestYPoint({ x: spectrum.variables.x.data, y: spectrum.variables.y.data }, { target: peak.x });\n            peak.x = closest.x;\n            peak.y = closest.y;\n        }\n    }\n    if (from !== undefined) {\n        peaks = peaks.filter((peak) => peak.x >= from);\n    }\n    if (to !== undefined) {\n        peaks = peaks.filter((peak) => peak.x <= to);\n    }\n    if (minPeakWidth) {\n        peaks = peaks.filter((peak) => peak.width >= minPeakWidth);\n    }\n    return peaks.map((peak) => {\n        const result = {};\n        for (let key in spectrum.variables) {\n            result[key] = spectrum.variables[key].data[peak.index];\n        }\n        result.width = peak.width;\n        return result;\n    });\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXV0b1BlYWtQaWNraW5nLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL3V0aWwvYXV0b1BlYWtQaWNraW5nLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLGFBQWE7QUFDYixPQUFPLEVBQUUsR0FBRyxFQUFFLE1BQU0sUUFBUSxDQUFDO0FBQzdCLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxrQkFBa0IsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBSS9FLE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBRWhFLDhDQUE4QztBQUM5QyxNQUFNLFVBQVUsZUFBZSxDQUM3QixRQUFzQixFQUN0QixVQUFrQyxFQUFFOztJQUVwQyxNQUFNLEVBQ0osU0FBUyxHQUFHLEdBQUcsRUFDZixTQUFTLEdBQUcsR0FBRyxFQUNmLG9CQUFvQixFQUNwQixZQUFZLEdBQ2IsR0FBRyxPQUFPLENBQUM7SUFFWixJQUFJLENBQUMsR0FBRyxNQUFBLFFBQVEsQ0FBQyxTQUFTLENBQUMsU0FBUyxDQUFDLDBDQUFFLElBQUksQ0FBQztJQUM1QyxJQUFJLENBQUMsR0FBRyxNQUFBLFFBQVEsQ0FBQyxTQUFTLENBQUMsU0FBUyxDQUFDLDBDQUFFLElBQUksQ0FBQztJQUU1QyxJQUFJLG9CQUFvQixFQUFFO1FBQ3hCLE1BQU0sWUFBWSxHQUFpQjtZQUNqQyxTQUFTLEVBQUU7Z0JBQ1QsQ0FBQyxFQUFFLEVBQUUsSUFBSSxFQUFFLENBQUMsRUFBRSxLQUFLLEVBQUUsRUFBRSxFQUFFO2dCQUN6QixDQUFDLEVBQUUsRUFBRSxJQUFJLEVBQUUsQ0FBQyxFQUFFLEtBQUssRUFBRSxFQUFFLEVBQUU7YUFDMUI7U0FDRixDQUFDO1FBQ0YsTUFBTSxrQkFBa0IsR0FBRyxxQkFBcUIsQ0FDOUMsWUFBWSxFQUNaLG9CQUFvQixDQUNyQixDQUFDO1FBQ0YsQ0FBQyxHQUFHLGtCQUFrQixDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDO1FBQ3hDLENBQUMsR0FBRyxrQkFBa0IsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQztLQUN6QztJQUVELElBQUksQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQUUsT0FBTztJQUNyQixJQUFJLEVBQUUsSUFBSSxFQUFFLEVBQUUsRUFBRSxHQUFHLE9BQU8sQ0FBQztJQUUzQixJQUFJLEtBQUssR0FDUCxHQUFHLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsT0FBTyxDQUFDLENBQUM7SUFFekIsSUFBSSxvQkFBb0IsRUFBRTtRQUN4Qix3Q0FBd0M7UUFDeEMsTUFBTSxlQUFlLEdBQ25CLE9BQU8sQ0FBQyxXQUFXLEtBQUssU0FBUyxJQUFJLE9BQU8sQ0FBQyxXQUFXO1lBQ3RELENBQUMsQ0FBQyxrQkFBa0I7WUFDcEIsQ0FBQyxDQUFDLGtCQUFrQixDQUFDO1FBQ3pCLEtBQUssSUFBSSxJQUFJLElBQUksS0FBSyxFQUFFO1lBQ3RCLE1BQU0sT0FBTyxHQUFHLGVBQWUsQ0FDN0IsRUFBRSxDQUFDLEVBQUUsUUFBUSxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsSUFBSSxFQUFFLENBQUMsRUFBRSxRQUFRLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxJQUFJLEVBQUUsRUFDOUQsRUFBRSxNQUFNLEVBQUUsSUFBSSxDQUFDLENBQUMsRUFBRSxDQUNuQixDQUFDO1lBQ0YsSUFBSSxDQUFDLENBQUMsR0FBRyxPQUFPLENBQUMsQ0FBQyxDQUFDO1lBQ25CLElBQUksQ0FBQyxDQUFDLEdBQUcsT0FBTyxDQUFDLENBQUMsQ0FBQztTQUNwQjtLQUNGO0lBRUQsSUFBSSxJQUFJLEtBQUssU0FBUyxFQUFFO1FBQ3RCLEtBQUssR0FBRyxLQUFLLENBQUMsTUFBTSxDQUFDLENBQUMsSUFBSSxFQUFFLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxJQUFLLElBQWUsQ0FBQyxDQUFDO0tBQzVEO0lBQ0QsSUFBSSxFQUFFLEtBQUssU0FBUyxFQUFFO1FBQ3BCLEtBQUssR0FBRyxLQUFLLENBQUMsTUFBTSxDQUFDLENBQUMsSUFBSSxFQUFFLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxJQUFLLEVBQWEsQ0FBQyxDQUFDO0tBQzFEO0lBQ0QsSUFBSSxZQUFZLEVBQUU7UUFDaEIsS0FBSyxHQUFHLEtBQUssQ0FBQyxNQUFNLENBQUMsQ0FBQyxJQUFJLEVBQUUsRUFBRSxDQUFDLElBQUksQ0FBQyxLQUFLLElBQUksWUFBWSxDQUFDLENBQUM7S0FDNUQ7SUFFRCxPQUFPLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQyxJQUFJLEVBQUUsRUFBRTtRQUN4QixNQUFNLE1BQU0sR0FBMkIsRUFBRSxDQUFDO1FBQzFDLEtBQUssSUFBSSxHQUFHLElBQUksUUFBUSxDQUFDLFNBQVMsRUFBRTtZQUNsQyxNQUFNLENBQUMsR0FBRyxDQUFDLEdBQUcsUUFBUSxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO1NBQ3hEO1FBQ0QsTUFBTSxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDO1FBQzFCLE9BQU8sTUFBTSxDQUFDO0lBQ2hCLENBQUMsQ0FBQyxDQUFDO0FBQ0wsQ0FBQyJ9","import { getJSGraph } from './jsgraph/getJSGraph';\nimport { getNormalizationAnnotations } from './jsgraph/getNormalizationAnnotations';\nexport * from './AnalysesManager';\nexport * from './Analysis';\nexport * from './from/fromJcamp';\nexport * from './to/toJcamp';\nexport * from './to/toJcamps';\nexport * from './to/toText';\nexport * from './util/getNormalizedSpectrum';\nexport * from './util/peakPicking';\nexport * from './util/autoPeakPicking';\nexport { getReactPlotJSON } from './reactPlot/getReactPlotJSON';\nexport const JSGraph = {\n    getJSGraph,\n    getNormalizationAnnotations,\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBQ2xELE9BQU8sRUFBRSwyQkFBMkIsRUFBRSxNQUFNLHVDQUF1QyxDQUFDO0FBRXBGLGNBQWMsbUJBQW1CLENBQUM7QUFDbEMsY0FBYyxZQUFZLENBQUM7QUFDM0IsY0FBYyxrQkFBa0IsQ0FBQztBQUNqQyxjQUFjLGNBQWMsQ0FBQztBQUM3QixjQUFjLGVBQWUsQ0FBQztBQUM5QixjQUFjLGFBQWEsQ0FBQztBQUM1QixjQUFjLDhCQUE4QixDQUFDO0FBRTdDLGNBQWMsb0JBQW9CLENBQUM7QUFDbkMsY0FBYyx3QkFBd0IsQ0FBQztBQUV2QyxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSw4QkFBOEIsQ0FBQztBQUVoRSxNQUFNLENBQUMsTUFBTSxPQUFPLEdBQUc7SUFDckIsVUFBVTtJQUNWLDJCQUEyQjtDQUM1QixDQUFDIn0=","/**\n * @typedef {Object} Peak\n * @property {number} wavenumber\n * @property {number} transmittance\n * @property {number} absorbance\n * @property {number} kind\n * @property {number} assignment\n */\n\n/**\n * Creates annotations for jsgraph that allows to display the result of peak picking\n * @param {array<Peak>} peaks\n * @param {object} [options={}]\n * @param {string} [options.fillColor='green']\n * @param {string} [options.strokeColor='red']\n * @param {string} [options.showKind=true] Display the kind, 'm', 'w', 'S'\n * @param {string} [options.showAssignment=true] Display the assignment\n * @param {function} [options.createFct] (annotation, peak) => {}: callback allowing to add properties\n * @param {string} [options.mode='t100'] 't100'=transmittance in %, 't'=transmittance, 'a'=absorbance\n * @returns array\n */\n\nexport function getAnnotations(peaks, options = {}) {\n  const {\n    fillColor = 'green',\n    strokeColor = 'red',\n    creationFct,\n    mode = 't100',\n  } = options;\n  let annotations = peaks.map((peak) => {\n    let annotation = {\n      line: 1,\n      type: 'rect',\n      strokeColor: strokeColor,\n      strokeWidth: 0,\n      fillColor: fillColor,\n    };\n    if (creationFct) {\n      creationFct(annotation, peak);\n    }\n    switch (mode) {\n      case 'a':\n        annotationAbsorbance(annotation, peak, options);\n        break;\n      case 't':\n        annotationTransmittance(annotation, peak, 1, options);\n        break;\n      case 't100':\n        annotationTransmittance(annotation, peak, 100, options);\n        break;\n      default:\n    }\n    return annotation;\n  });\n  return annotations;\n}\n\nfunction annotationTransmittance(annotation, peak, factor = 1, options = {}) {\n  const { showKind = true, showAssignment = true } = options;\n  let labels = [];\n  let line = 0;\n\n  if (showKind) {\n    labels.push({\n      text: peak.kind,\n      size: '18px',\n      anchor: 'middle',\n      color: 'red',\n      position: {\n        x: peak.wavenumber,\n        y: peak.transmittance * factor,\n        dy: `${23 + line * 14}px`,\n      },\n    });\n    line++;\n  }\n\n  if (showAssignment) {\n    labels.push({\n      text: peak.assignment,\n      size: '18px',\n      anchor: 'middle',\n      color: 'darkred',\n      position: {\n        x: peak.wavenumber,\n        y: peak.transmittance * factor,\n        dy: `${23 + line * 14}px`,\n      },\n    });\n    line++;\n  }\n\n  annotation.labels = labels;\n  annotation.position = [\n    {\n      x: peak.wavenumber,\n      y: peak.transmittance * factor,\n      dy: '10px',\n      dx: '-1px',\n    },\n    {\n      x: peak.wavenumber,\n      y: peak.transmittance * factor,\n      dy: '5px',\n      dx: '1px',\n    },\n  ];\n}\n\nfunction annotationAbsorbance(annotation, peak, options = {}) {\n  const {\n    showKind = true,\n    showAssignment = true,\n    assignmentAngle = -45,\n  } = options;\n  let labels = [];\n  let line = 0;\n\n  if (showKind) {\n    labels.push({\n      text: peak.kind,\n      size: '18px',\n      anchor: 'middle',\n      color: 'red',\n      position: {\n        x: peak.wavenumber,\n        y: peak.absorbance,\n        dy: `${-15 - line * 14}px`,\n      },\n    });\n    line++;\n  }\n\n  if (showAssignment) {\n    labels.push({\n      text: peak.assignment,\n      size: '18px',\n      angle: assignmentAngle,\n      anchor: 'left',\n      color: 'darkred',\n      position: {\n        x: peak.wavenumber,\n        y: peak.absorbance,\n        dy: `${-15 - line * 14}px`,\n      },\n    });\n    line++;\n  }\n\n  annotation.labels = labels;\n\n  annotation.position = [\n    {\n      x: peak.wavenumber,\n      y: peak.absorbance,\n      dy: '-10px',\n      dx: '-1px',\n    },\n    {\n      x: peak.wavenumber,\n      y: peak.absorbance,\n      dy: '-5px',\n      dx: '1px',\n    },\n  ];\n}\n","import { fromJcamp as commonFromJcamp } from 'common-spectrum';\n\nexport function fromJcamp(jcamp, options) {\n  return commonFromJcamp(jcamp, { ...options, spectrumCallback });\n}\n\nfunction spectrumCallback(variables) {\n  // we add missing absorbance / transmittance\n  // variable a = absorbance\n  // variable t = transmittance\n  let yVariable = variables.y;\n  let absorbance = true;\n  if (yVariable.label.toLowerCase().includes('trans')) {\n    absorbance = false;\n  }\n\n  if (absorbance) {\n    variables.a = { ...yVariable };\n    variables.a.data = variables.a.data.slice();\n    variables.t = {\n      data: yVariable.data.map((absorbance) => 10 ** -absorbance * 100),\n      label: 'Transmittance (%)',\n      units: '',\n    };\n  } else {\n    const factor =\n      yVariable.label.includes('%') ||\n      yVariable.label.toLowerCase().includes('percent')\n        ? 100\n        : 1;\n    variables.a = {\n      data: yVariable.data.map(\n        (transmittance) => -Math.log10(transmittance / factor),\n      ),\n      label: 'Absorbance',\n      units: '',\n    };\n    if (factor === 100) {\n      variables.t = { ...yVariable };\n      variables.t.data = variables.t.data.slice();\n    } else {\n      variables.t = {\n        units: '',\n        label: 'Transmittance (%)',\n        data: yVariable.data.map((transmittance) => transmittance * 100),\n      };\n    }\n  }\n}\n","import { JSGraph as OriginalJSGraph } from 'common-spectrum';\n\nimport { getAnnotations } from './jsgraph/getAnnotations';\n\nexport {\n  Analysis,\n  AnalysesManager,\n  toJcamp,\n  peakPicking,\n  autoPeakPicking,\n} from 'common-spectrum';\n\nexport { fromJcamp } from './from/fromJcamp';\n\nexport const JSGraph = { ...OriginalJSGraph, getAnnotations };\n"],"names":["toString","Object","prototype","isAnyArray","object","call","endsWith","a","d","e","f","length","g","h","i","j","c","b","_ref","module","exports","window","median","input","isArray","TypeError","quickSelectMedian","slice","xAdd","array1","array2","isConstant","constant","Error","Number","array3","Array","xMultiply","Float64Array","xDivide","xFindClosestIndex","array","target","low","high","middle","Math","abs","_typeof","obj","Symbol","iterator","constructor","sequentialFill","arguments","undefined","options","_options","_options$from","from","_options$to","to","_options$size","size","step","floor","push","_i","xIsMonotone","sum","sumValue","mean","min","_options$fromIndex","fromIndex","_options$toIndex","toIndex","isInteger","minValue","max","maxValue","xSubtract","xyCheck","data","x","y","xyEnsureGrowingX","prevX","Infinity","ansX","ansY","index","xyFilterXPositive","newX","newY","xyMaxClosestYPoint","targetIndex","previousIndex","MIN_SAFE_INTEGER","currentIndex","xyMaxY","xyMinClosestYPoint","minY","GAUSSIAN_EXP_FACTOR","LN2","ROOT_PI_OVER_LN2","sqrt","PI","ROOT_THREE","ROOT_2LN2","ROOT_2LN2_MINUS_ONE","erfinv","ln1MinusXSqrd","log","lnEtcBy2Plus2","firstSqrt","secondSqrt","Gaussian","fwhm","sd","widthToFWHM","height","getData","factor","getFactor","ceil","pow","center","fct","area","getArea","width","fwhmToWidth","setFWHM","setHeight","exp","Lorentzian","squareFWHM","tan","PseudoVoigt","mu","setMu","axis","Gaussian2D","globalFWHM","xLength","xFactor","yLength","yFactor","xCenter","yCenter","volume","getVolume","axisLabel","axisName","toLowerCase","xFWHM","yFWHM","getShapeGenerator","kind","shapeOptions","replace","SavitzkyGolay","ys","xs","windowSize","derivative","polynomial","RangeError","console","warn","half","np","ans","weights","fullWeights","hs","constantH","wg1","wg2","d1","d2","l","getHs","wg","count","GramPoly","m","k","s","Grampoly","GenFact","gf","Weight","t","n","gsd","noiseLevel","sgOptions","shape","smoothY","heightFactor","broadRatio","maxCriteria","minMaxRatio","derivativeThreshold","realTopDetection","yIn","equalSpaced","isEqualSpaced","getNoiseLevel","yData","dY","ddY","SG","xData","dX","maxDdy","maxY","lastMax","lastMin","minddY","intervalL","intervalR","broadMask","widthProcessor","signals","lastK","possible","frequency","distanceJ","minDistance","gettingCloser","MAX_VALUE","soft","left","right","yLeft","yRight","determineRealTop","base","sort","tmp","maxDx","minDx","MAX_SAFE_INTEGER","stddev","averageDeviations","peakList","alpha","beta","gamma","p","currentPoint","log10","rescale","output","currentMin","currentMax","_options$min","autoMinMax","_options$max","indent","repeat","indentData","inspectMatrix","inspectMatrixWithOptions","matrix","maxRows","maxColumns","maxNumSize","name","inspectData","rows","columns","maxI","maxJ","result","line","formatNumber","get","join","num","numStr","String","padEnd","precise","toPrecision","exponential","toExponential","eIndex","indexOf","installMathOperations","AbstractMatrix","Matrix","add","value","addS","addM","set","checkMatrix","newMatrix","sub","subS","subM","subtract","subtractS","subtractM","mul","mulS","mulM","multiply","multiplyS","multiplyM","div","divS","divM","divide","divideS","divideM","mod","modS","modM","modulus","modulusS","modulusM","and","andS","andM","or","orS","orM","xor","xorS","xorM","leftShift","leftShiftS","leftShiftM","signPropagatingRightShift","signPropagatingRightShiftS","signPropagatingRightShiftM","rightShift","rightShiftS","rightShiftM","zeroFillRightShift","zeroFillRightShiftS","zeroFillRightShiftM","not","acos","acosh","asin","asinh","atan","atanh","cbrt","clz32","cos","cosh","expm1","fround","log1p","log2","round","sign","sin","sinh","tanh","trunc","arg0","powS","powM","checkRowIndex","outer","checkColumnIndex","checkRowVector","vector","to1DArray","checkColumnVector","checkIndices","rowIndices","columnIndices","row","checkRowIndices","column","checkColumnIndices","rowOut","some","r","columnOut","checkRange","startRow","endRow","startColumn","endColumn","checkNumber","newArray","checkNonEmpty","isEmpty","sumByRow","sumByColumn","sumAll","v","productByRow","productByColumn","productAll","varianceByRow","unbiased","cols","variance","sum1","sum2","varianceByColumn","varianceAll","centerByRow","centerByColumn","centerAll","getScaleByRow","scale","scaleByRow","getScaleByColumn","scaleByColumn","getScaleAll","divider","scaleAll","from1DArray","newRows","newColumns","newData","rowVector","columnVector","zeros","ones","fill","rand","random","randInt","interval","eye","diag","matrix1","matrix2","isMatrix","klass","apply","callback","to2DArray","copy","toJSON","isRowVector","isColumnVector","isVector","isSquare","isSymmetric","isEchelonForm","previousColumn","checked","isReducedEchelonForm","echelonForm","clone","iMax","swapRows","reducedEchelonForm","maxRow","pivot","setSubMatrix","neg","getRow","getRowVector","setRow","row1","row2","temp","getColumn","getColumnVector","setColumn","swapColumns","column1","column2","addRowVector","subRowVector","mulRowVector","divRowVector","addColumnVector","subColumnVector","mulColumnVector","divColumnVector","mulRow","mulColumn","NaN","maxIndex","idx","minIndex","maxRowIndex","minRow","minRowIndex","maxColumn","maxColumnIndex","minColumn","minColumnIndex","norm","type","cumulativeSum","dot","vector2","vector1","mmul","other","Bcolj","strassen2x2","a11","b11","a12","b12","a21","b21","a22","b22","m1","m2","m3","m4","m5","m6","m7","c00","c01","c10","c11","strassen3x3","a00","a01","a02","a10","a20","b00","b01","b02","b10","b20","m8","m9","m10","m11","m12","m13","m14","m15","m16","m17","m18","m19","m20","m21","m22","m23","c02","c12","c20","c21","c22","mmulStrassen","r1","c1","r2","c2","embed","mat","resultat","blockMult","halfRows","parseInt","halfCols","subMatrix","scaleRows","isFinite","scaleColumns","flipRows","first","last","flipColumns","kroneckerProduct","q","kroneckerSum","AxI","IxB","transpose","sortRows","compareFunction","compareNumbers","sortColumns","subMatrixRow","indices","subMatrixColumn","selection","rowIndex","columnIndex","trace","by","product","standardDeviation","for","randomInt","diagonal","identity","negate","tensorProduct","nRows","nColumns","arrayData","removeRow","splice","addRow","removeColumn","newRow","addColumn","BaseView","MatrixTransposeView","WrapperMatrix2D","LuDecomposition","lu","pivotVector","pivotSign","LUcolj","kmax","LU","isSingular","col","solve","X","determinant","lowerTriangularMatrix","upperTriangularMatrix","pivotPermutationVector","hypotenuse","QrDecomposition","qr","rdiag","nrm","QR","Rdiag","isFullRank","orthogonalMatrix","SingularValueDecomposition","computeLeftSingularVectors","computeRightSingularVectors","autoTranspose","wantu","Boolean","wantv","swapped","aux","nu","ni","U","V","work","si","nct","nrt","mrc","pp","eps","EPSILON","kase","MIN_VALUE","isNaN","ks","cs","sn","sp","spm1","epm1","sk","ek","shift","Y","threshold","scols","Ls","rightSingularVectors","VL","vrows","urows","VLU","solveForDiagonal","inverse","vcols","ucols","condition","norm2","rank","tol","ii","leftSingularVectors","diagonalMatrix","useSVD","leftHandSide","rightHandSide","ldlSymbolic","Ap","Ai","Lp","Parent","Lnz","Flag","kk","p2","ldlNumeric","Ax","Li","Lx","D","Pattern","yi","lKi","len","top","ldlLsolve","ldlDsolve","ldlLTsolve","ldlPerm","B","P","ldlPermt","prepare","M","Pinv","Mt","ar","ac","LNZ","coloffset","adr","bp1","cuthillMckee_1","cuthillMckee","compareNum","list","adj","visited","toVisit","eol","ptr","nbhd","u","getClosestNumber","goal","closest","reduce","prev","curr","getCloseIndex","updateSystem","nbPoints","newVector","w","next","getDeltaMatrix","lambda","lowerTriangularNonZeros","permutationEncodedArray","airPLS","maxIterations","factorCriterion","controlPoints","baseLineZones","forEach","arr","range","indexFrom","indexTo","baseline","iteration","sumNegDifferences","stopCriterion","cho","Cholesky","difference","map","calculateError","maxNegativeDiff","diff","corrected","error","airPLSBaseline","numberPoints","regressionOptions","airpls","correctedSpectrum","maybeToPrecision","digits","checkArraySize","BaseRegression","new","predict","_predict","train","toLaTeX","score","y2","xSum","ySum","chi2","rmsd","xSquared","ySquared","xY","PolynomialRegression","degree","powers","coefficients","checkArrayLength","regress","precision","_toFormula","isLaTeX","sup","closeSup","times","fn","str","charAt","load","json","pr","F","FT","A","baselineCorrectionRegression","Regression","tolerance","fitting","oldFitting","delta","regression","iterativePolynomialBaseline","baselineCorrection","xCheck","xPadding","algorithm","fromEnd","toEnd","xRolling","padding","subArray","buffer","xRollingAverage","xRollingMedian","rollingAverageBaseline","defaults","actualOptions","assign","rollingBall","spectrum","maxima","minima","windowM","windowS","windowLeft","windowRight","rollingBallBaseline","rollingMedianBaseline","_options$algorithm","_options$sumValue","_options$maxValue","absoluteSumValue","absoluteSum","currentMaxValue","sumFactor","_i2","concat","normalize","zones","NEGATIVE_INFINITY","POSITIVE_INFINITY","JSON","parse","stringify","zone","filter","currentZone","invert","exclusions","exclusion","nextExclusion","zonesWithPoints","numberOfPoints","totalSize","previous","current","unitsPerPoint","currentTotal","equallySpacedSlot","halfStep","lastStep","start","previousX","previousY","nextX","nextY","frontOutsideSpectra","backOutsideSpectra","currentValue","currentPoints","main","integral","x0","x1","slope","intercept","equallySpacedSmooth","initialOriginalStep","lastOriginalStep","sumAtMin","sumAtMax","getSlope","y0","y1","equallySpaced","arrayXY","reverse","variant","xResult","yResult","zoneResult","processZone","getZones","currentFrom","filterX","points","currentZoneIndex","position","defaultOptions","arrayCase","cond","matrixCase","padArray","src","factorial","pad","padValue","savitzkyGolay","C","J","inic","Jtranspose","Jinv","det","values","minMax","arithmeticMean","geometricMean","logMean","lnsum","grandMean","means","samples","truncatedMean","percent","alreadySorted","harmonicMean","contraHarmonicMean","theMean","theVariance","standardError","robustMeanAndStdev","stdev","quartiles","quart","q1","q2","q3","pooledStandardDeviation","pooledVariance","vari","mode","itemCount","itemArray","covariance","mean1","mean2","cov","skewness","s2","s3","dev","kurtosis","s4","entropy","weightedMean","weightedStandardDeviation","weightedVariance","z","inPlace","standardize","standardDev","Stat","normed","global","factory","this","isString","isFiniteImpl","isNumber","uniq","strings","seen","item","hasOwnProperty","compareArray","properties","keys","key","mulSafe","decimals","arg","getFractional","divSafe","den","invDen","val","QtyError","err","create","message","stack","throwIncompatibleUnits","UNITS","BASE_UNITS","UNITY","UNITY_ARRAY","validateUnitDefinition","unitDef","definition","scalar","numerator","denominator","unit","PREFIX_VALUES","PREFIX_MAP","UNIT_VALUES","UNIT_MAP","OUTPUT_MAP","getUnits","units","unitKeys","substr","getKinds","getAliases","unitName","SIGNATURE_VECTOR","unitSignature","signature","unitSignatureVector","isBase","toBase","SIGN","INTEGER","SIGNED_INTEGER","FRACTION","FLOAT","EXPONENT","SCI_NUMBER","SIGNED_NUMBER","QTY_STRING","QTY_STRING_REGEX","RegExp","POWER_OP","SAFE_POWER","TOP_REGEX","BOTTOM_REGEX","trim","exec","scalarMatch","parseFloat","bottom","nx","UNIT_TEST_REGEX","test","parseUnits","PREFIX_REGEX","UNIT_REGEX","BOUNDARY_REGEX","UNIT_MATCH","UNIT_MATCH_REGEX","parsedUnitsCache","cached","unitMatch","normalizedUnits","globalParse","isQty","Qty","initValue","initUnits","assertValidConstructorArgs","baseScalar","_conversionCache","isDefinitionObject","updateBaseScalar","isTemperature","KINDS","knownSignature","isDegrees","match","subtractTemperatures","lhs","rhs","lhsUnits","rhsConverted","dstDegrees","getDegreeUnits","subtractTempDegrees","deg","tempDegrees","addTempDegrees","toDegrees","dst","srcDegK","toDegK","dstUnits","dstScalar","qty","toTemp","toTempK","isCompatible","isInverse","baseUnitCache","toBaseUnits","toFloat","isUnitless","toPrec","precQuantity","precRoundedResult","swiftConverter","srcUnits","srcQty","dstQty","eq","convert","converter","op1","op2","numdenscale","cleanTerms","num1","den1","num2","den2","notUnity","combined","combineTerms","terms","direction","prefix","prefixValue","combinedPrefixValue","prop","compareTo","lt","lte","gt","gte","same","every","_isBase","NestedMap","childMap","defaultFormatter","formatter","_units","numIsUnity","denIsUnity","numUnits","stringifyUnits","denUnits","targetUnitsOrMaxDecimalsOrPrec","maxDecimals","targetUnits","out","outScalar","format","targetQty","stringifiedUnitsCache","stringified","isUnity","simplify","getOutputNames","unitNames","token","tokenNext","unitCounts","acc","unitCounter","unitCount","version","ensureString","blob","encoding","ArrayBuffer","isView","decoder","TextDecoder","decode","GC_MS_FIELDS","complexChromatogram","spectra","chromatogram","series","ms","dimension","existingGCMSFields","label","convertMSFieldToLabel","pageValue","isMSField","canonicDataLabel","convertToFloatArray","stringArray","floatArray","fastParseXYData","deltaX","isXYdata","currentData","currentX","firstX","currentY","firstY","endLine","ascii","charCodeAt","newLine","isDifference","isLastDifference","lastDifference","isDuplicate","inComment","lastValue","isNegative","inValue","skipFirstValue","decimalPosition","duplicate","ascii2","removeCommentRegExp","peakTableSplitRegExp","parsePeakTable","isPeaktable","variables","parseXY","parseXYZ","lines","split","logs","numberOfVariables","variable","parseXYA","removeSymbolRegExp","isXYAdata","convertTo3DZ","minZ","maxZ","ySize","xSize","lastX","lastY","medians","getMedian","minX","maxX","noise","generateContourLines","zData","povarHeight0","povarHeight1","povarHeight2","povarHeight3","isOver0","isOver1","isOver2","isOver3","nbSubSpectra","nbPovars","pAx","pAy","pBx","pBy","xN","dx","yN","dy","iter","nbContourLevels","contourLevels","lineZValue","level","contourLevel","side","noiseMultiplier","zValue","iSubSpectra","subSpectra","subSpectraAfter","povar","segments","add2D","noContour","contourLines","gyromagneticRatio","postProcessingNMR","entriesFlat","entry","observeFrequency","shiftOffsetVal","ntuples","symbol","xUnits","toUpperCase","includes","nucleus","startsWith","$NUC2","f2index","$NUC1","yType","pageSymbolIndex","pageSymbol","ratio0","ratio1","ratio","profiling","action","time","Date","now","simpleChromatogram","intensity","postProcessing","newNtuples","twoD","wantXY","keepSpectra","prepareNtuplesDatatable","currentEntry","xIndex","yIndex","firstVariable","secondVariable","lowerCaseSymbol","vardim","varname","yUnits","prepareSpectrum","ntuplesSeparatorRegExp","Spectrum","keepRecordsRegExp","canonicDataLabels","canonicMetadataLabels","dynamicTyping","withoutXY","jcamp","entries","tmpResult","children","parentsStack","ldrs","ldr","dataLabel","substring","dataValue","infos","datatable","parentEntry","info","meta","title","dataType","dataClass","xType","shiftOffsetNum","vartype","varform","page","sampleDescription","pop","flatten","fromJcamp","creatorNtuples","owner","origin","varName","varType","varDim","minFct","maxFct","header","point","fromJSON","fromVariables","forceNtuples","jcampOptions","xLabel","yLabel","JSGraph","getAnnotations","peaks","fillColor","strokeColor","creationFct","annotations","peak","annotation","strokeWidth","annotationAbsorbance","annotationTransmittance","showKind","showAssignment","labels","text","anchor","color","wavenumber","transmittance","assignment","assignmentAngle","absorbance","angle","commonFromJcamp","spectrumCallback","yVariable","OriginalJSGraph"],"mappings":"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"}