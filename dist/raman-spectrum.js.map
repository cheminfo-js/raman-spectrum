{"version":3,"file":"raman-spectrum.js","sources":["../node_modules/is-any-array/src/index.js","../node_modules/ml-array-min/lib-es6/index.js","../node_modules/ml-array-max/lib-es6/index.js","../node_modules/extend/index.js","../node_modules/ml-savitzky-golay-generalized/node_modules/ml-stat/array.js","../node_modules/ml-savitzky-golay-generalized/src/index.js","../node_modules/ml-gsd/src/gsd.js","../node_modules/ml-matrix/src/symbol-species.js","../node_modules/ml-matrix/src/dc/lu.js","../node_modules/ml-matrix/src/dc/util.js","../node_modules/ml-matrix/src/dc/svd.js","../node_modules/ml-stat/array.js","../node_modules/ml-stat/matrix.js","../node_modules/ml-stat/index.js","../node_modules/ml-matrix/node_modules/ml-array-utils/src/ArrayUtils.js","../node_modules/ml-matrix/node_modules/ml-array-utils/src/getEquallySpaced.js","../node_modules/ml-matrix/node_modules/ml-array-utils/src/snv.js","../node_modules/ml-matrix/node_modules/ml-array-utils/src/index.js","../node_modules/ml-matrix/src/util.js","../node_modules/ml-matrix/src/views/base.js","../node_modules/ml-matrix/src/views/transpose.js","../node_modules/ml-matrix/src/views/row.js","../node_modules/ml-matrix/src/views/sub.js","../node_modules/ml-matrix/src/views/selection.js","../node_modules/ml-matrix/src/views/column.js","../node_modules/ml-matrix/src/views/flipRow.js","../node_modules/ml-matrix/src/views/flipColumn.js","../node_modules/ml-matrix/src/abstractMatrix.js","../node_modules/ml-matrix/src/matrix.js","../node_modules/ml-matrix/src/dc/evd.js","../node_modules/ml-matrix/src/dc/qr.js","../node_modules/ml-matrix/src/dc/cholesky.js","../node_modules/ml-matrix/src/decompositions.js","../node_modules/ml-matrix/src/index.js","../node_modules/ml-curve-fitting/src/algebra.js","../node_modules/ml-curve-fitting/src/LM.js","../node_modules/ml-curve-fitting/src/index.js","../node_modules/ml-optimize-lorentzian/src/index.js","../node_modules/ml-gsd/src/post/optimizePeaks.js","../node_modules/ml-gsd/src/post/joinBroadPeaks.js","../node_modules/ml-gsd/src/post/broadenPeaks.js","../node_modules/ml-gsd/src/index.js","../node_modules/jcampconverter/src/index.js","../node_modules/ml-array-xy-sort-x/src/index.js","../node_modules/ml-arrayxy-uniquex/src/index.js","../node_modules/xy-parser/src/index.js","../lib/index.js"],"sourcesContent":["'use strict';\n\nconst toString = Object.prototype.toString;\n\nfunction isAnyArray(object) {\n  return toString.call(object).endsWith('Array]');\n}\n\nmodule.exports = isAnyArray;\n","import isArray from 'is-any-array';\n\n/**\n * Computes the minimum of the given values\n * @param {Array<number>} input\n * @return {number}\n */\n\nfunction min(input) {\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var min = input[0];\n\n  for (var i = 1; i < input.length; i++) {\n    if (input[i] < min) min = input[i];\n  }\n\n  return min;\n}\n\nexport default min;\n","import isArray from 'is-any-array';\n\n/**\n * Computes the maximum of the given values\n * @param {Array<number>} input\n * @return {number}\n */\n\nfunction max(input) {\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var max = input[0];\n\n  for (var i = 1; i < input.length; i++) {\n    if (input[i] > max) max = input[i];\n  }\n\n  return max;\n}\n\nexport default max;\n","'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\nvar setProperty = function setProperty(target, options) {\n\tif (defineProperty && options.name === '__proto__') {\n\t\tdefineProperty(target, options.name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\tvalue: options.newValue,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\ttarget[options.name] = options.newValue;\n\t}\n};\n\n// Return undefined instead of __proto__ if '__proto__' is not an own property\nvar getProperty = function getProperty(obj, name) {\n\tif (name === '__proto__') {\n\t\tif (!hasOwn.call(obj, name)) {\n\t\t\treturn void 0;\n\t\t} else if (gOPD) {\n\t\t\t// In early versions of node, obj['__proto__'] is buggy when obj has\n\t\t\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n\t\t\treturn gOPD(obj, name).value;\n\t\t}\n\t}\n\n\treturn obj[name];\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = getProperty(target, name);\n\t\t\t\tcopy = getProperty(options, name);\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: copy });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n","'use strict';\n\nfunction compareNumbers(a, b) {\n    return a - b;\n}\n\n/**\n * Computes the sum of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.sum = function sum(values) {\n    var sum = 0;\n    for (var i = 0; i < values.length; i++) {\n        sum += values[i];\n    }\n    return sum;\n};\n\n/**\n * Computes the maximum of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.max = function max(values) {\n    var max = -Infinity;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        if (values[i] > max) max = values[i];\n    }\n    return max;\n};\n\n/**\n * Computes the minimum of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.min = function min(values) {\n    var min = Infinity;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        if (values[i] < min) min = values[i];\n    }\n    return min;\n};\n\n/**\n * Computes the min and max of the given values\n * @param {Array} values\n * @returns {{min: number, max: number}}\n */\nexports.minMax = function minMax(values) {\n    var min = Infinity;\n    var max = -Infinity;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        if (values[i] < min) min = values[i];\n        if (values[i] > max) max = values[i];\n    }\n    return {\n        min: min,\n        max: max\n    };\n};\n\n/**\n * Computes the arithmetic mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.arithmeticMean = function arithmeticMean(values) {\n    var sum = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        sum += values[i];\n    }\n    return sum / l;\n};\n\n/**\n * {@link arithmeticMean}\n */\nexports.mean = exports.arithmeticMean;\n\n/**\n * Computes the geometric mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.geometricMean = function geometricMean(values) {\n    var mul = 1;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        mul *= values[i];\n    }\n    return Math.pow(mul, 1 / l);\n};\n\n/**\n * Computes the mean of the log of the given values\n * If the return value is exponentiated, it gives the same result as the\n * geometric mean.\n * @param {Array} values\n * @returns {number}\n */\nexports.logMean = function logMean(values) {\n    var lnsum = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        lnsum += Math.log(values[i]);\n    }\n    return lnsum / l;\n};\n\n/**\n * Computes the weighted grand mean for a list of means and sample sizes\n * @param {Array} means - Mean values for each set of samples\n * @param {Array} samples - Number of original values for each set of samples\n * @returns {number}\n */\nexports.grandMean = function grandMean(means, samples) {\n    var sum = 0;\n    var n = 0;\n    var l = means.length;\n    for (var i = 0; i < l; i++) {\n        sum += samples[i] * means[i];\n        n += samples[i];\n    }\n    return sum / n;\n};\n\n/**\n * Computes the truncated mean of the given values using a given percentage\n * @param {Array} values\n * @param {number} percent - The percentage of values to keep (range: [0,1])\n * @param {boolean} [alreadySorted=false]\n * @returns {number}\n */\nexports.truncatedMean = function truncatedMean(values, percent, alreadySorted) {\n    if (alreadySorted === undefined) alreadySorted = false;\n    if (!alreadySorted) {\n        values = values.slice().sort(compareNumbers);\n    }\n    var l = values.length;\n    var k = Math.floor(l * percent);\n    var sum = 0;\n    for (var i = k; i < (l - k); i++) {\n        sum += values[i];\n    }\n    return sum / (l - 2 * k);\n};\n\n/**\n * Computes the harmonic mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.harmonicMean = function harmonicMean(values) {\n    var sum = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        if (values[i] === 0) {\n            throw new RangeError('value at index ' + i + 'is zero');\n        }\n        sum += 1 / values[i];\n    }\n    return l / sum;\n};\n\n/**\n * Computes the contraharmonic mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.contraHarmonicMean = function contraHarmonicMean(values) {\n    var r1 = 0;\n    var r2 = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        r1 += values[i] * values[i];\n        r2 += values[i];\n    }\n    if (r2 < 0) {\n        throw new RangeError('sum of values is negative');\n    }\n    return r1 / r2;\n};\n\n/**\n * Computes the median of the given values\n * @param {Array} values\n * @param {boolean} [alreadySorted=false]\n * @returns {number}\n */\nexports.median = function median(values, alreadySorted) {\n    if (alreadySorted === undefined) alreadySorted = false;\n    if (!alreadySorted) {\n        values = values.slice().sort(compareNumbers);\n    }\n    var l = values.length;\n    var half = Math.floor(l / 2);\n    if (l % 2 === 0) {\n        return (values[half - 1] + values[half]) * 0.5;\n    } else {\n        return values[half];\n    }\n};\n\n/**\n * Computes the variance of the given values\n * @param {Array} values\n * @param {boolean} [unbiased=true] - if true, divide by (n-1); if false, divide by n.\n * @returns {number}\n */\nexports.variance = function variance(values, unbiased) {\n    if (unbiased === undefined) unbiased = true;\n    var theMean = exports.mean(values);\n    var theVariance = 0;\n    var l = values.length;\n\n    for (var i = 0; i < l; i++) {\n        var x = values[i] - theMean;\n        theVariance += x * x;\n    }\n\n    if (unbiased) {\n        return theVariance / (l - 1);\n    } else {\n        return theVariance / l;\n    }\n};\n\n/**\n * Computes the standard deviation of the given values\n * @param {Array} values\n * @param {boolean} [unbiased=true] - if true, divide by (n-1); if false, divide by n.\n * @returns {number}\n */\nexports.standardDeviation = function standardDeviation(values, unbiased) {\n    return Math.sqrt(exports.variance(values, unbiased));\n};\n\nexports.standardError = function standardError(values) {\n    return exports.standardDeviation(values) / Math.sqrt(values.length);\n};\n\nexports.quartiles = function quartiles(values, alreadySorted) {\n    if (typeof(alreadySorted) === 'undefined') alreadySorted = false;\n    if (!alreadySorted) {\n        values = values.slice();\n        values.sort(compareNumbers);\n    }\n\n    var quart = values.length / 4;\n    var q1 = values[Math.ceil(quart) - 1];\n    var q2 = exports.median(values, true);\n    var q3 = values[Math.ceil(quart * 3) - 1];\n\n    return {q1: q1, q2: q2, q3: q3};\n};\n\nexports.pooledStandardDeviation = function pooledStandardDeviation(samples, unbiased) {\n    return Math.sqrt(exports.pooledVariance(samples, unbiased));\n};\n\nexports.pooledVariance = function pooledVariance(samples, unbiased) {\n    if (typeof(unbiased) === 'undefined') unbiased = true;\n    var sum = 0;\n    var length = 0, l = samples.length;\n    for (var i = 0; i < l; i++) {\n        var values = samples[i];\n        var vari = exports.variance(values);\n\n        sum += (values.length - 1) * vari;\n\n        if (unbiased)\n            length += values.length - 1;\n        else\n            length += values.length;\n    }\n    return sum / length;\n};\n\nexports.mode = function mode(values) {\n    var l = values.length,\n        itemCount = new Array(l),\n        i;\n    for (i = 0; i < l; i++) {\n        itemCount[i] = 0;\n    }\n    var itemArray = new Array(l);\n    var count = 0;\n\n    for (i = 0; i < l; i++) {\n        var index = itemArray.indexOf(values[i]);\n        if (index >= 0)\n            itemCount[index]++;\n        else {\n            itemArray[count] = values[i];\n            itemCount[count] = 1;\n            count++;\n        }\n    }\n\n    var maxValue = 0, maxIndex = 0;\n    for (i = 0; i < count; i++) {\n        if (itemCount[i] > maxValue) {\n            maxValue = itemCount[i];\n            maxIndex = i;\n        }\n    }\n\n    return itemArray[maxIndex];\n};\n\nexports.covariance = function covariance(vector1, vector2, unbiased) {\n    if (typeof(unbiased) === 'undefined') unbiased = true;\n    var mean1 = exports.mean(vector1);\n    var mean2 = exports.mean(vector2);\n\n    if (vector1.length !== vector2.length)\n        throw \"Vectors do not have the same dimensions\";\n\n    var cov = 0, l = vector1.length;\n    for (var i = 0; i < l; i++) {\n        var x = vector1[i] - mean1;\n        var y = vector2[i] - mean2;\n        cov += x * y;\n    }\n\n    if (unbiased)\n        return cov / (l - 1);\n    else\n        return cov / l;\n};\n\nexports.skewness = function skewness(values, unbiased) {\n    if (typeof(unbiased) === 'undefined') unbiased = true;\n    var theMean = exports.mean(values);\n\n    var s2 = 0, s3 = 0, l = values.length;\n    for (var i = 0; i < l; i++) {\n        var dev = values[i] - theMean;\n        s2 += dev * dev;\n        s3 += dev * dev * dev;\n    }\n    var m2 = s2 / l;\n    var m3 = s3 / l;\n\n    var g = m3 / (Math.pow(m2, 3 / 2.0));\n    if (unbiased) {\n        var a = Math.sqrt(l * (l - 1));\n        var b = l - 2;\n        return (a / b) * g;\n    }\n    else {\n        return g;\n    }\n};\n\nexports.kurtosis = function kurtosis(values, unbiased) {\n    if (typeof(unbiased) === 'undefined') unbiased = true;\n    var theMean = exports.mean(values);\n    var n = values.length, s2 = 0, s4 = 0;\n\n    for (var i = 0; i < n; i++) {\n        var dev = values[i] - theMean;\n        s2 += dev * dev;\n        s4 += dev * dev * dev * dev;\n    }\n    var m2 = s2 / n;\n    var m4 = s4 / n;\n\n    if (unbiased) {\n        var v = s2 / (n - 1);\n        var a = (n * (n + 1)) / ((n - 1) * (n - 2) * (n - 3));\n        var b = s4 / (v * v);\n        var c = ((n - 1) * (n - 1)) / ((n - 2) * (n - 3));\n\n        return a * b - 3 * c;\n    }\n    else {\n        return m4 / (m2 * m2) - 3;\n    }\n};\n\nexports.entropy = function entropy(values, eps) {\n    if (typeof(eps) === 'undefined') eps = 0;\n    var sum = 0, l = values.length;\n    for (var i = 0; i < l; i++)\n        sum += values[i] * Math.log(values[i] + eps);\n    return -sum;\n};\n\nexports.weightedMean = function weightedMean(values, weights) {\n    var sum = 0, l = values.length;\n    for (var i = 0; i < l; i++)\n        sum += values[i] * weights[i];\n    return sum;\n};\n\nexports.weightedStandardDeviation = function weightedStandardDeviation(values, weights) {\n    return Math.sqrt(exports.weightedVariance(values, weights));\n};\n\nexports.weightedVariance = function weightedVariance(values, weights) {\n    var theMean = exports.weightedMean(values, weights);\n    var vari = 0, l = values.length;\n    var a = 0, b = 0;\n\n    for (var i = 0; i < l; i++) {\n        var z = values[i] - theMean;\n        var w = weights[i];\n\n        vari += w * (z * z);\n        b += w;\n        a += w * w;\n    }\n\n    return vari * (b / (b * b - a));\n};\n\nexports.center = function center(values, inPlace) {\n    if (typeof(inPlace) === 'undefined') inPlace = false;\n\n    var result = values;\n    if (!inPlace)\n        result = values.slice();\n\n    var theMean = exports.mean(result), l = result.length;\n    for (var i = 0; i < l; i++)\n        result[i] -= theMean;\n};\n\nexports.standardize = function standardize(values, standardDev, inPlace) {\n    if (typeof(standardDev) === 'undefined') standardDev = exports.standardDeviation(values);\n    if (typeof(inPlace) === 'undefined') inPlace = false;\n    var l = values.length;\n    var result = inPlace ? values : new Array(l);\n    for (var i = 0; i < l; i++)\n        result[i] = values[i] / standardDev;\n    return result;\n};\n\nexports.cumulativeSum = function cumulativeSum(array) {\n    var l = array.length;\n    var result = new Array(l);\n    result[0] = array[0];\n    for (var i = 1; i < l; i++)\n        result[i] = result[i - 1] + array[i];\n    return result;\n};\n","//Code translate from Pascal source in http://pubs.acs.org/doi/pdf/10.1021/ac00205a007\nvar extend = require('extend');\nvar stat = require('ml-stat');\n\nvar defaultOptions = {\n    windowSize: 9,\n    derivative: 0,\n    polynomial: 3,\n};\n\n\nfunction SavitzkyGolay(data, h, options) {\n    options = extend({}, defaultOptions, options);\n\n    if ((options.windowSize % 2 === 0) || (options.windowSize < 5) || !(Number.isInteger(options.windowSize)))\n            throw new RangeError('Invalid window size (should be odd and at least 5 integer number)')\n\n\n    if (options.windowSize>data.length)\n        throw new RangeError('Window size is higher than the data length '+options.windowSize+\">\"+data.length);\n    if ((options.derivative < 0) || !(Number.isInteger(options.derivative)))\n        throw new RangeError('Derivative should be a positive integer');\n    if ((options.polynomial < 1) || !(Number.isInteger(options.polynomial)))\n        throw new RangeError('Polynomial should be a positive integer');\n    if (options.polynomial >= 6)\n        console.warn('You should not use polynomial grade higher than 5 if you are' +\n            ' not sure that your data arises from such a model. Possible polynomial oscillation problems');\n\n    var windowSize = options.windowSize;\n\n    var half = Math.floor(windowSize/2);\n    var np = data.length;\n    var ans = new Array(np);\n    var weights = fullWeights(windowSize,options.polynomial,options.derivative);\n    var hs = 0;\n    var constantH = true;\n    if( Object.prototype.toString.call( h ) === '[object Array]' ) {\n        constantH = false;\n    }\n    else{\n        hs = Math.pow(h, options.derivative);\n    }\n    //console.log(\"Constant h: \"+constantH);\n    //For the borders\n    for(var i=0;i<half;i++){\n        var wg1=weights[half-i-1];\n        var wg2=weights[half+i+1];\n        var d1 = 0,d2=0;\n        for (var l = 0; l < windowSize; l++){\n            d1 += wg1[l] * data[l];\n            d2 += wg2[l] * data[np-windowSize+l-1];\n        }\n        if(constantH){\n            ans[half-i-1] = d1/hs;\n            ans[np-half+i] = d2/hs;\n        }\n        else{\n            hs = getHs(h,half-i-1,half, options.derivative);\n            ans[half-i-1] = d1/hs;\n            hs = getHs(h,np-half+i,half, options.derivative);\n            ans[np-half+i] = d2/hs;\n        }\n    }\n    //For the internal points\n    var wg = weights[half];\n    for(var i=windowSize;i<np+1;i++){\n        var d = 0;\n        for (var l = 0; l < windowSize; l++)\n            d += wg[l] * data[l+i-windowSize];\n        if(!constantH)\n            hs = getHs(h,i-half-1,half, options.derivative);\n        ans[i-half-1] = d/hs;\n    }\n    return ans;\n}\n\nfunction getHs(h,center,half,derivative){\n    var hs = 0;\n    var count = 0;\n    for(var i=center-half;i<center+half;i++){\n        if(i>=0 && i < h.length-1){\n            hs+= (h[i+1]-h[i]);\n            count++;\n        }\n    }\n    return Math.pow(hs/count,derivative);\n}\n\nfunction GramPoly(i,m,k,s){\n    var Grampoly = 0;\n    if(k>0){\n        Grampoly = (4*k-2)/(k*(2*m-k+1))*(i*GramPoly(i,m,k-1,s) +\n            s*GramPoly(i,m,k-1,s-1)) - ((k-1)*(2*m+k))/(k*(2*m-k+1))*GramPoly(i,m,k-2,s);\n    }\n    else{\n        if(k==0&&s==0){\n            Grampoly=1;\n        }\n        else{\n            Grampoly=0;\n        }\n    }\n    //console.log(Grampoly);\n    return Grampoly;\n}\n\nfunction GenFact(a,b){\n    var gf=1;\n    if(a>=b){\n        for(var j=a-b+1;j<=a;j++){\n            gf*=j;\n        }\n    }\n    return gf;\n}\n\nfunction Weight(i,t,m,n,s){\n    var sum=0;\n    for(var k=0;k<=n;k++){\n        //console.log(k);\n        sum+=(2*k+1)*(GenFact(2*m,k)/GenFact(2*m+k+1,k+1))*GramPoly(i,m,k,0)*GramPoly(t,m,k,s)\n    }\n    return sum;\n}\n\n/**\n *\n * @param m  Number of points\n * @param n  Polynomial grade\n * @param s  Derivative\n */\nfunction fullWeights(m,n,s){\n    var weights = new Array(m);\n    var np = Math.floor(m/2);\n    for(var t=-np;t<=np;t++){\n        weights[t+np] = new Array(m);\n        for(var j=-np;j<=np;j++){\n            weights[t+np][j+np]=Weight(j,t,np,n,s);\n        }\n    }\n    return weights;\n}\n\n/*function entropy(data,h,options){\n    var trend = SavitzkyGolay(data,h,trendOptions);\n    var copy = new Array(data.length);\n    var sum = 0;\n    var max = 0;\n    for(var i=0;i<data.length;i++){\n        copy[i] = data[i]-trend[i];\n    }\n\n    sum/=data.length;\n    console.log(sum+\" \"+max);\n    console.log(stat.array.standardDeviation(copy));\n    console.log(Math.abs(stat.array.mean(copy))/stat.array.standardDeviation(copy));\n    return sum;\n\n}\n\n\n\nfunction guessWindowSize(data, h){\n    console.log(\"entropy \"+entropy(data,h,trendOptions));\n    return 5;\n}\n*/\nmodule.exports = SavitzkyGolay;\n \n","'use strict';\n\nconst SG = require('ml-savitzky-golay-generalized');\n\nconst defaultOptions = {\n  sgOptions: {\n    windowSize: 9,\n    polynomial: 3\n  },\n  minMaxRatio: 0.00025,\n  broadRatio: 0.0,\n  maxCriteria: true,\n  smoothY: true,\n  realTopDetection: false,\n  heightFactor: 0,\n  boundaries: false,\n  derivativeThreshold: -1\n};\n\n/**\n * Global spectra deconvolution\n * @param {Array<number>} x - Independent variable\n * @param {Array<number>} yIn - Dependent variable\n * @param {object} [options] - Options object\n * @param {object} [options.sgOptions] - Options object for Savitzky-Golay filter. See https://github.com/mljs/savitzky-golay-generalized#options\n * @param {number} [options.sgOptions.windowSize = 9] - points to use in the approximations\n * @param {number} [options.sgOptions.polynomial = 3] - degree of the polynomial to use in the approximations\n * @param {number} [options.minMaxRatio = 0.00025] - Threshold to determine if a given peak should be considered as a noise\n * @param {number} [options.broadRatio = 0.00] - If `broadRatio` is higher than 0, then all the peaks which second derivative\n * smaller than `broadRatio * maxAbsSecondDerivative` will be marked with the soft mask equal to true.\n * @param {number} [options.noiseLevel = 0] - Noise threshold in spectrum units\n * @param {boolean} [options.maxCriteria = true] - Peaks are local maximum(true) or minimum(false)\n * @param {boolean} [options.smoothY = true] - Select the peak intensities from a smoothed version of the independent variables\n * @param {boolean} [options.realTopDetection = false] - Use a quadratic optimizations with the peak and its 3 closest neighbors\n * to determine the true x,y values of the peak?\n * @param {number} [options.heightFactor = 0] - Factor to multiply the calculated height (usually 2)\n * @param {boolean} [options.boundaries = false] - Return also the inflection points of the peaks\n * @param {number} [options.derivativeThreshold = -1] - Filters based on the amplitude of the first derivative\n * @return {Array<object>}\n */\nfunction gsd(x, yIn, options) {\n  options = Object.assign({}, defaultOptions, options);\n  let sgOptions = options.sgOptions;\n  const y = [].concat(yIn);\n\n  if (!('noiseLevel' in options)) {\n    // We have to know if x is equally spaced\n    var maxDx = 0;\n\n    var minDx = Number.MAX_VALUE;\n\n    var tmp;\n    for (let i = 0; i < x.length - 1; ++i) {\n      tmp = Math.abs(x[i + 1] - x[i]);\n      if (tmp < minDx) {\n        minDx = tmp;\n      }\n      if (tmp > maxDx) {\n        maxDx = tmp;\n      }\n    }\n\n    if ((maxDx - minDx) / maxDx < 0.05) {\n      options.noiseLevel = getNoiseLevel(y);\n    } else {\n      options.noiseLevel = 0;\n    }\n  }\n  const yCorrection = { m: 1, b: options.noiseLevel };\n  if (!options.maxCriteria) {\n    yCorrection.m = -1;\n    yCorrection.b *= -1;\n  }\n\n  for (let i = 0; i < y.length; i++) {\n    y[i] = yCorrection.m * y[i] - yCorrection.b;\n  }\n\n  for (let i = 0; i < y.length; i++) {\n    if (y[i] < 0) {\n      y[i] = 0;\n    }\n  }\n  // If the max difference between delta x is less than 5%, then, we can assume it to be equally spaced variable\n  let Y = y;\n  let dY, ddY;\n  if ((maxDx - minDx) / maxDx < 0.05) {\n    if (options.smoothY) {\n      Y = SG(y, x[1] - x[0], {\n        windowSize: sgOptions.windowSize,\n        polynomial: sgOptions.polynomial,\n        derivative: 0\n      });\n    }\n    dY = SG(y, x[1] - x[0], {\n      windowSize: sgOptions.windowSize,\n      polynomial: sgOptions.polynomial,\n      derivative: 1\n    });\n    ddY = SG(y, x[1] - x[0], {\n      windowSize: sgOptions.windowSize,\n      polynomial: sgOptions.polynomial,\n      derivative: 2\n    });\n  } else {\n    if (options.smoothY) {\n      Y = SG(y, x, {\n        windowSize: sgOptions.windowSize,\n        polynomial: sgOptions.polynomial,\n        derivative: 0\n      });\n    }\n    dY = SG(y, x, {\n      windowSize: sgOptions.windowSize,\n      polynomial: sgOptions.polynomial,\n      derivative: 1\n    });\n    ddY = SG(y, x, {\n      windowSize: sgOptions.windowSize,\n      polynomial: sgOptions.polynomial,\n      derivative: 2\n    });\n  }\n\n  const X = x;\n  const dx = x[1] - x[0];\n  var maxDdy = 0;\n  var maxY = 0;\n  for (let i = 0; i < Y.length; i++) {\n    if (Math.abs(ddY[i]) > maxDdy) {\n      maxDdy = Math.abs(ddY[i]);\n    }\n    if (Math.abs(Y[i]) > maxY) {\n      maxY = Math.abs(Y[i]);\n    }\n  }\n\n  var lastMax = null;\n  var lastMin = null;\n  var minddY = new Array(Y.length - 2);\n  var intervalL = new Array(Y.length);\n  var intervalR = new Array(Y.length);\n  var broadMask = new Array(Y.length - 2);\n  var minddYLen = 0;\n  var intervalLLen = 0;\n  var intervalRLen = 0;\n  var broadMaskLen = 0;\n  // By the intermediate value theorem We cannot find 2 consecutive maximum or minimum\n  for (let i = 1; i < Y.length - 1; ++i) {\n    // filter based on derivativeThreshold\n    if (Math.abs(dY[i]) > options.derivativeThreshold) {\n      // Minimum in first derivative\n      if (\n        (dY[i] < dY[i - 1] && dY[i] <= dY[i + 1]) ||\n        (dY[i] <= dY[i - 1] && dY[i] < dY[i + 1])\n      ) {\n        lastMin = {\n          x: X[i],\n          index: i\n        };\n        if (dx > 0 && lastMax !== null) {\n          intervalL[intervalLLen++] = lastMax;\n          intervalR[intervalRLen++] = lastMin;\n        }\n      }\n\n      // Maximum in first derivative\n      if (\n        (dY[i] >= dY[i - 1] && dY[i] > dY[i + 1]) ||\n        (dY[i] > dY[i - 1] && dY[i] >= dY[i + 1])\n      ) {\n        lastMax = {\n          x: X[i],\n          index: i\n        };\n        if (dx < 0 && lastMin !== null) {\n          intervalL[intervalLLen++] = lastMax;\n          intervalR[intervalRLen++] = lastMin;\n        }\n      }\n    }\n\n    // Minimum in second derivative\n    if (ddY[i] < ddY[i - 1] && ddY[i] < ddY[i + 1]) {\n      // TODO should we change this to have 3 arrays ? Huge overhead creating arrays\n      minddY[minddYLen++] = i; // ( [X[i], Y[i], i] );\n      broadMask[broadMaskLen++] =\n        Math.abs(ddY[i]) <= options.broadRatio * maxDdy;\n    }\n  }\n  minddY.length = minddYLen;\n  intervalL.length = intervalLLen;\n  intervalR.length = intervalRLen;\n  broadMask.length = broadMaskLen;\n\n  let signals = new Array(minddY.length);\n  let signalsLen = 0;\n  let lastK = -1;\n  let possible, frequency, distanceJ, minDistance, gettingCloser;\n  for (let j = 0; j < minddY.length; ++j) {\n    frequency = X[minddY[j]];\n    possible = -1;\n    let k = lastK + 1;\n    minDistance = Number.MAX_VALUE;\n    distanceJ = 0;\n    gettingCloser = true;\n    while (possible === -1 && k < intervalL.length && gettingCloser) {\n      distanceJ = Math.abs(frequency - (intervalL[k].x + intervalR[k].x) / 2);\n\n      // Still getting closer?\n      if (distanceJ < minDistance) {\n        minDistance = distanceJ;\n      } else {\n        gettingCloser = false;\n      }\n      if (distanceJ < Math.abs(intervalL[k].x - intervalR[k].x) / 2) {\n        possible = k;\n        lastK = k;\n      }\n      ++k;\n    }\n\n    if (possible !== -1) {\n      if (Math.abs(Y[minddY[j]]) > options.minMaxRatio * maxY) {\n        signals[signalsLen++] = {\n          index: minddY[j],\n          x: frequency,\n          y: (Y[minddY[j]] + yCorrection.b) / yCorrection.m,\n          width: Math.abs(intervalR[possible].x - intervalL[possible].x), // widthCorrection\n          soft: broadMask[j]\n        };\n        if (options.boundaries) {\n          signals[signalsLen - 1].left = intervalL[possible];\n          signals[signalsLen - 1].right = intervalR[possible];\n        }\n        if (options.heightFactor) {\n          let yLeft = Y[intervalL[possible].index];\n          let yRight = Y[intervalR[possible].index];\n          signals[signalsLen - 1].height =\n            options.heightFactor *\n            (signals[signalsLen - 1].y - (yLeft + yRight) / 2);\n        }\n      }\n    }\n  }\n  signals.length = signalsLen;\n\n  if (options.realTopDetection) {\n    realTopDetection(signals, X, Y);\n  }\n\n  // Correct the values to fit the original spectra data\n  for (let j = 0; j < signals.length; j++) {\n    signals[j].base = options.noiseLevel;\n  }\n\n  signals.sort(function (a, b) {\n    return a.x - b.x;\n  });\n\n  return signals;\n}\n\nfunction getNoiseLevel(y) {\n  var mean = 0;\n\n  var stddev = 0;\n  var length = y.length;\n  for (let i = 0; i < length; ++i) {\n    mean += y[i];\n  }\n  mean /= length;\n  var averageDeviations = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    averageDeviations[i] = Math.abs(y[i] - mean);\n  }\n  averageDeviations.sort();\n  if (length % 2 === 1) {\n    stddev = averageDeviations[(length - 1) / 2] / 0.6745;\n  } else {\n    stddev =\n      (0.5 *\n        (averageDeviations[length / 2] + averageDeviations[length / 2 - 1])) /\n      0.6745;\n  }\n\n  return stddev;\n}\n\nfunction realTopDetection(peakList, x, y) {\n  var alpha, beta, gamma, p, currentPoint;\n  for (var j = 0; j < peakList.length; j++) {\n    currentPoint = peakList[j].index; // peakList[j][2];\n    // The detected peak could be moved 1 or 2 unit to left or right.\n    if (\n      y[currentPoint - 1] >= y[currentPoint - 2] &&\n      y[currentPoint - 1] >= y[currentPoint]\n    ) {\n      currentPoint--;\n    } else {\n      if (\n        y[currentPoint + 1] >= y[currentPoint] &&\n        y[currentPoint + 1] >= y[currentPoint + 2]\n      ) {\n        currentPoint++;\n      } else {\n        if (\n          y[currentPoint - 2] >= y[currentPoint - 3] &&\n          y[currentPoint - 2] >= y[currentPoint - 1]\n        ) {\n          currentPoint -= 2;\n        } else {\n          if (\n            y[currentPoint + 2] >= y[currentPoint + 1] &&\n            y[currentPoint + 2] >= y[currentPoint + 3]\n          ) {\n            currentPoint += 2;\n          }\n        }\n      }\n    }\n    // interpolation to a sin() function\n    if (\n      y[currentPoint - 1] > 0 &&\n      y[currentPoint + 1] > 0 &&\n      y[currentPoint] >= y[currentPoint - 1] &&\n      y[currentPoint] >= y[currentPoint + 1]\n    ) {\n      alpha = 20 * Math.log10(y[currentPoint - 1]);\n      beta = 20 * Math.log10(y[currentPoint]);\n      gamma = 20 * Math.log10(y[currentPoint + 1]);\n      p = (0.5 * (alpha - gamma)) / (alpha - 2 * beta + gamma);\n      // console.log(alpha, beta, gamma, `p: ${p}`);\n      // console.log(x[currentPoint]+\" \"+tmp+\" \"+currentPoint);\n      peakList[j].x =\n        x[currentPoint] + (x[currentPoint] - x[currentPoint - 1]) * p;\n      peakList[j].y =\n        y[currentPoint] -\n        0.25 * (y[currentPoint - 1] - y[currentPoint + 1]) * p;\n    }\n  }\n}\n\nmodule.exports = gsd;\n","'use strict';\n\nif (!Symbol.species) {\n    Symbol.species = Symbol.for('@@species');\n}\n","'use strict';\n\nvar Matrix = require('../matrix');\n\n// https://github.com/lutzroeder/Mapack/blob/master/Source/LuDecomposition.cs\nfunction LuDecomposition(matrix) {\n    if (!(this instanceof LuDecomposition)) {\n        return new LuDecomposition(matrix);\n    }\n\n    matrix = Matrix.Matrix.checkMatrix(matrix);\n\n    var lu = matrix.clone(),\n        rows = lu.rows,\n        columns = lu.columns,\n        pivotVector = new Array(rows),\n        pivotSign = 1,\n        i, j, k, p, s, t, v,\n        LUrowi, LUcolj, kmax;\n\n    for (i = 0; i < rows; i++) {\n        pivotVector[i] = i;\n    }\n\n    LUcolj = new Array(rows);\n\n    for (j = 0; j < columns; j++) {\n\n        for (i = 0; i < rows; i++) {\n            LUcolj[i] = lu[i][j];\n        }\n\n        for (i = 0; i < rows; i++) {\n            LUrowi = lu[i];\n            kmax = Math.min(i, j);\n            s = 0;\n            for (k = 0; k < kmax; k++) {\n                s += LUrowi[k] * LUcolj[k];\n            }\n            LUrowi[j] = LUcolj[i] -= s;\n        }\n\n        p = j;\n        for (i = j + 1; i < rows; i++) {\n            if (Math.abs(LUcolj[i]) > Math.abs(LUcolj[p])) {\n                p = i;\n            }\n        }\n\n        if (p !== j) {\n            for (k = 0; k < columns; k++) {\n                t = lu[p][k];\n                lu[p][k] = lu[j][k];\n                lu[j][k] = t;\n            }\n\n            v = pivotVector[p];\n            pivotVector[p] = pivotVector[j];\n            pivotVector[j] = v;\n\n            pivotSign = -pivotSign;\n        }\n\n        if (j < rows && lu[j][j] !== 0) {\n            for (i = j + 1; i < rows; i++) {\n                lu[i][j] /= lu[j][j];\n            }\n        }\n    }\n\n    this.LU = lu;\n    this.pivotVector = pivotVector;\n    this.pivotSign = pivotSign;\n}\n\nLuDecomposition.prototype = {\n    isSingular: function () {\n        var data = this.LU,\n            col = data.columns;\n        for (var j = 0; j < col; j++) {\n            if (data[j][j] === 0) {\n                return true;\n            }\n        }\n        return false;\n    },\n    get determinant() {\n        var data = this.LU;\n        if (!data.isSquare()) {\n            throw new Error('Matrix must be square');\n        }\n        var determinant = this.pivotSign, col = data.columns;\n        for (var j = 0; j < col; j++) {\n            determinant *= data[j][j];\n        }\n        return determinant;\n    },\n    get lowerTriangularMatrix() {\n        var data = this.LU,\n            rows = data.rows,\n            columns = data.columns,\n            X = new Matrix.Matrix(rows, columns);\n        for (var i = 0; i < rows; i++) {\n            for (var j = 0; j < columns; j++) {\n                if (i > j) {\n                    X[i][j] = data[i][j];\n                } else if (i === j) {\n                    X[i][j] = 1;\n                } else {\n                    X[i][j] = 0;\n                }\n            }\n        }\n        return X;\n    },\n    get upperTriangularMatrix() {\n        var data = this.LU,\n            rows = data.rows,\n            columns = data.columns,\n            X = new Matrix.Matrix(rows, columns);\n        for (var i = 0; i < rows; i++) {\n            for (var j = 0; j < columns; j++) {\n                if (i <= j) {\n                    X[i][j] = data[i][j];\n                } else {\n                    X[i][j] = 0;\n                }\n            }\n        }\n        return X;\n    },\n    get pivotPermutationVector() {\n        return this.pivotVector.slice();\n    },\n    solve: function (value) {\n        value = Matrix.Matrix.checkMatrix(value);\n\n        var lu = this.LU,\n            rows = lu.rows;\n\n        if (rows !== value.rows) {\n            throw new Error('Invalid matrix dimensions');\n        }\n        if (this.isSingular()) {\n            throw new Error('LU matrix is singular');\n        }\n\n        var count = value.columns;\n        var X = value.subMatrixRow(this.pivotVector, 0, count - 1);\n        var columns = lu.columns;\n        var i, j, k;\n\n        for (k = 0; k < columns; k++) {\n            for (i = k + 1; i < columns; i++) {\n                for (j = 0; j < count; j++) {\n                    X[i][j] -= X[k][j] * lu[i][k];\n                }\n            }\n        }\n        for (k = columns - 1; k >= 0; k--) {\n            for (j = 0; j < count; j++) {\n                X[k][j] /= lu[k][k];\n            }\n            for (i = 0; i < k; i++) {\n                for (j = 0; j < count; j++) {\n                    X[i][j] -= X[k][j] * lu[i][k];\n                }\n            }\n        }\n        return X;\n    }\n};\n\nmodule.exports = LuDecomposition;\n","'use strict';\n\nexports.hypotenuse = function hypotenuse(a, b) {\n    var r;\n    if (Math.abs(a) > Math.abs(b)) {\n        r = b / a;\n        return Math.abs(a) * Math.sqrt(1 + r * r);\n    }\n    if (b !== 0) {\n        r = a / b;\n        return Math.abs(b) * Math.sqrt(1 + r * r);\n    }\n    return 0;\n};\n\n// For use in the decomposition algorithms. With big matrices, access time is\n// too long on elements from array subclass\n// todo check when it is fixed in v8\n// http://jsperf.com/access-and-write-array-subclass\nexports.getEmpty2DArray = function (rows, columns) {\n    var array = new Array(rows);\n    for (var i = 0; i < rows; i++) {\n        array[i] = new Array(columns);\n    }\n    return array;\n};\n\nexports.getFilled2DArray = function (rows, columns, value) {\n    var array = new Array(rows);\n    for (var i = 0; i < rows; i++) {\n        array[i] = new Array(columns);\n        for (var j = 0; j < columns; j++) {\n            array[i][j] = value;\n        }\n    }\n    return array;\n};\n","'use strict';\n\nvar Matrix = require('../matrix');\nvar util = require('./util');\nvar hypotenuse = util.hypotenuse;\nvar getFilled2DArray = util.getFilled2DArray;\n\n// https://github.com/lutzroeder/Mapack/blob/master/Source/SingularValueDecomposition.cs\nfunction SingularValueDecomposition(value, options) {\n    if (!(this instanceof SingularValueDecomposition)) {\n        return new SingularValueDecomposition(value, options);\n    }\n    value = Matrix.Matrix.checkMatrix(value);\n\n    options = options || {};\n\n    var m = value.rows,\n        n = value.columns,\n        nu = Math.min(m, n);\n\n    var wantu = true, wantv = true;\n    if (options.computeLeftSingularVectors === false) wantu = false;\n    if (options.computeRightSingularVectors === false) wantv = false;\n    var autoTranspose = options.autoTranspose === true;\n\n    var swapped = false;\n    var a;\n    if (m < n) {\n        if (!autoTranspose) {\n            a = value.clone();\n            // eslint-disable-next-line no-console\n            console.warn('Computing SVD on a matrix with more columns than rows. Consider enabling autoTranspose');\n        } else {\n            a = value.transpose();\n            m = a.rows;\n            n = a.columns;\n            swapped = true;\n            var aux = wantu;\n            wantu = wantv;\n            wantv = aux;\n        }\n    } else {\n        a = value.clone();\n    }\n\n    var s = new Array(Math.min(m + 1, n)),\n        U = getFilled2DArray(m, nu, 0),\n        V = getFilled2DArray(n, n, 0),\n        e = new Array(n),\n        work = new Array(m);\n\n    var nct = Math.min(m - 1, n);\n    var nrt = Math.max(0, Math.min(n - 2, m));\n\n    var i, j, k, p, t, ks, f, cs, sn, max, kase,\n        scale, sp, spm1, epm1, sk, ek, b, c, shift, g;\n\n    for (k = 0, max = Math.max(nct, nrt); k < max; k++) {\n        if (k < nct) {\n            s[k] = 0;\n            for (i = k; i < m; i++) {\n                s[k] = hypotenuse(s[k], a[i][k]);\n            }\n            if (s[k] !== 0) {\n                if (a[k][k] < 0) {\n                    s[k] = -s[k];\n                }\n                for (i = k; i < m; i++) {\n                    a[i][k] /= s[k];\n                }\n                a[k][k] += 1;\n            }\n            s[k] = -s[k];\n        }\n\n        for (j = k + 1; j < n; j++) {\n            if ((k < nct) && (s[k] !== 0)) {\n                t = 0;\n                for (i = k; i < m; i++) {\n                    t += a[i][k] * a[i][j];\n                }\n                t = -t / a[k][k];\n                for (i = k; i < m; i++) {\n                    a[i][j] += t * a[i][k];\n                }\n            }\n            e[j] = a[k][j];\n        }\n\n        if (wantu && (k < nct)) {\n            for (i = k; i < m; i++) {\n                U[i][k] = a[i][k];\n            }\n        }\n\n        if (k < nrt) {\n            e[k] = 0;\n            for (i = k + 1; i < n; i++) {\n                e[k] = hypotenuse(e[k], e[i]);\n            }\n            if (e[k] !== 0) {\n                if (e[k + 1] < 0) {\n                    e[k] = 0 - e[k];\n                }\n                for (i = k + 1; i < n; i++) {\n                    e[i] /= e[k];\n                }\n                e[k + 1] += 1;\n            }\n            e[k] = -e[k];\n            if ((k + 1 < m) && (e[k] !== 0)) {\n                for (i = k + 1; i < m; i++) {\n                    work[i] = 0;\n                }\n                for (j = k + 1; j < n; j++) {\n                    for (i = k + 1; i < m; i++) {\n                        work[i] += e[j] * a[i][j];\n                    }\n                }\n                for (j = k + 1; j < n; j++) {\n                    t = -e[j] / e[k + 1];\n                    for (i = k + 1; i < m; i++) {\n                        a[i][j] += t * work[i];\n                    }\n                }\n            }\n            if (wantv) {\n                for (i = k + 1; i < n; i++) {\n                    V[i][k] = e[i];\n                }\n            }\n        }\n    }\n\n    p = Math.min(n, m + 1);\n    if (nct < n) {\n        s[nct] = a[nct][nct];\n    }\n    if (m < p) {\n        s[p - 1] = 0;\n    }\n    if (nrt + 1 < p) {\n        e[nrt] = a[nrt][p - 1];\n    }\n    e[p - 1] = 0;\n\n    if (wantu) {\n        for (j = nct; j < nu; j++) {\n            for (i = 0; i < m; i++) {\n                U[i][j] = 0;\n            }\n            U[j][j] = 1;\n        }\n        for (k = nct - 1; k >= 0; k--) {\n            if (s[k] !== 0) {\n                for (j = k + 1; j < nu; j++) {\n                    t = 0;\n                    for (i = k; i < m; i++) {\n                        t += U[i][k] * U[i][j];\n                    }\n                    t = -t / U[k][k];\n                    for (i = k; i < m; i++) {\n                        U[i][j] += t * U[i][k];\n                    }\n                }\n                for (i = k; i < m; i++) {\n                    U[i][k] = -U[i][k];\n                }\n                U[k][k] = 1 + U[k][k];\n                for (i = 0; i < k - 1; i++) {\n                    U[i][k] = 0;\n                }\n            } else {\n                for (i = 0; i < m; i++) {\n                    U[i][k] = 0;\n                }\n                U[k][k] = 1;\n            }\n        }\n    }\n\n    if (wantv) {\n        for (k = n - 1; k >= 0; k--) {\n            if ((k < nrt) && (e[k] !== 0)) {\n                for (j = k + 1; j < n; j++) {\n                    t = 0;\n                    for (i = k + 1; i < n; i++) {\n                        t += V[i][k] * V[i][j];\n                    }\n                    t = -t / V[k + 1][k];\n                    for (i = k + 1; i < n; i++) {\n                        V[i][j] += t * V[i][k];\n                    }\n                }\n            }\n            for (i = 0; i < n; i++) {\n                V[i][k] = 0;\n            }\n            V[k][k] = 1;\n        }\n    }\n\n    var pp = p - 1,\n        iter = 0,\n        eps = Math.pow(2, -52);\n    while (p > 0) {\n        for (k = p - 2; k >= -1; k--) {\n            if (k === -1) {\n                break;\n            }\n            if (Math.abs(e[k]) <= eps * (Math.abs(s[k]) + Math.abs(s[k + 1]))) {\n                e[k] = 0;\n                break;\n            }\n        }\n        if (k === p - 2) {\n            kase = 4;\n        } else {\n            for (ks = p - 1; ks >= k; ks--) {\n                if (ks === k) {\n                    break;\n                }\n                t = (ks !== p ? Math.abs(e[ks]) : 0) + (ks !== k + 1 ? Math.abs(e[ks - 1]) : 0);\n                if (Math.abs(s[ks]) <= eps * t) {\n                    s[ks] = 0;\n                    break;\n                }\n            }\n            if (ks === k) {\n                kase = 3;\n            } else if (ks === p - 1) {\n                kase = 1;\n            } else {\n                kase = 2;\n                k = ks;\n            }\n        }\n\n        k++;\n\n        switch (kase) {\n            case 1: {\n                f = e[p - 2];\n                e[p - 2] = 0;\n                for (j = p - 2; j >= k; j--) {\n                    t = hypotenuse(s[j], f);\n                    cs = s[j] / t;\n                    sn = f / t;\n                    s[j] = t;\n                    if (j !== k) {\n                        f = -sn * e[j - 1];\n                        e[j - 1] = cs * e[j - 1];\n                    }\n                    if (wantv) {\n                        for (i = 0; i < n; i++) {\n                            t = cs * V[i][j] + sn * V[i][p - 1];\n                            V[i][p - 1] = -sn * V[i][j] + cs * V[i][p - 1];\n                            V[i][j] = t;\n                        }\n                    }\n                }\n                break;\n            }\n            case 2 : {\n                f = e[k - 1];\n                e[k - 1] = 0;\n                for (j = k; j < p; j++) {\n                    t = hypotenuse(s[j], f);\n                    cs = s[j] / t;\n                    sn = f / t;\n                    s[j] = t;\n                    f = -sn * e[j];\n                    e[j] = cs * e[j];\n                    if (wantu) {\n                        for (i = 0; i < m; i++) {\n                            t = cs * U[i][j] + sn * U[i][k - 1];\n                            U[i][k - 1] = -sn * U[i][j] + cs * U[i][k - 1];\n                            U[i][j] = t;\n                        }\n                    }\n                }\n                break;\n            }\n            case 3 : {\n                scale = Math.max(Math.max(Math.max(Math.max(Math.abs(s[p - 1]), Math.abs(s[p - 2])), Math.abs(e[p - 2])), Math.abs(s[k])), Math.abs(e[k]));\n                sp = s[p - 1] / scale;\n                spm1 = s[p - 2] / scale;\n                epm1 = e[p - 2] / scale;\n                sk = s[k] / scale;\n                ek = e[k] / scale;\n                b = ((spm1 + sp) * (spm1 - sp) + epm1 * epm1) / 2;\n                c = (sp * epm1) * (sp * epm1);\n                shift = 0;\n                if ((b !== 0) || (c !== 0)) {\n                    shift = Math.sqrt(b * b + c);\n                    if (b < 0) {\n                        shift = -shift;\n                    }\n                    shift = c / (b + shift);\n                }\n                f = (sk + sp) * (sk - sp) + shift;\n                g = sk * ek;\n                for (j = k; j < p - 1; j++) {\n                    t = hypotenuse(f, g);\n                    cs = f / t;\n                    sn = g / t;\n                    if (j !== k) {\n                        e[j - 1] = t;\n                    }\n                    f = cs * s[j] + sn * e[j];\n                    e[j] = cs * e[j] - sn * s[j];\n                    g = sn * s[j + 1];\n                    s[j + 1] = cs * s[j + 1];\n                    if (wantv) {\n                        for (i = 0; i < n; i++) {\n                            t = cs * V[i][j] + sn * V[i][j + 1];\n                            V[i][j + 1] = -sn * V[i][j] + cs * V[i][j + 1];\n                            V[i][j] = t;\n                        }\n                    }\n                    t = hypotenuse(f, g);\n                    cs = f / t;\n                    sn = g / t;\n                    s[j] = t;\n                    f = cs * e[j] + sn * s[j + 1];\n                    s[j + 1] = -sn * e[j] + cs * s[j + 1];\n                    g = sn * e[j + 1];\n                    e[j + 1] = cs * e[j + 1];\n                    if (wantu && (j < m - 1)) {\n                        for (i = 0; i < m; i++) {\n                            t = cs * U[i][j] + sn * U[i][j + 1];\n                            U[i][j + 1] = -sn * U[i][j] + cs * U[i][j + 1];\n                            U[i][j] = t;\n                        }\n                    }\n                }\n                e[p - 2] = f;\n                iter = iter + 1;\n                break;\n            }\n            case 4: {\n                if (s[k] <= 0) {\n                    s[k] = (s[k] < 0 ? -s[k] : 0);\n                    if (wantv) {\n                        for (i = 0; i <= pp; i++) {\n                            V[i][k] = -V[i][k];\n                        }\n                    }\n                }\n                while (k < pp) {\n                    if (s[k] >= s[k + 1]) {\n                        break;\n                    }\n                    t = s[k];\n                    s[k] = s[k + 1];\n                    s[k + 1] = t;\n                    if (wantv && (k < n - 1)) {\n                        for (i = 0; i < n; i++) {\n                            t = V[i][k + 1];\n                            V[i][k + 1] = V[i][k];\n                            V[i][k] = t;\n                        }\n                    }\n                    if (wantu && (k < m - 1)) {\n                        for (i = 0; i < m; i++) {\n                            t = U[i][k + 1];\n                            U[i][k + 1] = U[i][k];\n                            U[i][k] = t;\n                        }\n                    }\n                    k++;\n                }\n                iter = 0;\n                p--;\n                break;\n            }\n            // no default\n        }\n    }\n\n    if (swapped) {\n        var tmp = V;\n        V = U;\n        U = tmp;\n    }\n\n    this.m = m;\n    this.n = n;\n    this.s = s;\n    this.U = U;\n    this.V = V;\n}\n\nSingularValueDecomposition.prototype = {\n    get condition() {\n        return this.s[0] / this.s[Math.min(this.m, this.n) - 1];\n    },\n    get norm2() {\n        return this.s[0];\n    },\n    get rank() {\n        var eps = Math.pow(2, -52),\n            tol = Math.max(this.m, this.n) * this.s[0] * eps,\n            r = 0,\n            s = this.s;\n        for (var i = 0, ii = s.length; i < ii; i++) {\n            if (s[i] > tol) {\n                r++;\n            }\n        }\n        return r;\n    },\n    get diagonal() {\n        return this.s;\n    },\n    // https://github.com/accord-net/framework/blob/development/Sources/Accord.Math/Decompositions/SingularValueDecomposition.cs\n    get threshold() {\n        return (Math.pow(2, -52) / 2) * Math.max(this.m, this.n) * this.s[0];\n    },\n    get leftSingularVectors() {\n        if (!Matrix.Matrix.isMatrix(this.U)) {\n            this.U = new Matrix.Matrix(this.U);\n        }\n        return this.U;\n    },\n    get rightSingularVectors() {\n        if (!Matrix.Matrix.isMatrix(this.V)) {\n            this.V = new Matrix.Matrix(this.V);\n        }\n        return this.V;\n    },\n    get diagonalMatrix() {\n        return Matrix.Matrix.diag(this.s);\n    },\n    solve: function (value) {\n\n        var Y = value,\n            e = this.threshold,\n            scols = this.s.length,\n            Ls = Matrix.Matrix.zeros(scols, scols),\n            i;\n\n        for (i = 0; i < scols; i++) {\n            if (Math.abs(this.s[i]) <= e) {\n                Ls[i][i] = 0;\n            } else {\n                Ls[i][i] = 1 / this.s[i];\n            }\n        }\n\n        var U = this.U;\n        var V = this.rightSingularVectors;\n\n        var VL = V.mmul(Ls),\n            vrows = V.rows,\n            urows = U.length,\n            VLU = Matrix.Matrix.zeros(vrows, urows),\n            j, k, sum;\n\n        for (i = 0; i < vrows; i++) {\n            for (j = 0; j < urows; j++) {\n                sum = 0;\n                for (k = 0; k < scols; k++) {\n                    sum += VL[i][k] * U[j][k];\n                }\n                VLU[i][j] = sum;\n            }\n        }\n\n        return VLU.mmul(Y);\n    },\n    solveForDiagonal: function (value) {\n        return this.solve(Matrix.Matrix.diag(value));\n    },\n    inverse: function () {\n        var V = this.V;\n        var e = this.threshold,\n            vrows = V.length,\n            vcols = V[0].length,\n            X = new Matrix.Matrix(vrows, this.s.length),\n            i, j;\n\n        for (i = 0; i < vrows; i++) {\n            for (j = 0; j < vcols; j++) {\n                if (Math.abs(this.s[j]) > e) {\n                    X[i][j] = V[i][j] / this.s[j];\n                } else {\n                    X[i][j] = 0;\n                }\n            }\n        }\n\n        var U = this.U;\n\n        var urows = U.length,\n            ucols = U[0].length,\n            Y = new Matrix.Matrix(vrows, urows),\n            k, sum;\n\n        for (i = 0; i < vrows; i++) {\n            for (j = 0; j < urows; j++) {\n                sum = 0;\n                for (k = 0; k < ucols; k++) {\n                    sum += X[i][k] * U[j][k];\n                }\n                Y[i][j] = sum;\n            }\n        }\n\n        return Y;\n    }\n};\n\nmodule.exports = SingularValueDecomposition;\n","'use strict';\n\nfunction compareNumbers(a, b) {\n    return a - b;\n}\n\n/**\n * Computes the sum of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.sum = function sum(values) {\n    var sum = 0;\n    for (var i = 0; i < values.length; i++) {\n        sum += values[i];\n    }\n    return sum;\n};\n\n/**\n * Computes the maximum of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.max = function max(values) {\n    var max = values[0];\n    var l = values.length;\n    for (var i = 1; i < l; i++) {\n        if (values[i] > max) max = values[i];\n    }\n    return max;\n};\n\n/**\n * Computes the minimum of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.min = function min(values) {\n    var min = values[0];\n    var l = values.length;\n    for (var i = 1; i < l; i++) {\n        if (values[i] < min) min = values[i];\n    }\n    return min;\n};\n\n/**\n * Computes the min and max of the given values\n * @param {Array} values\n * @returns {{min: number, max: number}}\n */\nexports.minMax = function minMax(values) {\n    var min = values[0];\n    var max = values[0];\n    var l = values.length;\n    for (var i = 1; i < l; i++) {\n        if (values[i] < min) min = values[i];\n        if (values[i] > max) max = values[i];\n    }\n    return {\n        min: min,\n        max: max\n    };\n};\n\n/**\n * Computes the arithmetic mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.arithmeticMean = function arithmeticMean(values) {\n    var sum = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        sum += values[i];\n    }\n    return sum / l;\n};\n\n/**\n * {@link arithmeticMean}\n */\nexports.mean = exports.arithmeticMean;\n\n/**\n * Computes the geometric mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.geometricMean = function geometricMean(values) {\n    var mul = 1;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        mul *= values[i];\n    }\n    return Math.pow(mul, 1 / l);\n};\n\n/**\n * Computes the mean of the log of the given values\n * If the return value is exponentiated, it gives the same result as the\n * geometric mean.\n * @param {Array} values\n * @returns {number}\n */\nexports.logMean = function logMean(values) {\n    var lnsum = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        lnsum += Math.log(values[i]);\n    }\n    return lnsum / l;\n};\n\n/**\n * Computes the weighted grand mean for a list of means and sample sizes\n * @param {Array} means - Mean values for each set of samples\n * @param {Array} samples - Number of original values for each set of samples\n * @returns {number}\n */\nexports.grandMean = function grandMean(means, samples) {\n    var sum = 0;\n    var n = 0;\n    var l = means.length;\n    for (var i = 0; i < l; i++) {\n        sum += samples[i] * means[i];\n        n += samples[i];\n    }\n    return sum / n;\n};\n\n/**\n * Computes the truncated mean of the given values using a given percentage\n * @param {Array} values\n * @param {number} percent - The percentage of values to keep (range: [0,1])\n * @param {boolean} [alreadySorted=false]\n * @returns {number}\n */\nexports.truncatedMean = function truncatedMean(values, percent, alreadySorted) {\n    if (alreadySorted === undefined) alreadySorted = false;\n    if (!alreadySorted) {\n        values = [].concat(values).sort(compareNumbers);\n    }\n    var l = values.length;\n    var k = Math.floor(l * percent);\n    var sum = 0;\n    for (var i = k; i < (l - k); i++) {\n        sum += values[i];\n    }\n    return sum / (l - 2 * k);\n};\n\n/**\n * Computes the harmonic mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.harmonicMean = function harmonicMean(values) {\n    var sum = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        if (values[i] === 0) {\n            throw new RangeError('value at index ' + i + 'is zero');\n        }\n        sum += 1 / values[i];\n    }\n    return l / sum;\n};\n\n/**\n * Computes the contraharmonic mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.contraHarmonicMean = function contraHarmonicMean(values) {\n    var r1 = 0;\n    var r2 = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        r1 += values[i] * values[i];\n        r2 += values[i];\n    }\n    if (r2 < 0) {\n        throw new RangeError('sum of values is negative');\n    }\n    return r1 / r2;\n};\n\n/**\n * Computes the median of the given values\n * @param {Array} values\n * @param {boolean} [alreadySorted=false]\n * @returns {number}\n */\nexports.median = function median(values, alreadySorted) {\n    if (alreadySorted === undefined) alreadySorted = false;\n    if (!alreadySorted) {\n        values = [].concat(values).sort(compareNumbers);\n    }\n    var l = values.length;\n    var half = Math.floor(l / 2);\n    if (l % 2 === 0) {\n        return (values[half - 1] + values[half]) * 0.5;\n    } else {\n        return values[half];\n    }\n};\n\n/**\n * Computes the variance of the given values\n * @param {Array} values\n * @param {boolean} [unbiased=true] - if true, divide by (n-1); if false, divide by n.\n * @returns {number}\n */\nexports.variance = function variance(values, unbiased) {\n    if (unbiased === undefined) unbiased = true;\n    var theMean = exports.mean(values);\n    var theVariance = 0;\n    var l = values.length;\n\n    for (var i = 0; i < l; i++) {\n        var x = values[i] - theMean;\n        theVariance += x * x;\n    }\n\n    if (unbiased) {\n        return theVariance / (l - 1);\n    } else {\n        return theVariance / l;\n    }\n};\n\n/**\n * Computes the standard deviation of the given values\n * @param {Array} values\n * @param {boolean} [unbiased=true] - if true, divide by (n-1); if false, divide by n.\n * @returns {number}\n */\nexports.standardDeviation = function standardDeviation(values, unbiased) {\n    return Math.sqrt(exports.variance(values, unbiased));\n};\n\nexports.standardError = function standardError(values) {\n    return exports.standardDeviation(values) / Math.sqrt(values.length);\n};\n\n/**\n * IEEE Transactions on biomedical engineering, vol. 52, no. 1, january 2005, p. 76-\n * Calculate the standard deviation via the Median of the absolute deviation\n *  The formula for the standard deviation only holds for Gaussian random variables.\n * @returns {{mean: number, stdev: number}}\n */\nexports.robustMeanAndStdev = function robustMeanAndStdev(y) {\n    var mean = 0, stdev = 0;\n    var length = y.length, i = 0;\n    for (i = 0; i < length; i++) {\n        mean += y[i];\n    }\n    mean /= length;\n    var averageDeviations = new Array(length);\n    for (i = 0; i < length; i++)\n        averageDeviations[i] = Math.abs(y[i] - mean);\n    averageDeviations.sort(compareNumbers);\n    if (length % 2 === 1) {\n        stdev = averageDeviations[(length - 1) / 2] / 0.6745;\n    } else {\n        stdev = 0.5 * (averageDeviations[length / 2] + averageDeviations[length / 2 - 1]) / 0.6745;\n    }\n\n    return {\n        mean: mean,\n        stdev: stdev\n    };\n};\n\nexports.quartiles = function quartiles(values, alreadySorted) {\n    if (typeof (alreadySorted) === 'undefined') alreadySorted = false;\n    if (!alreadySorted) {\n        values = [].concat(values).sort(compareNumbers);\n    }\n\n    var quart = values.length / 4;\n    var q1 = values[Math.ceil(quart) - 1];\n    var q2 = exports.median(values, true);\n    var q3 = values[Math.ceil(quart * 3) - 1];\n\n    return {q1: q1, q2: q2, q3: q3};\n};\n\nexports.pooledStandardDeviation = function pooledStandardDeviation(samples, unbiased) {\n    return Math.sqrt(exports.pooledVariance(samples, unbiased));\n};\n\nexports.pooledVariance = function pooledVariance(samples, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var sum = 0;\n    var length = 0, l = samples.length;\n    for (var i = 0; i < l; i++) {\n        var values = samples[i];\n        var vari = exports.variance(values);\n\n        sum += (values.length - 1) * vari;\n\n        if (unbiased)\n            length += values.length - 1;\n        else\n            length += values.length;\n    }\n    return sum / length;\n};\n\nexports.mode = function mode(values) {\n    var l = values.length,\n        itemCount = new Array(l),\n        i;\n    for (i = 0; i < l; i++) {\n        itemCount[i] = 0;\n    }\n    var itemArray = new Array(l);\n    var count = 0;\n\n    for (i = 0; i < l; i++) {\n        var index = itemArray.indexOf(values[i]);\n        if (index >= 0)\n            itemCount[index]++;\n        else {\n            itemArray[count] = values[i];\n            itemCount[count] = 1;\n            count++;\n        }\n    }\n\n    var maxValue = 0, maxIndex = 0;\n    for (i = 0; i < count; i++) {\n        if (itemCount[i] > maxValue) {\n            maxValue = itemCount[i];\n            maxIndex = i;\n        }\n    }\n\n    return itemArray[maxIndex];\n};\n\nexports.covariance = function covariance(vector1, vector2, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var mean1 = exports.mean(vector1);\n    var mean2 = exports.mean(vector2);\n\n    if (vector1.length !== vector2.length)\n        throw 'Vectors do not have the same dimensions';\n\n    var cov = 0, l = vector1.length;\n    for (var i = 0; i < l; i++) {\n        var x = vector1[i] - mean1;\n        var y = vector2[i] - mean2;\n        cov += x * y;\n    }\n\n    if (unbiased)\n        return cov / (l - 1);\n    else\n        return cov / l;\n};\n\nexports.skewness = function skewness(values, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var theMean = exports.mean(values);\n\n    var s2 = 0, s3 = 0, l = values.length;\n    for (var i = 0; i < l; i++) {\n        var dev = values[i] - theMean;\n        s2 += dev * dev;\n        s3 += dev * dev * dev;\n    }\n    var m2 = s2 / l;\n    var m3 = s3 / l;\n\n    var g = m3 / (Math.pow(m2, 3 / 2.0));\n    if (unbiased) {\n        var a = Math.sqrt(l * (l - 1));\n        var b = l - 2;\n        return (a / b) * g;\n    } else {\n        return g;\n    }\n};\n\nexports.kurtosis = function kurtosis(values, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var theMean = exports.mean(values);\n    var n = values.length, s2 = 0, s4 = 0;\n\n    for (var i = 0; i < n; i++) {\n        var dev = values[i] - theMean;\n        s2 += dev * dev;\n        s4 += dev * dev * dev * dev;\n    }\n    var m2 = s2 / n;\n    var m4 = s4 / n;\n\n    if (unbiased) {\n        var v = s2 / (n - 1);\n        var a = (n * (n + 1)) / ((n - 1) * (n - 2) * (n - 3));\n        var b = s4 / (v * v);\n        var c = ((n - 1) * (n - 1)) / ((n - 2) * (n - 3));\n\n        return a * b - 3 * c;\n    } else {\n        return m4 / (m2 * m2) - 3;\n    }\n};\n\nexports.entropy = function entropy(values, eps) {\n    if (typeof (eps) === 'undefined') eps = 0;\n    var sum = 0, l = values.length;\n    for (var i = 0; i < l; i++)\n        sum += values[i] * Math.log(values[i] + eps);\n    return -sum;\n};\n\nexports.weightedMean = function weightedMean(values, weights) {\n    var sum = 0, l = values.length;\n    for (var i = 0; i < l; i++)\n        sum += values[i] * weights[i];\n    return sum;\n};\n\nexports.weightedStandardDeviation = function weightedStandardDeviation(values, weights) {\n    return Math.sqrt(exports.weightedVariance(values, weights));\n};\n\nexports.weightedVariance = function weightedVariance(values, weights) {\n    var theMean = exports.weightedMean(values, weights);\n    var vari = 0, l = values.length;\n    var a = 0, b = 0;\n\n    for (var i = 0; i < l; i++) {\n        var z = values[i] - theMean;\n        var w = weights[i];\n\n        vari += w * (z * z);\n        b += w;\n        a += w * w;\n    }\n\n    return vari * (b / (b * b - a));\n};\n\nexports.center = function center(values, inPlace) {\n    if (typeof (inPlace) === 'undefined') inPlace = false;\n\n    var result = values;\n    if (!inPlace)\n        result = [].concat(values);\n\n    var theMean = exports.mean(result), l = result.length;\n    for (var i = 0; i < l; i++)\n        result[i] -= theMean;\n};\n\nexports.standardize = function standardize(values, standardDev, inPlace) {\n    if (typeof (standardDev) === 'undefined') standardDev = exports.standardDeviation(values);\n    if (typeof (inPlace) === 'undefined') inPlace = false;\n    var l = values.length;\n    var result = inPlace ? values : new Array(l);\n    for (var i = 0; i < l; i++)\n        result[i] = values[i] / standardDev;\n    return result;\n};\n\nexports.cumulativeSum = function cumulativeSum(array) {\n    var l = array.length;\n    var result = new Array(l);\n    result[0] = array[0];\n    for (var i = 1; i < l; i++)\n        result[i] = result[i - 1] + array[i];\n    return result;\n};\n","'use strict';\n\nvar arrayStat = require('./array');\n\nfunction compareNumbers(a, b) {\n    return a - b;\n}\n\nexports.max = function max(matrix) {\n    var max = -Infinity;\n    for (var i = 0; i < matrix.length; i++) {\n        for (var j = 0; j < matrix[i].length; j++) {\n            if (matrix[i][j] > max) max = matrix[i][j];\n        }\n    }\n    return max;\n};\n\nexports.min = function min(matrix) {\n    var min = Infinity;\n    for (var i = 0; i < matrix.length; i++) {\n        for (var j = 0; j < matrix[i].length; j++) {\n            if (matrix[i][j] < min) min = matrix[i][j];\n        }\n    }\n    return min;\n};\n\nexports.minMax = function minMax(matrix) {\n    var min = Infinity;\n    var max = -Infinity;\n    for (var i = 0; i < matrix.length; i++) {\n        for (var j = 0; j < matrix[i].length; j++) {\n            if (matrix[i][j] < min) min = matrix[i][j];\n            if (matrix[i][j] > max) max = matrix[i][j];\n        }\n    }\n    return {\n        min:min,\n        max:max\n    };\n};\n\nexports.entropy = function entropy(matrix, eps) {\n    if (typeof (eps) === 'undefined') {\n        eps = 0;\n    }\n    var sum = 0,\n        l1 = matrix.length,\n        l2 = matrix[0].length;\n    for (var i = 0; i < l1; i++) {\n        for (var j = 0; j < l2; j++) {\n            sum += matrix[i][j] * Math.log(matrix[i][j] + eps);\n        }\n    }\n    return -sum;\n};\n\nexports.mean = function mean(matrix, dimension) {\n    if (typeof (dimension) === 'undefined') {\n        dimension = 0;\n    }\n    var rows = matrix.length,\n        cols = matrix[0].length,\n        theMean, N, i, j;\n\n    if (dimension === -1) {\n        theMean = [0];\n        N = rows * cols;\n        for (i = 0; i < rows; i++) {\n            for (j = 0; j < cols; j++) {\n                theMean[0] += matrix[i][j];\n            }\n        }\n        theMean[0] /= N;\n    } else if (dimension === 0) {\n        theMean = new Array(cols);\n        N = rows;\n        for (j = 0; j < cols; j++) {\n            theMean[j] = 0;\n            for (i = 0; i < rows; i++) {\n                theMean[j] += matrix[i][j];\n            }\n            theMean[j] /= N;\n        }\n    } else if (dimension === 1) {\n        theMean = new Array(rows);\n        N = cols;\n        for (j = 0; j < rows; j++) {\n            theMean[j] = 0;\n            for (i = 0; i < cols; i++) {\n                theMean[j] += matrix[j][i];\n            }\n            theMean[j] /= N;\n        }\n    } else {\n        throw new Error('Invalid dimension');\n    }\n    return theMean;\n};\n\nexports.sum = function sum(matrix, dimension) {\n    if (typeof (dimension) === 'undefined') {\n        dimension = 0;\n    }\n    var rows = matrix.length,\n        cols = matrix[0].length,\n        theSum, i, j;\n\n    if (dimension === -1) {\n        theSum = [0];\n        for (i = 0; i < rows; i++) {\n            for (j = 0; j < cols; j++) {\n                theSum[0] += matrix[i][j];\n            }\n        }\n    } else if (dimension === 0) {\n        theSum = new Array(cols);\n        for (j = 0; j < cols; j++) {\n            theSum[j] = 0;\n            for (i = 0; i < rows; i++) {\n                theSum[j] += matrix[i][j];\n            }\n        }\n    } else if (dimension === 1) {\n        theSum = new Array(rows);\n        for (j = 0; j < rows; j++) {\n            theSum[j] = 0;\n            for (i = 0; i < cols; i++) {\n                theSum[j] += matrix[j][i];\n            }\n        }\n    } else {\n        throw new Error('Invalid dimension');\n    }\n    return theSum;\n};\n\nexports.product = function product(matrix, dimension) {\n    if (typeof (dimension) === 'undefined') {\n        dimension = 0;\n    }\n    var rows = matrix.length,\n        cols = matrix[0].length,\n        theProduct, i, j;\n\n    if (dimension === -1) {\n        theProduct = [1];\n        for (i = 0; i < rows; i++) {\n            for (j = 0; j < cols; j++) {\n                theProduct[0] *= matrix[i][j];\n            }\n        }\n    } else if (dimension === 0) {\n        theProduct = new Array(cols);\n        for (j = 0; j < cols; j++) {\n            theProduct[j] = 1;\n            for (i = 0; i < rows; i++) {\n                theProduct[j] *= matrix[i][j];\n            }\n        }\n    } else if (dimension === 1) {\n        theProduct = new Array(rows);\n        for (j = 0; j < rows; j++) {\n            theProduct[j] = 1;\n            for (i = 0; i < cols; i++) {\n                theProduct[j] *= matrix[j][i];\n            }\n        }\n    } else {\n        throw new Error('Invalid dimension');\n    }\n    return theProduct;\n};\n\nexports.standardDeviation = function standardDeviation(matrix, means, unbiased) {\n    var vari = exports.variance(matrix, means, unbiased), l = vari.length;\n    for (var i = 0; i < l; i++) {\n        vari[i] = Math.sqrt(vari[i]);\n    }\n    return vari;\n};\n\nexports.variance = function variance(matrix, means, unbiased) {\n    if (typeof (unbiased) === 'undefined') {\n        unbiased = true;\n    }\n    means = means || exports.mean(matrix);\n    var rows = matrix.length;\n    if (rows === 0) return [];\n    var cols = matrix[0].length;\n    var vari = new Array(cols);\n\n    for (var j = 0; j < cols; j++) {\n        var sum1 = 0, sum2 = 0, x = 0;\n        for (var i = 0; i < rows; i++) {\n            x = matrix[i][j] - means[j];\n            sum1 += x;\n            sum2 += x * x;\n        }\n        if (unbiased) {\n            vari[j] = (sum2 - ((sum1 * sum1) / rows)) / (rows - 1);\n        } else {\n            vari[j] = (sum2 - ((sum1 * sum1) / rows)) / rows;\n        }\n    }\n    return vari;\n};\n\nexports.median = function median(matrix) {\n    var rows = matrix.length, cols = matrix[0].length;\n    var medians = new Array(cols);\n\n    for (var i = 0; i < cols; i++) {\n        var data = new Array(rows);\n        for (var j = 0; j < rows; j++) {\n            data[j] = matrix[j][i];\n        }\n        data.sort(compareNumbers);\n        var N = data.length;\n        if (N % 2 === 0) {\n            medians[i] = (data[N / 2] + data[(N / 2) - 1]) * 0.5;\n        } else {\n            medians[i] = data[Math.floor(N / 2)];\n        }\n    }\n    return medians;\n};\n\nexports.mode = function mode(matrix) {\n    var rows = matrix.length,\n        cols = matrix[0].length,\n        modes = new Array(cols),\n        i, j;\n    for (i = 0; i < cols; i++) {\n        var itemCount = new Array(rows);\n        for (var k = 0; k < rows; k++) {\n            itemCount[k] = 0;\n        }\n        var itemArray = new Array(rows);\n        var count = 0;\n\n        for (j = 0; j < rows; j++) {\n            var index = itemArray.indexOf(matrix[j][i]);\n            if (index >= 0) {\n                itemCount[index]++;\n            } else {\n                itemArray[count] = matrix[j][i];\n                itemCount[count] = 1;\n                count++;\n            }\n        }\n\n        var maxValue = 0, maxIndex = 0;\n        for (j = 0; j < count; j++) {\n            if (itemCount[j] > maxValue) {\n                maxValue = itemCount[j];\n                maxIndex = j;\n            }\n        }\n\n        modes[i] = itemArray[maxIndex];\n    }\n    return modes;\n};\n\nexports.skewness = function skewness(matrix, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var means = exports.mean(matrix);\n    var n = matrix.length, l = means.length;\n    var skew = new Array(l);\n\n    for (var j = 0; j < l; j++) {\n        var s2 = 0, s3 = 0;\n        for (var i = 0; i < n; i++) {\n            var dev = matrix[i][j] - means[j];\n            s2 += dev * dev;\n            s3 += dev * dev * dev;\n        }\n\n        var m2 = s2 / n;\n        var m3 = s3 / n;\n        var g = m3 / Math.pow(m2, 3 / 2);\n\n        if (unbiased) {\n            var a = Math.sqrt(n * (n - 1));\n            var b = n - 2;\n            skew[j] = (a / b) * g;\n        } else {\n            skew[j] = g;\n        }\n    }\n    return skew;\n};\n\nexports.kurtosis = function kurtosis(matrix, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var means = exports.mean(matrix);\n    var n = matrix.length, m = matrix[0].length;\n    var kurt = new Array(m);\n\n    for (var j = 0; j < m; j++) {\n        var s2 = 0, s4 = 0;\n        for (var i = 0; i < n; i++) {\n            var dev = matrix[i][j] - means[j];\n            s2 += dev * dev;\n            s4 += dev * dev * dev * dev;\n        }\n        var m2 = s2 / n;\n        var m4 = s4 / n;\n\n        if (unbiased) {\n            var v = s2 / (n - 1);\n            var a = (n * (n + 1)) / ((n - 1) * (n - 2) * (n - 3));\n            var b = s4 / (v * v);\n            var c = ((n - 1) * (n - 1)) / ((n - 2) * (n - 3));\n            kurt[j] = a * b - 3 * c;\n        } else {\n            kurt[j] = m4 / (m2 * m2) - 3;\n        }\n    }\n    return kurt;\n};\n\nexports.standardError = function standardError(matrix) {\n    var samples = matrix.length;\n    var standardDeviations = exports.standardDeviation(matrix);\n    var l = standardDeviations.length;\n    var standardErrors = new Array(l);\n    var sqrtN = Math.sqrt(samples);\n\n    for (var i = 0; i < l; i++) {\n        standardErrors[i] = standardDeviations[i] / sqrtN;\n    }\n    return standardErrors;\n};\n\nexports.covariance = function covariance(matrix, dimension) {\n    return exports.scatter(matrix, undefined, dimension);\n};\n\nexports.scatter = function scatter(matrix, divisor, dimension) {\n    if (typeof (dimension) === 'undefined') {\n        dimension = 0;\n    }\n    if (typeof (divisor) === 'undefined') {\n        if (dimension === 0) {\n            divisor = matrix.length - 1;\n        } else if (dimension === 1) {\n            divisor = matrix[0].length - 1;\n        }\n    }\n    var means = exports.mean(matrix, dimension);\n    var rows = matrix.length;\n    if (rows === 0) {\n        return [[]];\n    }\n    var cols = matrix[0].length,\n        cov, i, j, s, k;\n\n    if (dimension === 0) {\n        cov = new Array(cols);\n        for (i = 0; i < cols; i++) {\n            cov[i] = new Array(cols);\n        }\n        for (i = 0; i < cols; i++) {\n            for (j = i; j < cols; j++) {\n                s = 0;\n                for (k = 0; k < rows; k++) {\n                    s += (matrix[k][j] - means[j]) * (matrix[k][i] - means[i]);\n                }\n                s /= divisor;\n                cov[i][j] = s;\n                cov[j][i] = s;\n            }\n        }\n    } else if (dimension === 1) {\n        cov = new Array(rows);\n        for (i = 0; i < rows; i++) {\n            cov[i] = new Array(rows);\n        }\n        for (i = 0; i < rows; i++) {\n            for (j = i; j < rows; j++) {\n                s = 0;\n                for (k = 0; k < cols; k++) {\n                    s += (matrix[j][k] - means[j]) * (matrix[i][k] - means[i]);\n                }\n                s /= divisor;\n                cov[i][j] = s;\n                cov[j][i] = s;\n            }\n        }\n    } else {\n        throw new Error('Invalid dimension');\n    }\n\n    return cov;\n};\n\nexports.correlation = function correlation(matrix) {\n    var means = exports.mean(matrix),\n        standardDeviations = exports.standardDeviation(matrix, true, means),\n        scores = exports.zScores(matrix, means, standardDeviations),\n        rows = matrix.length,\n        cols = matrix[0].length,\n        i, j;\n\n    var cor = new Array(cols);\n    for (i = 0; i < cols; i++) {\n        cor[i] = new Array(cols);\n    }\n    for (i = 0; i < cols; i++) {\n        for (j = i; j < cols; j++) {\n            var c = 0;\n            for (var k = 0, l = scores.length; k < l; k++) {\n                c += scores[k][j] * scores[k][i];\n            }\n            c /= rows - 1;\n            cor[i][j] = c;\n            cor[j][i] = c;\n        }\n    }\n    return cor;\n};\n\nexports.zScores = function zScores(matrix, means, standardDeviations) {\n    means = means || exports.mean(matrix);\n    if (typeof (standardDeviations) === 'undefined') standardDeviations = exports.standardDeviation(matrix, true, means);\n    return exports.standardize(exports.center(matrix, means, false), standardDeviations, true);\n};\n\nexports.center = function center(matrix, means, inPlace) {\n    means = means || exports.mean(matrix);\n    var result = matrix,\n        l = matrix.length,\n        i, j, jj;\n\n    if (!inPlace) {\n        result = new Array(l);\n        for (i = 0; i < l; i++) {\n            result[i] = new Array(matrix[i].length);\n        }\n    }\n\n    for (i = 0; i < l; i++) {\n        var row = result[i];\n        for (j = 0, jj = row.length; j < jj; j++) {\n            row[j] = matrix[i][j] - means[j];\n        }\n    }\n    return result;\n};\n\nexports.standardize = function standardize(matrix, standardDeviations, inPlace) {\n    if (typeof (standardDeviations) === 'undefined') standardDeviations = exports.standardDeviation(matrix);\n    var result = matrix,\n        l = matrix.length,\n        i, j, jj;\n\n    if (!inPlace) {\n        result = new Array(l);\n        for (i = 0; i < l; i++) {\n            result[i] = new Array(matrix[i].length);\n        }\n    }\n\n    for (i = 0; i < l; i++) {\n        var resultRow = result[i];\n        var sourceRow = matrix[i];\n        for (j = 0, jj = resultRow.length; j < jj; j++) {\n            if (standardDeviations[j] !== 0 && !isNaN(standardDeviations[j])) {\n                resultRow[j] = sourceRow[j] / standardDeviations[j];\n            }\n        }\n    }\n    return result;\n};\n\nexports.weightedVariance = function weightedVariance(matrix, weights) {\n    var means = exports.mean(matrix);\n    var rows = matrix.length;\n    if (rows === 0) return [];\n    var cols = matrix[0].length;\n    var vari = new Array(cols);\n\n    for (var j = 0; j < cols; j++) {\n        var sum = 0;\n        var a = 0, b = 0;\n\n        for (var i = 0; i < rows; i++) {\n            var z = matrix[i][j] - means[j];\n            var w = weights[i];\n\n            sum += w * (z * z);\n            b += w;\n            a += w * w;\n        }\n\n        vari[j] = sum * (b / (b * b - a));\n    }\n\n    return vari;\n};\n\nexports.weightedMean = function weightedMean(matrix, weights, dimension) {\n    if (typeof (dimension) === 'undefined') {\n        dimension = 0;\n    }\n    var rows = matrix.length;\n    if (rows === 0) return [];\n    var cols = matrix[0].length,\n        means, i, ii, j, w, row;\n\n    if (dimension === 0) {\n        means = new Array(cols);\n        for (i = 0; i < cols; i++) {\n            means[i] = 0;\n        }\n        for (i = 0; i < rows; i++) {\n            row = matrix[i];\n            w = weights[i];\n            for (j = 0; j < cols; j++) {\n                means[j] += row[j] * w;\n            }\n        }\n    } else if (dimension === 1) {\n        means = new Array(rows);\n        for (i = 0; i < rows; i++) {\n            means[i] = 0;\n        }\n        for (j = 0; j < rows; j++) {\n            row = matrix[j];\n            w = weights[j];\n            for (i = 0; i < cols; i++) {\n                means[j] += row[i] * w;\n            }\n        }\n    } else {\n        throw new Error('Invalid dimension');\n    }\n\n    var weightSum = arrayStat.sum(weights);\n    if (weightSum !== 0) {\n        for (i = 0, ii = means.length; i < ii; i++) {\n            means[i] /= weightSum;\n        }\n    }\n    return means;\n};\n\nexports.weightedCovariance = function weightedCovariance(matrix, weights, means, dimension) {\n    dimension = dimension || 0;\n    means = means || exports.weightedMean(matrix, weights, dimension);\n    var s1 = 0, s2 = 0;\n    for (var i = 0, ii = weights.length; i < ii; i++) {\n        s1 += weights[i];\n        s2 += weights[i] * weights[i];\n    }\n    var factor = s1 / (s1 * s1 - s2);\n    return exports.weightedScatter(matrix, weights, means, factor, dimension);\n};\n\nexports.weightedScatter = function weightedScatter(matrix, weights, means, factor, dimension) {\n    dimension = dimension || 0;\n    means = means || exports.weightedMean(matrix, weights, dimension);\n    if (typeof (factor) === 'undefined') {\n        factor = 1;\n    }\n    var rows = matrix.length;\n    if (rows === 0) {\n        return [[]];\n    }\n    var cols = matrix[0].length,\n        cov, i, j, k, s;\n\n    if (dimension === 0) {\n        cov = new Array(cols);\n        for (i = 0; i < cols; i++) {\n            cov[i] = new Array(cols);\n        }\n        for (i = 0; i < cols; i++) {\n            for (j = i; j < cols; j++) {\n                s = 0;\n                for (k = 0; k < rows; k++) {\n                    s += weights[k] * (matrix[k][j] - means[j]) * (matrix[k][i] - means[i]);\n                }\n                cov[i][j] = s * factor;\n                cov[j][i] = s * factor;\n            }\n        }\n    } else if (dimension === 1) {\n        cov = new Array(rows);\n        for (i = 0; i < rows; i++) {\n            cov[i] = new Array(rows);\n        }\n        for (i = 0; i < rows; i++) {\n            for (j = i; j < rows; j++) {\n                s = 0;\n                for (k = 0; k < cols; k++) {\n                    s += weights[k] * (matrix[j][k] - means[j]) * (matrix[i][k] - means[i]);\n                }\n                cov[i][j] = s * factor;\n                cov[j][i] = s * factor;\n            }\n        }\n    } else {\n        throw new Error('Invalid dimension');\n    }\n\n    return cov;\n};\n","'use strict';\n\nexports.array = require('./array');\nexports.matrix = require('./matrix');\n","'use strict';\n\nconst Stat = require('ml-stat').array;\n/**\n * Function that returns an array of points given 1D array as follows:\n *\n * [x1, y1, .. , x2, y2, ..]\n *\n * And receive the number of dimensions of each point.\n * @param array\n * @param dimensions\n * @returns {Array} - Array of points.\n */\nfunction coordArrayToPoints(array, dimensions) {\n    if(array.length % dimensions !== 0) {\n        throw new RangeError('Dimensions number must be accordance with the size of the array.');\n    }\n\n    var length = array.length / dimensions;\n    var pointsArr = new Array(length);\n\n    var k = 0;\n    for(var i = 0; i < array.length; i += dimensions) {\n        var point = new Array(dimensions);\n        for(var j = 0; j < dimensions; ++j) {\n            point[j] = array[i + j];\n        }\n\n        pointsArr[k] = point;\n        k++;\n    }\n\n    return pointsArr;\n}\n\n\n/**\n * Function that given an array as follows:\n * [x1, y1, .. , x2, y2, ..]\n *\n * Returns an array as follows:\n * [[x1, x2, ..], [y1, y2, ..], [ .. ]]\n *\n * And receives the number of dimensions of each coordinate.\n * @param array\n * @param dimensions\n * @returns {Array} - Matrix of coordinates\n */\nfunction coordArrayToCoordMatrix(array, dimensions) {\n    if(array.length % dimensions !== 0) {\n        throw new RangeError('Dimensions number must be accordance with the size of the array.');\n    }\n\n    var coordinatesArray = new Array(dimensions);\n    var points = array.length / dimensions;\n    for (var i = 0; i < coordinatesArray.length; i++) {\n        coordinatesArray[i] = new Array(points);\n    }\n\n    for(i = 0; i < array.length; i += dimensions) {\n        for(var j = 0; j < dimensions; ++j) {\n            var currentPoint = Math.floor(i / dimensions);\n            coordinatesArray[j][currentPoint] = array[i + j];\n        }\n    }\n\n    return coordinatesArray;\n}\n\n/**\n * Function that receives a coordinate matrix as follows:\n * [[x1, x2, ..], [y1, y2, ..], [ .. ]]\n *\n * Returns an array of coordinates as follows:\n * [x1, y1, .. , x2, y2, ..]\n *\n * @param coordMatrix\n * @returns {Array}\n */\nfunction coordMatrixToCoordArray(coordMatrix) {\n    var coodinatesArray = new Array(coordMatrix.length * coordMatrix[0].length);\n    var k = 0;\n    for(var i = 0; i < coordMatrix[0].length; ++i) {\n        for(var j = 0; j < coordMatrix.length; ++j) {\n            coodinatesArray[k] = coordMatrix[j][i];\n            ++k;\n        }\n    }\n\n    return coodinatesArray;\n}\n\n/**\n * Tranpose a matrix, this method is for coordMatrixToPoints and\n * pointsToCoordMatrix, that because only transposing the matrix\n * you can change your representation.\n *\n * @param matrix\n * @returns {Array}\n */\nfunction transpose(matrix) {\n    var resultMatrix = new Array(matrix[0].length);\n    for(var i = 0; i < resultMatrix.length; ++i) {\n        resultMatrix[i] = new Array(matrix.length);\n    }\n\n    for (i = 0; i < matrix.length; ++i) {\n        for(var j = 0; j < matrix[0].length; ++j) {\n            resultMatrix[j][i] = matrix[i][j];\n        }\n    }\n\n    return resultMatrix;\n}\n\n/**\n * Function that transform an array of points into a coordinates array\n * as follows:\n * [x1, y1, .. , x2, y2, ..]\n *\n * @param points\n * @returns {Array}\n */\nfunction pointsToCoordArray(points) {\n    var coodinatesArray = new Array(points.length * points[0].length);\n    var k = 0;\n    for(var i = 0; i < points.length; ++i) {\n        for(var j = 0; j < points[0].length; ++j) {\n            coodinatesArray[k] = points[i][j];\n            ++k;\n        }\n    }\n\n    return coodinatesArray;\n}\n\n/**\n * Apply the dot product between the smaller vector and a subsets of the\n * largest one.\n *\n * @param firstVector\n * @param secondVector\n * @returns {Array} each dot product of size of the difference between the\n *                  larger and the smallest one.\n */\nfunction applyDotProduct(firstVector, secondVector) {\n    var largestVector, smallestVector;\n    if(firstVector.length <= secondVector.length) {\n        smallestVector = firstVector;\n        largestVector = secondVector;\n    } else {\n        smallestVector = secondVector;\n        largestVector = firstVector;\n    }\n\n    var difference = largestVector.length - smallestVector.length + 1;\n    var dotProductApplied = new Array(difference);\n\n    for (var i = 0; i < difference; ++i) {\n        var sum = 0;\n        for (var j = 0; j < smallestVector.length; ++j) {\n            sum += smallestVector[j] * largestVector[i + j];\n        }\n        dotProductApplied[i] = sum;\n    }\n\n    return dotProductApplied;\n}\n/**\n * To scale the input array between the specified min and max values. The operation is performed inplace\n * if the options.inplace is specified. If only one of the min or max parameters is specified, then the scaling\n * will multiply the input array by min/min(input) or max/max(input)\n * @param input\n * @param options\n * @returns {*}\n */\nfunction scale(input, options){\n    var y;\n    if(options.inPlace){\n        y = input;\n    }\n    else{\n        y = new Array(input.length);\n    }\n    const max = options.max;\n    const min = options.min;\n    if(typeof max === \"number\"){\n        if(typeof min === \"number\"){\n            var minMax = Stat.minMax(input);\n            var factor = (max - min)/(minMax.max-minMax.min);\n            for(var i=0;i< y.length;i++){\n                y[i]=(input[i]-minMax.min)*factor+min;\n            }\n        }\n        else{\n            var currentMin = Stat.max(input);\n            var factor = max/currentMin;\n            for(var i=0;i< y.length;i++){\n                y[i] = input[i]*factor;\n            }\n        }\n    }\n    else{\n        if(typeof min === \"number\"){\n            var currentMin = Stat.min(input);\n            var factor = min/currentMin;\n            for(var i=0;i< y.length;i++){\n                y[i] = input[i]*factor;\n            }\n        }\n    }\n    return y;\n}\n\nmodule.exports = {\n    coordArrayToPoints: coordArrayToPoints,\n    coordArrayToCoordMatrix: coordArrayToCoordMatrix,\n    coordMatrixToCoordArray: coordMatrixToCoordArray,\n    coordMatrixToPoints: transpose,\n    pointsToCoordArray: pointsToCoordArray,\n    pointsToCoordMatrix: transpose,\n    applyDotProduct: applyDotProduct,\n    scale:scale\n};\n\n","'use strict';\n\n/**\n *\n * Function that returns a Number array of equally spaced numberOfPoints\n * containing a representation of intensities of the spectra arguments x\n * and y.\n *\n * The options parameter contains an object in the following form:\n * from: starting point\n * to: last point\n * numberOfPoints: number of points between from and to\n * variant: \"slot\" or \"smooth\" - smooth is the default option\n *\n * The slot variant consist that each point in the new array is calculated\n * averaging the existing points between the slot that belongs to the current\n * value. The smooth variant is the same but takes the integral of the range\n * of the slot and divide by the step size between two points in the new array.\n *\n * @param x - sorted increasing x values\n * @param y\n * @param options\n * @returns {Array} new array with the equally spaced data.\n *\n */\nfunction getEquallySpacedData(x, y, options) {\n    if (x.length>1 && x[0]>x[1]) {\n        x=x.slice().reverse();\n        y=y.slice().reverse();\n    }\n\n    var xLength = x.length;\n    if(xLength !== y.length)\n        throw new RangeError(\"the x and y vector doesn't have the same size.\");\n\n    if (options === undefined) options = {};\n\n    var from = options.from === undefined ? x[0] : options.from\n    if (isNaN(from) || !isFinite(from)) {\n        throw new RangeError(\"'From' value must be a number\");\n    }\n    var to = options.to === undefined ? x[x.length - 1] : options.to;\n    if (isNaN(to) || !isFinite(to)) {\n        throw new RangeError(\"'To' value must be a number\");\n    }\n\n    var reverse = from > to;\n    if(reverse) {\n        var temp = from;\n        from = to;\n        to = temp;\n    }\n\n    var numberOfPoints = options.numberOfPoints === undefined ? 100 : options.numberOfPoints;\n    if (isNaN(numberOfPoints) || !isFinite(numberOfPoints)) {\n        throw new RangeError(\"'Number of points' value must be a number\");\n    }\n    if(numberOfPoints < 1)\n        throw new RangeError(\"the number of point must be higher than 1\");\n\n    var algorithm = options.variant === \"slot\" ? \"slot\" : \"smooth\"; // default value: smooth\n\n    var output = algorithm === \"slot\" ? getEquallySpacedSlot(x, y, from, to, numberOfPoints) : getEquallySpacedSmooth(x, y, from, to, numberOfPoints);\n\n    return reverse ? output.reverse() : output;\n}\n\n/**\n * function that retrieves the getEquallySpacedData with the variant \"smooth\"\n *\n * @param x\n * @param y\n * @param from - Initial point\n * @param to - Final point\n * @param numberOfPoints\n * @returns {Array} - Array of y's equally spaced with the variant \"smooth\"\n */\nfunction getEquallySpacedSmooth(x, y, from, to, numberOfPoints) {\n    var xLength = x.length;\n\n    var step = (to - from) / (numberOfPoints - 1);\n    var halfStep = step / 2;\n\n    var start = from - halfStep;\n    var output = new Array(numberOfPoints);\n\n    var initialOriginalStep = x[1] - x[0];\n    var lastOriginalStep = x[x.length - 1] - x[x.length - 2];\n\n    // Init main variables\n    var min = start;\n    var max = start + step;\n\n    var previousX = Number.MIN_VALUE;\n    var previousY = 0;\n    var nextX = x[0] - initialOriginalStep;\n    var nextY = 0;\n\n    var currentValue = 0;\n    var slope = 0;\n    var intercept = 0;\n    var sumAtMin = 0;\n    var sumAtMax = 0;\n\n    var i = 0; // index of input\n    var j = 0; // index of output\n\n    function getSlope(x0, y0, x1, y1) {\n        return (y1 - y0) / (x1 - x0);\n    }\n\n    main: while(true) {\n        while (nextX - max >= 0) {\n            // no overlap with original point, just consume current value\n            var add = integral(0, max - previousX, slope, previousY);\n            sumAtMax = currentValue + add;\n\n            output[j] = (sumAtMax - sumAtMin) / step;\n            j++;\n\n            if (j === numberOfPoints)\n                break main;\n\n            min = max;\n            max += step;\n            sumAtMin = sumAtMax;\n        }\n\n        if(previousX <= min && min <= nextX) {\n            add = integral(0, min - previousX, slope, previousY);\n            sumAtMin = currentValue + add;\n        }\n\n        currentValue += integral(previousX, nextX, slope, intercept);\n\n        previousX = nextX;\n        previousY = nextY;\n\n        if (i < xLength) {\n            nextX = x[i];\n            nextY = y[i];\n            i++;\n        } else if (i === xLength) {\n            nextX += lastOriginalStep;\n            nextY = 0;\n        }\n        // updating parameters\n        slope = getSlope(previousX, previousY, nextX, nextY);\n        intercept = -slope*previousX + previousY;\n    }\n\n    return output;\n}\n\n/**\n * function that retrieves the getEquallySpacedData with the variant \"slot\"\n *\n * @param x\n * @param y\n * @param from - Initial point\n * @param to - Final point\n * @param numberOfPoints\n * @returns {Array} - Array of y's equally spaced with the variant \"slot\"\n */\nfunction getEquallySpacedSlot(x, y, from, to, numberOfPoints) {\n    var xLength = x.length;\n\n    var step = (to - from) / (numberOfPoints - 1);\n    var halfStep = step / 2;\n    var lastStep = x[x.length - 1] - x[x.length - 2];\n\n    var start = from - halfStep;\n    var output = new Array(numberOfPoints);\n\n    // Init main variables\n    var min = start;\n    var max = start + step;\n\n    var previousX = -Number.MAX_VALUE;\n    var previousY = 0;\n    var nextX = x[0];\n    var nextY = y[0];\n    var frontOutsideSpectra = 0;\n    var backOutsideSpectra = true;\n\n    var currentValue = 0;\n\n    // for slot algorithm\n    var currentPoints = 0;\n\n    var i = 1; // index of input\n    var j = 0; // index of output\n\n    main: while(true) {\n        if (previousX>=nextX) throw (new Error('x must be an increasing serie'));\n        while (previousX - max > 0) {\n            // no overlap with original point, just consume current value\n            if(backOutsideSpectra) {\n                currentPoints++;\n                backOutsideSpectra = false;\n            }\n\n            output[j] = currentPoints <= 0 ? 0 : currentValue / currentPoints;\n            j++;\n\n            if (j === numberOfPoints)\n                break main;\n\n            min = max;\n            max += step;\n            currentValue = 0;\n            currentPoints = 0;\n        }\n\n        if(previousX > min) {\n            currentValue += previousY;\n            currentPoints++;\n        }\n\n        if(previousX === -Number.MAX_VALUE || frontOutsideSpectra > 1)\n            currentPoints--;\n\n        previousX = nextX;\n        previousY = nextY;\n\n        if (i < xLength) {\n            nextX = x[i];\n            nextY = y[i];\n            i++;\n        } else {\n            nextX += lastStep;\n            nextY = 0;\n            frontOutsideSpectra++;\n        }\n    }\n\n    return output;\n}\n/**\n * Function that calculates the integral of the line between two\n * x-coordinates, given the slope and intercept of the line.\n *\n * @param x0\n * @param x1\n * @param slope\n * @param intercept\n * @returns {number} integral value.\n */\nfunction integral(x0, x1, slope, intercept) {\n    return (0.5 * slope * x1 * x1 + intercept * x1) - (0.5 * slope * x0 * x0 + intercept * x0);\n}\n\nexports.getEquallySpacedData = getEquallySpacedData;\nexports.integral = integral;","'use strict';\n\nexports.SNV = SNV;\nvar Stat = require('ml-stat').array;\n\n/**\n * Function that applies the standard normal variate (SNV) to an array of values.\n *\n * @param data - Array of values.\n * @returns {Array} - applied the SNV.\n */\nfunction SNV(data) {\n    var mean = Stat.mean(data);\n    var std = Stat.standardDeviation(data);\n    var result = data.slice();\n    for (var i = 0; i < data.length; i++) {\n        result[i] = (result[i] - mean) / std;\n    }\n    return result;\n}\n","module.exports = exports = require('./ArrayUtils');\n\n\nexports.getEquallySpacedData = require('./getEquallySpaced').getEquallySpacedData;\nexports.SNV = require('./snv').SNV;\n","'use strict';\n\nvar Matrix = require('./matrix');\n\n/**\n * @private\n * Check that a row index is not out of bounds\n * @param {Matrix} matrix\n * @param {number} index\n * @param {boolean} [outer]\n */\nexports.checkRowIndex = function checkRowIndex(matrix, index, outer) {\n    var max = outer ? matrix.rows : matrix.rows - 1;\n    if (index < 0 || index > max) {\n        throw new RangeError('Row index out of range');\n    }\n};\n\n/**\n * @private\n * Check that a column index is not out of bounds\n * @param {Matrix} matrix\n * @param {number} index\n * @param {boolean} [outer]\n */\nexports.checkColumnIndex = function checkColumnIndex(matrix, index, outer) {\n    var max = outer ? matrix.columns : matrix.columns - 1;\n    if (index < 0 || index > max) {\n        throw new RangeError('Column index out of range');\n    }\n};\n\n/**\n * @private\n * Check that the provided vector is an array with the right length\n * @param {Matrix} matrix\n * @param {Array|Matrix} vector\n * @return {Array}\n * @throws {RangeError}\n */\nexports.checkRowVector = function checkRowVector(matrix, vector) {\n    if (vector.to1DArray) {\n        vector = vector.to1DArray();\n    }\n    if (vector.length !== matrix.columns) {\n        throw new RangeError('vector size must be the same as the number of columns');\n    }\n    return vector;\n};\n\n/**\n * @private\n * Check that the provided vector is an array with the right length\n * @param {Matrix} matrix\n * @param {Array|Matrix} vector\n * @return {Array}\n * @throws {RangeError}\n */\nexports.checkColumnVector = function checkColumnVector(matrix, vector) {\n    if (vector.to1DArray) {\n        vector = vector.to1DArray();\n    }\n    if (vector.length !== matrix.rows) {\n        throw new RangeError('vector size must be the same as the number of rows');\n    }\n    return vector;\n};\n\nexports.checkIndices = function checkIndices(matrix, rowIndices, columnIndices) {\n    var rowOut = rowIndices.some(r => {\n        return r < 0 || r >= matrix.rows;\n\n    });\n\n    var columnOut = columnIndices.some(c => {\n        return c < 0 || c >= matrix.columns;\n    });\n\n    if (rowOut || columnOut) {\n        throw new RangeError('Indices are out of range');\n    }\n\n    if (typeof rowIndices !== 'object' || typeof columnIndices !== 'object') {\n        throw new TypeError('Unexpected type for row/column indices');\n    }\n    if (!Array.isArray(rowIndices)) rowIndices = Array.from(rowIndices);\n    if (!Array.isArray(columnIndices)) rowIndices = Array.from(columnIndices);\n\n    return {\n        row: rowIndices,\n        column: columnIndices\n    };\n};\n\nexports.checkRange = function checkRange(matrix, startRow, endRow, startColumn, endColumn) {\n    if (arguments.length !== 5) throw new TypeError('Invalid argument type');\n    var notAllNumbers = Array.from(arguments).slice(1).some(function (arg) {\n        return typeof arg !== 'number';\n    });\n    if (notAllNumbers) throw new TypeError('Invalid argument type');\n    if (startRow > endRow || startColumn > endColumn || startRow < 0 || startRow >= matrix.rows || endRow < 0 || endRow >= matrix.rows || startColumn < 0 || startColumn >= matrix.columns || endColumn < 0 || endColumn >= matrix.columns) {\n        throw new RangeError('Submatrix indices are out of range');\n    }\n};\n\nexports.getRange = function getRange(from, to) {\n    var arr = new Array(to - from + 1);\n    for (var i = 0; i < arr.length; i++) {\n        arr[i] = from + i;\n    }\n    return arr;\n};\n\nexports.sumByRow = function sumByRow(matrix) {\n    var sum = Matrix.Matrix.zeros(matrix.rows, 1);\n    for (var i = 0; i < matrix.rows; ++i) {\n        for (var j = 0; j < matrix.columns; ++j) {\n            sum.set(i, 0, sum.get(i, 0) + matrix.get(i, j));\n        }\n    }\n    return sum;\n};\n\nexports.sumByColumn = function sumByColumn(matrix) {\n    var sum = Matrix.Matrix.zeros(1, matrix.columns);\n    for (var i = 0; i < matrix.rows; ++i) {\n        for (var j = 0; j < matrix.columns; ++j) {\n            sum.set(0, j, sum.get(0, j) + matrix.get(i, j));\n        }\n    }\n    return sum;\n};\n\nexports.sumAll = function sumAll(matrix) {\n    var v = 0;\n    for (var i = 0; i < matrix.rows; i++) {\n        for (var j = 0; j < matrix.columns; j++) {\n            v += matrix.get(i, j);\n        }\n    }\n    return v;\n};\n","'use strict';\n\nvar abstractMatrix = require('../abstractMatrix');\nvar Matrix = require('../matrix');\n\nclass BaseView extends abstractMatrix() {\n    constructor(matrix, rows, columns) {\n        super();\n        this.matrix = matrix;\n        this.rows = rows;\n        this.columns = columns;\n    }\n\n    static get [Symbol.species]() {\n        return Matrix.Matrix;\n    }\n}\n\nmodule.exports = BaseView;\n","'use strict';\n\nvar BaseView = require('./base');\n\nclass MatrixTransposeView extends BaseView {\n    constructor(matrix) {\n        super(matrix, matrix.columns, matrix.rows);\n    }\n\n    set(rowIndex, columnIndex, value) {\n        this.matrix.set(columnIndex, rowIndex, value);\n        return this;\n    }\n\n    get(rowIndex, columnIndex) {\n        return this.matrix.get(columnIndex, rowIndex);\n    }\n}\n\nmodule.exports = MatrixTransposeView;\n","'use strict';\n\nvar BaseView = require('./base');\n\nclass MatrixRowView extends BaseView {\n    constructor(matrix, row) {\n        super(matrix, 1, matrix.columns);\n        this.row = row;\n    }\n\n    set(rowIndex, columnIndex, value) {\n        this.matrix.set(this.row, columnIndex, value);\n        return this;\n    }\n\n    get(rowIndex, columnIndex) {\n        return this.matrix.get(this.row, columnIndex);\n    }\n}\n\nmodule.exports = MatrixRowView;\n","'use strict';\n\nvar BaseView = require('./base');\nvar util = require('../util');\n\nclass MatrixSubView extends BaseView {\n    constructor(matrix, startRow, endRow, startColumn, endColumn) {\n        util.checkRange(matrix, startRow, endRow, startColumn, endColumn);\n        super(matrix, endRow - startRow + 1, endColumn - startColumn + 1);\n        this.startRow = startRow;\n        this.startColumn = startColumn;\n    }\n\n    set(rowIndex, columnIndex, value) {\n        this.matrix.set(this.startRow + rowIndex, this.startColumn + columnIndex, value);\n        return this;\n    }\n\n    get(rowIndex, columnIndex) {\n        return this.matrix.get(this.startRow + rowIndex, this.startColumn + columnIndex);\n    }\n}\n\nmodule.exports = MatrixSubView;\n","'use strict';\n\nvar BaseView = require('./base');\nvar util = require('../util');\n\nclass MatrixSelectionView extends BaseView {\n    constructor(matrix, rowIndices, columnIndices) {\n        var indices = util.checkIndices(matrix, rowIndices, columnIndices);\n        super(matrix, indices.row.length, indices.column.length);\n        this.rowIndices = indices.row;\n        this.columnIndices = indices.column;\n    }\n\n    set(rowIndex, columnIndex, value) {\n        this.matrix.set(this.rowIndices[rowIndex], this.columnIndices[columnIndex], value);\n        return this;\n    }\n\n    get(rowIndex, columnIndex) {\n        return this.matrix.get(this.rowIndices[rowIndex], this.columnIndices[columnIndex]);\n    }\n}\n\nmodule.exports = MatrixSelectionView;\n","'use strict';\n\nvar BaseView = require('./base');\n\nclass MatrixColumnView extends BaseView {\n    constructor(matrix, column) {\n        super(matrix, matrix.rows, 1);\n        this.column = column;\n    }\n\n    set(rowIndex, columnIndex, value) {\n        this.matrix.set(rowIndex, this.column, value);\n        return this;\n    }\n\n    get(rowIndex) {\n        return this.matrix.get(rowIndex, this.column);\n    }\n}\n\nmodule.exports = MatrixColumnView;\n","'use strict';\n\nvar BaseView = require('./base');\n\nclass MatrixFlipRowView extends BaseView {\n    constructor(matrix) {\n        super(matrix, matrix.rows, matrix.columns);\n    }\n\n    set(rowIndex, columnIndex, value) {\n        this.matrix.set(this.rows - rowIndex - 1, columnIndex, value);\n        return this;\n    }\n\n    get(rowIndex, columnIndex) {\n        return this.matrix.get(this.rows - rowIndex - 1, columnIndex);\n    }\n}\n\nmodule.exports = MatrixFlipRowView;\n","'use strict';\n\nvar BaseView = require('./base');\n\nclass MatrixFlipColumnView extends BaseView {\n    constructor(matrix) {\n        super(matrix, matrix.rows, matrix.columns);\n    }\n\n    set(rowIndex, columnIndex, value) {\n        this.matrix.set(rowIndex, this.columns - columnIndex - 1, value);\n        return this;\n    }\n\n    get(rowIndex, columnIndex) {\n        return this.matrix.get(rowIndex, this.columns - columnIndex - 1);\n    }\n}\n\nmodule.exports = MatrixFlipColumnView;\n","'use strict';\n\nmodule.exports = abstractMatrix;\n\nvar LuDecomposition = require('./dc/lu');\nvar SvDecomposition = require('./dc/svd');\nvar arrayUtils = require('ml-array-utils');\nvar util = require('./util');\nvar MatrixTransposeView = require('./views/transpose');\nvar MatrixRowView = require('./views/row');\nvar MatrixSubView = require('./views/sub');\nvar MatrixSelectionView = require('./views/selection');\nvar MatrixColumnView = require('./views/column');\nvar MatrixFlipRowView = require('./views/flipRow');\nvar MatrixFlipColumnView = require('./views/flipColumn');\n\nfunction abstractMatrix(superCtor) {\n    if (superCtor === undefined) superCtor = Object;\n\n    /**\n     * Real matrix\n     * @class Matrix\n     * @param {number|Array|Matrix} nRows - Number of rows of the new matrix,\n     * 2D array containing the data or Matrix instance to clone\n     * @param {number} [nColumns] - Number of columns of the new matrix\n     */\n    class Matrix extends superCtor {\n        static get [Symbol.species]() {\n            return this;\n        }\n\n        /**\n         * Constructs a Matrix with the chosen dimensions from a 1D array\n         * @param {number} newRows - Number of rows\n         * @param {number} newColumns - Number of columns\n         * @param {Array} newData - A 1D array containing data for the matrix\n         * @return {Matrix} - The new matrix\n         */\n        static from1DArray(newRows, newColumns, newData) {\n            var length = newRows * newColumns;\n            if (length !== newData.length) {\n                throw new RangeError('Data length does not match given dimensions');\n            }\n            var newMatrix = new this(newRows, newColumns);\n            for (var row = 0; row < newRows; row++) {\n                for (var column = 0; column < newColumns; column++) {\n                    newMatrix.set(row, column, newData[row * newColumns + column]);\n                }\n            }\n            return newMatrix;\n        }\n\n        /**\n         * Creates a row vector, a matrix with only one row.\n         * @param {Array} newData - A 1D array containing data for the vector\n         * @return {Matrix} - The new matrix\n         */\n        static rowVector(newData) {\n            var vector = new this(1, newData.length);\n            for (var i = 0; i < newData.length; i++) {\n                vector.set(0, i, newData[i]);\n            }\n            return vector;\n        }\n\n        /**\n         * Creates a column vector, a matrix with only one column.\n         * @param {Array} newData - A 1D array containing data for the vector\n         * @return {Matrix} - The new matrix\n         */\n        static columnVector(newData) {\n            var vector = new this(newData.length, 1);\n            for (var i = 0; i < newData.length; i++) {\n                vector.set(i, 0, newData[i]);\n            }\n            return vector;\n        }\n\n        /**\n         * Creates an empty matrix with the given dimensions. Values will be undefined. Same as using new Matrix(rows, columns).\n         * @param {number} rows - Number of rows\n         * @param {number} columns - Number of columns\n         * @return {Matrix} - The new matrix\n         */\n        static empty(rows, columns) {\n            return new this(rows, columns);\n        }\n\n        /**\n         * Creates a matrix with the given dimensions. Values will be set to zero.\n         * @param {number} rows - Number of rows\n         * @param {number} columns - Number of columns\n         * @return {Matrix} - The new matrix\n         */\n        static zeros(rows, columns) {\n            return this.empty(rows, columns).fill(0);\n        }\n\n        /**\n         * Creates a matrix with the given dimensions. Values will be set to one.\n         * @param {number} rows - Number of rows\n         * @param {number} columns - Number of columns\n         * @return {Matrix} - The new matrix\n         */\n        static ones(rows, columns) {\n            return this.empty(rows, columns).fill(1);\n        }\n\n        /**\n         * Creates a matrix with the given dimensions. Values will be randomly set.\n         * @param {number} rows - Number of rows\n         * @param {number} columns - Number of columns\n         * @param {function} [rng=Math.random] - Random number generator\n         * @return {Matrix} The new matrix\n         */\n        static rand(rows, columns, rng) {\n            if (rng === undefined) rng = Math.random;\n            var matrix = this.empty(rows, columns);\n            for (var i = 0; i < rows; i++) {\n                for (var j = 0; j < columns; j++) {\n                    matrix.set(i, j, rng());\n                }\n            }\n            return matrix;\n        }\n\n        /**\n         * Creates a matrix with the given dimensions. Values will be random integers.\n         * @param {number} rows - Number of rows\n         * @param {number} columns - Number of columns\n         * @param {number} [maxValue=1000] - Maximum value\n         * @param {function} [rng=Math.random] - Random number generator\n         * @return {Matrix} The new matrix\n         */\n        static randInt(rows, columns, maxValue, rng) {\n            if (maxValue === undefined) maxValue = 1000;\n            if (rng === undefined) rng = Math.random;\n            var matrix = this.empty(rows, columns);\n            for (var i = 0; i < rows; i++) {\n                for (var j = 0; j < columns; j++) {\n                    var value = Math.floor(rng() * maxValue);\n                    matrix.set(i, j, value);\n                }\n            }\n            return matrix;\n        }\n\n        /**\n         * Creates an identity matrix with the given dimension. Values of the diagonal will be 1 and others will be 0.\n         * @param {number} rows - Number of rows\n         * @param {number} [columns=rows] - Number of columns\n         * @param {number} [value=1] - Value to fill the diagonal with\n         * @return {Matrix} - The new identity matrix\n         */\n        static eye(rows, columns, value) {\n            if (columns === undefined) columns = rows;\n            if (value === undefined) value = 1;\n            var min = Math.min(rows, columns);\n            var matrix = this.zeros(rows, columns);\n            for (var i = 0; i < min; i++) {\n                matrix.set(i, i, value);\n            }\n            return matrix;\n        }\n\n        /**\n         * Creates a diagonal matrix based on the given array.\n         * @param {Array} data - Array containing the data for the diagonal\n         * @param {number} [rows] - Number of rows (Default: data.length)\n         * @param {number} [columns] - Number of columns (Default: rows)\n         * @return {Matrix} - The new diagonal matrix\n         */\n        static diag(data, rows, columns) {\n            var l = data.length;\n            if (rows === undefined) rows = l;\n            if (columns === undefined) columns = rows;\n            var min = Math.min(l, rows, columns);\n            var matrix = this.zeros(rows, columns);\n            for (var i = 0; i < min; i++) {\n                matrix.set(i, i, data[i]);\n            }\n            return matrix;\n        }\n\n        /**\n         * Returns a matrix whose elements are the minimum between matrix1 and matrix2\n         * @param {Matrix} matrix1\n         * @param {Matrix} matrix2\n         * @return {Matrix}\n         */\n        static min(matrix1, matrix2) {\n            matrix1 = this.checkMatrix(matrix1);\n            matrix2 = this.checkMatrix(matrix2);\n            var rows = matrix1.rows;\n            var columns = matrix1.columns;\n            var result = new this(rows, columns);\n            for (var i = 0; i < rows; i++) {\n                for (var j = 0; j < columns; j++) {\n                    result.set(i, j, Math.min(matrix1.get(i, j), matrix2.get(i, j)));\n                }\n            }\n            return result;\n        }\n\n        /**\n         * Returns a matrix whose elements are the maximum between matrix1 and matrix2\n         * @param {Matrix} matrix1\n         * @param {Matrix} matrix2\n         * @return {Matrix}\n         */\n        static max(matrix1, matrix2) {\n            matrix1 = this.checkMatrix(matrix1);\n            matrix2 = this.checkMatrix(matrix2);\n            var rows = matrix1.rows;\n            var columns = matrix1.columns;\n            var result = new this(rows, columns);\n            for (var i = 0; i < rows; i++) {\n                for (var j = 0; j < columns; j++) {\n                    result.set(i, j, Math.max(matrix1.get(i, j), matrix2.get(i, j)));\n                }\n            }\n            return result;\n        }\n\n        /**\n         * Check that the provided value is a Matrix and tries to instantiate one if not\n         * @param {*} value - The value to check\n         * @return {Matrix}\n         */\n        static checkMatrix(value) {\n            return Matrix.isMatrix(value) ? value : new this(value);\n        }\n\n        /**\n         * Returns true if the argument is a Matrix, false otherwise\n         * @param {*} value - The value to check\n         * @return {boolean}\n         */\n        static isMatrix(value) {\n            return (value != null) && (value.klass === 'Matrix');\n        }\n\n        /**\n         * @prop {number} size - The number of elements in the matrix.\n         */\n        get size() {\n            return this.rows * this.columns;\n        }\n\n        /**\n         * Applies a callback for each element of the matrix. The function is called in the matrix (this) context.\n         * @param {function} callback - Function that will be called with two parameters : i (row) and j (column)\n         * @return {Matrix} this\n         */\n        apply(callback) {\n            if (typeof callback !== 'function') {\n                throw new TypeError('callback must be a function');\n            }\n            var ii = this.rows;\n            var jj = this.columns;\n            for (var i = 0; i < ii; i++) {\n                for (var j = 0; j < jj; j++) {\n                    callback.call(this, i, j);\n                }\n            }\n            return this;\n        }\n\n        /**\n         * Returns a new 1D array filled row by row with the matrix values\n         * @return {Array}\n         */\n        to1DArray() {\n            var array = new Array(this.size);\n            for (var i = 0; i < this.rows; i++) {\n                for (var j = 0; j < this.columns; j++) {\n                    array[i * this.columns + j] = this.get(i, j);\n                }\n            }\n            return array;\n        }\n\n        /**\n         * Returns a 2D array containing a copy of the data\n         * @return {Array}\n         */\n        to2DArray() {\n            var copy = new Array(this.rows);\n            for (var i = 0; i < this.rows; i++) {\n                copy[i] = new Array(this.columns);\n                for (var j = 0; j < this.columns; j++) {\n                    copy[i][j] = this.get(i, j);\n                }\n            }\n            return copy;\n        }\n\n        /**\n         * @return {boolean} true if the matrix has one row\n         */\n        isRowVector() {\n            return this.rows === 1;\n        }\n\n        /**\n         * @return {boolean} true if the matrix has one column\n         */\n        isColumnVector() {\n            return this.columns === 1;\n        }\n\n        /**\n         * @return {boolean} true if the matrix has one row or one column\n         */\n        isVector() {\n            return (this.rows === 1) || (this.columns === 1);\n        }\n\n        /**\n         * @return {boolean} true if the matrix has the same number of rows and columns\n         */\n        isSquare() {\n            return this.rows === this.columns;\n        }\n\n        /**\n         * @return {boolean} true if the matrix is square and has the same values on both sides of the diagonal\n         */\n        isSymmetric() {\n            if (this.isSquare()) {\n                for (var i = 0; i < this.rows; i++) {\n                    for (var j = 0; j <= i; j++) {\n                        if (this.get(i, j) !== this.get(j, i)) {\n                            return false;\n                        }\n                    }\n                }\n                return true;\n            }\n            return false;\n        }\n\n        /**\n         * Sets a given element of the matrix. mat.set(3,4,1) is equivalent to mat[3][4]=1\n         * @abstract\n         * @param {number} rowIndex - Index of the row\n         * @param {number} columnIndex - Index of the column\n         * @param {number} value - The new value for the element\n         * @return {Matrix} this\n         */\n        set(rowIndex, columnIndex, value) { // eslint-disable-line no-unused-vars\n            throw new Error('set method is unimplemented');\n        }\n\n        /**\n         * Returns the given element of the matrix. mat.get(3,4) is equivalent to matrix[3][4]\n         * @abstract\n         * @param {number} rowIndex - Index of the row\n         * @param {number} columnIndex - Index of the column\n         * @return {number}\n         */\n        get(rowIndex, columnIndex) { // eslint-disable-line no-unused-vars\n            throw new Error('get method is unimplemented');\n        }\n\n        /**\n         * Creates a new matrix that is a repetition of the current matrix. New matrix has rowRep times the number of\n         * rows of the matrix, and colRep times the number of columns of the matrix\n         * @param {number} rowRep - Number of times the rows should be repeated\n         * @param {number} colRep - Number of times the columns should be re\n         * @return {Matrix}\n         * @example\n         * var matrix = new Matrix([[1,2]]);\n         * matrix.repeat(2); // [[1,2],[1,2]]\n         */\n        repeat(rowRep, colRep) {\n            rowRep = rowRep || 1;\n            colRep = colRep || 1;\n            var matrix = new this.constructor[Symbol.species](this.rows * rowRep, this.columns * colRep);\n            for (var i = 0; i < rowRep; i++) {\n                for (var j = 0; j < colRep; j++) {\n                    matrix.setSubMatrix(this, this.rows * i, this.columns * j);\n                }\n            }\n            return matrix;\n        }\n\n        /**\n         * Fills the matrix with a given value. All elements will be set to this value.\n         * @param {number} value - New value\n         * @return {Matrix} this\n         */\n        fill(value) {\n            for (var i = 0; i < this.rows; i++) {\n                for (var j = 0; j < this.columns; j++) {\n                    this.set(i, j, value);\n                }\n            }\n            return this;\n        }\n\n        /**\n         * Negates the matrix. All elements will be multiplied by (-1)\n         * @return {Matrix} this\n         */\n        neg() {\n            return this.mulS(-1);\n        }\n\n        /**\n         * Returns a new array from the given row index\n         * @param {number} index - Row index\n         * @return {Array}\n         */\n        getRow(index) {\n            util.checkRowIndex(this, index);\n            var row = new Array(this.columns);\n            for (var i = 0; i < this.columns; i++) {\n                row[i] = this.get(index, i);\n            }\n            return row;\n        }\n\n        /**\n         * Returns a new row vector from the given row index\n         * @param {number} index - Row index\n         * @return {Matrix}\n         */\n        getRowVector(index) {\n            return this.constructor.rowVector(this.getRow(index));\n        }\n\n        /**\n         * Sets a row at the given index\n         * @param {number} index - Row index\n         * @param {Array|Matrix} array - Array or vector\n         * @return {Matrix} this\n         */\n        setRow(index, array) {\n            util.checkRowIndex(this, index);\n            array = util.checkRowVector(this, array);\n            for (var i = 0; i < this.columns; i++) {\n                this.set(index, i, array[i]);\n            }\n            return this;\n        }\n\n        /**\n         * Swaps two rows\n         * @param {number} row1 - First row index\n         * @param {number} row2 - Second row index\n         * @return {Matrix} this\n         */\n        swapRows(row1, row2) {\n            util.checkRowIndex(this, row1);\n            util.checkRowIndex(this, row2);\n            for (var i = 0; i < this.columns; i++) {\n                var temp = this.get(row1, i);\n                this.set(row1, i, this.get(row2, i));\n                this.set(row2, i, temp);\n            }\n            return this;\n        }\n\n        /**\n         * Returns a new array from the given column index\n         * @param {number} index - Column index\n         * @return {Array}\n         */\n        getColumn(index) {\n            util.checkColumnIndex(this, index);\n            var column = new Array(this.rows);\n            for (var i = 0; i < this.rows; i++) {\n                column[i] = this.get(i, index);\n            }\n            return column;\n        }\n\n        /**\n         * Returns a new column vector from the given column index\n         * @param {number} index - Column index\n         * @return {Matrix}\n         */\n        getColumnVector(index) {\n            return this.constructor.columnVector(this.getColumn(index));\n        }\n\n        /**\n         * Sets a column at the given index\n         * @param {number} index - Column index\n         * @param {Array|Matrix} array - Array or vector\n         * @return {Matrix} this\n         */\n        setColumn(index, array) {\n            util.checkColumnIndex(this, index);\n            array = util.checkColumnVector(this, array);\n            for (var i = 0; i < this.rows; i++) {\n                this.set(i, index, array[i]);\n            }\n            return this;\n        }\n\n        /**\n         * Swaps two columns\n         * @param {number} column1 - First column index\n         * @param {number} column2 - Second column index\n         * @return {Matrix} this\n         */\n        swapColumns(column1, column2) {\n            util.checkColumnIndex(this, column1);\n            util.checkColumnIndex(this, column2);\n            for (var i = 0; i < this.rows; i++) {\n                var temp = this.get(i, column1);\n                this.set(i, column1, this.get(i, column2));\n                this.set(i, column2, temp);\n            }\n            return this;\n        }\n\n        /**\n         * Adds the values of a vector to each row\n         * @param {Array|Matrix} vector - Array or vector\n         * @return {Matrix} this\n         */\n        addRowVector(vector) {\n            vector = util.checkRowVector(this, vector);\n            for (var i = 0; i < this.rows; i++) {\n                for (var j = 0; j < this.columns; j++) {\n                    this.set(i, j, this.get(i, j) + vector[j]);\n                }\n            }\n            return this;\n        }\n\n        /**\n         * Subtracts the values of a vector from each row\n         * @param {Array|Matrix} vector - Array or vector\n         * @return {Matrix} this\n         */\n        subRowVector(vector) {\n            vector = util.checkRowVector(this, vector);\n            for (var i = 0; i < this.rows; i++) {\n                for (var j = 0; j < this.columns; j++) {\n                    this.set(i, j, this.get(i, j) - vector[j]);\n                }\n            }\n            return this;\n        }\n\n        /**\n         * Multiplies the values of a vector with each row\n         * @param {Array|Matrix} vector - Array or vector\n         * @return {Matrix} this\n         */\n        mulRowVector(vector) {\n            vector = util.checkRowVector(this, vector);\n            for (var i = 0; i < this.rows; i++) {\n                for (var j = 0; j < this.columns; j++) {\n                    this.set(i, j, this.get(i, j) * vector[j]);\n                }\n            }\n            return this;\n        }\n\n        /**\n         * Divides the values of each row by those of a vector\n         * @param {Array|Matrix} vector - Array or vector\n         * @return {Matrix} this\n         */\n        divRowVector(vector) {\n            vector = util.checkRowVector(this, vector);\n            for (var i = 0; i < this.rows; i++) {\n                for (var j = 0; j < this.columns; j++) {\n                    this.set(i, j, this.get(i, j) / vector[j]);\n                }\n            }\n            return this;\n        }\n\n        /**\n         * Adds the values of a vector to each column\n         * @param {Array|Matrix} vector - Array or vector\n         * @return {Matrix} this\n         */\n        addColumnVector(vector) {\n            vector = util.checkColumnVector(this, vector);\n            for (var i = 0; i < this.rows; i++) {\n                for (var j = 0; j < this.columns; j++) {\n                    this.set(i, j, this.get(i, j) + vector[i]);\n                }\n            }\n            return this;\n        }\n\n        /**\n         * Subtracts the values of a vector from each column\n         * @param {Array|Matrix} vector - Array or vector\n         * @return {Matrix} this\n         */\n        subColumnVector(vector) {\n            vector = util.checkColumnVector(this, vector);\n            for (var i = 0; i < this.rows; i++) {\n                for (var j = 0; j < this.columns; j++) {\n                    this.set(i, j, this.get(i, j) - vector[i]);\n                }\n            }\n            return this;\n        }\n\n        /**\n         * Multiplies the values of a vector with each column\n         * @param {Array|Matrix} vector - Array or vector\n         * @return {Matrix} this\n         */\n        mulColumnVector(vector) {\n            vector = util.checkColumnVector(this, vector);\n            for (var i = 0; i < this.rows; i++) {\n                for (var j = 0; j < this.columns; j++) {\n                    this.set(i, j, this.get(i, j) * vector[i]);\n                }\n            }\n            return this;\n        }\n\n        /**\n         * Divides the values of each column by those of a vector\n         * @param {Array|Matrix} vector - Array or vector\n         * @return {Matrix} this\n         */\n        divColumnVector(vector) {\n            vector = util.checkColumnVector(this, vector);\n            for (var i = 0; i < this.rows; i++) {\n                for (var j = 0; j < this.columns; j++) {\n                    this.set(i, j, this.get(i, j) / vector[i]);\n                }\n            }\n            return this;\n        }\n\n        /**\n         * Multiplies the values of a row with a scalar\n         * @param {number} index - Row index\n         * @param {number} value\n         * @return {Matrix} this\n         */\n        mulRow(index, value) {\n            util.checkRowIndex(this, index);\n            for (var i = 0; i < this.columns; i++) {\n                this.set(index, i, this.get(index, i) * value);\n            }\n            return this;\n        }\n\n        /**\n         * Multiplies the values of a column with a scalar\n         * @param {number} index - Column index\n         * @param {number} value\n         * @return {Matrix} this\n         */\n        mulColumn(index, value) {\n            util.checkColumnIndex(this, index);\n            for (var i = 0; i < this.rows; i++) {\n                this.set(i, index, this.get(i, index) * value);\n            }\n            return this;\n        }\n\n        /**\n         * Returns the maximum value of the matrix\n         * @return {number}\n         */\n        max() {\n            var v = this.get(0, 0);\n            for (var i = 0; i < this.rows; i++) {\n                for (var j = 0; j < this.columns; j++) {\n                    if (this.get(i, j) > v) {\n                        v = this.get(i, j);\n                    }\n                }\n            }\n            return v;\n        }\n\n        /**\n         * Returns the index of the maximum value\n         * @return {Array}\n         */\n        maxIndex() {\n            var v = this.get(0, 0);\n            var idx = [0, 0];\n            for (var i = 0; i < this.rows; i++) {\n                for (var j = 0; j < this.columns; j++) {\n                    if (this.get(i, j) > v) {\n                        v = this.get(i, j);\n                        idx[0] = i;\n                        idx[1] = j;\n                    }\n                }\n            }\n            return idx;\n        }\n\n        /**\n         * Returns the minimum value of the matrix\n         * @return {number}\n         */\n        min() {\n            var v = this.get(0, 0);\n            for (var i = 0; i < this.rows; i++) {\n                for (var j = 0; j < this.columns; j++) {\n                    if (this.get(i, j) < v) {\n                        v = this.get(i, j);\n                    }\n                }\n            }\n            return v;\n        }\n\n        /**\n         * Returns the index of the minimum value\n         * @return {Array}\n         */\n        minIndex() {\n            var v = this.get(0, 0);\n            var idx = [0, 0];\n            for (var i = 0; i < this.rows; i++) {\n                for (var j = 0; j < this.columns; j++) {\n                    if (this.get(i, j) < v) {\n                        v = this.get(i, j);\n                        idx[0] = i;\n                        idx[1] = j;\n                    }\n                }\n            }\n            return idx;\n        }\n\n        /**\n         * Returns the maximum value of one row\n         * @param {number} row - Row index\n         * @return {number}\n         */\n        maxRow(row) {\n            util.checkRowIndex(this, row);\n            var v = this.get(row, 0);\n            for (var i = 1; i < this.columns; i++) {\n                if (this.get(row, i) > v) {\n                    v = this.get(row, i);\n                }\n            }\n            return v;\n        }\n\n        /**\n         * Returns the index of the maximum value of one row\n         * @param {number} row - Row index\n         * @return {Array}\n         */\n        maxRowIndex(row) {\n            util.checkRowIndex(this, row);\n            var v = this.get(row, 0);\n            var idx = [row, 0];\n            for (var i = 1; i < this.columns; i++) {\n                if (this.get(row, i) > v) {\n                    v = this.get(row, i);\n                    idx[1] = i;\n                }\n            }\n            return idx;\n        }\n\n        /**\n         * Returns the minimum value of one row\n         * @param {number} row - Row index\n         * @return {number}\n         */\n        minRow(row) {\n            util.checkRowIndex(this, row);\n            var v = this.get(row, 0);\n            for (var i = 1; i < this.columns; i++) {\n                if (this.get(row, i) < v) {\n                    v = this.get(row, i);\n                }\n            }\n            return v;\n        }\n\n        /**\n         * Returns the index of the maximum value of one row\n         * @param {number} row - Row index\n         * @return {Array}\n         */\n        minRowIndex(row) {\n            util.checkRowIndex(this, row);\n            var v = this.get(row, 0);\n            var idx = [row, 0];\n            for (var i = 1; i < this.columns; i++) {\n                if (this.get(row, i) < v) {\n                    v = this.get(row, i);\n                    idx[1] = i;\n                }\n            }\n            return idx;\n        }\n\n        /**\n         * Returns the maximum value of one column\n         * @param {number} column - Column index\n         * @return {number}\n         */\n        maxColumn(column) {\n            util.checkColumnIndex(this, column);\n            var v = this.get(0, column);\n            for (var i = 1; i < this.rows; i++) {\n                if (this.get(i, column) > v) {\n                    v = this.get(i, column);\n                }\n            }\n            return v;\n        }\n\n        /**\n         * Returns the index of the maximum value of one column\n         * @param {number} column - Column index\n         * @return {Array}\n         */\n        maxColumnIndex(column) {\n            util.checkColumnIndex(this, column);\n            var v = this.get(0, column);\n            var idx = [0, column];\n            for (var i = 1; i < this.rows; i++) {\n                if (this.get(i, column) > v) {\n                    v = this.get(i, column);\n                    idx[0] = i;\n                }\n            }\n            return idx;\n        }\n\n        /**\n         * Returns the minimum value of one column\n         * @param {number} column - Column index\n         * @return {number}\n         */\n        minColumn(column) {\n            util.checkColumnIndex(this, column);\n            var v = this.get(0, column);\n            for (var i = 1; i < this.rows; i++) {\n                if (this.get(i, column) < v) {\n                    v = this.get(i, column);\n                }\n            }\n            return v;\n        }\n\n        /**\n         * Returns the index of the minimum value of one column\n         * @param {number} column - Column index\n         * @return {Array}\n         */\n        minColumnIndex(column) {\n            util.checkColumnIndex(this, column);\n            var v = this.get(0, column);\n            var idx = [0, column];\n            for (var i = 1; i < this.rows; i++) {\n                if (this.get(i, column) < v) {\n                    v = this.get(i, column);\n                    idx[0] = i;\n                }\n            }\n            return idx;\n        }\n\n        /**\n         * Returns an array containing the diagonal values of the matrix\n         * @return {Array}\n         */\n        diag() {\n            var min = Math.min(this.rows, this.columns);\n            var diag = new Array(min);\n            for (var i = 0; i < min; i++) {\n                diag[i] = this.get(i, i);\n            }\n            return diag;\n        }\n\n        /**\n         * Returns the sum by the argument given, if no argument given,\n         * it returns the sum of all elements of the matrix.\n         * @param {string} by - sum by 'row' or 'column'.\n         * @return {Matrix|number}\n         */\n        sum(by) {\n            switch (by) {\n                case 'row':\n                    return util.sumByRow(this);\n                case 'column':\n                    return util.sumByColumn(this);\n                default:\n                    return util.sumAll(this);\n            }\n        }\n\n        /**\n         * Returns the mean of all elements of the matrix\n         * @return {number}\n         */\n        mean() {\n            return this.sum() / this.size;\n        }\n\n        /**\n         * Returns the product of all elements of the matrix\n         * @return {number}\n         */\n        prod() {\n            var prod = 1;\n            for (var i = 0; i < this.rows; i++) {\n                for (var j = 0; j < this.columns; j++) {\n                    prod *= this.get(i, j);\n                }\n            }\n            return prod;\n        }\n\n        /**\n         * Computes the cumulative sum of the matrix elements (in place, row by row)\n         * @return {Matrix} this\n         */\n        cumulativeSum() {\n            var sum = 0;\n            for (var i = 0; i < this.rows; i++) {\n                for (var j = 0; j < this.columns; j++) {\n                    sum += this.get(i, j);\n                    this.set(i, j, sum);\n                }\n            }\n            return this;\n        }\n\n        /**\n         * Computes the dot (scalar) product between the matrix and another\n         * @param {Matrix} vector2 vector\n         * @return {number}\n         */\n        dot(vector2) {\n            if (Matrix.isMatrix(vector2)) vector2 = vector2.to1DArray();\n            var vector1 = this.to1DArray();\n            if (vector1.length !== vector2.length) {\n                throw new RangeError('vectors do not have the same size');\n            }\n            var dot = 0;\n            for (var i = 0; i < vector1.length; i++) {\n                dot += vector1[i] * vector2[i];\n            }\n            return dot;\n        }\n\n        /**\n         * Returns the matrix product between this and other\n         * @param {Matrix} other\n         * @return {Matrix}\n         */\n        mmul(other) {\n            other = this.constructor.checkMatrix(other);\n            if (this.columns !== other.rows) {\n                // eslint-disable-next-line no-console\n                console.warn('Number of columns of left matrix are not equal to number of rows of right matrix.');\n            }\n\n            var m = this.rows;\n            var n = this.columns;\n            var p = other.columns;\n\n            var result = new this.constructor[Symbol.species](m, p);\n\n            var Bcolj = new Array(n);\n            for (var j = 0; j < p; j++) {\n                for (var k = 0; k < n; k++) {\n                    Bcolj[k] = other.get(k, j);\n                }\n\n                for (var i = 0; i < m; i++) {\n                    var s = 0;\n                    for (k = 0; k < n; k++) {\n                        s += this.get(i, k) * Bcolj[k];\n                    }\n\n                    result.set(i, j, s);\n                }\n            }\n            return result;\n        }\n\n        strassen2x2(other) {\n            var result = new this.constructor[Symbol.species](2, 2);\n            const a11 = this.get(0, 0);\n            const b11 = other.get(0, 0);\n            const a12 = this.get(0, 1);\n            const b12 = other.get(0, 1);\n            const a21 = this.get(1, 0);\n            const b21 = other.get(1, 0);\n            const a22 = this.get(1, 1);\n            const b22 = other.get(1, 1);\n\n            // Compute intermediate values.\n            const m1 = (a11 + a22) * (b11 + b22);\n            const m2 = (a21 + a22) * b11;\n            const m3 = a11 * (b12 - b22);\n            const m4 = a22 * (b21 - b11);\n            const m5 = (a11 + a12) * b22;\n            const m6 = (a21 - a11) * (b11 + b12);\n            const m7 = (a12 - a22) * (b21 + b22);\n\n            // Combine intermediate values into the output.\n            const c00 = m1 + m4 - m5 + m7;\n            const c01 = m3 + m5;\n            const c10 = m2 + m4;\n            const c11 = m1 - m2 + m3 + m6;\n\n            result.set(0, 0, c00);\n            result.set(0, 1, c01);\n            result.set(1, 0, c10);\n            result.set(1, 1, c11);\n            return result;\n        }\n\n        strassen3x3(other) {\n            var result = new this.constructor[Symbol.species](3, 3);\n\n            const a00 = this.get(0, 0);\n            const a01 = this.get(0, 1);\n            const a02 = this.get(0, 2);\n            const a10 = this.get(1, 0);\n            const a11 = this.get(1, 1);\n            const a12 = this.get(1, 2);\n            const a20 = this.get(2, 0);\n            const a21 = this.get(2, 1);\n            const a22 = this.get(2, 2);\n\n            const b00 = other.get(0, 0);\n            const b01 = other.get(0, 1);\n            const b02 = other.get(0, 2);\n            const b10 = other.get(1, 0);\n            const b11 = other.get(1, 1);\n            const b12 = other.get(1, 2);\n            const b20 = other.get(2, 0);\n            const b21 = other.get(2, 1);\n            const b22 = other.get(2, 2);\n\n            const m1 = (a00 + a01 + a02 - a10 - a11 - a21 - a22) * b11;\n            const m2 = (a00 - a10) * (-b01 + b11);\n            const m3 = a11 * (-b00 + b01 + b10 - b11 - b12 - b20 + b22);\n            const m4 = (-a00 + a10 + a11) * (b00 - b01 + b11);\n            const m5 = (a10 + a11) * (-b00 + b01);\n            const m6 = a00 * b00;\n            const m7 = (-a00 + a20 + a21) * (b00 - b02 + b12);\n            const m8 = (-a00 + a20) * (b02 - b12);\n            const m9 = (a20 + a21) * (-b00 + b02);\n            const m10 = (a00 + a01 + a02 - a11 - a12 - a20 - a21) * b12;\n            const m11 = a21 * (-b00 + b02 + b10 - b11 - b12 - b20 + b21);\n            const m12 = (-a02 + a21 + a22) * (b11 + b20 - b21);\n            const m13 = (a02 - a22) * (b11 - b21);\n            const m14 = a02 * b20;\n            const m15 = (a21 + a22) * (-b20 + b21);\n            const m16 = (-a02 + a11 + a12) * (b12 + b20 - b22);\n            const m17 = (a02 - a12) * (b12 - b22);\n            const m18 = (a11 + a12) * (-b20 + b22);\n            const m19 = a01 * b10;\n            const m20 = a12 * b21;\n            const m21 = a10 * b02;\n            const m22 = a20 * b01;\n            const m23 = a22 * b22;\n\n            const c00 = m6 + m14 + m19;\n            const c01 = m1 + m4 + m5 + m6 + m12 + m14 + m15;\n            const c02 = m6 + m7 + m9 + m10 + m14 + m16 + m18;\n            const c10 = m2 + m3 + m4 + m6 + m14 + m16 + m17;\n            const c11 = m2 + m4 + m5 + m6 + m20;\n            const c12 = m14 + m16 + m17 + m18 + m21;\n            const c20 = m6 + m7 + m8 + m11 + m12 + m13 + m14;\n            const c21 = m12 + m13 + m14 + m15 + m22;\n            const c22 = m6 + m7 + m8 + m9 + m23;\n\n            result.set(0, 0, c00);\n            result.set(0, 1, c01);\n            result.set(0, 2, c02);\n            result.set(1, 0, c10);\n            result.set(1, 1, c11);\n            result.set(1, 2, c12);\n            result.set(2, 0, c20);\n            result.set(2, 1, c21);\n            result.set(2, 2, c22);\n            return result;\n        }\n\n        /**\n         * Returns the matrix product between x and y. More efficient than mmul(other) only when we multiply squared matrix and when the size of the matrix is > 1000.\n         * @param {Matrix} y\n         * @return {Matrix}\n         */\n        mmulStrassen(y) {\n            var x = this.clone();\n            var r1 = x.rows;\n            var c1 = x.columns;\n            var r2 = y.rows;\n            var c2 = y.columns;\n            if (c1 !== r2) {\n                // eslint-disable-next-line no-console\n                console.warn(`Multiplying ${r1} x ${c1} and ${r2} x ${c2} matrix: dimensions do not match.`);\n            }\n\n            // Put a matrix into the top left of a matrix of zeros.\n            // `rows` and `cols` are the dimensions of the output matrix.\n            function embed(mat, rows, cols) {\n                var r = mat.rows;\n                var c = mat.columns;\n                if ((r === rows) && (c === cols)) {\n                    return mat;\n                } else {\n                    var resultat = Matrix.zeros(rows, cols);\n                    resultat = resultat.setSubMatrix(mat, 0, 0);\n                    return resultat;\n                }\n            }\n\n\n            // Make sure both matrices are the same size.\n            // This is exclusively for simplicity:\n            // this algorithm can be implemented with matrices of different sizes.\n\n            var r = Math.max(r1, r2);\n            var c = Math.max(c1, c2);\n            x = embed(x, r, c);\n            y = embed(y, r, c);\n\n            // Our recursive multiplication function.\n            function blockMult(a, b, rows, cols) {\n                // For small matrices, resort to naive multiplication.\n                if (rows <= 512 || cols <= 512) {\n                    return a.mmul(b); // a is equivalent to this\n                }\n\n                // Apply dynamic padding.\n                if ((rows % 2 === 1) && (cols % 2 === 1)) {\n                    a = embed(a, rows + 1, cols + 1);\n                    b = embed(b, rows + 1, cols + 1);\n                } else if (rows % 2 === 1) {\n                    a = embed(a, rows + 1, cols);\n                    b = embed(b, rows + 1, cols);\n                } else if (cols % 2 === 1) {\n                    a = embed(a, rows, cols + 1);\n                    b = embed(b, rows, cols + 1);\n                }\n\n                var halfRows = parseInt(a.rows / 2);\n                var halfCols = parseInt(a.columns / 2);\n                // Subdivide input matrices.\n                var a11 = a.subMatrix(0, halfRows - 1, 0, halfCols - 1);\n                var b11 = b.subMatrix(0, halfRows - 1, 0, halfCols - 1);\n\n                var a12 = a.subMatrix(0, halfRows - 1, halfCols, a.columns - 1);\n                var b12 = b.subMatrix(0, halfRows - 1, halfCols, b.columns - 1);\n\n                var a21 = a.subMatrix(halfRows, a.rows - 1, 0, halfCols - 1);\n                var b21 = b.subMatrix(halfRows, b.rows - 1, 0, halfCols - 1);\n\n                var a22 = a.subMatrix(halfRows, a.rows - 1, halfCols, a.columns - 1);\n                var b22 = b.subMatrix(halfRows, b.rows - 1, halfCols, b.columns - 1);\n\n                // Compute intermediate values.\n                var m1 = blockMult(Matrix.add(a11, a22), Matrix.add(b11, b22), halfRows, halfCols);\n                var m2 = blockMult(Matrix.add(a21, a22), b11, halfRows, halfCols);\n                var m3 = blockMult(a11, Matrix.sub(b12, b22), halfRows, halfCols);\n                var m4 = blockMult(a22, Matrix.sub(b21, b11), halfRows, halfCols);\n                var m5 = blockMult(Matrix.add(a11, a12), b22, halfRows, halfCols);\n                var m6 = blockMult(Matrix.sub(a21, a11), Matrix.add(b11, b12), halfRows, halfCols);\n                var m7 = blockMult(Matrix.sub(a12, a22), Matrix.add(b21, b22), halfRows, halfCols);\n\n                // Combine intermediate values into the output.\n                var c11 = Matrix.add(m1, m4);\n                c11.sub(m5);\n                c11.add(m7);\n                var c12 = Matrix.add(m3, m5);\n                var c21 = Matrix.add(m2, m4);\n                var c22 = Matrix.sub(m1, m2);\n                c22.add(m3);\n                c22.add(m6);\n\n                //Crop output to the desired size (undo dynamic padding).\n                var resultat = Matrix.zeros(2 * c11.rows, 2 * c11.columns);\n                resultat = resultat.setSubMatrix(c11, 0, 0);\n                resultat = resultat.setSubMatrix(c12, c11.rows, 0);\n                resultat = resultat.setSubMatrix(c21, 0, c11.columns);\n                resultat = resultat.setSubMatrix(c22, c11.rows, c11.columns);\n                return resultat.subMatrix(0, rows - 1, 0, cols - 1);\n            }\n            return blockMult(x, y, r, c);\n        }\n\n        /**\n         * Returns a row-by-row scaled matrix\n         * @param {number} [min=0] - Minimum scaled value\n         * @param {number} [max=1] - Maximum scaled value\n         * @return {Matrix} - The scaled matrix\n         */\n        scaleRows(min, max) {\n            min = min === undefined ? 0 : min;\n            max = max === undefined ? 1 : max;\n            if (min >= max) {\n                throw new RangeError('min should be strictly smaller than max');\n            }\n            var newMatrix = this.constructor.empty(this.rows, this.columns);\n            for (var i = 0; i < this.rows; i++) {\n                var scaled = arrayUtils.scale(this.getRow(i), {min, max});\n                newMatrix.setRow(i, scaled);\n            }\n            return newMatrix;\n        }\n\n        /**\n         * Returns a new column-by-column scaled matrix\n         * @param {number} [min=0] - Minimum scaled value\n         * @param {number} [max=1] - Maximum scaled value\n         * @return {Matrix} - The new scaled matrix\n         * @example\n         * var matrix = new Matrix([[1,2],[-1,0]]);\n         * var scaledMatrix = matrix.scaleColumns(); // [[1,1],[0,0]]\n         */\n        scaleColumns(min, max) {\n            min = min === undefined ? 0 : min;\n            max = max === undefined ? 1 : max;\n            if (min >= max) {\n                throw new RangeError('min should be strictly smaller than max');\n            }\n            var newMatrix = this.constructor.empty(this.rows, this.columns);\n            for (var i = 0; i < this.columns; i++) {\n                var scaled = arrayUtils.scale(this.getColumn(i), {\n                    min: min,\n                    max: max\n                });\n                newMatrix.setColumn(i, scaled);\n            }\n            return newMatrix;\n        }\n\n\n        /**\n         * Returns the Kronecker product (also known as tensor product) between this and other\n         * See https://en.wikipedia.org/wiki/Kronecker_product\n         * @param {Matrix} other\n         * @return {Matrix}\n         */\n        kroneckerProduct(other) {\n            other = this.constructor.checkMatrix(other);\n\n            var m = this.rows;\n            var n = this.columns;\n            var p = other.rows;\n            var q = other.columns;\n\n            var result = new this.constructor[Symbol.species](m * p, n * q);\n            for (var i = 0; i < m; i++) {\n                for (var j = 0; j < n; j++) {\n                    for (var k = 0; k < p; k++) {\n                        for (var l = 0; l < q; l++) {\n                            result[p * i + k][q * j + l] = this.get(i, j) * other.get(k, l);\n                        }\n                    }\n                }\n            }\n            return result;\n        }\n\n        /**\n         * Transposes the matrix and returns a new one containing the result\n         * @return {Matrix}\n         */\n        transpose() {\n            var result = new this.constructor[Symbol.species](this.columns, this.rows);\n            for (var i = 0; i < this.rows; i++) {\n                for (var j = 0; j < this.columns; j++) {\n                    result.set(j, i, this.get(i, j));\n                }\n            }\n            return result;\n        }\n\n        /**\n         * Sorts the rows (in place)\n         * @param {function} compareFunction - usual Array.prototype.sort comparison function\n         * @return {Matrix} this\n         */\n        sortRows(compareFunction) {\n            if (compareFunction === undefined) compareFunction = compareNumbers;\n            for (var i = 0; i < this.rows; i++) {\n                this.setRow(i, this.getRow(i).sort(compareFunction));\n            }\n            return this;\n        }\n\n        /**\n         * Sorts the columns (in place)\n         * @param {function} compareFunction - usual Array.prototype.sort comparison function\n         * @return {Matrix} this\n         */\n        sortColumns(compareFunction) {\n            if (compareFunction === undefined) compareFunction = compareNumbers;\n            for (var i = 0; i < this.columns; i++) {\n                this.setColumn(i, this.getColumn(i).sort(compareFunction));\n            }\n            return this;\n        }\n\n        /**\n         * Returns a subset of the matrix\n         * @param {number} startRow - First row index\n         * @param {number} endRow - Last row index\n         * @param {number} startColumn - First column index\n         * @param {number} endColumn - Last column index\n         * @return {Matrix}\n         */\n        subMatrix(startRow, endRow, startColumn, endColumn) {\n            util.checkRange(this, startRow, endRow, startColumn, endColumn);\n            var newMatrix = new this.constructor[Symbol.species](endRow - startRow + 1, endColumn - startColumn + 1);\n            for (var i = startRow; i <= endRow; i++) {\n                for (var j = startColumn; j <= endColumn; j++) {\n                    newMatrix[i - startRow][j - startColumn] = this.get(i, j);\n                }\n            }\n            return newMatrix;\n        }\n\n        /**\n         * Returns a subset of the matrix based on an array of row indices\n         * @param {Array} indices - Array containing the row indices\n         * @param {number} [startColumn = 0] - First column index\n         * @param {number} [endColumn = this.columns-1] - Last column index\n         * @return {Matrix}\n         */\n        subMatrixRow(indices, startColumn, endColumn) {\n            if (startColumn === undefined) startColumn = 0;\n            if (endColumn === undefined) endColumn = this.columns - 1;\n            if ((startColumn > endColumn) || (startColumn < 0) || (startColumn >= this.columns) || (endColumn < 0) || (endColumn >= this.columns)) {\n                throw new RangeError('Argument out of range');\n            }\n\n            var newMatrix = new this.constructor[Symbol.species](indices.length, endColumn - startColumn + 1);\n            for (var i = 0; i < indices.length; i++) {\n                for (var j = startColumn; j <= endColumn; j++) {\n                    if (indices[i] < 0 || indices[i] >= this.rows) {\n                        throw new RangeError('Row index out of range: ' + indices[i]);\n                    }\n                    newMatrix.set(i, j - startColumn, this.get(indices[i], j));\n                }\n            }\n            return newMatrix;\n        }\n\n        /**\n         * Returns a subset of the matrix based on an array of column indices\n         * @param {Array} indices - Array containing the column indices\n         * @param {number} [startRow = 0] - First row index\n         * @param {number} [endRow = this.rows-1] - Last row index\n         * @return {Matrix}\n         */\n        subMatrixColumn(indices, startRow, endRow) {\n            if (startRow === undefined) startRow = 0;\n            if (endRow === undefined) endRow = this.rows - 1;\n            if ((startRow > endRow) || (startRow < 0) || (startRow >= this.rows) || (endRow < 0) || (endRow >= this.rows)) {\n                throw new RangeError('Argument out of range');\n            }\n\n            var newMatrix = new this.constructor[Symbol.species](endRow - startRow + 1, indices.length);\n            for (var i = 0; i < indices.length; i++) {\n                for (var j = startRow; j <= endRow; j++) {\n                    if (indices[i] < 0 || indices[i] >= this.columns) {\n                        throw new RangeError('Column index out of range: ' + indices[i]);\n                    }\n                    newMatrix.set(j - startRow, i, this.get(j, indices[i]));\n                }\n            }\n            return newMatrix;\n        }\n\n        /**\n         * Set a part of the matrix to the given sub-matrix\n         * @param {Matrix|Array< Array >} matrix - The source matrix from which to extract values.\n         * @param {number} startRow - The index of the first row to set\n         * @param {number} startColumn - The index of the first column to set\n         * @return {Matrix}\n         */\n        setSubMatrix(matrix, startRow, startColumn) {\n            matrix = this.constructor.checkMatrix(matrix);\n            var endRow = startRow + matrix.rows - 1;\n            var endColumn = startColumn + matrix.columns - 1;\n            util.checkRange(this, startRow, endRow, startColumn, endColumn);\n            for (var i = 0; i < matrix.rows; i++) {\n                for (var j = 0; j < matrix.columns; j++) {\n                    this[startRow + i][startColumn + j] = matrix.get(i, j);\n                }\n            }\n            return this;\n        }\n\n        /**\n         * Return a new matrix based on a selection of rows and columns\n         * @param {Array<number>} rowIndices - The row indices to select. Order matters and an index can be more than once.\n         * @param {Array<number>} columnIndices - The column indices to select. Order matters and an index can be use more than once.\n         * @return {Matrix} The new matrix\n         */\n        selection(rowIndices, columnIndices) {\n            var indices = util.checkIndices(this, rowIndices, columnIndices);\n            var newMatrix = new this.constructor[Symbol.species](rowIndices.length, columnIndices.length);\n            for (var i = 0; i < indices.row.length; i++) {\n                var rowIndex = indices.row[i];\n                for (var j = 0; j < indices.column.length; j++) {\n                    var columnIndex = indices.column[j];\n                    newMatrix[i][j] = this.get(rowIndex, columnIndex);\n                }\n            }\n            return newMatrix;\n        }\n\n        /**\n         * Returns the trace of the matrix (sum of the diagonal elements)\n         * @return {number}\n         */\n        trace() {\n            var min = Math.min(this.rows, this.columns);\n            var trace = 0;\n            for (var i = 0; i < min; i++) {\n                trace += this.get(i, i);\n            }\n            return trace;\n        }\n\n        /*\n         Matrix views\n         */\n\n        /**\n         * Returns a view of the transposition of the matrix\n         * @return {MatrixTransposeView}\n         */\n        transposeView() {\n            return new MatrixTransposeView(this);\n        }\n\n        /**\n         * Returns a view of the row vector with the given index\n         * @param {number} row - row index of the vector\n         * @return {MatrixRowView}\n         */\n        rowView(row) {\n            util.checkRowIndex(this, row);\n            return new MatrixRowView(this, row);\n        }\n\n        /**\n         * Returns a view of the column vector with the given index\n         * @param {number} column - column index of the vector\n         * @return {MatrixColumnView}\n         */\n        columnView(column) {\n            util.checkColumnIndex(this, column);\n            return new MatrixColumnView(this, column);\n        }\n\n        /**\n         * Returns a view of the matrix flipped in the row axis\n         * @return {MatrixFlipRowView}\n         */\n        flipRowView() {\n            return new MatrixFlipRowView(this);\n        }\n\n        /**\n         * Returns a view of the matrix flipped in the column axis\n         * @return {MatrixFlipColumnView}\n         */\n        flipColumnView() {\n            return new MatrixFlipColumnView(this);\n        }\n\n        /**\n         * Returns a view of a submatrix giving the index boundaries\n         * @param {number} startRow - first row index of the submatrix\n         * @param {number} endRow - last row index of the submatrix\n         * @param {number} startColumn - first column index of the submatrix\n         * @param {number} endColumn - last column index of the submatrix\n         * @return {MatrixSubView}\n         */\n        subMatrixView(startRow, endRow, startColumn, endColumn) {\n            return new MatrixSubView(this, startRow, endRow, startColumn, endColumn);\n        }\n\n        /**\n         * Returns a view of the cross of the row indices and the column indices\n         * @example\n         * // resulting vector is [[2], [2]]\n         * var matrix = new Matrix([[1,2,3], [4,5,6]]).selectionView([0, 0], [1])\n         * @param {Array<number>} rowIndices\n         * @param {Array<number>} columnIndices\n         * @return {MatrixSelectionView}\n         */\n        selectionView(rowIndices, columnIndices) {\n            return new MatrixSelectionView(this, rowIndices, columnIndices);\n        }\n\n\n        /**\n        * Calculates and returns the determinant of a matrix as a Number\n        * @example\n        *   new Matrix([[1,2,3], [4,5,6]]).det()\n        * @return {number}\n        */\n        det() {\n            if (this.isSquare()) {\n                var a, b, c, d;\n                if (this.columns === 2) {\n                    // 2 x 2 matrix\n                    a = this.get(0, 0);\n                    b = this.get(0, 1);\n                    c = this.get(1, 0);\n                    d = this.get(1, 1);\n\n                    return a * d - (b * c);\n                } else if (this.columns === 3) {\n                    // 3 x 3 matrix\n                    var subMatrix0, subMatrix1, subMatrix2;\n                    subMatrix0 = this.selectionView([1, 2], [1, 2]);\n                    subMatrix1 = this.selectionView([1, 2], [0, 2]);\n                    subMatrix2 = this.selectionView([1, 2], [0, 1]);\n                    a = this.get(0, 0);\n                    b = this.get(0, 1);\n                    c = this.get(0, 2);\n\n                    return a * subMatrix0.det() - b * subMatrix1.det() + c * subMatrix2.det();\n                } else {\n                    // general purpose determinant using the LU decomposition\n                    return new LuDecomposition(this).determinant;\n                }\n\n            } else {\n                throw Error('Determinant can only be calculated for a square matrix.');\n            }\n        }\n\n        /**\n         * Returns inverse of a matrix if it exists or the pseudoinverse\n         * @param {number} threshold - threshold for taking inverse of singular values (default = 1e-15)\n         * @return {Matrix} the (pseudo)inverted matrix.\n         */\n        pseudoInverse(threshold) {\n            if (threshold === undefined) threshold = Number.EPSILON;\n            var svdSolution = new SvDecomposition(this, {autoTranspose: true});\n\n            var U = svdSolution.leftSingularVectors;\n            var V = svdSolution.rightSingularVectors;\n            var s = svdSolution.diagonal;\n\n            for (var i = 0; i < s.length; i++) {\n                if (Math.abs(s[i]) > threshold) {\n                    s[i] = 1.0 / s[i];\n                } else {\n                    s[i] = 0.0;\n                }\n            }\n\n            // convert list to diagonal\n            s = this.constructor[Symbol.species].diag(s);\n            return V.mmul(s.mmul(U.transposeView()));\n        }\n    }\n\n    Matrix.prototype.klass = 'Matrix';\n\n    /**\n     * @private\n     * Check that two matrices have the same dimensions\n     * @param {Matrix} matrix\n     * @param {Matrix} otherMatrix\n     */\n    function checkDimensions(matrix, otherMatrix) { // eslint-disable-line no-unused-vars\n        if (matrix.rows !== otherMatrix.rows ||\n            matrix.columns !== otherMatrix.columns) {\n            throw new RangeError('Matrices dimensions must be equal');\n        }\n    }\n\n    function compareNumbers(a, b) {\n        return a - b;\n    }\n\n    /*\n     Synonyms\n     */\n\n    Matrix.random = Matrix.rand;\n    Matrix.diagonal = Matrix.diag;\n    Matrix.prototype.diagonal = Matrix.prototype.diag;\n    Matrix.identity = Matrix.eye;\n    Matrix.prototype.negate = Matrix.prototype.neg;\n    Matrix.prototype.tensorProduct = Matrix.prototype.kroneckerProduct;\n    Matrix.prototype.determinant = Matrix.prototype.det;\n\n    /*\n     Add dynamically instance and static methods for mathematical operations\n     */\n\n    var inplaceOperator = `\n(function %name%(value) {\n    if (typeof value === 'number') return this.%name%S(value);\n    return this.%name%M(value);\n})\n`;\n\n    var inplaceOperatorScalar = `\n(function %name%S(value) {\n    for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n            this.set(i, j, this.get(i, j) %op% value);\n        }\n    }\n    return this;\n})\n`;\n\n    var inplaceOperatorMatrix = `\n(function %name%M(matrix) {\n    matrix = this.constructor.checkMatrix(matrix);\n    checkDimensions(this, matrix);\n    for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n            this.set(i, j, this.get(i, j) %op% matrix.get(i, j));\n        }\n    }\n    return this;\n})\n`;\n\n    var staticOperator = `\n(function %name%(matrix, value) {\n    var newMatrix = new this[Symbol.species](matrix);\n    return newMatrix.%name%(value);\n})\n`;\n\n    var inplaceMethod = `\n(function %name%() {\n    for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n            this.set(i, j, %method%(this.get(i, j)));\n        }\n    }\n    return this;\n})\n`;\n\n    var staticMethod = `\n(function %name%(matrix) {\n    var newMatrix = new this[Symbol.species](matrix);\n    return newMatrix.%name%();\n})\n`;\n\n    var inplaceMethodWithArgs = `\n(function %name%(%args%) {\n    for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n            this.set(i, j, %method%(this.get(i, j), %args%));\n        }\n    }\n    return this;\n})\n`;\n\n    var staticMethodWithArgs = `\n(function %name%(matrix, %args%) {\n    var newMatrix = new this[Symbol.species](matrix);\n    return newMatrix.%name%(%args%);\n})\n`;\n\n\n    var inplaceMethodWithOneArgScalar = `\n(function %name%S(value) {\n    for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n            this.set(i, j, %method%(this.get(i, j), value));\n        }\n    }\n    return this;\n})\n`;\n    var inplaceMethodWithOneArgMatrix = `\n(function %name%M(matrix) {\n    matrix = this.constructor.checkMatrix(matrix);\n    checkDimensions(this, matrix);\n    for (var i = 0; i < this.rows; i++) {\n        for (var j = 0; j < this.columns; j++) {\n            this.set(i, j, %method%(this.get(i, j), matrix.get(i, j)));\n        }\n    }\n    return this;\n})\n`;\n\n    var inplaceMethodWithOneArg = `\n(function %name%(value) {\n    if (typeof value === 'number') return this.%name%S(value);\n    return this.%name%M(value);\n})\n`;\n\n    var staticMethodWithOneArg = staticMethodWithArgs;\n\n    var operators = [\n        // Arithmetic operators\n        ['+', 'add'],\n        ['-', 'sub', 'subtract'],\n        ['*', 'mul', 'multiply'],\n        ['/', 'div', 'divide'],\n        ['%', 'mod', 'modulus'],\n        // Bitwise operators\n        ['&', 'and'],\n        ['|', 'or'],\n        ['^', 'xor'],\n        ['<<', 'leftShift'],\n        ['>>', 'signPropagatingRightShift'],\n        ['>>>', 'rightShift', 'zeroFillRightShift']\n    ];\n\n    var i;\n\n    for (var operator of operators) {\n        var inplaceOp = eval(fillTemplateFunction(inplaceOperator, {name: operator[1], op: operator[0]}));\n        var inplaceOpS = eval(fillTemplateFunction(inplaceOperatorScalar, {name: operator[1] + 'S', op: operator[0]}));\n        var inplaceOpM = eval(fillTemplateFunction(inplaceOperatorMatrix, {name: operator[1] + 'M', op: operator[0]}));\n        var staticOp = eval(fillTemplateFunction(staticOperator, {name: operator[1]}));\n        for (i = 1; i < operator.length; i++) {\n            Matrix.prototype[operator[i]] = inplaceOp;\n            Matrix.prototype[operator[i] + 'S'] = inplaceOpS;\n            Matrix.prototype[operator[i] + 'M'] = inplaceOpM;\n            Matrix[operator[i]] = staticOp;\n        }\n    }\n\n    var methods = [\n        ['~', 'not']\n    ];\n\n    [\n        'abs', 'acos', 'acosh', 'asin', 'asinh', 'atan', 'atanh', 'cbrt', 'ceil',\n        'clz32', 'cos', 'cosh', 'exp', 'expm1', 'floor', 'fround', 'log', 'log1p',\n        'log10', 'log2', 'round', 'sign', 'sin', 'sinh', 'sqrt', 'tan', 'tanh', 'trunc'\n    ].forEach(function (mathMethod) {\n        methods.push(['Math.' + mathMethod, mathMethod]);\n    });\n\n    for (var method of methods) {\n        var inplaceMeth = eval(fillTemplateFunction(inplaceMethod, {name: method[1], method: method[0]}));\n        var staticMeth = eval(fillTemplateFunction(staticMethod, {name: method[1]}));\n        for (i = 1; i < method.length; i++) {\n            Matrix.prototype[method[i]] = inplaceMeth;\n            Matrix[method[i]] = staticMeth;\n        }\n    }\n\n    var methodsWithArgs = [\n        ['Math.pow', 1, 'pow']\n    ];\n\n    for (var methodWithArg of methodsWithArgs) {\n        var args = 'arg0';\n        for (i = 1; i < methodWithArg[1]; i++) {\n            args += `, arg${i}`;\n        }\n        if (methodWithArg[1] !== 1) {\n            var inplaceMethWithArgs = eval(fillTemplateFunction(inplaceMethodWithArgs, {\n                name: methodWithArg[2],\n                method: methodWithArg[0],\n                args: args\n            }));\n            var staticMethWithArgs = eval(fillTemplateFunction(staticMethodWithArgs, {name: methodWithArg[2], args: args}));\n            for (i = 2; i < methodWithArg.length; i++) {\n                Matrix.prototype[methodWithArg[i]] = inplaceMethWithArgs;\n                Matrix[methodWithArg[i]] = staticMethWithArgs;\n            }\n        } else {\n            var tmplVar = {\n                name: methodWithArg[2],\n                args: args,\n                method: methodWithArg[0]\n            };\n            var inplaceMethod2 = eval(fillTemplateFunction(inplaceMethodWithOneArg, tmplVar));\n            var inplaceMethodS = eval(fillTemplateFunction(inplaceMethodWithOneArgScalar, tmplVar));\n            var inplaceMethodM = eval(fillTemplateFunction(inplaceMethodWithOneArgMatrix, tmplVar));\n            var staticMethod2 = eval(fillTemplateFunction(staticMethodWithOneArg, tmplVar));\n            for (i = 2; i < methodWithArg.length; i++) {\n                Matrix.prototype[methodWithArg[i]] = inplaceMethod2;\n                Matrix.prototype[methodWithArg[i] + 'M'] = inplaceMethodM;\n                Matrix.prototype[methodWithArg[i] + 'S'] = inplaceMethodS;\n                Matrix[methodWithArg[i]] = staticMethod2;\n            }\n        }\n    }\n\n    function fillTemplateFunction(template, values) {\n        for (var value in values) {\n            template = template.replace(new RegExp('%' + value + '%', 'g'), values[value]);\n        }\n        return template;\n    }\n\n    return Matrix;\n}\n","'use strict';\n\nrequire('./symbol-species');\nvar abstractMatrix = require('./abstractMatrix');\nvar util = require('./util');\n\nclass Matrix extends abstractMatrix(Array) {\n    constructor(nRows, nColumns) {\n        var i;\n        if (arguments.length === 1 && typeof nRows === 'number') {\n            return new Array(nRows);\n        }\n        if (Matrix.isMatrix(nRows)) {\n            return nRows.clone();\n        } else if (Number.isInteger(nRows) && nRows > 0) { // Create an empty matrix\n            super(nRows);\n            if (Number.isInteger(nColumns) && nColumns > 0) {\n                for (i = 0; i < nRows; i++) {\n                    this[i] = new Array(nColumns);\n                }\n            } else {\n                throw new TypeError('nColumns must be a positive integer');\n            }\n        } else if (Array.isArray(nRows)) { // Copy the values from the 2D array\n            const matrix = nRows;\n            nRows = matrix.length;\n            nColumns = matrix[0].length;\n            if (typeof nColumns !== 'number' || nColumns === 0) {\n                throw new TypeError('Data must be a 2D array with at least one element');\n            }\n            super(nRows);\n            for (i = 0; i < nRows; i++) {\n                if (matrix[i].length !== nColumns) {\n                    throw new RangeError('Inconsistent array dimensions');\n                }\n                this[i] = [].concat(matrix[i]);\n            }\n        } else {\n            throw new TypeError('First argument must be a positive number or an array');\n        }\n        this.rows = nRows;\n        this.columns = nColumns;\n        return this;\n    }\n\n    set(rowIndex, columnIndex, value) {\n        this[rowIndex][columnIndex] = value;\n        return this;\n    }\n\n    get(rowIndex, columnIndex) {\n        return this[rowIndex][columnIndex];\n    }\n\n    /**\n     * Creates an exact and independent copy of the matrix\n     * @return {Matrix}\n     */\n    clone() {\n        var newMatrix = new this.constructor[Symbol.species](this.rows, this.columns);\n        for (var row = 0; row < this.rows; row++) {\n            for (var column = 0; column < this.columns; column++) {\n                newMatrix.set(row, column, this.get(row, column));\n            }\n        }\n        return newMatrix;\n    }\n\n    /**\n     * Removes a row from the given index\n     * @param {number} index - Row index\n     * @return {Matrix} this\n     */\n    removeRow(index) {\n        util.checkRowIndex(this, index);\n        if (this.rows === 1) {\n            throw new RangeError('A matrix cannot have less than one row');\n        }\n        this.splice(index, 1);\n        this.rows -= 1;\n        return this;\n    }\n\n    /**\n     * Adds a row at the given index\n     * @param {number} [index = this.rows] - Row index\n     * @param {Array|Matrix} array - Array or vector\n     * @return {Matrix} this\n     */\n    addRow(index, array) {\n        if (array === undefined) {\n            array = index;\n            index = this.rows;\n        }\n        util.checkRowIndex(this, index, true);\n        array = util.checkRowVector(this, array, true);\n        this.splice(index, 0, array);\n        this.rows += 1;\n        return this;\n    }\n\n    /**\n     * Removes a column from the given index\n     * @param {number} index - Column index\n     * @return {Matrix} this\n     */\n    removeColumn(index) {\n        util.checkColumnIndex(this, index);\n        if (this.columns === 1) {\n            throw new RangeError('A matrix cannot have less than one column');\n        }\n        for (var i = 0; i < this.rows; i++) {\n            this[i].splice(index, 1);\n        }\n        this.columns -= 1;\n        return this;\n    }\n\n    /**\n     * Adds a column at the given index\n     * @param {number} [index = this.columns] - Column index\n     * @param {Array|Matrix} array - Array or vector\n     * @return {Matrix} this\n     */\n    addColumn(index, array) {\n        if (typeof array === 'undefined') {\n            array = index;\n            index = this.columns;\n        }\n        util.checkColumnIndex(this, index, true);\n        array = util.checkColumnVector(this, array);\n        for (var i = 0; i < this.rows; i++) {\n            this[i].splice(index, 0, array[i]);\n        }\n        this.columns += 1;\n        return this;\n    }\n}\n\nexports.Matrix = Matrix;\nMatrix.abstractMatrix = abstractMatrix;\n","'use strict';\n\nconst Matrix = require('../matrix').Matrix;\nconst util = require('./util');\nconst hypotenuse = util.hypotenuse;\nconst getFilled2DArray = util.getFilled2DArray;\n\nconst defaultOptions = {\n    assumeSymmetric: false\n};\n\n// https://github.com/lutzroeder/Mapack/blob/master/Source/EigenvalueDecomposition.cs\nfunction EigenvalueDecomposition(matrix, options) {\n    options = Object.assign({}, defaultOptions, options);\n    if (!(this instanceof EigenvalueDecomposition)) {\n        return new EigenvalueDecomposition(matrix, options);\n    }\n    matrix = Matrix.checkMatrix(matrix);\n    if (!matrix.isSquare()) {\n        throw new Error('Matrix is not a square matrix');\n    }\n\n    var n = matrix.columns,\n        V = getFilled2DArray(n, n, 0),\n        d = new Array(n),\n        e = new Array(n),\n        value = matrix,\n        i, j;\n\n    var isSymmetric = false;\n    if (options.assumeSymmetric) {\n        isSymmetric = true;\n    } else {\n        isSymmetric = matrix.isSymmetric();\n    }\n\n    if (isSymmetric) {\n        for (i = 0; i < n; i++) {\n            for (j = 0; j < n; j++) {\n                V[i][j] = value.get(i, j);\n            }\n        }\n        tred2(n, e, d, V);\n        tql2(n, e, d, V);\n    } else {\n        var H = getFilled2DArray(n, n, 0),\n            ort = new Array(n);\n        for (j = 0; j < n; j++) {\n            for (i = 0; i < n; i++) {\n                H[i][j] = value.get(i, j);\n            }\n        }\n        orthes(n, H, ort, V);\n        hqr2(n, e, d, V, H);\n    }\n\n    this.n = n;\n    this.e = e;\n    this.d = d;\n    this.V = V;\n}\n\nEigenvalueDecomposition.prototype = {\n    get realEigenvalues() {\n        return this.d;\n    },\n    get imaginaryEigenvalues() {\n        return this.e;\n    },\n    get eigenvectorMatrix() {\n        if (!Matrix.isMatrix(this.V)) {\n            this.V = new Matrix(this.V);\n        }\n        return this.V;\n    },\n    get diagonalMatrix() {\n        var n = this.n,\n            e = this.e,\n            d = this.d,\n            X = new Matrix(n, n),\n            i, j;\n        for (i = 0; i < n; i++) {\n            for (j = 0; j < n; j++) {\n                X[i][j] = 0;\n            }\n            X[i][i] = d[i];\n            if (e[i] > 0) {\n                X[i][i + 1] = e[i];\n            } else if (e[i] < 0) {\n                X[i][i - 1] = e[i];\n            }\n        }\n        return X;\n    }\n};\n\nfunction tred2(n, e, d, V) {\n\n    var f, g, h, i, j, k,\n        hh, scale;\n\n    for (j = 0; j < n; j++) {\n        d[j] = V[n - 1][j];\n    }\n\n    for (i = n - 1; i > 0; i--) {\n        scale = 0;\n        h = 0;\n        for (k = 0; k < i; k++) {\n            scale = scale + Math.abs(d[k]);\n        }\n\n        if (scale === 0) {\n            e[i] = d[i - 1];\n            for (j = 0; j < i; j++) {\n                d[j] = V[i - 1][j];\n                V[i][j] = 0;\n                V[j][i] = 0;\n            }\n        } else {\n            for (k = 0; k < i; k++) {\n                d[k] /= scale;\n                h += d[k] * d[k];\n            }\n\n            f = d[i - 1];\n            g = Math.sqrt(h);\n            if (f > 0) {\n                g = -g;\n            }\n\n            e[i] = scale * g;\n            h = h - f * g;\n            d[i - 1] = f - g;\n            for (j = 0; j < i; j++) {\n                e[j] = 0;\n            }\n\n            for (j = 0; j < i; j++) {\n                f = d[j];\n                V[j][i] = f;\n                g = e[j] + V[j][j] * f;\n                for (k = j + 1; k <= i - 1; k++) {\n                    g += V[k][j] * d[k];\n                    e[k] += V[k][j] * f;\n                }\n                e[j] = g;\n            }\n\n            f = 0;\n            for (j = 0; j < i; j++) {\n                e[j] /= h;\n                f += e[j] * d[j];\n            }\n\n            hh = f / (h + h);\n            for (j = 0; j < i; j++) {\n                e[j] -= hh * d[j];\n            }\n\n            for (j = 0; j < i; j++) {\n                f = d[j];\n                g = e[j];\n                for (k = j; k <= i - 1; k++) {\n                    V[k][j] -= (f * e[k] + g * d[k]);\n                }\n                d[j] = V[i - 1][j];\n                V[i][j] = 0;\n            }\n        }\n        d[i] = h;\n    }\n\n    for (i = 0; i < n - 1; i++) {\n        V[n - 1][i] = V[i][i];\n        V[i][i] = 1;\n        h = d[i + 1];\n        if (h !== 0) {\n            for (k = 0; k <= i; k++) {\n                d[k] = V[k][i + 1] / h;\n            }\n\n            for (j = 0; j <= i; j++) {\n                g = 0;\n                for (k = 0; k <= i; k++) {\n                    g += V[k][i + 1] * V[k][j];\n                }\n                for (k = 0; k <= i; k++) {\n                    V[k][j] -= g * d[k];\n                }\n            }\n        }\n\n        for (k = 0; k <= i; k++) {\n            V[k][i + 1] = 0;\n        }\n    }\n\n    for (j = 0; j < n; j++) {\n        d[j] = V[n - 1][j];\n        V[n - 1][j] = 0;\n    }\n\n    V[n - 1][n - 1] = 1;\n    e[0] = 0;\n}\n\nfunction tql2(n, e, d, V) {\n\n    var g, h, i, j, k, l, m, p, r,\n        dl1, c, c2, c3, el1, s, s2,\n        iter;\n\n    for (i = 1; i < n; i++) {\n        e[i - 1] = e[i];\n    }\n\n    e[n - 1] = 0;\n\n    var f = 0,\n        tst1 = 0,\n        eps = Math.pow(2, -52);\n\n    for (l = 0; l < n; l++) {\n        tst1 = Math.max(tst1, Math.abs(d[l]) + Math.abs(e[l]));\n        m = l;\n        while (m < n) {\n            if (Math.abs(e[m]) <= eps * tst1) {\n                break;\n            }\n            m++;\n        }\n\n        if (m > l) {\n            iter = 0;\n            do {\n                iter = iter + 1;\n\n                g = d[l];\n                p = (d[l + 1] - g) / (2 * e[l]);\n                r = hypotenuse(p, 1);\n                if (p < 0) {\n                    r = -r;\n                }\n\n                d[l] = e[l] / (p + r);\n                d[l + 1] = e[l] * (p + r);\n                dl1 = d[l + 1];\n                h = g - d[l];\n                for (i = l + 2; i < n; i++) {\n                    d[i] -= h;\n                }\n\n                f = f + h;\n\n                p = d[m];\n                c = 1;\n                c2 = c;\n                c3 = c;\n                el1 = e[l + 1];\n                s = 0;\n                s2 = 0;\n                for (i = m - 1; i >= l; i--) {\n                    c3 = c2;\n                    c2 = c;\n                    s2 = s;\n                    g = c * e[i];\n                    h = c * p;\n                    r = hypotenuse(p, e[i]);\n                    e[i + 1] = s * r;\n                    s = e[i] / r;\n                    c = p / r;\n                    p = c * d[i] - s * g;\n                    d[i + 1] = h + s * (c * g + s * d[i]);\n\n                    for (k = 0; k < n; k++) {\n                        h = V[k][i + 1];\n                        V[k][i + 1] = s * V[k][i] + c * h;\n                        V[k][i] = c * V[k][i] - s * h;\n                    }\n                }\n\n                p = -s * s2 * c3 * el1 * e[l] / dl1;\n                e[l] = s * p;\n                d[l] = c * p;\n\n            }\n            while (Math.abs(e[l]) > eps * tst1);\n        }\n        d[l] = d[l] + f;\n        e[l] = 0;\n    }\n\n    for (i = 0; i < n - 1; i++) {\n        k = i;\n        p = d[i];\n        for (j = i + 1; j < n; j++) {\n            if (d[j] < p) {\n                k = j;\n                p = d[j];\n            }\n        }\n\n        if (k !== i) {\n            d[k] = d[i];\n            d[i] = p;\n            for (j = 0; j < n; j++) {\n                p = V[j][i];\n                V[j][i] = V[j][k];\n                V[j][k] = p;\n            }\n        }\n    }\n}\n\nfunction orthes(n, H, ort, V) {\n\n    var low = 0,\n        high = n - 1,\n        f, g, h, i, j, m,\n        scale;\n\n    for (m = low + 1; m <= high - 1; m++) {\n        scale = 0;\n        for (i = m; i <= high; i++) {\n            scale = scale + Math.abs(H[i][m - 1]);\n        }\n\n        if (scale !== 0) {\n            h = 0;\n            for (i = high; i >= m; i--) {\n                ort[i] = H[i][m - 1] / scale;\n                h += ort[i] * ort[i];\n            }\n\n            g = Math.sqrt(h);\n            if (ort[m] > 0) {\n                g = -g;\n            }\n\n            h = h - ort[m] * g;\n            ort[m] = ort[m] - g;\n\n            for (j = m; j < n; j++) {\n                f = 0;\n                for (i = high; i >= m; i--) {\n                    f += ort[i] * H[i][j];\n                }\n\n                f = f / h;\n                for (i = m; i <= high; i++) {\n                    H[i][j] -= f * ort[i];\n                }\n            }\n\n            for (i = 0; i <= high; i++) {\n                f = 0;\n                for (j = high; j >= m; j--) {\n                    f += ort[j] * H[i][j];\n                }\n\n                f = f / h;\n                for (j = m; j <= high; j++) {\n                    H[i][j] -= f * ort[j];\n                }\n            }\n\n            ort[m] = scale * ort[m];\n            H[m][m - 1] = scale * g;\n        }\n    }\n\n    for (i = 0; i < n; i++) {\n        for (j = 0; j < n; j++) {\n            V[i][j] = (i === j ? 1 : 0);\n        }\n    }\n\n    for (m = high - 1; m >= low + 1; m--) {\n        if (H[m][m - 1] !== 0) {\n            for (i = m + 1; i <= high; i++) {\n                ort[i] = H[i][m - 1];\n            }\n\n            for (j = m; j <= high; j++) {\n                g = 0;\n                for (i = m; i <= high; i++) {\n                    g += ort[i] * V[i][j];\n                }\n\n                g = (g / ort[m]) / H[m][m - 1];\n                for (i = m; i <= high; i++) {\n                    V[i][j] += g * ort[i];\n                }\n            }\n        }\n    }\n}\n\nfunction hqr2(nn, e, d, V, H) {\n    var n = nn - 1,\n        low = 0,\n        high = nn - 1,\n        eps = Math.pow(2, -52),\n        exshift = 0,\n        norm = 0,\n        p = 0,\n        q = 0,\n        r = 0,\n        s = 0,\n        z = 0,\n        iter = 0,\n        i, j, k, l, m, t, w, x, y,\n        ra, sa, vr, vi,\n        notlast, cdivres;\n\n    for (i = 0; i < nn; i++) {\n        if (i < low || i > high) {\n            d[i] = H[i][i];\n            e[i] = 0;\n        }\n\n        for (j = Math.max(i - 1, 0); j < nn; j++) {\n            norm = norm + Math.abs(H[i][j]);\n        }\n    }\n\n    while (n >= low) {\n        l = n;\n        while (l > low) {\n            s = Math.abs(H[l - 1][l - 1]) + Math.abs(H[l][l]);\n            if (s === 0) {\n                s = norm;\n            }\n            if (Math.abs(H[l][l - 1]) < eps * s) {\n                break;\n            }\n            l--;\n        }\n\n        if (l === n) {\n            H[n][n] = H[n][n] + exshift;\n            d[n] = H[n][n];\n            e[n] = 0;\n            n--;\n            iter = 0;\n        } else if (l === n - 1) {\n            w = H[n][n - 1] * H[n - 1][n];\n            p = (H[n - 1][n - 1] - H[n][n]) / 2;\n            q = p * p + w;\n            z = Math.sqrt(Math.abs(q));\n            H[n][n] = H[n][n] + exshift;\n            H[n - 1][n - 1] = H[n - 1][n - 1] + exshift;\n            x = H[n][n];\n\n            if (q >= 0) {\n                z = (p >= 0) ? (p + z) : (p - z);\n                d[n - 1] = x + z;\n                d[n] = d[n - 1];\n                if (z !== 0) {\n                    d[n] = x - w / z;\n                }\n                e[n - 1] = 0;\n                e[n] = 0;\n                x = H[n][n - 1];\n                s = Math.abs(x) + Math.abs(z);\n                p = x / s;\n                q = z / s;\n                r = Math.sqrt(p * p + q * q);\n                p = p / r;\n                q = q / r;\n\n                for (j = n - 1; j < nn; j++) {\n                    z = H[n - 1][j];\n                    H[n - 1][j] = q * z + p * H[n][j];\n                    H[n][j] = q * H[n][j] - p * z;\n                }\n\n                for (i = 0; i <= n; i++) {\n                    z = H[i][n - 1];\n                    H[i][n - 1] = q * z + p * H[i][n];\n                    H[i][n] = q * H[i][n] - p * z;\n                }\n\n                for (i = low; i <= high; i++) {\n                    z = V[i][n - 1];\n                    V[i][n - 1] = q * z + p * V[i][n];\n                    V[i][n] = q * V[i][n] - p * z;\n                }\n            } else {\n                d[n - 1] = x + p;\n                d[n] = x + p;\n                e[n - 1] = z;\n                e[n] = -z;\n            }\n\n            n = n - 2;\n            iter = 0;\n        } else {\n            x = H[n][n];\n            y = 0;\n            w = 0;\n            if (l < n) {\n                y = H[n - 1][n - 1];\n                w = H[n][n - 1] * H[n - 1][n];\n            }\n\n            if (iter === 10) {\n                exshift += x;\n                for (i = low; i <= n; i++) {\n                    H[i][i] -= x;\n                }\n                s = Math.abs(H[n][n - 1]) + Math.abs(H[n - 1][n - 2]);\n                x = y = 0.75 * s;\n                w = -0.4375 * s * s;\n            }\n\n            if (iter === 30) {\n                s = (y - x) / 2;\n                s = s * s + w;\n                if (s > 0) {\n                    s = Math.sqrt(s);\n                    if (y < x) {\n                        s = -s;\n                    }\n                    s = x - w / ((y - x) / 2 + s);\n                    for (i = low; i <= n; i++) {\n                        H[i][i] -= s;\n                    }\n                    exshift += s;\n                    x = y = w = 0.964;\n                }\n            }\n\n            iter = iter + 1;\n\n            m = n - 2;\n            while (m >= l) {\n                z = H[m][m];\n                r = x - z;\n                s = y - z;\n                p = (r * s - w) / H[m + 1][m] + H[m][m + 1];\n                q = H[m + 1][m + 1] - z - r - s;\n                r = H[m + 2][m + 1];\n                s = Math.abs(p) + Math.abs(q) + Math.abs(r);\n                p = p / s;\n                q = q / s;\n                r = r / s;\n                if (m === l) {\n                    break;\n                }\n                if (Math.abs(H[m][m - 1]) * (Math.abs(q) + Math.abs(r)) < eps * (Math.abs(p) * (Math.abs(H[m - 1][m - 1]) + Math.abs(z) + Math.abs(H[m + 1][m + 1])))) {\n                    break;\n                }\n                m--;\n            }\n\n            for (i = m + 2; i <= n; i++) {\n                H[i][i - 2] = 0;\n                if (i > m + 2) {\n                    H[i][i - 3] = 0;\n                }\n            }\n\n            for (k = m; k <= n - 1; k++) {\n                notlast = (k !== n - 1);\n                if (k !== m) {\n                    p = H[k][k - 1];\n                    q = H[k + 1][k - 1];\n                    r = (notlast ? H[k + 2][k - 1] : 0);\n                    x = Math.abs(p) + Math.abs(q) + Math.abs(r);\n                    if (x !== 0) {\n                        p = p / x;\n                        q = q / x;\n                        r = r / x;\n                    }\n                }\n\n                if (x === 0) {\n                    break;\n                }\n\n                s = Math.sqrt(p * p + q * q + r * r);\n                if (p < 0) {\n                    s = -s;\n                }\n\n                if (s !== 0) {\n                    if (k !== m) {\n                        H[k][k - 1] = -s * x;\n                    } else if (l !== m) {\n                        H[k][k - 1] = -H[k][k - 1];\n                    }\n\n                    p = p + s;\n                    x = p / s;\n                    y = q / s;\n                    z = r / s;\n                    q = q / p;\n                    r = r / p;\n\n                    for (j = k; j < nn; j++) {\n                        p = H[k][j] + q * H[k + 1][j];\n                        if (notlast) {\n                            p = p + r * H[k + 2][j];\n                            H[k + 2][j] = H[k + 2][j] - p * z;\n                        }\n\n                        H[k][j] = H[k][j] - p * x;\n                        H[k + 1][j] = H[k + 1][j] - p * y;\n                    }\n\n                    for (i = 0; i <= Math.min(n, k + 3); i++) {\n                        p = x * H[i][k] + y * H[i][k + 1];\n                        if (notlast) {\n                            p = p + z * H[i][k + 2];\n                            H[i][k + 2] = H[i][k + 2] - p * r;\n                        }\n\n                        H[i][k] = H[i][k] - p;\n                        H[i][k + 1] = H[i][k + 1] - p * q;\n                    }\n\n                    for (i = low; i <= high; i++) {\n                        p = x * V[i][k] + y * V[i][k + 1];\n                        if (notlast) {\n                            p = p + z * V[i][k + 2];\n                            V[i][k + 2] = V[i][k + 2] - p * r;\n                        }\n\n                        V[i][k] = V[i][k] - p;\n                        V[i][k + 1] = V[i][k + 1] - p * q;\n                    }\n                }\n            }\n        }\n    }\n\n    if (norm === 0) {\n        return;\n    }\n\n    for (n = nn - 1; n >= 0; n--) {\n        p = d[n];\n        q = e[n];\n\n        if (q === 0) {\n            l = n;\n            H[n][n] = 1;\n            for (i = n - 1; i >= 0; i--) {\n                w = H[i][i] - p;\n                r = 0;\n                for (j = l; j <= n; j++) {\n                    r = r + H[i][j] * H[j][n];\n                }\n\n                if (e[i] < 0) {\n                    z = w;\n                    s = r;\n                } else {\n                    l = i;\n                    if (e[i] === 0) {\n                        H[i][n] = (w !== 0) ? (-r / w) : (-r / (eps * norm));\n                    } else {\n                        x = H[i][i + 1];\n                        y = H[i + 1][i];\n                        q = (d[i] - p) * (d[i] - p) + e[i] * e[i];\n                        t = (x * s - z * r) / q;\n                        H[i][n] = t;\n                        H[i + 1][n] = (Math.abs(x) > Math.abs(z)) ? ((-r - w * t) / x) : ((-s - y * t) / z);\n                    }\n\n                    t = Math.abs(H[i][n]);\n                    if ((eps * t) * t > 1) {\n                        for (j = i; j <= n; j++) {\n                            H[j][n] = H[j][n] / t;\n                        }\n                    }\n                }\n            }\n        } else if (q < 0) {\n            l = n - 1;\n\n            if (Math.abs(H[n][n - 1]) > Math.abs(H[n - 1][n])) {\n                H[n - 1][n - 1] = q / H[n][n - 1];\n                H[n - 1][n] = -(H[n][n] - p) / H[n][n - 1];\n            } else {\n                cdivres = cdiv(0, -H[n - 1][n], H[n - 1][n - 1] - p, q);\n                H[n - 1][n - 1] = cdivres[0];\n                H[n - 1][n] = cdivres[1];\n            }\n\n            H[n][n - 1] = 0;\n            H[n][n] = 1;\n            for (i = n - 2; i >= 0; i--) {\n                ra = 0;\n                sa = 0;\n                for (j = l; j <= n; j++) {\n                    ra = ra + H[i][j] * H[j][n - 1];\n                    sa = sa + H[i][j] * H[j][n];\n                }\n\n                w = H[i][i] - p;\n\n                if (e[i] < 0) {\n                    z = w;\n                    r = ra;\n                    s = sa;\n                } else {\n                    l = i;\n                    if (e[i] === 0) {\n                        cdivres = cdiv(-ra, -sa, w, q);\n                        H[i][n - 1] = cdivres[0];\n                        H[i][n] = cdivres[1];\n                    } else {\n                        x = H[i][i + 1];\n                        y = H[i + 1][i];\n                        vr = (d[i] - p) * (d[i] - p) + e[i] * e[i] - q * q;\n                        vi = (d[i] - p) * 2 * q;\n                        if (vr === 0 && vi === 0) {\n                            vr = eps * norm * (Math.abs(w) + Math.abs(q) + Math.abs(x) + Math.abs(y) + Math.abs(z));\n                        }\n                        cdivres = cdiv(x * r - z * ra + q * sa, x * s - z * sa - q * ra, vr, vi);\n                        H[i][n - 1] = cdivres[0];\n                        H[i][n] = cdivres[1];\n                        if (Math.abs(x) > (Math.abs(z) + Math.abs(q))) {\n                            H[i + 1][n - 1] = (-ra - w * H[i][n - 1] + q * H[i][n]) / x;\n                            H[i + 1][n] = (-sa - w * H[i][n] - q * H[i][n - 1]) / x;\n                        } else {\n                            cdivres = cdiv(-r - y * H[i][n - 1], -s - y * H[i][n], z, q);\n                            H[i + 1][n - 1] = cdivres[0];\n                            H[i + 1][n] = cdivres[1];\n                        }\n                    }\n\n                    t = Math.max(Math.abs(H[i][n - 1]), Math.abs(H[i][n]));\n                    if ((eps * t) * t > 1) {\n                        for (j = i; j <= n; j++) {\n                            H[j][n - 1] = H[j][n - 1] / t;\n                            H[j][n] = H[j][n] / t;\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    for (i = 0; i < nn; i++) {\n        if (i < low || i > high) {\n            for (j = i; j < nn; j++) {\n                V[i][j] = H[i][j];\n            }\n        }\n    }\n\n    for (j = nn - 1; j >= low; j--) {\n        for (i = low; i <= high; i++) {\n            z = 0;\n            for (k = low; k <= Math.min(j, high); k++) {\n                z = z + V[i][k] * H[k][j];\n            }\n            V[i][j] = z;\n        }\n    }\n}\n\nfunction cdiv(xr, xi, yr, yi) {\n    var r, d;\n    if (Math.abs(yr) > Math.abs(yi)) {\n        r = yi / yr;\n        d = yr + r * yi;\n        return [(xr + r * xi) / d, (xi - r * xr) / d];\n    } else {\n        r = yr / yi;\n        d = yi + r * yr;\n        return [(r * xr + xi) / d, (r * xi - xr) / d];\n    }\n}\n\nmodule.exports = EigenvalueDecomposition;\n","'use strict';\n\nvar Matrix = require('../matrix').Matrix;\nvar hypotenuse = require('./util').hypotenuse;\n\n//https://github.com/lutzroeder/Mapack/blob/master/Source/QrDecomposition.cs\nfunction QrDecomposition(value) {\n    if (!(this instanceof QrDecomposition)) {\n        return new QrDecomposition(value);\n    }\n    value = Matrix.checkMatrix(value);\n\n    var qr = value.clone(),\n        m = value.rows,\n        n = value.columns,\n        rdiag = new Array(n),\n        i, j, k, s;\n\n    for (k = 0; k < n; k++) {\n        var nrm = 0;\n        for (i = k; i < m; i++) {\n            nrm = hypotenuse(nrm, qr[i][k]);\n        }\n        if (nrm !== 0) {\n            if (qr[k][k] < 0) {\n                nrm = -nrm;\n            }\n            for (i = k; i < m; i++) {\n                qr[i][k] /= nrm;\n            }\n            qr[k][k] += 1;\n            for (j = k + 1; j < n; j++) {\n                s = 0;\n                for (i = k; i < m; i++) {\n                    s += qr[i][k] * qr[i][j];\n                }\n                s = -s / qr[k][k];\n                for (i = k; i < m; i++) {\n                    qr[i][j] += s * qr[i][k];\n                }\n            }\n        }\n        rdiag[k] = -nrm;\n    }\n\n    this.QR = qr;\n    this.Rdiag = rdiag;\n}\n\nQrDecomposition.prototype = {\n    solve: function (value) {\n        value = Matrix.checkMatrix(value);\n\n        var qr = this.QR,\n            m = qr.rows;\n\n        if (value.rows !== m) {\n            throw new Error('Matrix row dimensions must agree');\n        }\n        if (!this.isFullRank()) {\n            throw new Error('Matrix is rank deficient');\n        }\n\n        var count = value.columns;\n        var X = value.clone();\n        var n = qr.columns;\n        var i, j, k, s;\n\n        for (k = 0; k < n; k++) {\n            for (j = 0; j < count; j++) {\n                s = 0;\n                for (i = k; i < m; i++) {\n                    s += qr[i][k] * X[i][j];\n                }\n                s = -s / qr[k][k];\n                for (i = k; i < m; i++) {\n                    X[i][j] += s * qr[i][k];\n                }\n            }\n        }\n        for (k = n - 1; k >= 0; k--) {\n            for (j = 0; j < count; j++) {\n                X[k][j] /= this.Rdiag[k];\n            }\n            for (i = 0; i < k; i++) {\n                for (j = 0; j < count; j++) {\n                    X[i][j] -= X[k][j] * qr[i][k];\n                }\n            }\n        }\n\n        return X.subMatrix(0, n - 1, 0, count - 1);\n    },\n    isFullRank: function () {\n        var columns = this.QR.columns;\n        for (var i = 0; i < columns; i++) {\n            if (this.Rdiag[i] === 0) {\n                return false;\n            }\n        }\n        return true;\n    },\n    get upperTriangularMatrix() {\n        var qr = this.QR,\n            n = qr.columns,\n            X = new Matrix(n, n),\n            i, j;\n        for (i = 0; i < n; i++) {\n            for (j = 0; j < n; j++) {\n                if (i < j) {\n                    X[i][j] = qr[i][j];\n                } else if (i === j) {\n                    X[i][j] = this.Rdiag[i];\n                } else {\n                    X[i][j] = 0;\n                }\n            }\n        }\n        return X;\n    },\n    get orthogonalMatrix() {\n        var qr = this.QR,\n            rows = qr.rows,\n            columns = qr.columns,\n            X = new Matrix(rows, columns),\n            i, j, k, s;\n\n        for (k = columns - 1; k >= 0; k--) {\n            for (i = 0; i < rows; i++) {\n                X[i][k] = 0;\n            }\n            X[k][k] = 1;\n            for (j = k; j < columns; j++) {\n                if (qr[k][k] !== 0) {\n                    s = 0;\n                    for (i = k; i < rows; i++) {\n                        s += qr[i][k] * X[i][j];\n                    }\n\n                    s = -s / qr[k][k];\n\n                    for (i = k; i < rows; i++) {\n                        X[i][j] += s * qr[i][k];\n                    }\n                }\n            }\n        }\n        return X;\n    }\n};\n\nmodule.exports = QrDecomposition;\n","'use strict';\n\nvar Matrix = require('../matrix').Matrix;\n\n// https://github.com/lutzroeder/Mapack/blob/master/Source/CholeskyDecomposition.cs\nfunction CholeskyDecomposition(value) {\n    if (!(this instanceof CholeskyDecomposition)) {\n        return new CholeskyDecomposition(value);\n    }\n    value = Matrix.checkMatrix(value);\n    if (!value.isSymmetric()) {\n        throw new Error('Matrix is not symmetric');\n    }\n\n    var a = value,\n        dimension = a.rows,\n        l = new Matrix(dimension, dimension),\n        positiveDefinite = true,\n        i, j, k;\n\n    for (j = 0; j < dimension; j++) {\n        var Lrowj = l[j];\n        var d = 0;\n        for (k = 0; k < j; k++) {\n            var Lrowk = l[k];\n            var s = 0;\n            for (i = 0; i < k; i++) {\n                s += Lrowk[i] * Lrowj[i];\n            }\n            Lrowj[k] = s = (a[j][k] - s) / l[k][k];\n            d = d + s * s;\n        }\n\n        d = a[j][j] - d;\n\n        positiveDefinite &= (d > 0);\n        l[j][j] = Math.sqrt(Math.max(d, 0));\n        for (k = j + 1; k < dimension; k++) {\n            l[j][k] = 0;\n        }\n    }\n\n    if (!positiveDefinite) {\n        throw new Error('Matrix is not positive definite');\n    }\n\n    this.L = l;\n}\n\nCholeskyDecomposition.prototype = {\n    get lowerTriangularMatrix() {\n        return this.L;\n    },\n    solve: function (value) {\n        value = Matrix.checkMatrix(value);\n\n        var l = this.L,\n            dimension = l.rows;\n\n        if (value.rows !== dimension) {\n            throw new Error('Matrix dimensions do not match');\n        }\n\n        var count = value.columns,\n            B = value.clone(),\n            i, j, k;\n\n        for (k = 0; k < dimension; k++) {\n            for (j = 0; j < count; j++) {\n                for (i = 0; i < k; i++) {\n                    B[k][j] -= B[i][j] * l[k][i];\n                }\n                B[k][j] /= l[k][k];\n            }\n        }\n\n        for (k = dimension - 1; k >= 0; k--) {\n            for (j = 0; j < count; j++) {\n                for (i = k + 1; i < dimension; i++) {\n                    B[k][j] -= B[i][j] * l[i][k];\n                }\n                B[k][j] /= l[k][k];\n            }\n        }\n\n        return B;\n    }\n};\n\nmodule.exports = CholeskyDecomposition;\n","'use strict';\n\nvar Matrix = require('./matrix').Matrix;\n\nvar SingularValueDecomposition = require('./dc/svd');\nvar EigenvalueDecomposition = require('./dc/evd');\nvar LuDecomposition = require('./dc/lu');\nvar QrDecomposition = require('./dc/qr');\nvar CholeskyDecomposition = require('./dc/cholesky');\n\nfunction inverse(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    return solve(matrix, Matrix.eye(matrix.rows));\n}\n\n/**\n * Returns the inverse\n * @memberOf Matrix\n * @static\n * @param {Matrix} matrix\n * @return {Matrix} matrix\n * @alias inv\n */\nMatrix.inverse = Matrix.inv = inverse;\n\n/**\n * Returns the inverse\n * @memberOf Matrix\n * @static\n * @param {Matrix} matrix\n * @return {Matrix} matrix\n * @alias inv\n */\nMatrix.prototype.inverse = Matrix.prototype.inv = function () {\n    return inverse(this);\n};\n\nfunction solve(leftHandSide, rightHandSide) {\n    leftHandSide = Matrix.checkMatrix(leftHandSide);\n    rightHandSide = Matrix.checkMatrix(rightHandSide);\n    return leftHandSide.isSquare() ? new LuDecomposition(leftHandSide).solve(rightHandSide) : new QrDecomposition(leftHandSide).solve(rightHandSide);\n}\n\nMatrix.solve = solve;\nMatrix.prototype.solve = function (other) {\n    return solve(this, other);\n};\n\nmodule.exports = {\n    SingularValueDecomposition: SingularValueDecomposition,\n    SVD: SingularValueDecomposition,\n    EigenvalueDecomposition: EigenvalueDecomposition,\n    EVD: EigenvalueDecomposition,\n    LuDecomposition: LuDecomposition,\n    LU: LuDecomposition,\n    QrDecomposition: QrDecomposition,\n    QR: QrDecomposition,\n    CholeskyDecomposition: CholeskyDecomposition,\n    CHO: CholeskyDecomposition,\n    inverse: inverse,\n    solve: solve\n};\n","'use strict';\n\nmodule.exports = require('./matrix').Matrix;\nmodule.exports.Decompositions = module.exports.DC = require('./decompositions');\n","/**\n * Created by acastillo on 8/24/15.\n */\n/**\n * Non in-place function definitions, compatible with mathjs code *\n */\n\n'use strict';\n\nvar Matrix = require('ml-matrix');\n\nfunction matrix(A,B){\n    return new Matrix(A,B);\n}\n\nfunction ones(rows, cols){\n    return Matrix.ones(rows,cols);\n}\n\nfunction eye(rows, cols){\n    return Matrix.eye(rows, cols);\n}\n\nfunction zeros(rows, cols){\n    return Matrix.zeros(rows, cols);\n}\n\nfunction random(rows, cols){\n    return Matrix.rand(rows,cols);\n}\n\nfunction transpose(A){\n    if(typeof A == 'number')\n        return A;\n    var result = A.clone();\n    return result.transpose();\n}\n\nfunction add(A, B){\n    if(typeof A == 'number'&&typeof B === 'number')\n        return A+B;\n    if(typeof A == 'number')\n        return this.add(B,A);\n\n    var result = A.clone();\n    return result.add(B);\n\n}\n\nfunction subtract(A, B){\n    if(typeof A == 'number'&&typeof B === 'number')\n        return A-B;\n    if(typeof A == 'number')\n        return this.subtract(B,A);\n    var result = A.clone();\n    return result.sub(B);\n}\n\nfunction multiply(A, B){\n    if(typeof A == 'number'&&typeof B === 'number')\n        return A*B;\n    if(typeof A == 'number')\n        return this.multiply(B,A);\n\n    var result = A.clone();\n\n    if(typeof B === 'number')\n        result.mul(B);\n    else\n        result = result.mmul(B);\n\n    if(result.rows==1&&result.columns==1)\n        return result[0][0];\n    else\n        return result;\n\n}\n\nfunction dotMultiply(A, B){\n    var result = A.clone();\n    return result.mul(B);\n}\n\nfunction dotDivide(A, B){\n    var result = A.clone();\n    return result.div(B);\n}\n\nfunction diag(A){\n    var diag = null;\n    var rows = A.rows, cols = A.columns, j, r;\n    //It is an array\n    if(typeof cols === \"undefined\" && (typeof A)=='object'){\n        if(A[0]&&A[0].length){\n            rows = A.length;\n            cols = A[0].length;\n            r = Math.min(rows,cols);\n            diag = Matrix.zeros(cols, cols);\n            for (j = 0; j < cols; j++) {\n                diag[j][j]=A[j][j];\n            }\n        }\n        else{\n            cols = A.length;\n            diag = Matrix.zeros(cols, cols);\n            for (j = 0; j < cols; j++) {\n                diag[j][j]=A[j];\n            }\n        }\n\n    }\n    if(rows == 1){\n        diag = Matrix.zeros(cols, cols);\n        for (j = 0; j < cols; j++) {\n            diag[j][j]=A[0][j];\n        }\n    }\n    else{\n        if(rows>0 && cols > 0){\n            r = Math.min(rows,cols);\n            diag = new Array(r);\n            for (j = 0; j < r; j++) {\n                diag[j] = A[j][j];\n            }\n        }\n    }\n    return diag;\n}\n\nfunction min(A, B){\n    if(typeof A==='number' && typeof B ==='number')\n        return Math.min(A,B);\n    var ii = A.rows, jj = A.columns;\n    var result = new Matrix(ii,jj);\n    for (var i = 0; i < ii; i++) {\n        for (var j = 0; j < jj; j++) {\n            if (A[i][j] < B[i][j]) {\n                result[i][j] = A[i][j];\n            }\n            else{\n                result[i][j] = B[i][j];\n            }\n        }\n    }\n    return result;\n}\n\nfunction max(A, B){\n    if(typeof A==='number' && typeof B ==='number')\n        return Math.max(A,B);\n    var ii = A.rows, jj = A.columns;\n    var result = new Matrix(ii,jj);\n    for (var i = 0; i < ii; i++) {\n        for (var j = 0; j < jj; j++) {\n            if (A[i][j] > B[i][j]) {\n                result[i][j] = A[i][j];\n            }\n            else{\n                result[i][j] = B[i][j];\n            }\n        }\n    }\n    return result;\n}\n\nfunction sqrt(A){\n    if(typeof A==='number' )\n        return Math.sqrt(A);\n    var ii = A.rows, jj = A.columns;\n    var result = new Matrix(ii,jj);\n    for (var i = 0; i < ii; i++) {\n        for (var j = 0; j < jj; j++) {\n            result[i][j] = Math.sqrt(A[i][j]);\n\n        }\n    }\n    return result;\n}\n\nfunction abs(A){\n    if(typeof A==='number' )\n        return Math.abs(A);\n    var ii = A.rows, jj = A.columns;\n    var result = new Matrix(ii,jj);\n    for (var i = 0; i < ii; i++) {\n        for (var j = 0; j < jj; j++) {\n            result[i][j] = Math.abs(A[i][j]);\n\n        }\n    }\n    return result;\n}\n\nfunction exp(A){\n    if(typeof A==='number' )\n        return Math.sqrt(A);\n    var ii = A.rows, jj = A.columns;\n    var result = new Matrix(ii,jj);\n    for (var i = 0; i < ii; i++) {\n        for (var j = 0; j < jj; j++) {\n            result[i][j] = Math.exp(A[i][j]);\n        }\n    }\n    return result;\n}\n\nfunction dotPow(A, b){\n    if(typeof A==='number' )\n        return Math.pow(A,b);\n    //console.log(A);\n    var ii = A.rows, jj = A.columns;\n    var result = new Matrix(ii,jj);\n    for (var i = 0; i < ii; i++) {\n        for (var j = 0; j < jj; j++) {\n            result[i][j] = Math.pow(A[i][j],b);\n        }\n    }\n    return result;\n}\n\nfunction solve(A, B){\n    return A.solve(B);\n}\n\nfunction inv(A){\n    if(typeof A ===\"number\")\n        return 1/A;\n    return A.inverse();\n}\n\nmodule.exports = {\n    transpose:transpose,\n    add:add,\n    subtract:subtract,\n    multiply:multiply,\n    dotMultiply:dotMultiply,\n    dotDivide:dotDivide,\n    diag:diag,\n    min:min,\n    max:max,\n    solve:solve,\n    inv:inv,\n    sqrt:sqrt,\n    exp:exp,\n    dotPow:dotPow,\n    abs:abs,\n    matrix:matrix,\n    ones:ones,\n    zeros:zeros,\n    random:random,\n    eye:eye\n};\n","/**\n * Created by acastillo on 8/5/15.\n */\nvar Matrix = require(\"ml-matrix\");\nvar math = require(\"./algebra\");\n\nvar DEBUG = false;\n/** Levenberg Marquardt curve-fitting: minimize sum of weighted squared residuals\n ----------  INPUT  VARIABLES  -----------\n func   = function of n independent variables, 't', and m parameters, 'p',\n returning the simulated model: y_hat = func(t,p,c)\n p      = n-vector of initial guess of parameter values\n t      = m-vectors or matrix of independent variables (used as arg to func)\n y_dat  = m-vectors or matrix of data to be fit by func(t,p)\n weight = weighting vector for least squares fit ( weight >= 0 ) ...\n inverse of the standard measurement errors\n Default:  sqrt(d.o.f. / ( y_dat' * y_dat ))\n dp     = fractional increment of 'p' for numerical derivatives\n dp(j)>0 central differences calculated\n dp(j)<0 one sided 'backwards' differences calculated\n dp(j)=0 sets corresponding partials to zero; i.e. holds p(j) fixed\n Default:  0.001;\n p_min  = n-vector of lower bounds for parameter values\n p_max  = n-vector of upper bounds for parameter values\n c      = an optional matrix of values passed to func(t,p,c)\n opts   = vector of algorithmic parameters\n parameter    defaults    meaning\n opts(1)  =  prnt            3        >1 intermediate results; >2 plots\n opts(2)  =  MaxIter      10*Npar     maximum number of iterations\n opts(3)  =  epsilon_1       1e-3     convergence tolerance for gradient\n opts(4)  =  epsilon_2       1e-3     convergence tolerance for parameters\n opts(5)  =  epsilon_3       1e-3     convergence tolerance for Chi-square\n opts(6)  =  epsilon_4       1e-2     determines acceptance of a L-M step\n opts(7)  =  lambda_0        1e-2     initial value of L-M paramter\n opts(8)  =  lambda_UP_fac   11       factor for increasing lambda\n opts(9)  =  lambda_DN_fac    9       factor for decreasing lambda\n opts(10) =  Update_Type      1       1: Levenberg-Marquardt lambda update\n 2: Quadratic update\n 3: Nielsen's lambda update equations\n\n ----------  OUTPUT  VARIABLES  -----------\n p       = least-squares optimal estimate of the parameter values\n X2      = Chi squared criteria\n sigma_p = asymptotic standard error of the parameters\n sigma_y = asymptotic standard error of the curve-fit\n corr    = correlation matrix of the parameters\n R_sq    = R-squared cofficient of multiple determination\n cvg_hst = convergence history\n\n Henri Gavin, Dept. Civil & Environ. Engineering, Duke Univ. 22 Sep 2013\n modified from: http://octave.sourceforge.net/optim/function/leasqr.html\n using references by\n Press, et al., Numerical Recipes, Cambridge Univ. Press, 1992, Chapter 15.\n Sam Roweis       http://www.cs.toronto.edu/~roweis/notes/lm.pdf\n Manolis Lourakis http://www.ics.forth.gr/~lourakis/levmar/levmar.pdf\n Hans Nielson     http://www2.imm.dtu.dk/~hbn/publ/TR9905.ps\n Mathworks        optimization toolbox reference manual\n K. Madsen, H.B., Nielsen, and O. Tingleff\n http://www2.imm.dtu.dk/pubdb/views/edoc_download.php/3215/pdf/imm3215.pdf\n */\nvar LM = {\n\n    optimize: function(func,p,t,y_dat,weight,dp,p_min,p_max,c,opts){\n\n        var tensor_parameter = 0;\t\t\t// set to 1 of parameter is a tensor\n\n        var iteration  = 0;\t\t\t// iteration counter\n        //func_calls = 0;\t\t\t// running count of function evaluations\n\n        if((typeof p[0])!=\"object\"){\n            for(var i=0;i< p.length;i++){\n                p[i]=[p[i]];\n            }\n\n        }\n        //p = p(:); y_dat = y_dat(:); \t\t// make column vectors\n        var i,k;\n        var eps = 2^-52;\n        var Npar   = p.length;//length(p); \t\t\t// number of parameters\n        var Npnt   = y_dat.length;//length(y_dat);\t\t// number of data points\n        var p_old  = Matrix.zeros(Npar,1);\t\t// previous set of parameters\n        var y_old  = Matrix.zeros(Npnt,1);\t\t// previous model, y_old = y_hat(t;p_old)\n        var X2     = 1e-2/eps;\t\t\t// a really big initial Chi-sq value\n        var X2_old = 1e-2/eps;\t\t\t// a really big initial Chi-sq value\n        var J =  Matrix.zeros(Npnt,Npar);\n\n\n        if (t.length != y_dat.length) {\n            console.log('lm.m error: the length of t must equal the length of y_dat');\n\n            length_t = t.length;\n            length_y_dat = y_dat.length;\n            var X2 = 0, corr = 0, sigma_p = 0, sigma_y = 0, R_sq = 0, cvg_hist = 0;\n            if (!tensor_parameter) {\n                return;\n            }\n        }\n\n        weight = weight||Math.sqrt((Npnt-Npar+1)/(math.multiply(math.transpose(y_dat),y_dat)));\n        dp = dp || 0.001;\n        p_min   = p_min || math.multiply(Math.abs(p),-100);\n        p_max   = p_max || math.multiply(Math.abs(p),100);\n        c = c || 1;\n        // Algorithmic Paramters\n        //prnt MaxIter  eps1  eps2  epx3  eps4  lam0  lamUP lamDN UpdateType\n        opts = opts ||[  3,10*Npar, 1e-3, 1e-3, 1e-3, 1e-2, 1e-2, 11, 9, 1 ];\n\n        var prnt          = opts[0];\t// >1 intermediate results; >2 plots\n        var MaxIter       = opts[1];\t// maximum number of iterations\n        var epsilon_1     = opts[2];\t// convergence tolerance for gradient\n        var epsilon_2     = opts[3];\t// convergence tolerance for parameter\n        var epsilon_3     = opts[4];\t// convergence tolerance for Chi-square\n        var epsilon_4     = opts[5];\t// determines acceptance of a L-M step\n        var lambda_0      = opts[6];\t// initial value of damping paramter, lambda\n        var lambda_UP_fac = opts[7];\t// factor for increasing lambda\n        var lambda_DN_fac = opts[8];\t// factor for decreasing lambda\n        var Update_Type   = opts[9];\t// 1: Levenberg-Marquardt lambda update\n        // 2: Quadratic update\n        // 3: Nielsen's lambda update equations\n\n        if ( tensor_parameter && prnt == 3 ) prnt = 2;\n\n\n        if(!dp.length || dp.length == 1){\n            var dp_array = new Array(Npar);\n            for(var i=0;i<Npar;i++)\n                dp_array[i]=[dp];\n            dp=dp_array;\n        }\n\n        // indices of the parameters to be fit\n        var idx   = [];\n        for(i=0;i<dp.length;i++){\n            if(dp[i][0]!=0){\n                idx.push(i);\n            }\n        }\n\n        var Nfit = idx.length;\t\t\t// number of parameters to fit\n        var stop = false;\t\t\t\t// termination flag\n\n        var weight_sq = null;\n        //console.log(weight);\n        if ( !weight.length || weight.length < Npnt )\t{\n            // squared weighting vector\n            //weight_sq = ( weight(1)*ones(Npnt,1) ).^2;\n            //console.log(\"weight[0] \"+typeof weight[0]);\n            var tmp = math.multiply(Matrix.ones(Npnt,1),weight[0]);\n            weight_sq = math.dotMultiply(tmp,tmp);\n        }\n        else{\n            //weight_sq = (weight(:)).^2;\n            weight_sq = math.dotMultiply(weight,weight);\n        }\n\n\n        // initialize Jacobian with finite difference calculation\n        //console.log(\"J \"+weight_sq);\n        var result = this.lm_matx(func,t,p_old,y_old,1,J,p,y_dat,weight_sq,dp,c);\n        var JtWJ = result.JtWJ,JtWdy=result.JtWdy,X2=result.Chi_sq,y_hat=result.y_hat,J=result.J;\n        //[JtWJ,JtWdy,X2,y_hat,J] = this.lm_matx(func,t,p_old,y_old,1,J,p,y_dat,weight_sq,dp,c);\n        //console.log(JtWJ);\n\n        if ( Math.max(Math.abs(JtWdy)) < epsilon_1 ){\n            console.log(' *** Your Initial Guess is Extremely Close to Optimal ***')\n            console.log(' *** epsilon_1 = ', epsilon_1);\n            stop = true;\n        }\n\n\n        switch(Update_Type){\n            case 1: // Marquardt: init'l lambda\n                lambda  = lambda_0;\n                break;\n            default:    // Quadratic and Nielsen\n                lambda  = lambda_0 * Math.max(math.diag(JtWJ));\n                nu=2;\n        }\n        //console.log(X2);\n        X2_old = X2; // previous value of X2\n        //console.log(MaxIter+\" \"+Npar);\n        //var cvg_hst = Matrix.ones(MaxIter,Npar+3);\t\t// initialize convergence history\n        var h = null;\n        while ( !stop && iteration <= MaxIter ) {\t\t// --- Main Loop\n            iteration = iteration + 1;\n            // incremental change in parameters\n            switch(Update_Type){\n                case 1:\t\t\t\t\t// Marquardt\n                    //h = ( JtWJ + lambda * math.diag(math.diag(JtWJ)) ) \\ JtWdy;\n                    //h = math.multiply(math.inv(JtWdy),math.add(JtWJ,math.multiply(lambda,math.diag(math.diag(Npar)))));\n                    h = math.solve(math.add(JtWJ,math.multiply(math.diag(math.diag(JtWJ)),lambda)),JtWdy);\n                    break;\n                default:\t\t\t\t\t// Quadratic and Nielsen\n                    //h = ( JtWJ + lambda * math.eye(Npar) ) \\ JtWdy;\n\n                    h = math.solve(math.add(JtWJ,math.multiply( Matrix.eye(Npar),lambda)),JtWdy);\n            }\n\n            /*for(var k=0;k< h.length;k++){\n             h[k]=[h[k]];\n             }*/\n            //console.log(\"h \"+h);\n            //h=math.matrix(h);\n            //  big = max(abs(h./p)) > 2;\n            //this is a big step\n            // --- Are parameters [p+h] much better than [p] ?\n            var hidx = new Array(idx.length);\n            for(k=0;k<idx.length;k++){\n                hidx[k]=h[idx[k]];\n            }\n            var p_try = math.add(p, hidx);// update the [idx] elements\n\n            for(k=0;k<p_try.length;k++){\n                p_try[k][0]=Math.min(Math.max(p_min[k][0],p_try[k][0]),p_max[k][0]);\n            }\n            // p_try = Math.min(Math.max(p_min,p_try),p_max);           // apply constraints\n\n            var delta_y = math.subtract(y_dat, func(t,p_try,c));       // residual error using p_try\n            //func_calls = func_calls + 1;\n            //X2_try = delta_y' * ( delta_y .* weight_sq );  // Chi-squared error criteria\n\n            var X2_try = math.multiply(math.transpose(delta_y),math.dotMultiply(delta_y,weight_sq));\n\n            if ( Update_Type == 2 ){  \t\t\t  // Quadratic\n                //    One step of quadratic line update in the h direction for minimum X2\n                //var alpha =  JtWdy'*h / ( (X2_try - X2)/2 + 2*JtWdy'*h ) ;\n                var JtWdy_th = math.multiply(math.transpose(JtWdy),h);\n                var alpha =  math.multiply(JtWdy_th,math.inv(math.add(math.multiply(math.subtract(X2_try - X2),1/2)),math.multiply(JtWdy_th,2)));//JtWdy'*h / ( (X2_try - X2)/2 + 2*JtWdy'*h ) ;\n\n                h = math.multiply(alpha, h);\n                for(var k=0;k<idx.length;k++){\n                    hidx[k]=h[idx[k]];\n                }\n\n                p_try = math.add(p ,hidx);                     // update only [idx] elements\n                p_try = math.min(math.max(p_min,p_try),p_max);          // apply constraints\n\n                delta_y = math.subtract(y_dat, func(t,p_try,c));      // residual error using p_try\n                // func_calls = func_calls + 1;\n                //X2_try = delta_y' * ( delta_y .* weight_sq ); // Chi-squared error criteria\n                X2_try = math.multiply(math.transpose(delta_y), mat.dotMultiply(delta_y, weight_sq));\n            }\n\n            //rho = (X2 - X2_try) / ( 2*h' * (lambda * h + JtWdy) ); // Nielsen\n            var rho = (X2-X2_try)/math.multiply(math.multiply(math.transpose(h),2),math.add(math.multiply(lambda, h),JtWdy));\n            //console.log(\"rho \"+rho);\n            if ( rho > epsilon_4 ) {\t\t// it IS significantly better\n                //console.log(\"Here\");\n                dX2 = X2 - X2_old;\n                X2_old = X2;\n                p_old = p;\n                y_old = y_hat;\n                p = p_try;\t\t\t// accept p_try\n\n                result = this.lm_matx(func, t, p_old, y_old, dX2, J, p, y_dat, weight_sq, dp, c);\n                JtWJ = result.JtWJ,JtWdy=result.JtWdy,X2=result.Chi_sq,y_hat=result.y_hat,J=result.J;\n                // decrease lambda ==> Gauss-Newton method\n\n                switch (Update_Type) {\n                    case 1:\t\t\t\t\t\t\t// Levenberg\n                        lambda = Math.max(lambda / lambda_DN_fac, 1.e-7);\n                        break;\n                    case 2:\t\t\t\t\t\t\t// Quadratic\n                        lambda = Math.max(lambda / (1 + alpha), 1.e-7);\n                        break;\n                    case 3:\t\t\t\t\t\t\t// Nielsen\n                        lambda = math.multiply(Math.max(1 / 3, 1 - (2 * rho - 1) ^ 3),lambda);\n                        nu = 2;\n                        break;\n                }\n            }\n            else {\t\t\t\t\t// it IS NOT better\n                X2 = X2_old;\t\t\t// do not accept p_try\n                if (iteration%(2 * Npar)==0) {\t// rank-1 update of Jacobian\n                    result = this.lm_matx(func, t, p_old, y_old, -1, J, p, y_dat, weight_sq, dp, c);\n                    JtWJ = result.JtWJ,JtWdy=result.JtWdy,dX2=result.Chi_sq,y_hat=result.y_hat,J=result.J;\n                }\n\n                // increase lambda  ==> gradient descent method\n                switch (Update_Type) {\n                    case 1:\t\t\t\t\t\t\t// Levenberg\n                        lambda = Math.min(lambda * lambda_UP_fac, 1.e7);\n                        break;\n                    case 2:\t\t\t\t\t\t\t// Quadratic\n                        lambda = lambda + Math.abs((X2_try - X2) / 2 / alpha);\n                        break;\n                    case 3:\t\t\t\t\t\t// Nielsen\n                        lambda = lambda * nu;\n                        nu = 2 * nu;\n                        break;\n                }\n            }\n        }// --- End of Main Loop\n\n        // --- convergence achieved, find covariance and confidence intervals\n\n        // equal weights for paramter error analysis\n        weight_sq = math.multiply(math.multiply(math.transpose(delta_y),delta_y), Matrix.ones(Npnt,1));\n\n        weight_sq.apply(function(i,j){\n            weight_sq[i][j] = (Npnt-Nfit+1)/weight_sq[i][j];\n        });\n        //console.log(weight_sq);\n        result = this.lm_matx(func,t,p_old,y_old,-1,J,p,y_dat,weight_sq,dp,c);\n        JtWJ = result.JtWJ,JtWdy=result.JtWdy,X2=result.Chi_sq,y_hat=result.y_hat,J=result.J;\n\n        /*if nargout > 2\t\t\t\t// standard error of parameters\n         covar = inv(JtWJ);\n         sigma_p = sqrt(diag(covar));\n         end\n\n         if nargout > 3\t\t\t\t// standard error of the fit\n         //  sigma_y = sqrt(diag(J * covar * J'));\t// slower version of below\n         sigma_y = zeros(Npnt,1);\n         for i=1:Npnt\n         sigma_y(i) = J(i,:) * covar * J(i,:)';\n         end\n         sigma_y = sqrt(sigma_y);\n         end\n\n         if nargout > 4\t\t\t\t// parameter correlation matrix\n         corr = covar ./ [sigma_p*sigma_p'];\n         end\n\n         if nargout > 5\t\t\t\t// coefficient of multiple determination\n         R_sq = corrcoef([y_dat y_hat]);\n         R_sq = R_sq(1,2).^2;\n         end\n\n         if nargout > 6\t\t\t\t// convergence history\n         cvg_hst = cvg_hst(1:iteration,:);\n         end*/\n\n        // endfunction  # ---------------------------------------------------------- LM\n\n        return { p:p, X2:X2};\n    },\n\n    lm_FD_J:function(func,t,p,y,dp,c) {\n        // J = lm_FD_J(func,t,p,y,{dp},{c})\n        //\n        // partial derivatives (Jacobian) dy/dp for use with lm.m\n        // computed via Finite Differences\n        // Requires n or 2n function evaluations, n = number of nonzero values of dp\n        // -------- INPUT VARIABLES ---------\n        // func = function of independent variables, 't', and parameters, 'p',\n        //        returning the simulated model: y_hat = func(t,p,c)\n        // t  = m-vector of independent variables (used as arg to func)\n        // p  = n-vector of current parameter values\n        // y  = func(t,p,c) n-vector initialised by user before each call to lm_FD_J\n        // dp = fractional increment of p for numerical derivatives\n        //      dp(j)>0 central differences calculated\n        //      dp(j)<0 one sided differences calculated\n        //      dp(j)=0 sets corresponding partials to zero; i.e. holds p(j) fixed\n        //      Default:  0.001;\n        // c  = optional vector of constants passed to y_hat = func(t,p,c)\n        //---------- OUTPUT VARIABLES -------\n        // J  = Jacobian Matrix J(i,j)=dy(i)/dp(j)\ti=1:n; j=1:m\n\n        //   Henri Gavin, Dept. Civil & Environ. Engineering, Duke Univ. November 2005\n        //   modified from: ftp://fly.cnuce.cnr.it/pub/software/octave/leasqr/\n        //   Press, et al., Numerical Recipes, Cambridge Univ. Press, 1992, Chapter 15.\n\n        var m = y.length;\t\t\t// number of data points\n        var n = p.length;\t\t\t// number of parameters\n\n        dp = dp || math.multiply( Matrix.ones(n, 1), 0.001);\n\n        var ps = p.clone();//JSON.parse(JSON.stringify(p));\n        //var ps = $.extend(true, [], p);\n        var J = new Matrix(m,n), del =new Array(n);         // initialize Jacobian to Zero\n\n        for (var j = 0;j < n; j++) {\n            //console.log(j+\" \"+dp[j]+\" \"+p[j]+\" \"+ps[j]+\" \"+del[j]);\n            del[j] = dp[j]*(1+Math.abs(p[j][0]));  // parameter perturbation\n            p[j] = [ps[j][0]+del[j]];\t      // perturb parameter p(j)\n            //console.log(j+\" \"+dp[j]+\" \"+p[j]+\" \"+ps[j]+\" \"+del[j]);\n\n            if (del[j] != 0){\n                y1 = func(t, p, c);\n                //func_calls = func_calls + 1;\n                if (dp[j][0] < 0) {\t\t// backwards difference\n                    //J(:,j) = math.dotDivide(math.subtract(y1, y),del[j]);//. / del[j];\n                    //console.log(del[j]);\n                    //console.log(y);\n                    var column = math.dotDivide(math.subtract(y1, y),del[j]);\n                    for(var k=0;k< m;k++){\n                        J[k][j]=column[k][0];\n                    }\n                    //console.log(column);\n                }\n                else{\n                    p[j][0] = ps[j][0] - del[j];\n                    //J(:,j) = (y1 - feval(func, t, p, c)). / (2. * del[j]);\n                    var column = math.dotDivide(math.subtract(y1,func(t,p,c)),2*del[j]);\n                    for(var k=0;k< m;k++){\n                        J[k][j]=column[k][0];\n                    }\n\n                }\t\t\t// central difference, additional func call\n            }\n\n            p[j] = ps[j];\t\t// restore p(j)\n\n        }\n        //console.log(\"lm_FD_J: \"+ JSON.stringify(J));\n        return J;\n\n    },\n\n    // endfunction # -------------------------------------------------- LM_FD_J\n    lm_Broyden_J: function(p_old,y_old,J,p,y){\n        // J = lm_Broyden_J(p_old,y_old,J,p,y)\n        // carry out a rank-1 update to the Jacobian matrix using Broyden's equation\n        //---------- INPUT VARIABLES -------\n        // p_old = previous set of parameters\n        // y_old = model evaluation at previous set of parameters, y_hat(t;p_old)\n        // J  = current version of the Jacobian matrix\n        // p     = current  set of parameters\n        // y     = model evaluation at current  set of parameters, y_hat(t;p)\n        //---------- OUTPUT VARIABLES -------\n        // J = rank-1 update to Jacobian Matrix J(i,j)=dy(i)/dp(j)\ti=1:n; j=1:m\n        //console.log(p+\" X \"+ p_old)\n        var h  = math.subtract(p, p_old);\n\n        //console.log(\"hhh \"+h);\n        var h_t = math.transpose(h);\n        h_t.div(math.multiply(h_t,h));\n\n        //console.log(h_t);\n        //J = J + ( y - y_old - J*h )*h' / (h'*h);\t// Broyden rank-1 update eq'n\n        J = math.add(J, math.multiply(math.subtract(y, math.add(y_old,math.multiply(J,h))),h_t));\n        return J;\n        // endfunction # ---------------------------------------------- LM_Broyden_J\n    },\n\n    lm_matx : function (func,t,p_old,y_old,dX2,J,p,y_dat,weight_sq,dp,c,iteration){\n        // [JtWJ,JtWdy,Chi_sq,y_hat,J] = this.lm_matx(func,t,p_old,y_old,dX2,J,p,y_dat,weight_sq,{da},{c})\n        //\n        // Evaluate the linearized fitting matrix, JtWJ, and vector JtWdy,\n        // and calculate the Chi-squared error function, Chi_sq\n        // Used by Levenberg-Marquard algorithm, lm.m\n        // -------- INPUT VARIABLES ---------\n        // func   = function ofpn independent variables, p, and m parameters, p,\n        //         returning the simulated model: y_hat = func(t,p,c)\n        // t      = m-vectors or matrix of independent variables (used as arg to func)\n        // p_old  = n-vector of previous parameter values\n        // y_old  = m-vector of previous model ... y_old = y_hat(t;p_old);\n        // dX2    = previous change in Chi-squared criteria\n        // J   = m-by-n Jacobian of model, y_hat, with respect to parameters, p\n        // p      = n-vector of current  parameter values\n        // y_dat  = n-vector of data to be fit by func(t,p,c)\n        // weight_sq = square of the weighting vector for least squares fit ...\n        //\t    inverse of the standard measurement errors\n        // dp     = fractional increment of 'p' for numerical derivatives\n        //          dp(j)>0 central differences calculated\n        //          dp(j)<0 one sided differences calculated\n        //          dp(j)=0 sets corresponding partials to zero; i.e. holds p(j) fixed\n        //          Default:  0.001;\n        // c      = optional vector of constants passed to y_hat = func(t,p,c)\n        //---------- OUTPUT VARIABLES -------\n        // JtWJ\t = linearized Hessian matrix (inverse of covariance matrix)\n        // JtWdy   = linearized fitting vector\n        // Chi_sq = Chi-squared criteria: weighted sum of the squared residuals WSSR\n        // y_hat  = model evaluated with parameters 'p'\n        // J   = m-by-n Jacobian of model, y_hat, with respect to parameters, p\n\n        //   Henri Gavin, Dept. Civil & Environ. Engineering, Duke Univ. November 2005\n        //   modified from: ftp://fly.cnuce.cnr.it/pub/software/octave/leasqr/\n        //   Press, et al., Numerical Recipes, Cambridge Univ. Press, 1992, Chapter 15.\n\n\n        var Npnt = y_dat.length;\t\t// number of data points\n        var Npar = p.length;\t\t// number of parameters\n\n        dp = dp || 0.001;\n\n\n        //var JtWJ = new Matrix.zeros(Npar);\n        //var JtWdy  = new Matrix.zeros(Npar,1);\n\n        var y_hat = func(t,p,c);\t// evaluate model using parameters 'p'\n        //func_calls = func_calls + 1;\n        //console.log(J);\n        if ( (iteration%(2*Npar))==0 || dX2 > 0 ) {\n            //console.log(\"Par\");\n            J = this.lm_FD_J(func, t, p, y_hat, dp, c);\t\t// finite difference\n        }\n        else{\n            //console.log(\"ImPar\");\n            J = this.lm_Broyden_J(p_old, y_old, J, p, y_hat); // rank-1 update\n        }\n        //console.log(y_dat);\n        //console.log(y_hat);\n        var delta_y = math.subtract(y_dat, y_hat);\t// residual error between model and data\n        //console.log(delta_y[0][0]);\n        //console.log(delta_y.rows+\" \"+delta_y.columns+\" \"+JSON.stringify(weight_sq));\n        //var Chi_sq = delta_y' * ( delta_y .* weight_sq ); \t// Chi-squared error criteria\n        var Chi_sq = math.multiply(math.transpose(delta_y),math.dotMultiply(delta_y,weight_sq));\n        //JtWJ  = J' * ( J .* ( weight_sq * ones(1,Npar) ) );\n        var Jt = math.transpose(J);\n\n        //console.log(weight_sq);\n\n        var JtWJ = math.multiply(Jt, math.dotMultiply(J,math.multiply(weight_sq, Matrix.ones(1,Npar))));\n\n        //JtWdy = J' * ( weight_sq .* delta_y );\n        var JtWdy = math.multiply(Jt, math.dotMultiply(weight_sq,delta_y));\n\n\n        return {JtWJ:JtWJ,JtWdy:JtWdy,Chi_sq:Chi_sq,y_hat:y_hat,J:J};\n        // endfunction  # ------------------------------------------------------ LM_MATX\n    }\n\n\n\n};\n\nmodule.exports = LM;","'use strict';\n\nmodule.exports = require('./LM');\nmodule.exports.Matrix = require('ml-matrix');\nmodule.exports.Matrix.algebra = require('./algebra');\n","'use strict';\n\nvar LM = require('ml-curve-fitting');\nvar math = LM.Matrix.algebra;\nvar Matrix = require('ml-matrix');\n\n/**\n * This function calculates the spectrum as a sum of lorentzian functions. The Lorentzian\n * parameters are divided in 3 batches. 1st: centers; 2nd: heights; 3th: widths;\n * @param t Ordinate values\n * @param p Lorentzian parameters\n * @param c Constant parameters(Not used)\n * @returns {*}\n */\nfunction sumOfLorentzians(t,p,c){\n    var nL = p.length/3,factor,i, j,p2, cols = t.rows;\n    var result = Matrix.zeros(t.length,1);\n\n    for(i=0;i<nL;i++){\n        p2 = Math.pow(p[i+nL*2][0]/2,2);\n        factor = p[i+nL][0]*p2;\n        for(j=0;j<cols;j++){\n            result[j][0]+=factor/(Math.pow(t[j][0]-p[i][0],2)+p2);\n        }\n    }\n    return result;\n}\n\n/**\n * This function calculates the spectrum as a sum of gaussian functions. The Gaussian\n * parameters are divided in 3 batches. 1st: centers; 2nd: height; 3th: std's;\n * @param t Ordinate values\n * @param p Gaussian parameters\n * @param c Constant parameters(Not used)\n * @returns {*}\n */\nfunction sumOfGaussians(t,p,c){\n    var nL = p.length/3,factor,i, j, cols = t.rows;\n    var result = Matrix.zeros(t.length,1);\n\n    for(i=0;i<nL;i++){\n        factor = p[i+nL*2][0]*p[i+nL*2][0]/2;\n        for(j=0;j<cols;j++){\n            result[j][0]+=p[i+nL][0]*Math.exp(-(t[i][0]-p[i][0])*(t[i][0]-p[i][0])/factor);\n        }\n    }\n    return result;\n}\n/**\n * Single 4 parameter lorentzian function\n * @param t Ordinate values\n * @param p Lorentzian parameters\n * @param c Constant parameters(Not used)\n * @returns {*}\n */\nfunction singleLorentzian(t,p,c){\n    var factor = p[1][0]*Math.pow(p[2][0]/2,2);\n    var rows = t.rows;\n    var result = new Matrix(t.rows, t.columns);\n    for(var i=0;i<rows;i++){\n        result[i][0]=factor/(Math.pow(t[i][0]-p[0][0],2)+Math.pow(p[2][0]/2,2));\n    }\n    return result;\n}\n\n/**\n * Single 3 parameter gaussian function\n * @param t Ordinate values\n * @param p Gaussian parameters [mean, height, std]\n * @param c Constant parameters(Not used)\n * @returns {*}\n */\nfunction singleGaussian(t,p,c){\n    var factor2 = p[2][0]*p[2][0]/2;\n    var rows = t.rows;\n    var result = new Matrix(t.rows, t.columns);\n    for(var i=0;i<rows;i++){\n        result[i][0]=p[1][0]*Math.exp(-(t[i][0]-p[0][0])*(t[i][0]-p[0][0])/factor2);\n    }\n    return result;\n}\n\n/**\n * * Fits a set of points to a Lorentzian function. Returns the center of the peak, the width at half height, and the height of the signal.\n * @param data,[y]\n * @returns {*[]}\n */\nfunction optimizeSingleLorentzian(xy, peak, opts) {\n    opts = opts || {};\n    var xy2 = parseData(xy, opts.percentage||0);\n\n    if(xy2===null||xy2[0].rows<3){\n        return null; //Cannot run an optimization with less than 3 points\n    }\n\n    var t = xy2[0];\n    var y_data = xy2[1];\n    var maxY = xy2[2];\n    var nbPoints = t.rows, i;\n\n    var weight = [nbPoints / Math.sqrt(y_data.dot(y_data))];\n\n    var opts=Object.create(opts.LMOptions || [  3,    100, 1e-3, 1e-3, 1e-3, 1e-2, 1e-2,    11,    9,        1 ]);\n    //var opts = [  3,    100, 1e-3, 1e-3, 1e-3, 1e-2, 1e-2,    11,    9,        1 ];\n    var consts = [ ];\n    var dt = Math.abs(t[0][0]-t[1][0]);// optional vector of constants\n    var dx = new Matrix([[-dt/10000],[-1e-3],[-dt/10000]]);//-Math.abs(t[0][0]-t[1][0])/100;\n    var p_init = new Matrix([[peak.x],[1],[peak.width]]);\n    var p_min = new Matrix([[peak.x-dt],[0.75],[peak.width/4]]);\n    var p_max = new Matrix([[peak.x+dt],[1.25],[peak.width*4]]);\n\n    var p_fit = LM.optimize(singleLorentzian,p_init,t,y_data,weight,dx,p_min,p_max,consts,opts);\n\n\n    p_fit = p_fit.p;\n    return [p_fit[0],[p_fit[1][0]*maxY],p_fit[2]];\n\n}\n\n/**\n * Fits a set of points to a gaussian bell. Returns the mean of the peak, the std and the height of the signal.\n * @param data,[y]\n * @returns {*[]}\n */\nfunction optimizeSingleGaussian(xy, peak, opts) {\n    opts = opts || {};\n    var xy2 = parseData(xy, opts.percentage||0);\n\n    if(xy2===null||xy2[0].rows<3){\n        return null; //Cannot run an optimization with less than 3 points\n    }\n\n    var t = xy2[0];\n    var y_data = xy2[1];\n    var maxY = xy2[2];\n\n    var nbPoints = t.rows, i;\n\n\n\n    var weight = [nbPoints / Math.sqrt(y_data.dot(y_data))];\n\n    var opts=Object.create(opts.LMOptions || [  3,    100, 1e-3, 1e-3, 1e-3, 1e-2, 1e-2,    11,    9,        1 ]);\n    //var opts = [  3,    100, 1e-3, 1e-3, 1e-3, 1e-2, 1e-2,    11,    9,        1 ];\n    var consts = [ ];                         // optional vector of constants\n    var dt = Math.abs(t[0][0]-t[1][0]);\n    var dx = new Matrix([[-dt/10000],[-1e-3],[-dt/10000]]);//-Math.abs(t[0][0]-t[1][0])/100;\n\n    var dx = new Matrix([[-Math.abs(t[0][0]-t[1][0])/1000],[-1e-3],[-peak.width/1000]]);\n    var p_init = new Matrix([[peak.x],[1],[peak.width]]);\n    var p_min = new Matrix([[peak.x-dt],[0.75],[peak.width/4]]);\n    var p_max = new Matrix([[peak.x+dt],[1.25],[peak.width*4]]);\n    //var p_min = new Matrix([[peak.x-peak.width/4],[0.75],[peak.width/3]]);\n    //var p_max = new Matrix([[peak.x+peak.width/4],[1.25],[peak.width*3]]);\n\n    var p_fit = LM.optimize(singleGaussian,p_init,t,y_data,weight,dx,p_min,p_max,consts,opts);\n    p_fit = p_fit.p;\n    return [p_fit[0],[p_fit[1][0]*maxY],p_fit[2]];\n}\n\n/*\n peaks on group should sorted\n */\nfunction optimizeLorentzianTrain(xy, group, opts){\n    var xy2 = parseData(xy);\n    //console.log(xy2[0].rows);\n    if(xy2===null||xy2[0].rows<3){\n        return null; //Cannot run an optimization with less than 3 points\n    }\n\n    var t = xy2[0];\n    var y_data = xy2[1];\n    var maxY = xy2[2];\n    var currentIndex = 0;\n    var nbPoints = t.length;\n    var nextX;\n    var tI, yI, maxY;\n    var result=[], current;\n    for(var i=0; i<group.length;i++){\n        nextX = group[i].x-group[i].width*1.5;\n        //console.log(group[i]);\n        while(t[currentIndex++]<nextX&&currentIndex<nbPoints);\n        nextX = group[i].x+group[i].width*1.5;\n        tI = [];\n        yI = [];\n        while(t[currentIndex]<=nextX&&currentIndex<nbPoints){\n            tI.push(t[currentIndex][0]);\n            yI.push(y_data[currentIndex][0]*maxY);\n            currentIndex++;\n        }\n\n        current=optimizeSingleLorentzian([tI, yI], group[i], opts);\n        if(current){\n            result.push({\"x\":current[0][0],\"y\":current[1][0],\"width\":current[2][0],\"opt\":true});\n        }\n        else{\n            result.push({\"x\":group[i].x,\"y\":group[i].y,\"width\":group[i].width,\"opt\":false});\n        }\n    }\n\n    return result;\n\n}\n\nfunction optimizeGaussianTrain(xy, group, opts){\n    var xy2 = parseData(xy);\n    //console.log(xy2[0].rows);\n    if(xy2===null||xy2[0].rows<3){\n        return null; //Cannot run an optimization with less than 3 points\n    }\n\n    var t = xy2[0];\n    var y_data = xy2[1];\n    var maxY = xy2[2];\n    var currentIndex = 0;\n    var nbPoints = t.length;\n    var nextX;\n    var tI, yI, maxY;\n    var result=[], current;\n    for(var i=0; i<group.length;i++){\n        nextX = group[i].x-group[i].width*1.5;\n        //console.log(group[i]);\n        while(t[currentIndex++]<nextX&&currentIndex<nbPoints);\n        nextX = group[i].x+group[i].width*1.5;\n        tI = [];\n        yI = [];\n        while(t[currentIndex]<=nextX&&currentIndex<nbPoints){\n            tI.push(t[currentIndex][0]);\n            yI.push(y_data[currentIndex][0]*maxY);\n            currentIndex++;\n        }\n\n        current=optimizeSingleGaussian([tI, yI], group[i], opts);\n        if(current){\n            result.push({\"x\":current[0][0],\"y\":current[1][0],\"width\":current[2][0],\"opt\":true});\n        }\n        else{\n            result.push({\"x\":group[i].x,\"y\":group[i].y,\"width\":group[i].width,\"opt\":false});\n        }\n    }\n\n    return result;\n}\n\n\n\n/**\n *\n * @param xy A two column matrix containing the x and y data to be fitted\n * @param group A set of initial lorentzian parameters to be optimized [center, heigth, half_width_at_half_height]\n * @returns {Array} A set of final lorentzian parameters [center, heigth, hwhh*2]\n */\nfunction optimizeLorentzianSum(xy, group, opts){\n    var xy2 = parseData(xy);\n\n    if(xy2===null||xy2[0].rows<3){\n        return null; //Cannot run an optimization with less than 3 points\n    }\n\n    var t = xy2[0];\n    var y_data = xy2[1];\n    var maxY = xy2[2];\n    var nbPoints = t.rows, i;\n\n    var weight = [nbPoints / math.sqrt(y_data.dot(y_data))];\n    var opts=Object.create(opts || [  3,    100, 1e-3, 1e-3, 1e-3, 1e-2, 1e-2, 11, 9, 1 ]);\n    var consts = [ ];// optional vector of constants\n\n    var nL = group.length;\n    var p_init = new Matrix(nL*3,1);\n    var p_min =  new Matrix(nL*3,1);\n    var p_max =  new Matrix(nL*3,1);\n    var dx = new Matrix(nL*3,1);\n    var dt = Math.abs(t[0][0]-t[1][0]);\n    for( i=0;i<nL;i++){\n        p_init[i][0] = group[i].x;\n        p_init[i+nL][0] = 1;\n        p_init[i+2*nL][0] = group[i].width;\n\n        p_min[i][0] = group[i].x-dt;//-group[i].width/4;\n        p_min[i+nL][0] = 0;\n        p_min[i+2*nL][0] = group[i].width/4;\n\n        p_max[i][0] = group[i].x+dt;//+group[i].width/4;\n        p_max[i+nL][0] = 1.5;\n        p_max[i+2*nL][0] = group[i].width*4;\n\n        dx[i][0] = -dt/1000;\n        dx[i+nL][0] = -1e-3;\n        dx[i+2*nL][0] = -dt/1000;\n    }\n\n    var dx = -Math.abs(t[0][0]-t[1][0])/10000;\n    var p_fit = LM.optimize(sumOfLorentzians, p_init, t, y_data, weight, dx, p_min, p_max, consts, opts);\n    p_fit=p_fit.p;\n    //Put back the result in the correct format\n    var result = new Array(nL);\n    for( i=0;i<nL;i++){\n        result[i]=[p_fit[i],[p_fit[i+nL][0]*maxY],p_fit[i+2*nL]];\n    }\n\n    return result;\n\n}\n\n/**\n *\n * @param xy A two column matrix containing the x and y data to be fitted\n * @param group A set of initial lorentzian parameters to be optimized [center, heigth, half_width_at_half_height]\n * @returns {Array} A set of final lorentzian parameters [center, heigth, hwhh*2]\n */\nfunction optimizeGaussianSum(xy, group, opts){\n    var xy2 = parseData(xy);\n\n    if(xy2===null||xy2[0].rows<3){\n        return null; //Cannot run an optimization with less than 3 points\n    }\n\n    var t = xy2[0];\n    var y_data = xy2[1];\n    var maxY = xy2[2];\n    var nbPoints = t.rows,i;\n\n    var weight = new Matrix(nbPoints,1);//[nbPoints / math.sqrt(y_data.dot(y_data))];\n    var k = nbPoints / math.sqrt(y_data.dot(y_data));\n    for(i=0;i<nbPoints;i++){\n        weight[i][0]=k;///(y_data[i][0]);\n        //weight[i][0]=k*(2-y_data[i][0]);\n    }\n\n    var opts=Object.create(opts || [  3,    100, 1e-3, 1e-3, 1e-3, 1e-2, 1e-2,    11,    9,        2 ]);\n    //var opts=[  3,    100, 1e-5, 1e-6, 1e-6, 1e-6, 1e-6,    11,    9,        1 ];\n    var consts = [ ];// optional vector of constants\n\n    var nL = group.length;\n    var p_init = new Matrix(nL*3,1);\n    var p_min =  new Matrix(nL*3,1);\n    var p_max =  new Matrix(nL*3,1);\n    var dx = new Matrix(nL*3,1);\n    var dt = Math.abs(t[0][0]-t[1][0]);\n    for( i=0;i<nL;i++){\n        p_init[i][0] = group[i].x;\n        p_init[i+nL][0] = group[i].y/maxY;\n        p_init[i+2*nL][0] = group[i].width;\n\n        p_min[i][0] = group[i].x-dt;\n        p_min[i+nL][0] = group[i].y*0.8/maxY;\n        p_min[i+2*nL][0] = group[i].width/2;\n\n        p_max[i][0] = group[i].x+dt;\n        p_max[i+nL][0] = group[i].y*1.2/maxY;\n        p_max[i+2*nL][0] = group[i].width*2;\n\n        dx[i][0] = -dt/1000;\n        dx[i+nL][0] = -1e-3;\n        dx[i+2*nL][0] = -dt/1000;\n    }\n    //console.log(t);\n    var p_fit = LM.optimize(sumOfLorentzians,p_init,t,y_data,weight,dx,p_min,p_max,consts,opts);\n    p_fit = p_fit.p;\n    //Put back the result in the correct format\n    var result = new Array(nL);\n    for( i=0;i<nL;i++){\n        result[i]=[p_fit[i],[p_fit[i+nL][0]*maxY],p_fit[i+2*nL]];\n    }\n\n    return result;\n\n}\n/**\n *\n * Converts the given input to the required x, y column matrices. y data is normalized to max(y)=1\n * @param xy\n * @returns {*[]}\n */\nfunction parseData(xy, threshold){\n    var nbSeries = xy.length;\n    var t = null;\n    var y_data = null, x,y;\n    var maxY = 0, i,j;\n\n    if(nbSeries==2){\n        //Looks like row wise matrix [x,y]\n        var nbPoints = xy[0].length;\n        //if(nbPoints<3)\n        //    throw new Exception(nbPoints);\n        //else{\n        t = new Array(nbPoints);//new Matrix(nbPoints,1);\n        y_data = new Array(nbPoints);//new Matrix(nbPoints,1);\n        x = xy[0];\n        y = xy[1];\n        if(typeof x[0] === \"number\"){\n            for(i=0;i<nbPoints;i++){\n                t[i]=x[i];\n                y_data[i]=y[i];\n                if(y[i]>maxY)\n                    maxY = y[i];\n            }\n        }\n        else{\n            //It is a colum matrix\n            if(typeof x[0] === \"object\"){\n                for(i=0;i<nbPoints;i++){\n                    t[i]=x[i][0];\n                    y_data[i]=y[i][0];\n                    if(y[i][0]>maxY)\n                        maxY = y[i][0];\n                }\n            }\n\n        }\n\n        //}\n    }\n    else{\n        //Looks like a column wise matrix [[x],[y]]\n        var nbPoints = nbSeries;\n        //if(nbPoints<3)\n        //    throw new SizeException(nbPoints);\n        //else {\n        t = new Array(nbPoints);//new Matrix(nbPoints, 1);\n        y_data = new Array(nbPoints);//new Matrix(nbPoints, 1);\n        for (i = 0; i < nbPoints; i++) {\n            t[i] = xy[i][0];\n            y_data[i] = xy[i][1];\n            if(y_data[i]>maxY)\n                maxY = y_data[i];\n        }\n        //}\n    }\n    for (i = 0; i < nbPoints; i++) {\n        y_data[i]/=maxY;\n    }\n    if(threshold){\n        for (i = nbPoints-1; i >=0; i--) {\n            if(y_data[i]<threshold) {\n                y_data.splice(i,1);\n                t.splice(i,1);\n            }\n        }\n    }\n    if(t.length>0)\n        return [(new Matrix([t])).transpose(),(new Matrix([y_data])).transpose(),maxY];\n    return null;\n}\n\nfunction sizeException(nbPoints) {\n    return new RangeError(\"Not enough points to perform the optimization: \"+nbPoints +\"< 3\");\n}\n\nmodule.exports.optimizeSingleLorentzian = optimizeSingleLorentzian;\nmodule.exports.optimizeLorentzianSum = optimizeLorentzianSum;\nmodule.exports.optimizeSingleGaussian = optimizeSingleGaussian;\nmodule.exports.optimizeGaussianSum = optimizeGaussianSum;\nmodule.exports.singleGaussian = singleGaussian;\nmodule.exports.singleLorentzian = singleLorentzian;\nmodule.exports.optimizeGaussianTrain = optimizeGaussianTrain;\nmodule.exports.optimizeLorentzianTrain = optimizeLorentzianTrain;","/**\n * Created by acastillo on 9/6/15.\n */\n'use strict';\n\nvar optimize = require('ml-optimize-lorentzian');\n\nfunction sampleFunction(from, to, x, y, lastIndex) {\n  var nbPoints = x.length;\n  var sampleX = [];\n  var sampleY = [];\n  var direction = Math.sign(x[1] - x[0]); // Direction of the derivative\n  if (direction === -1) {\n    lastIndex[0] = x.length - 1;\n  }\n\n  var delta = Math.abs(to - from) / 2;\n  var mid = (from + to) / 2;\n  var stop = false;\n  var index = lastIndex[0];\n  while (!stop && index < nbPoints && index >= 0) {\n    if (Math.abs(x[index] - mid) <= delta) {\n      sampleX.push(x[index]);\n      sampleY.push(y[index]);\n      index += direction;\n    } else {\n      // It is outside the range.\n      if (Math.sign(mid - x[index]) === 1) {\n        // We'll reach the mid going in the current direction\n        index += direction;\n      } else {\n        // There is not more peaks in the current range\n        stop = true;\n      }\n    }\n    // console.log(sampleX);\n  }\n  lastIndex[0] = index;\n  return [sampleX, sampleY];\n}\n\nmodule.exports = function optimizePeaks(peakList, x, y, n, fnType) {\n  var i;\n  var j;\n\n  var lastIndex = [0];\n  var groups = groupPeaks(peakList, n);\n  var result = [];\n  var factor = 1;\n  if (fnType === 'gaussian') {\n    factor = 1.17741;\n  } // From https://en.wikipedia.org/wiki/Gaussian_function#Properties\n  var sampling, error, opts;\n  for (i = 0; i < groups.length; i++) {\n    var peaks = groups[i].group;\n    if (peaks.length > 1) {\n      // Multiple peaks\n      // console.log(\"Pending group of overlaped peaks \"+peaks.length);\n      // console.log(\"here1\");\n      // console.log(groups[i].limits);\n      sampling = sampleFunction(\n        groups[i].limits[0] - groups[i].limits[1],\n        groups[i].limits[0] + groups[i].limits[1],\n        x,\n        y,\n        lastIndex\n      );\n      // console.log(sampling);\n      if (sampling[0].length > 5) {\n        error = peaks[0].width / 1000;\n        opts = [3, 100, error, error, error, error * 10, error * 10, 11, 9, 1];\n        // var gauss = Opt.optimizeSingleGaussian(sampling[0], sampling[1], opts, peaks);\n        var optPeaks = [];\n        if (fnType === 'gaussian') {\n          optPeaks = optimize.optimizeGaussianSum(sampling, peaks, opts);\n        } else {\n          if (fnType === 'lorentzian') {\n            optPeaks = optimize.optimizeLorentzianSum(sampling, peaks, opts);\n          }\n        }\n        // console.log(optPeak);\n        for (j = 0; j < optPeaks.length; j++) {\n          result.push({\n            x: optPeaks[j][0][0],\n            y: optPeaks[j][1][0],\n            width: optPeaks[j][2][0] * factor\n          });\n        }\n      }\n    } else {\n      // Single peak\n      peaks = peaks[0];\n      sampling = sampleFunction(\n        peaks.x - n * peaks.width,\n        peaks.x + n * peaks.width,\n        x,\n        y,\n        lastIndex\n      );\n      // console.log(\"here2\");\n      // console.log(groups[i].limits);\n      if (sampling[0].length > 5) {\n        error = peaks.width / 1000;\n        opts = [3, 100, error, error, error, error * 10, error * 10, 11, 9, 1];\n        // var gauss = Opt.optimizeSingleGaussian(sampling[0], sampling[1], opts, peaks);\n        // var gauss = Opt.optimizeSingleGaussian([sampling[0],sampling[1]], peaks, opts);\n        var optPeak = [];\n        if (fnType === 'gaussian') {\n          optPeak = optimize.optimizeSingleGaussian(\n            [sampling[0], sampling[1]],\n            peaks,\n            opts\n          );\n        } else {\n          if (fnType === 'lorentzian') {\n            optPeak = optimize.optimizeSingleLorentzian(\n              [sampling[0], sampling[1]],\n              peaks,\n              opts\n            );\n          }\n        }\n        // console.log(optPeak);\n        result.push({\n          x: optPeak[0][0],\n          y: optPeak[1][0],\n          width: optPeak[2][0] * factor\n        }); // From https://en.wikipedia.org/wiki/Gaussian_function#Properties}\n      }\n    }\n  }\n  return result;\n};\n\nfunction groupPeaks(peakList, nL) {\n  var group = [];\n  var groups = [];\n  var i, j;\n  var limits = [peakList[0].x, nL * peakList[0].width];\n  var upperLimit, lowerLimit;\n  // Merge forward\n  for (i = 0; i < peakList.length; i++) {\n    // If the 2 things overlaps\n    if (\n      Math.abs(peakList[i].x - limits[0]) <\n      nL * peakList[i].width + limits[1]\n    ) {\n      // Add the peak to the group\n      group.push(peakList[i]);\n      // Update the group limits\n      upperLimit = limits[0] + limits[1];\n      if (peakList[i].x + nL * peakList[i].width > upperLimit) {\n        upperLimit = peakList[i].x + nL * peakList[i].width;\n      }\n      lowerLimit = limits[0] - limits[1];\n      if (peakList[i].x - nL * peakList[i].width < lowerLimit) {\n        lowerLimit = peakList[i].x - nL * peakList[i].width;\n      }\n      limits = [\n        (upperLimit + lowerLimit) / 2,\n        Math.abs(upperLimit - lowerLimit) / 2\n      ];\n    } else {\n      groups.push({ limits: limits, group: group });\n      // var optmimalPeak = fitSpectrum(group,limits,spectrum);\n      group = [peakList[i]];\n      limits = [peakList[i].x, nL * peakList[i].width];\n    }\n  }\n  groups.push({ limits: limits, group: group });\n  // Merge backward\n  for (i = groups.length - 2; i >= 0; i--) {\n    // The groups overlaps\n    if (\n      Math.abs(groups[i].limits[0] - groups[i + 1].limits[0]) <\n      (groups[i].limits[1] + groups[i + 1].limits[1]) / 2\n    ) {\n      for (j = 0; j < groups[i + 1].group.length; j++) {\n        groups[i].group.push(groups[i + 1].group[j]);\n      }\n      upperLimit = groups[i].limits[0] + groups[i].limits[1];\n      if (groups[i + 1].limits[0] + groups[i + 1].limits[1] > upperLimit) {\n        upperLimit = groups[i + 1].limits[0] + groups[i + 1].limits[1];\n      }\n      lowerLimit = groups[i].limits[0] - groups[i].limits[1];\n      if (groups[i + 1].limits[0] - groups[i + 1].limits[1] < lowerLimit) {\n        lowerLimit = groups[i + 1].limits[0] - groups[i + 1].limits[1];\n      }\n      // console.log(limits);\n      groups[i].limits = [\n        (upperLimit + lowerLimit) / 2,\n        Math.abs(upperLimit - lowerLimit) / 2\n      ];\n\n      groups.splice(i + 1, 1);\n    }\n  }\n  return groups;\n}\n","'use strict';\n\nvar Opt = require('ml-optimize-lorentzian');\n\n/**\n * This function try to join the peaks that seems to belong to a broad signal in a single broad peak.\n * @param peakList\n * @param options\n */\nmodule.exports = function joinBroadPeaks(peakList, options = {}) {\n  var width = options.width;\n  var broadLines = [];\n  // Optimize the possible broad lines\n  var max = 0;\n\n  var maxI = 0;\n\n  var count = 1;\n  for (let i = peakList.length - 1; i >= 0; i--) {\n    if (peakList[i].soft) {\n      broadLines.push(peakList.splice(i, 1)[0]);\n    }\n  }\n  // Push a feak peak\n  broadLines.push({ x: Number.MAX_VALUE });\n\n  var candidates = [[broadLines[0].x, broadLines[0].y]];\n  var indexes = [0];\n\n  for (let i = 1; i < broadLines.length; i++) {\n    // console.log(broadLines[i-1].x+\" \"+broadLines[i].x);\n    if (Math.abs(broadLines[i - 1].x - broadLines[i].x) < width) {\n      candidates.push([broadLines[i].x, broadLines[i].y]);\n      if (broadLines[i].y > max) {\n        max = broadLines[i].y;\n        maxI = i;\n      }\n      indexes.push(i);\n      count++;\n    } else {\n      if (count > 2) {\n        var fitted = Opt.optimizeSingleLorentzian(candidates, {\n          x: broadLines[maxI].x,\n          y: max,\n          width: Math.abs(\n            candidates[0][0] - candidates[candidates.length - 1][0]\n          )\n        });\n        peakList.push({\n          x: fitted[0][0],\n          y: fitted[1][0],\n          width: fitted[2][0],\n          soft: false\n        });\n      } else {\n        // Put back the candidates to the signals list\n        indexes.forEach((index) => {\n          peakList.push(broadLines[index]);\n        });\n      }\n      candidates = [[broadLines[i].x, broadLines[i].y]];\n      indexes = [i];\n      max = broadLines[i].y;\n      maxI = i;\n      count = 1;\n    }\n  }\n\n  peakList.sort(function (a, b) {\n    return a.x - b.x;\n  });\n\n  return peakList;\n};\n","'use strict';\n\n/**\n * This method will allow to enlarge peaks and prevent overlap between peaks\n * Because peaks may not be symmetric after we add 2 properties, from and to.\n * @param {Array} peakList\n * @param {object} [options={}]\n * @param {number} [factor=2]\n * @param {boolean} [overlap=false] by default we don't allow overlap\n * @return {Array} peakList\n */\nmodule.exports = function broadenPeaks(peakList, options = {}) {\n  const { factor = 2, overlap = false } = options;\n\n  for (let peak of peakList) {\n    peak.from = peak.x - (peak.width / 2) * factor;\n    peak.to = peak.x + (peak.width / 2) * factor;\n  }\n\n  if (!overlap) {\n    for (let i = 0; i < peakList.length - 1; i++) {\n      let peak = peakList[i];\n      let nextPeak = peakList[i + 1];\n      if (peak.to > nextPeak.from) {\n        peak.to = nextPeak.from = (peak.to + nextPeak.from) / 2;\n      }\n    }\n  }\n\n  for (let peak of peakList) {\n    peak.width = peak.to - peak.from;\n  }\n\n  return peakList;\n};\n","'use strict';\n\nmodule.exports.gsd = require('./gsd');\n\nmodule.exports.post = {\n  optimizePeaks: require('./post/optimizePeaks'),\n  joinBroadPeaks: require('./post/joinBroadPeaks'),\n  broadenPeaks: require('./post/broadenPeaks')\n};\n","'use strict';\n\nfunction getConverter() {\n  // the following RegExp can only be used for XYdata, some peakTables have values with a \"E-5\" ...\n  const ntuplesSeparator = /[, \\t]+/;\n  const GC_MS_FIELDS = ['TIC', '.RIC', 'SCANNUMBER'];\n\n  function convertToFloatArray(stringArray) {\n    var floatArray = [];\n    for (let i = 0; i < stringArray.length; i++) {\n      floatArray.push(parseFloat(stringArray[i]));\n    }\n    return floatArray;\n  }\n\n  class Spectrum {}\n\n  const defaultOptions = {\n    keepRecordsRegExp: /^$/,\n    xy: false,\n    withoutXY: false,\n    chromatogram: false,\n    keepSpectra: false,\n    noContour: false,\n    nbContourLevels: 7,\n    noiseMultiplier: 5,\n    profiling: false\n  };\n\n  function convert(jcamp, options) {\n    options = Object.assign({}, defaultOptions, options);\n\n    var wantXY = !options.withoutXY;\n\n    var start = Date.now();\n\n    var ntuples = {};\n    var ldr, dataLabel, dataValue, ldrs;\n    var position, endLine, infos;\n\n    var result = {};\n    result.profiling = options.profiling ? [] : false;\n    result.logs = [];\n    var spectra = [];\n    result.spectra = spectra;\n    result.info = {};\n    var spectrum = new Spectrum();\n\n    if (!(typeof jcamp === 'string')) {\n      throw new TypeError('the JCAMP should be a string');\n    }\n\n    if (result.profiling) {\n      result.profiling.push({\n        action: 'Before split to LDRS',\n        time: Date.now() - start\n      });\n    }\n\n    ldrs = jcamp.split(/[\\r\\n]+##/);\n\n    if (result.profiling) {\n      result.profiling.push({\n        action: 'Split to LDRS',\n        time: Date.now() - start\n      });\n    }\n\n    if (ldrs[0]) ldrs[0] = ldrs[0].replace(/^[\\r\\n ]*##/, '');\n\n    for (let i = 0; i < ldrs.length; i++) {\n      ldr = ldrs[i];\n      // This is a new LDR\n      position = ldr.indexOf('=');\n      if (position > 0) {\n        dataLabel = ldr.substring(0, position);\n        dataValue = ldr.substring(position + 1).trim();\n      } else {\n        dataLabel = ldr;\n        dataValue = '';\n      }\n      dataLabel = dataLabel.replace(/[_ -]/g, '').toUpperCase();\n\n      if (dataLabel === 'DATATABLE') {\n        endLine = dataValue.indexOf('\\n');\n        if (endLine === -1) endLine = dataValue.indexOf('\\r');\n        if (endLine > 0) {\n          var xIndex = -1;\n          var yIndex = -1;\n          // ##DATA TABLE= (X++(I..I)), XYDATA\n          // We need to find the variables\n\n          infos = dataValue.substring(0, endLine).split(/[ ,;\\t]+/);\n          if (infos[0].indexOf('++') > 0) {\n            var firstVariable = infos[0].replace(\n              /.*\\(([a-zA-Z0-9]+)\\+\\+.*/,\n              '$1'\n            );\n            var secondVariable = infos[0].replace(\n              /.*\\.\\.([a-zA-Z0-9]+).*/,\n              '$1'\n            );\n            xIndex = ntuples.symbol.indexOf(firstVariable);\n            yIndex = ntuples.symbol.indexOf(secondVariable);\n          }\n\n          if (xIndex === -1) xIndex = 0;\n          if (yIndex === -1) yIndex = 0;\n\n          if (ntuples.first) {\n            if (ntuples.first.length > xIndex) {\n              spectrum.firstX = ntuples.first[xIndex];\n            }\n            if (ntuples.first.length > yIndex) {\n              spectrum.firstY = ntuples.first[yIndex];\n            }\n          }\n          if (ntuples.last) {\n            if (ntuples.last.length > xIndex) {\n              spectrum.lastX = ntuples.last[xIndex];\n            }\n            if (ntuples.last.length > yIndex) {\n              spectrum.lastY = ntuples.last[yIndex];\n            }\n          }\n          if (ntuples.vardim && ntuples.vardim.length > xIndex) {\n            spectrum.nbPoints = ntuples.vardim[xIndex];\n          }\n          if (ntuples.factor) {\n            if (ntuples.factor.length > xIndex) {\n              spectrum.xFactor = ntuples.factor[xIndex];\n            }\n            if (ntuples.factor.length > yIndex) {\n              spectrum.yFactor = ntuples.factor[yIndex];\n            }\n          }\n          if (ntuples.units) {\n            if (ntuples.units.length > xIndex) {\n              spectrum.xUnit = ntuples.units[xIndex];\n            }\n            if (ntuples.units.length > yIndex) {\n              spectrum.yUnit = ntuples.units[yIndex];\n            }\n          }\n          spectrum.datatable = infos[0];\n          if (infos[1] && infos[1].indexOf('PEAKS') > -1) {\n            dataLabel = 'PEAKTABLE';\n          } else if (\n            infos[1] &&\n            (infos[1].indexOf('XYDATA') || infos[0].indexOf('++') > 0)\n          ) {\n            dataLabel = 'XYDATA';\n            spectrum.deltaX =\n              (spectrum.lastX - spectrum.firstX) / (spectrum.nbPoints - 1);\n          }\n        }\n      }\n\n      if (dataLabel === 'XYDATA') {\n        if (wantXY) {\n          prepareSpectrum(result, spectrum);\n          // well apparently we should still consider it is a PEAK TABLE if there are no '++' after\n          if (dataValue.match(/.*\\+\\+.*/)) {\n            // ex: (X++(Y..Y))\n            if (!spectrum.deltaX) {\n              spectrum.deltaX =\n                (spectrum.lastX - spectrum.firstX) / (spectrum.nbPoints - 1);\n            }\n            fastParseXYData(spectrum, dataValue, result);\n          } else {\n            parsePeakTable(spectrum, dataValue, result);\n          }\n          spectra.push(spectrum);\n          spectrum = new Spectrum();\n        }\n        continue;\n      } else if (dataLabel === 'PEAKTABLE') {\n        if (wantXY) {\n          prepareSpectrum(result, spectrum);\n          parsePeakTable(spectrum, dataValue, result);\n          spectra.push(spectrum);\n          spectrum = new Spectrum();\n        }\n        continue;\n      }\n      if (dataLabel === 'PEAKASSIGNMENTS') {\n        if (wantXY) {\n          if (dataValue.match(/.*(XYA).*/)) {\n            // ex: (XYA)\n            parseXYA(spectrum, dataValue);\n          }\n          spectra.push(spectrum);\n          spectrum = new Spectrum();\n        }\n        continue;\n      }\n\n      if (dataLabel === 'TITLE') {\n        spectrum.title = dataValue;\n      } else if (dataLabel === 'DATATYPE') {\n        spectrum.dataType = dataValue;\n        if (dataValue.indexOf('nD') > -1) {\n          result.twoD = true;\n        }\n      } else if (dataLabel === 'NTUPLES') {\n        if (dataValue.indexOf('nD') > -1) {\n          result.twoD = true;\n        }\n      } else if (dataLabel === 'XUNITS') {\n        spectrum.xUnit = dataValue;\n      } else if (dataLabel === 'YUNITS') {\n        spectrum.yUnit = dataValue;\n      } else if (dataLabel === 'FIRSTX') {\n        spectrum.firstX = parseFloat(dataValue);\n      } else if (dataLabel === 'LASTX') {\n        spectrum.lastX = parseFloat(dataValue);\n      } else if (dataLabel === 'FIRSTY') {\n        spectrum.firstY = parseFloat(dataValue);\n      } else if (dataLabel === 'LASTY') {\n        spectrum.lastY = parseFloat(dataValue);\n      } else if (dataLabel === 'NPOINTS') {\n        spectrum.nbPoints = parseFloat(dataValue);\n      } else if (dataLabel === 'XFACTOR') {\n        spectrum.xFactor = parseFloat(dataValue);\n      } else if (dataLabel === 'YFACTOR') {\n        spectrum.yFactor = parseFloat(dataValue);\n      } else if (dataLabel === 'MAXX') {\n        spectrum.maxX = parseFloat(dataValue);\n      } else if (dataLabel === 'MINX') {\n        spectrum.minX = parseFloat(dataValue);\n      } else if (dataLabel === 'MAXY') {\n        spectrum.maxY = parseFloat(dataValue);\n      } else if (dataLabel === 'MINY') {\n        spectrum.minY = parseFloat(dataValue);\n      } else if (dataLabel === 'DELTAX') {\n        spectrum.deltaX = parseFloat(dataValue);\n      } else if (dataLabel === '.OBSERVEFREQUENCY' || dataLabel === '$SFO1') {\n        if (!spectrum.observeFrequency) {\n          spectrum.observeFrequency = parseFloat(dataValue);\n        }\n      } else if (dataLabel === '.OBSERVENUCLEUS') {\n        if (!spectrum.xType) {\n          result.xType = dataValue.replace(/[^a-zA-Z0-9]/g, '');\n        }\n      } else if (dataLabel === '$SFO2') {\n        if (!result.indirectFrequency) {\n          result.indirectFrequency = parseFloat(dataValue);\n        }\n      } else if (dataLabel === '$OFFSET') {\n        // OFFSET for Bruker spectra\n        result.shiftOffsetNum = 0;\n        if (!spectrum.shiftOffsetVal) {\n          spectrum.shiftOffsetVal = parseFloat(dataValue);\n        }\n      } else if (dataLabel === '$REFERENCEPOINT') {\n        // OFFSET for Varian spectra\n        // if we activate this part it does not work for ACD specmanager\n        //         } else if (dataLabel=='.SHIFTREFERENCE') {   // OFFSET FOR Bruker Spectra\n        //                 var parts = dataValue.split(/ *, */);\n        //                 result.shiftOffsetNum = parseInt(parts[2].trim());\n        //                 spectrum.shiftOffsetVal = parseFloat(parts[3].trim());\n      } else if (dataLabel === 'VARNAME') {\n        ntuples.varname = dataValue.split(ntuplesSeparator);\n      } else if (dataLabel === 'SYMBOL') {\n        ntuples.symbol = dataValue.split(ntuplesSeparator);\n      } else if (dataLabel === 'VARTYPE') {\n        ntuples.vartype = dataValue.split(ntuplesSeparator);\n      } else if (dataLabel === 'VARFORM') {\n        ntuples.varform = dataValue.split(ntuplesSeparator);\n      } else if (dataLabel === 'VARDIM') {\n        ntuples.vardim = convertToFloatArray(dataValue.split(ntuplesSeparator));\n      } else if (dataLabel === 'UNITS') {\n        ntuples.units = dataValue.split(ntuplesSeparator);\n      } else if (dataLabel === 'FACTOR') {\n        ntuples.factor = convertToFloatArray(dataValue.split(ntuplesSeparator));\n      } else if (dataLabel === 'FIRST') {\n        ntuples.first = convertToFloatArray(dataValue.split(ntuplesSeparator));\n      } else if (dataLabel === 'LAST') {\n        ntuples.last = convertToFloatArray(dataValue.split(ntuplesSeparator));\n      } else if (dataLabel === 'MIN') {\n        ntuples.min = convertToFloatArray(dataValue.split(ntuplesSeparator));\n      } else if (dataLabel === 'MAX') {\n        ntuples.max = convertToFloatArray(dataValue.split(ntuplesSeparator));\n      } else if (dataLabel === '.NUCLEUS') {\n        if (result.twoD) {\n          result.yType = dataValue.split(ntuplesSeparator)[0];\n        }\n      } else if (dataLabel === 'PAGE') {\n        spectrum.page = dataValue.trim();\n        spectrum.pageValue = parseFloat(dataValue.replace(/^.*=/, ''));\n        spectrum.pageSymbol = spectrum.page.replace(/[=].*/, '');\n        var pageSymbolIndex = ntuples.symbol.indexOf(spectrum.pageSymbol);\n        var unit = '';\n        if (ntuples.units && ntuples.units[pageSymbolIndex]) {\n          unit = ntuples.units[pageSymbolIndex];\n        }\n        if (result.indirectFrequency && unit !== 'PPM') {\n          spectrum.pageValue /= result.indirectFrequency;\n        }\n      } else if (dataLabel === 'RETENTIONTIME') {\n        spectrum.pageValue = parseFloat(dataValue);\n      } else if (isMSField(dataLabel)) {\n        spectrum[convertMSFieldToLabel(dataLabel)] = dataValue;\n      } else if (dataLabel === 'SAMPLEDESCRIPTION') {\n        spectrum.sampleDescription = dataValue;\n      }\n      if (dataLabel.match(options.keepRecordsRegExp)) {\n        if (result.info[dataLabel]) {\n          if (!Array.isArray(result.info[dataLabel])) {\n            result.info[dataLabel] = [result.info[dataLabel]];\n          }\n          result.info[dataLabel].push(dataValue.trim());\n        } else {\n          result.info[dataLabel] = dataValue.trim();\n        }\n      }\n    }\n\n    if (result.profiling) {\n      result.profiling.push({\n        action: 'Finished parsing',\n        time: Date.now() - start\n      });\n    }\n\n    if (Object.keys(ntuples).length > 0) {\n      var newNtuples = [];\n      var keys = Object.keys(ntuples);\n      for (let i = 0; i < keys.length; i++) {\n        var key = keys[i];\n        var values = ntuples[key];\n        for (let j = 0; j < values.length; j++) {\n          if (!newNtuples[j]) newNtuples[j] = {};\n          newNtuples[j][key] = values[j];\n        }\n      }\n      result.ntuples = newNtuples;\n    }\n\n    if (result.twoD && wantXY) {\n      add2D(result, options);\n      if (result.profiling) {\n        result.profiling.push({\n          action: 'Finished countour plot calculation',\n          time: Date.now() - start\n        });\n      }\n      if (!options.keepSpectra) {\n        delete result.spectra;\n      }\n    }\n\n    if (options.chromatogram) {\n      options.xy = true;\n    }\n\n    if (options.xy && wantXY) {\n      // the spectraData should not be a oneD array but an object with x and y\n      if (spectra.length > 0) {\n        for (let i = 0; i < spectra.length; i++) {\n          spectrum = spectra[i];\n          if (spectrum.data.length > 0) {\n            for (let j = 0; j < spectrum.data.length; j++) {\n              var data = spectrum.data[j];\n              var newData = {\n                x: new Array(data.length / 2),\n                y: new Array(data.length / 2)\n              };\n              for (var k = 0; k < data.length; k = k + 2) {\n                newData.x[k / 2] = data[k];\n                newData.y[k / 2] = data[k + 1];\n              }\n              spectrum.data[j] = newData;\n            }\n          }\n        }\n      }\n    }\n\n    // maybe it is a GC (HPLC) / MS. In this case we add a new format\n    if (options.chromatogram) {\n      if (result.spectra.length > 1) {\n        complexChromatogram(result);\n      } else {\n        simpleChromatogram(result);\n      }\n      if (result.profiling) {\n        result.profiling.push({\n          action: 'Finished chromatogram calculation',\n          time: Date.now() - start\n        });\n      }\n    }\n\n    if (result.profiling) {\n      result.profiling.push({\n        action: 'Total time',\n        time: Date.now() - start\n      });\n    }\n\n    return result;\n  }\n\n  function convertMSFieldToLabel(value) {\n    return value.toLowerCase().replace(/[^a-z0-9]/g, '');\n  }\n\n  function isMSField(dataLabel) {\n    return GC_MS_FIELDS.indexOf(dataLabel) !== -1;\n  }\n\n  function complexChromatogram(result) {\n    var spectra = result.spectra;\n    var length = spectra.length;\n    var chromatogram = {\n      times: new Array(length),\n      series: {\n        ms: {\n          dimension: 2,\n          data: new Array(length)\n        }\n      }\n    };\n\n    var existingGCMSFields = [];\n    for (let i = 0; i < GC_MS_FIELDS.length; i++) {\n      var label = convertMSFieldToLabel(GC_MS_FIELDS[i]);\n      if (spectra[0][label]) {\n        existingGCMSFields.push(label);\n        chromatogram.series[label] = {\n          dimension: 1,\n          data: new Array(length)\n        };\n      }\n    }\n\n    for (let i = 0; i < length; i++) {\n      var spectrum = spectra[i];\n      chromatogram.times[i] = spectrum.pageValue;\n      for (let j = 0; j < existingGCMSFields.length; j++) {\n        chromatogram.series[existingGCMSFields[j]].data[i] = parseFloat(\n          spectrum[existingGCMSFields[j]]\n        );\n      }\n      if (spectrum.data) {\n        chromatogram.series.ms.data[i] = [\n          spectrum.data[0].x,\n          spectrum.data[0].y\n        ];\n      }\n    }\n    result.chromatogram = chromatogram;\n  }\n\n  function simpleChromatogram(result) {\n    var data = result.spectra[0].data[0];\n    result.chromatogram = {\n      times: data.x.slice(),\n      series: {\n        intensity: {\n          dimension: 1,\n          data: data.y.slice()\n        }\n      }\n    };\n  }\n\n  function prepareSpectrum(result, spectrum) {\n    if (!spectrum.xFactor) spectrum.xFactor = 1;\n    if (!spectrum.yFactor) spectrum.yFactor = 1;\n    if (spectrum.observeFrequency) {\n      if (spectrum.xUnit && spectrum.xUnit.toUpperCase() === 'HZ') {\n        spectrum.xUnit = 'PPM';\n        spectrum.xFactor = spectrum.xFactor / spectrum.observeFrequency;\n        spectrum.firstX = spectrum.firstX / spectrum.observeFrequency;\n        spectrum.lastX = spectrum.lastX / spectrum.observeFrequency;\n        spectrum.deltaX = spectrum.deltaX / spectrum.observeFrequency;\n      }\n    }\n    if (spectrum.shiftOffsetVal) {\n      var shift = spectrum.firstX - spectrum.shiftOffsetVal;\n      spectrum.firstX = spectrum.firstX - shift;\n      spectrum.lastX = spectrum.lastX - shift;\n    }\n  }\n\n  function getMedian(data) {\n    data = data.sort(compareNumbers);\n    var l = data.length;\n    return data[Math.floor(l / 2)];\n  }\n\n  function compareNumbers(a, b) {\n    return a - b;\n  }\n\n  function convertTo3DZ(spectra) {\n    var minZ = spectra[0].data[0][0];\n    var maxZ = minZ;\n    var ySize = spectra.length;\n    var xSize = spectra[0].data[0].length / 2;\n    var z = new Array(ySize);\n    for (let i = 0; i < ySize; i++) {\n      z[i] = new Array(xSize);\n      var xVector = spectra[i].data[0];\n      for (let j = 0; j < xSize; j++) {\n        var value = xVector[j * 2 + 1];\n        z[i][j] = value;\n        if (value < minZ) minZ = value;\n        if (value > maxZ) maxZ = value;\n      }\n    }\n\n    const firstX = spectra[0].data[0][0];\n    const lastX = spectra[0].data[0][spectra[0].data[0].length - 2]; // has to be -2 because it is a 1D array [x,y,x,y,...]\n    const firstY = spectra[0].pageValue;\n    const lastY = spectra[ySize - 1].pageValue;\n\n    // Because the min / max value are the only information about the matrix if we invert\n    // min and max we need to invert the array\n    if (firstX > lastX) {\n      for (let spectrum of z) {\n        spectrum.reverse();\n      }\n    }\n    if (firstY > lastY) {\n      z.reverse();\n    }\n\n    return {\n      z: z,\n      minX: Math.min(firstX, lastX),\n      maxX: Math.max(firstX, lastX),\n      minY: Math.min(firstY, lastY),\n      maxY: Math.max(firstY, lastY),\n      minZ: minZ,\n      maxZ: maxZ,\n      noise: getMedian(z[0].map(Math.abs))\n    };\n  }\n\n  function add2D(result, options) {\n    var zData = convertTo3DZ(result.spectra);\n    if (!options.noContour) {\n      result.contourLines = generateContourLines(zData, options);\n      delete zData.z;\n    }\n    result.minMax = zData;\n  }\n\n  function generateContourLines(zData, options) {\n    var noise = zData.noise;\n    var z = zData.z;\n    var povarHeight0, povarHeight1, povarHeight2, povarHeight3;\n    var isOver0, isOver1, isOver2, isOver3;\n    var nbSubSpectra = z.length;\n    var nbPovars = z[0].length;\n    var pAx, pAy, pBx, pBy;\n\n    var x0 = zData.minX;\n    var xN = zData.maxX;\n    var dx = (xN - x0) / (nbPovars - 1);\n    var y0 = zData.minY;\n    var yN = zData.maxY;\n    var dy = (yN - y0) / (nbSubSpectra - 1);\n    var minZ = zData.minZ;\n    var maxZ = zData.maxZ;\n\n    // System.out.prvarln('y0 '+y0+' yN '+yN);\n    // -------------------------\n    // Povars attribution\n    //\n    // 0----1\n    // |  / |\n    // | /  |\n    // 2----3\n    //\n    // ---------------------d------\n\n    var iter = options.nbContourLevels * 2;\n    var contourLevels = new Array(iter);\n    var lineZValue;\n    for (var level = 0; level < iter; level++) {\n      // multiply by 2 for positif and negatif\n      var contourLevel = {};\n      contourLevels[level] = contourLevel;\n      var side = level % 2;\n      var factor =\n        (maxZ - options.noiseMultiplier * noise) *\n        Math.exp((level >> 1) - options.nbContourLevels);\n      if (side === 0) {\n        lineZValue = factor + options.noiseMultiplier * noise;\n      } else {\n        lineZValue = 0 - factor - options.noiseMultiplier * noise;\n      }\n      var lines = [];\n      contourLevel.zValue = lineZValue;\n      contourLevel.lines = lines;\n\n      if (lineZValue <= minZ || lineZValue >= maxZ) continue;\n\n      for (var iSubSpectra = 0; iSubSpectra < nbSubSpectra - 1; iSubSpectra++) {\n        var subSpectra = z[iSubSpectra];\n        var subSpectraAfter = z[iSubSpectra + 1];\n        for (var povar = 0; povar < nbPovars - 1; povar++) {\n          povarHeight0 = subSpectra[povar];\n          povarHeight1 = subSpectra[povar + 1];\n          povarHeight2 = subSpectraAfter[povar];\n          povarHeight3 = subSpectraAfter[povar + 1];\n\n          isOver0 = povarHeight0 > lineZValue;\n          isOver1 = povarHeight1 > lineZValue;\n          isOver2 = povarHeight2 > lineZValue;\n          isOver3 = povarHeight3 > lineZValue;\n\n          // Example povar0 is over the plane and povar1 and\n          // povar2 are below, we find the varersections and add\n          // the segment\n          if (isOver0 !== isOver1 && isOver0 !== isOver2) {\n            pAx =\n              povar +\n              (lineZValue - povarHeight0) / (povarHeight1 - povarHeight0);\n            pAy = iSubSpectra;\n            pBx = povar;\n            pBy =\n              iSubSpectra +\n              (lineZValue - povarHeight0) / (povarHeight2 - povarHeight0);\n            lines.push(pAx * dx + x0);\n            lines.push(pAy * dy + y0);\n            lines.push(pBx * dx + x0);\n            lines.push(pBy * dy + y0);\n          }\n          // remove push does not help !!!!\n          if (isOver3 !== isOver1 && isOver3 !== isOver2) {\n            pAx = povar + 1;\n            pAy =\n              iSubSpectra +\n              1 -\n              (lineZValue - povarHeight3) / (povarHeight1 - povarHeight3);\n            pBx =\n              povar +\n              1 -\n              (lineZValue - povarHeight3) / (povarHeight2 - povarHeight3);\n            pBy = iSubSpectra + 1;\n            lines.push(pAx * dx + x0);\n            lines.push(pAy * dy + y0);\n            lines.push(pBx * dx + x0);\n            lines.push(pBy * dy + y0);\n          }\n          // test around the diagonal\n          if (isOver1 !== isOver2) {\n            pAx =\n              (povar +\n                1 -\n                (lineZValue - povarHeight1) / (povarHeight2 - povarHeight1)) *\n                dx +\n              x0;\n            pAy =\n              (iSubSpectra +\n                (lineZValue - povarHeight1) / (povarHeight2 - povarHeight1)) *\n                dy +\n              y0;\n            if (isOver1 !== isOver0) {\n              pBx =\n                povar +\n                1 -\n                (lineZValue - povarHeight1) / (povarHeight0 - povarHeight1);\n              pBy = iSubSpectra;\n              lines.push(pAx);\n              lines.push(pAy);\n              lines.push(pBx * dx + x0);\n              lines.push(pBy * dy + y0);\n            }\n            if (isOver2 !== isOver0) {\n              pBx = povar;\n              pBy =\n                iSubSpectra +\n                1 -\n                (lineZValue - povarHeight2) / (povarHeight0 - povarHeight2);\n              lines.push(pAx);\n              lines.push(pAy);\n              lines.push(pBx * dx + x0);\n              lines.push(pBy * dy + y0);\n            }\n            if (isOver1 !== isOver3) {\n              pBx = povar + 1;\n              pBy =\n                iSubSpectra +\n                (lineZValue - povarHeight1) / (povarHeight3 - povarHeight1);\n              lines.push(pAx);\n              lines.push(pAy);\n              lines.push(pBx * dx + x0);\n              lines.push(pBy * dy + y0);\n            }\n            if (isOver2 !== isOver3) {\n              pBx =\n                povar +\n                (lineZValue - povarHeight2) / (povarHeight3 - povarHeight2);\n              pBy = iSubSpectra + 1;\n              lines.push(pAx);\n              lines.push(pAy);\n              lines.push(pBx * dx + x0);\n              lines.push(pBy * dy + y0);\n            }\n          }\n        }\n      }\n    }\n\n    return {\n      minX: zData.minX,\n      maxX: zData.maxX,\n      minY: zData.minY,\n      maxY: zData.maxY,\n      segments: contourLevels\n    };\n  }\n\n  function fastParseXYData(spectrum, value) {\n    // TODO need to deal with result\n    //  console.log(value);\n    // we check if deltaX is defined otherwise we calculate it\n\n    var yFactor = spectrum.yFactor;\n    var deltaX = spectrum.deltaX;\n\n    spectrum.isXYdata = true;\n    // TODO to be improved using 2 array {x:[], y:[]}\n    var currentData = [];\n    spectrum.data = [currentData];\n\n    var currentX = spectrum.firstX;\n    var currentY = spectrum.firstY;\n\n    // we skip the first line\n    //\n    var endLine = false;\n    var ascii;\n    let i = 0;\n    for (; i < value.length; i++) {\n      ascii = value.charCodeAt(i);\n      if (ascii === 13 || ascii === 10) {\n        endLine = true;\n      } else {\n        if (endLine) break;\n      }\n    }\n\n    // we proceed taking the i after the first line\n    var newLine = true;\n    var isDifference = false;\n    var isLastDifference = false;\n    var lastDifference = 0;\n    var isDuplicate = false;\n    var inComment = false;\n    var currentValue = 0; // can be a difference or a duplicate\n    var lastValue = 0; // must be the real last value\n    var isNegative = false;\n    var inValue = false;\n    var skipFirstValue = false;\n    var decimalPosition = 0;\n    for (; i <= value.length; i++) {\n      if (i === value.length) ascii = 13;\n      else ascii = value.charCodeAt(i);\n      if (inComment) {\n        // we should ignore the text if we are after $$\n        if (ascii === 13 || ascii === 10) {\n          newLine = true;\n          inComment = false;\n        }\n      } else {\n        // when is it a new value ?\n        // when it is not a digit, . or comma\n        // it is a number that is either new or we continue\n        if (ascii <= 57 && ascii >= 48) {\n          // a number\n          inValue = true;\n          if (decimalPosition > 0) {\n            currentValue += (ascii - 48) / Math.pow(10, decimalPosition++);\n          } else {\n            currentValue *= 10;\n            currentValue += ascii - 48;\n          }\n        } else if (ascii === 44 || ascii === 46) {\n          // a \",\" or \".\"\n          inValue = true;\n          decimalPosition++;\n        } else {\n          if (inValue) {\n            // need to process the previous value\n            if (newLine) {\n              newLine = false; // we don't check the X value\n              // console.log(\"NEW LINE\",isDifference, lastDifference);\n              // if new line and lastDifference, the first value is just a check !\n              // that we don't check ...\n              if (isLastDifference) skipFirstValue = true;\n            } else {\n              // need to deal with duplicate and differences\n              if (skipFirstValue) {\n                skipFirstValue = false;\n              } else {\n                if (isDifference) {\n                  lastDifference = isNegative ? 0 - currentValue : currentValue;\n                  isLastDifference = true;\n                  isDifference = false;\n                } else if (!isDuplicate) {\n                  lastValue = isNegative ? 0 - currentValue : currentValue;\n                }\n                var duplicate = isDuplicate ? currentValue - 1 : 1;\n                for (var j = 0; j < duplicate; j++) {\n                  if (isLastDifference) {\n                    currentY += lastDifference;\n                  } else {\n                    currentY = lastValue;\n                  }\n                  currentData.push(currentX);\n                  currentData.push(currentY * yFactor);\n                  currentX += deltaX;\n                }\n              }\n            }\n            isNegative = false;\n            currentValue = 0;\n            decimalPosition = 0;\n            inValue = false;\n            isDuplicate = false;\n          }\n\n          // positive SQZ digits @ A B C D E F G H I (ascii 64-73)\n          if (ascii < 74 && ascii > 63) {\n            inValue = true;\n            isLastDifference = false;\n            currentValue = ascii - 64;\n          } else if (ascii > 96 && ascii < 106) {\n            // negative SQZ digits a b c d e f g h i (ascii 97-105)\n            inValue = true;\n            isLastDifference = false;\n            currentValue = ascii - 96;\n            isNegative = true;\n          } else if (ascii === 115) {\n            // DUP digits S T U V W X Y Z s (ascii 83-90, 115)\n            inValue = true;\n            isDuplicate = true;\n            currentValue = 9;\n          } else if (ascii > 82 && ascii < 91) {\n            inValue = true;\n            isDuplicate = true;\n            currentValue = ascii - 82;\n          } else if (ascii > 73 && ascii < 83) {\n            // positive DIF digits % J K L M N O P Q R (ascii 37, 74-82)\n            inValue = true;\n            isDifference = true;\n            currentValue = ascii - 73;\n          } else if (ascii > 105 && ascii < 115) {\n            // negative DIF digits j k l m n o p q r (ascii 106-114)\n            inValue = true;\n            isDifference = true;\n            currentValue = ascii - 105;\n            isNegative = true;\n          } else if (ascii === 36 && value.charCodeAt(i + 1) === 36) {\n            // $ sign, we need to check the next one\n            inValue = true;\n            inComment = true;\n          } else if (ascii === 37) {\n            // positive DIF digits % J K L M N O P Q R (ascii 37, 74-82)\n            inValue = true;\n            isDifference = true;\n            currentValue = 0;\n            isNegative = false;\n          } else if (ascii === 45) {\n            // a \"-\"\n            // check if after there is a number, decimal or comma\n            var ascii2 = value.charCodeAt(i + 1);\n            if (\n              (ascii2 >= 48 && ascii2 <= 57) ||\n              ascii2 === 44 ||\n              ascii2 === 46\n            ) {\n              inValue = true;\n              if (!newLine) isLastDifference = false;\n              isNegative = true;\n            }\n          } else if (ascii === 13 || ascii === 10) {\n            newLine = true;\n            inComment = false;\n          }\n          // and now analyse the details ... space or tabulation\n          // if \"+\" we just don't care\n        }\n      }\n    }\n  }\n\n  function parseXYA(spectrum, value) {\n    var removeSymbolRegExp = /(\\(+|\\)+|<+|>+|\\s+)/g;\n\n    spectrum.isXYAdata = true;\n    var values;\n    var currentData = [];\n    spectrum.data = [currentData];\n\n    var lines = value.split(/,? *,?[;\\r\\n]+ */);\n\n    for (let i = 1; i < lines.length; i++) {\n      values = lines[i]\n        .trim()\n        .replace(removeSymbolRegExp, '')\n        .split(',');\n      currentData.push(parseFloat(values[0]));\n      currentData.push(parseFloat(values[1]));\n    }\n  }\n\n  function parsePeakTable(spectrum, value, result) {\n    var removeCommentRegExp = /\\$\\$.*/;\n    var peakTableSplitRegExp = /[,\\t ]+/;\n\n    spectrum.isPeaktable = true;\n    var values;\n    var currentData = [];\n    spectrum.data = [currentData];\n\n    // counts for around 20% of the time\n    var lines = value.split(/,? *,?[;\\r\\n]+ */);\n\n    for (let i = 1; i < lines.length; i++) {\n      values = lines[i]\n        .trim()\n        .replace(removeCommentRegExp, '')\n        .split(peakTableSplitRegExp);\n      if (values.length % 2 === 0) {\n        for (let j = 0; j < values.length; j = j + 2) {\n          // takes around 40% of the time to add and parse the 2 values nearly exclusively because of parseFloat\n          currentData.push(parseFloat(values[j]) * spectrum.xFactor);\n          currentData.push(parseFloat(values[j + 1]) * spectrum.yFactor);\n        }\n      } else {\n        result.logs.push(`Format error: ${values}`);\n      }\n    }\n  }\n\n  return convert;\n}\n\nvar convert = getConverter();\n\nfunction JcampConverter(input, options, useWorker) {\n  if (typeof options === 'boolean') {\n    useWorker = options;\n    options = {};\n  }\n  if (useWorker) {\n    return postToWorker(input, options);\n  } else {\n    return convert(input, options);\n  }\n}\n\nvar stamps = {};\nvar worker;\n\nfunction postToWorker(input, options) {\n  if (!worker) {\n    createWorker();\n  }\n  return new Promise(function (resolve) {\n    var stamp = `${Date.now()}${Math.random()}`;\n    stamps[stamp] = resolve;\n    worker.postMessage(\n      JSON.stringify({\n        stamp: stamp,\n        input: input,\n        options: options\n      })\n    );\n  });\n}\n\nfunction createWorker() {\n  var workerURL = URL.createObjectURL(\n    new Blob(\n      [`var getConverter =${getConverter.toString()};var convert = getConverter(); onmessage = function (event) { var data = JSON.parse(event.data); postMessage(JSON.stringify({stamp: data.stamp, output: convert(data.input, data.options)})); };`],\n      { type: 'application/javascript' }\n    )\n  );\n  worker = new Worker(workerURL);\n  URL.revokeObjectURL(workerURL);\n  worker.addEventListener('message', function (event) {\n    var data = JSON.parse(event.data);\n    var stamp = data.stamp;\n    if (stamps[stamp]) {\n      stamps[stamp](data.output);\n    }\n  });\n}\n\nfunction createTree(jcamp, options = {}) {\n  const { flatten = false } = options;\n  if (typeof jcamp !== 'string') {\n    throw new TypeError('the JCAMP should be a string');\n  }\n\n  let lines = jcamp.split(/[\\r\\n]+/);\n  let flat = [];\n  let stack = [];\n  let result = [];\n  let current;\n  let ntupleLevel = 0;\n\n  let spaces = jcamp.includes('## ');\n\n  for (var i = 0; i < lines.length; i++) {\n    let line = lines[i];\n    let labelLine = spaces ? line.replace(/ /g, '') : line;\n\n    if (labelLine.substring(0, 9) === '##NTUPLES') {\n      ntupleLevel++;\n    }\n\n    if (labelLine.substring(0, 7) === '##TITLE') {\n      let title = [labelLine.substring(8).trim()];\n      for (let j = i + 1; j < lines.length; j++) {\n        if (lines[j].startsWith('##')) {\n          break;\n        } else {\n          title.push(lines[j].trim());\n        }\n      }\n      stack.push({\n        title: title.join('\\n'),\n        jcamp: `${line}\\n`,\n        children: []\n      });\n      current = stack[stack.length - 1];\n      flat.push(current);\n    } else if (labelLine.substring(0, 5) === '##END' && ntupleLevel === 0) {\n      current.jcamp += `${line}\\n`;\n      var finished = stack.pop();\n      if (stack.length !== 0) {\n        current = stack[stack.length - 1];\n        current.children.push(finished);\n      } else {\n        current = undefined;\n        result.push(finished);\n      }\n    } else if (current && current.jcamp) {\n      current.jcamp += `${line}\\n`;\n      var match = labelLine.match(/^##(.*?)=(.+)/);\n      if (match) {\n        var dataLabel = match[1].replace(/[ _-]/g, '').toUpperCase();\n        if (dataLabel === 'DATATYPE') {\n          current.dataType = match[2].trim();\n        }\n      }\n    }\n\n    if (labelLine.substring(0, 5) === '##END' && ntupleLevel > 0) {\n      ntupleLevel--;\n    }\n  }\n  if (flatten) {\n    flat.forEach((entry) => {\n      entry.children = undefined;\n    });\n    return flat;\n  } else {\n    return result;\n  }\n}\n\nmodule.exports = {\n  convert: JcampConverter,\n  createTree: createTree\n};\n","export default function sortX(points, options = {}) {\n  const { x, y } = points;\n  const { reverse = false } = options;\n\n  var sortFunc;\n  if (!reverse) {\n    sortFunc = (a, b) => a.x - b.x;\n  } else {\n    sortFunc = (a, b) => b.x - a.x;\n  }\n\n  var grouped = x\n    .map((val, index) => ({\n      x: val,\n      y: y[index]\n    }))\n    .sort(sortFunc);\n\n  var response = { x: x.slice(), y: y.slice() };\n  for (var i = 0; i < x.length; i++) {\n    response.x[i] = grouped[i].x;\n    response.y[i] = grouped[i].y;\n  }\n\n  return response;\n}\n","'use strict';\n\n/**\n * In place modification of the 2 arrays to make X unique and sum the Y if X has the same value\n * @param xs\n * @param ys\n */\n\nfunction uniqueX(xs, ys) {\n    if (xs.length < 2) return;\n\n    var current = xs[0];\n    var counter = 0;\n\n    for (var i = 1; i < xs.length; i++) {\n        if (current !== xs[i]) {\n            counter++;\n            current = xs[i];\n            xs[counter] = xs[i];\n            if (i !== counter) {\n                ys[counter] = 0;\n            }\n        }\n        if (i !== counter) {\n            ys[counter] += ys[i];\n        }\n\n    }\n\n    xs.length = counter + 1;\n    ys.length = counter + 1;\n}\n\nmodule.exports = uniqueX;\n","import uniqueXFunction from 'ml-arrayxy-uniquex';\n\n/**\n * Parse a text-file and convert it to an array of XY points\n * @param {string} text - csv or tsv strings\n * @param {object} [options]\n * @param {string} [options.arrayType = 'xyxy'] - xxyy or xyxy\n * * 'xxyy' `[[x1,x2,x3,...],[y1,y2,y2,...]]`\n * * 'xyxy' `[[x1,y1],[x2,y2],[x3,y3], ...]]`\n * @param {boolean} [options.normalize = false] - will set the maximum value to 1\n * @param {boolean} [options.uniqueX = false] - Make the X values unique (works only with 'xxyy' format). If the X value is repeated the sum of Y is done.\n * @param {number} [options.xColumn = 0] - A number that specifies the x column\n * @param {number} [options.yColumn = 1] - A number that specifies the y column\n * @param {number} [options.maxNumberColumns = (Math.max(xColumn, yColumn)+1)] - A number that specifies the maximum number of y columns\n * @param {number} [options.minNumberColumns = (Math.max(xColumn, yColumn)+1)] - A number that specifies the minimum number of y columns\n * @param {boolean} [options.keepInfo = false] - shoud we keep the non numeric lines. In this case the system will return an object {data, info}\n * @return {Array<Array<number>>} - check the 'arrayType' option\n */\nexport function parseXY(text, options = {}) {\n  const {\n    normalize = false,\n    uniqueX = false,\n    arrayType = 'xyxy',\n    xColumn = 0,\n    yColumn = 1,\n    keepInfo = false,\n    maxNumberColumns = Math.max(xColumn, yColumn) + 1,\n    minNumberColumns = Math.max(xColumn, yColumn) + 1\n  } = options;\n\n  var lines = text.split(/[\\r\\n]+/);\n\n  if (arrayType !== 'xxyy' && arrayType !== 'xyxy') {\n    throw new Error(`unsupported arrayType (${arrayType})`);\n  }\n\n  var maxY = Number.MIN_VALUE;\n  var result = [[], []];\n  var info = [];\n  for (var l = 0; l < lines.length; l++) {\n    var line = lines[l].trim();\n    // we will consider only lines that contains only numbers\n    if (line.match(/[0-9]+/) && line.match(/^[0-9eE,;. \\t+-]+$/)) {\n      var fields = line.split(/,[; \\t]+|[; \\t]+/);\n      if (fields.length === 1) {\n        fields = line.split(/[,; \\t]+/);\n      }\n      if (\n        fields &&\n                fields.length >= minNumberColumns &&\n                fields.length <= maxNumberColumns\n      ) {\n        let x = parseFloat(fields[xColumn].replace(',', '.'));\n        let y = parseFloat(fields[yColumn].replace(',', '.'));\n\n        if (y > maxY) maxY = y;\n        result[0].push(x);\n        result[1].push(y);\n      }\n    } else if (line) {\n      info.push({ position: result[0].length, value: line });\n    }\n  }\n\n  if (normalize) {\n    for (var i = 0; i < result[0].length; i++) {\n      result[1][i] /= maxY;\n    }\n  }\n\n  if (uniqueX) {\n    uniqueXFunction(result[0], result[1]);\n  }\n\n  if (arrayType === 'xyxy') {\n    var newResult = [];\n    for (let i = 0; i < result[0].length; i++) {\n      newResult.push([result[0][i], result[1][i]]);\n    }\n    result = newResult;\n  }\n\n  if (!keepInfo) return result;\n\n  return {\n    info,\n    data: result\n  };\n}\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar min = _interopDefault(require('ml-array-min'));\nvar max = _interopDefault(require('ml-array-max'));\nvar mlGsd = require('ml-gsd');\nvar jcampconverter = require('jcampconverter');\nvar sortX = _interopDefault(require('ml-array-xy-sort-x'));\nvar xyParser = require('xy-parser');\n\nfunction getAnnotations(spectrum, options = {}) {\n  const { fillColor = 'green', strokeColor = 'red', creationFct } = options;\n  const peaks = spectrum.peaks;\n  if (!peaks) return [];\n  let annotations = peaks.map(peak => {\n    var annotation = {\n      line: 1,\n      type: 'rect',\n      strokeColor: strokeColor,\n      strokeWidth: 0,\n      fillColor: fillColor\n    };\n    if (creationFct) {\n      creationFct(annotation, peak);\n    }\n    oneAnnotation(annotation, peak);\n    return annotation;\n  });\n\n  return annotations;\n}\n\nfunction oneAnnotation(annotation, peak) {\n  annotation.label = [\n    {\n      text: peak.kind,\n      size: '18px',\n      anchor: 'middle',\n      color: 'red',\n      position: {\n        x: peak.wavelength,\n        y: peak.intensity,\n        dy: '-15px'\n      }\n    }\n  ];\n  annotation.position = [\n    {\n      x: peak.wavelength,\n      y: peak.intensity,\n      dy: '-10px',\n      dx: '-1px'\n    },\n    {\n      x: peak.wavelength,\n      y: peak.intensity,\n      dy: '-5px',\n      dx: '1px'\n    }\n  ];\n}\n\n/**\n *\n * @param {Spectrum} spectrum\n * @param {object} peak\n */\n\nfunction addPeak(spectrum, peak = {}) {\n  if (!peak.wavelength) {\n    throw new Error('addPeak: peak mush have wavelength property');\n  }\n  const { wavelength, intensity } = peak;\n\n  for (let existing of spectrum.peaks) {\n    if (Number(existing.wavelength) === wavelength) return existing;\n  }\n  spectrum.peaks.push({\n    wavelength: wavelength,\n    intensity: intensity,\n    kind: getPeakKind(intensity, spectrum.minIntensity, spectrum.maxIntensity)\n  });\n  return peak;\n}\n\nfunction getPeakKind(intensity, minIntensity, maxIntensity) {\n  var position = intensity / (maxIntensity - minIntensity);\n  if (position < 0.33) {\n    return 'w';\n  } else if (position < 0.66) {\n    return 'm';\n  }\n  return 'S';\n}\n\n/**\n *\n * @param {Spectrum} spectrum\n * @param {number} targetWavelength\n * @param {object} [options]\n * @param {number} [options.range=0] Search in a range around the targetWavelength\n * @param {boolean} [options.optimize=false] Search for the closest peak to the targetWavelength\n */\n\nfunction peakPicking(spectrum, targetWavelength, options = {}) {\n  const { range = 0, optimize = false } = options;\n\n  // find the peak that is the closest to the click\n  let bestPeak = getClosest(spectrum, targetWavelength);\n\n  if (optimize) {\n    findClosest(spectrum, bestPeak);\n  } else if (range) {\n    bestInRange(spectrum, bestPeak, targetWavelength, range);\n  }\n\n  return addPeak(spectrum, bestPeak);\n}\n\nfunction getClosest(spectrum, targetWavelength) {\n  let bestPeak = {\n    intensity: spectrum.intensity[0],\n    wavelength: spectrum.wavelength[0],\n    index: 0\n  };\n\n  let error = Math.abs(targetWavelength - bestPeak.wavelength);\n  for (let i = 1; i < spectrum.wavelength.length; i++) {\n    let newError = Math.abs(targetWavelength - spectrum.wavelength[i]);\n    if (newError < error) {\n      error = newError;\n      setBestPeak(spectrum, bestPeak, i);\n    }\n  }\n  return bestPeak;\n}\n\nfunction bestInRange(spectrum, bestPeak, targetWavelength, range) {\n  // we search the minimum based on wavelength +/- range\n  for (let i = 0; i < spectrum.wavelength.length; i++) {\n    if (Math.abs(spectrum.wavelength[i] - targetWavelength) <= range) {\n      if (spectrum.intensity[i] > bestPeak.intensity) {\n        setBestPeak(spectrum, bestPeak, i);\n      }\n    }\n  }\n}\n\nfunction findClosest(spectrum, bestPeak) {\n  let index = bestPeak.index;\n  let previousIndex;\n  while (index !== previousIndex) {\n    previousIndex = index;\n    if (index > 0 && spectrum.intensity[index - 1] > bestPeak.intensity) {\n      index--;\n      setBestPeak(spectrum, bestPeak, index);\n    } else if (\n      index < spectrum.wavelength.length - 1 &&\n      spectrum.intensity[index + 1] > bestPeak.intensity\n    ) {\n      index++;\n      setBestPeak(spectrum, bestPeak, index);\n    }\n  }\n}\n\nfunction setBestPeak(spectrum, bestPeak, index) {\n  bestPeak.index = index;\n  bestPeak.wavelength = spectrum.wavelength[index];\n  bestPeak.intensity = spectrum.intensity[index];\n}\n\n/**\n *\n * @param {*} spectrum\n * @param {object} [options={}]\n * @param {number} [options.fromWavelength=0]\n * @param {number} [options.toWavelength=5000]\n * @param {number} [options.noiseLevel=0.01] - Specify the level of the noise\n * @param {number} [options.minMaxRatio=0.05] - Threshold to determine if a given peak should be considered as a noise\n * @param {boolean} [options.replaceExisting=true] - Replace existing peaks\n */\n\nfunction autoPeakPicking(spectrum, options = {}) {\n  const {\n    noiseLevel = 0.001,\n    minMaxRatio = 0.05,\n    fromWavelength = 0,\n    toWavelength = 5000,\n    replaceExisting = true\n  } = options;\n\n  let peaks = mlGsd.gsd(spectrum.wavelength, spectrum.absorbance, {\n    noiseLevel,\n    minMaxRatio,\n    realTopDetection: true,\n    maxCriteria: true,\n    smoothY: false,\n    sgOptions: { windowSize: 7, polynomial: 3 }\n  });\n\n  peaks = peaks.filter(\n    (peak) => peak.x >= fromWavelength && peak.x <= toWavelength\n  );\n\n  if (replaceExisting) {\n    while (spectrum.peaks.length) {\n      spectrum.peaks.pop();\n    }\n  }\n\n  peakLoop: for (let peak of peaks) {\n    for (let existing of spectrum.peaks) {\n      if (Number(existing.wavelength) === Number(peak.x)) continue peakLoop;\n    }\n    addPeak(spectrum, {\n      wavelength: peak.x,\n      absorbance: peak.y\n    });\n  }\n}\n\n/**\n * Class allowing manipulate one Raman spectrum\n * @class spectrum\n * @param {object} [json={}] - object containing a spectrum\n * @param {Array} [json.wavelength=[]] - wavelength\n * @param {Array} [json.intensity=[]] - intensity values\n */\nclass Spectrum {\n  constructor(json) {\n    this.wavelength = json.wavelength || [];\n    this.intensity = json.intensity || [];\n    this.peaks = [];\n    check(this);\n  }\n\n  /**\n   *\n   * @param {Array} [peaks=[]] array of peaks. Peaks are composed of transmittance, wavelength, kind\n   */\n  setPeaks(peaks = []) {\n    this.peaks = peaks;\n  }\n\n  peakPicking(targetWavelength, options = {}) {\n    peakPicking(this, targetWavelength, options);\n  }\n\n  getData() {\n    return { x: this.wavelength, y: this.intensity };\n  }\n}\n\nSpectrum.prototype.getAnnotations = function(options) {\n  return getAnnotations(this, options);\n};\n\nSpectrum.prototype.autoPeakPicking = function(options) {\n  return autoPeakPicking(this, options);\n};\n\nfunction check(spectrum) {\n  if (spectrum.wavelength.length > 0) {\n    spectrum.minWavelength = min(spectrum.wavelength);\n  }\n  if (spectrum.wavelength.length > 0) {\n    spectrum.maxWavelength = max(spectrum.wavelength);\n  }\n  if (spectrum.intensity.length > 0) {\n    spectrum.minIntensity = min(spectrum.intensity);\n  }\n  if (spectrum.intensity.length > 0) {\n    spectrum.maxIntensity = max(spectrum.intensity);\n  }\n}\n\n/**\n * Creates a new Chromatogram element based in a JCAMP string\n * @param {string} jcamp - String containing the JCAMP data\n * @return {Spectrum} - New class element with the given data\n */\nfunction fromJcamp(jcamp) {\n  const data = jcampconverter.convert(jcamp, { xy: true });\n  let spectrum = data.spectra[0].data[0];\n  spectrum = sortX(spectrum);\n  return new Spectrum({\n    wavelength: spectrum.x,\n    intensity: spectrum.y\n  });\n}\n\n/**\n * Creates a new Chromatogram element based in a Txt string\n * @param {string} text - String containing the data as CSV or TSV\n * @param {object} [options] - Options object for the parser\n * @param {string} [options.kind] - Absorbance or Transmisstance\n * @return {Spectrum} - New class element with the given data\n */\nfunction fromText(text, options = {}) {\n  options = Object.assign({}, options, { arrayType: 'xxyy' });\n  const data = xyParser.parseXY(text, options);\n  let spectrum = sortX({ x: data[0], y: data[1] });\n\n  return new Spectrum({\n    wavelength: spectrum.x,\n    intensity: spectrum.y\n  });\n}\n\nexports.Spectrum = Spectrum;\nexports.fromJcamp = fromJcamp;\nexports.fromText = fromText;\n"],"names":["toString","Object","prototype","isAnyArray","object","call","endsWith","min","input","isArray","TypeError","length","i","max","hasOwn","hasOwnProperty","toStr","defineProperty","gOPD","getOwnPropertyDescriptor","arr","Array","isPlainObject","obj","hasOwnConstructor","hasIsPrototypeOf","constructor","key","setProperty","target","options","name","enumerable","configurable","value","newValue","writable","getProperty","extend","src","copy","copyIsArray","clone","arguments","deep","compareNumbers","a","b","exports","sum","values","Infinity","l","minMax","arithmeticMean","geometricMean","mul","Math","pow","logMean","lnsum","log","grandMean","means","samples","n","truncatedMean","percent","alreadySorted","undefined","slice","sort","k","floor","harmonicMean","RangeError","contraHarmonicMean","r1","r2","median","half","variance","unbiased","theMean","mean","theVariance","x","standardDeviation","sqrt","standardError","quartiles","quart","q1","ceil","q2","q3","pooledStandardDeviation","pooledVariance","vari","mode","itemCount","itemArray","count","index","indexOf","maxValue","maxIndex","covariance","vector1","vector2","mean1","mean2","cov","y","skewness","s2","s3","dev","m2","m3","g","kurtosis","s4","m4","v","c","entropy","eps","weightedMean","weights","weightedStandardDeviation","weightedVariance","z","w","center","inPlace","result","standardize","standardDev","cumulativeSum","array","defaultOptions","windowSize","derivative","polynomial","SavitzkyGolay","data","h","Number","isInteger","console","warn","np","ans","fullWeights","hs","constantH","wg1","wg2","d1","d2","getHs","wg","d","GramPoly","m","s","Grampoly","GenFact","gf","j","Weight","t","sgOptions","minMaxRatio","broadRatio","maxCriteria","smoothY","realTopDetection","heightFactor","boundaries","derivativeThreshold","gsd","yIn","assign","concat","maxDx","minDx","MAX_VALUE","tmp","abs","noiseLevel","getNoiseLevel","yCorrection","Y","dY","ddY","SG","X","dx","maxDdy","maxY","lastMax","lastMin","minddY","intervalL","intervalR","broadMask","minddYLen","intervalLLen","intervalRLen","broadMaskLen","signals","signalsLen","lastK","possible","frequency","distanceJ","minDistance","gettingCloser","width","soft","left","right","yLeft","yRight","height","base","stddev","averageDeviations","peakList","alpha","beta","gamma","p","currentPoint","log10","Symbol","species","for","LuDecomposition","matrix","Matrix","checkMatrix","lu","rows","columns","pivotVector","pivotSign","LUrowi","LUcolj","kmax","LU","isSingular","col","determinant","isSquare","Error","lowerTriangularMatrix","upperTriangularMatrix","pivotPermutationVector","solve","subMatrixRow","hypotenuse","r","util","getFilled2DArray","SingularValueDecomposition","nu","wantu","wantv","computeLeftSingularVectors","computeRightSingularVectors","autoTranspose","swapped","transpose","aux","U","V","e","work","nct","nrt","ks","f","cs","sn","kase","scale","sp","spm1","epm1","sk","ek","shift","pp","iter","condition","norm2","rank","tol","ii","diagonal","threshold","leftSingularVectors","isMatrix","rightSingularVectors","diagonalMatrix","diag","scols","Ls","zeros","VL","mmul","vrows","urows","VLU","solveForDiagonal","inverse","vcols","ucols","robustMeanAndStdev","stdev","l1","l2","dimension","cols","N","theSum","product","theProduct","sum1","sum2","medians","modes","skew","kurt","standardDeviations","standardErrors","sqrtN","scatter","divisor","correlation","scores","zScores","cor","jj","row","resultRow","sourceRow","isNaN","weightSum","arrayStat","weightedCovariance","s1","factor","weightedScatter","require$$0","require$$1","Stat","coordArrayToPoints","dimensions","pointsArr","point","coordArrayToCoordMatrix","coordinatesArray","points","coordMatrixToCoordArray","coordMatrix","coodinatesArray","resultMatrix","pointsToCoordArray","applyDotProduct","firstVector","secondVector","largestVector","smallestVector","difference","dotProductApplied","currentMin","coordMatrixToPoints","pointsToCoordMatrix","getEquallySpacedData","reverse","xLength","from","isFinite","to","temp","numberOfPoints","algorithm","variant","output","getEquallySpacedSlot","getEquallySpacedSmooth","step","halfStep","start","initialOriginalStep","lastOriginalStep","previousX","MIN_VALUE","previousY","nextX","nextY","currentValue","slope","intercept","sumAtMin","sumAtMax","getSlope","x0","y0","x1","y1","main","add","integral","lastStep","frontOutsideSpectra","backOutsideSpectra","currentPoints","SNV","std","module","require$$2","checkRowIndex","outer","checkColumnIndex","checkRowVector","vector","to1DArray","checkColumnVector","checkIndices","rowIndices","columnIndices","rowOut","some","columnOut","column","checkRange","startRow","endRow","startColumn","endColumn","notAllNumbers","arg","getRange","sumByRow","set","get","sumByColumn","sumAll","BaseView","abstractMatrix","MatrixTransposeView","rowIndex","columnIndex","MatrixRowView","MatrixSubView","MatrixSelectionView","indices","MatrixColumnView","MatrixFlipRowView","MatrixFlipColumnView","superCtor","from1DArray","newRows","newColumns","newData","newMatrix","rowVector","columnVector","empty","fill","ones","rand","rng","random","randInt","eye","matrix1","matrix2","klass","size","apply","callback","to2DArray","isRowVector","isColumnVector","isVector","isSymmetric","repeat","rowRep","colRep","setSubMatrix","neg","mulS","getRow","getRowVector","setRow","swapRows","row1","row2","getColumn","getColumnVector","setColumn","swapColumns","column1","column2","addRowVector","subRowVector","mulRowVector","divRowVector","addColumnVector","subColumnVector","mulColumnVector","divColumnVector","mulRow","mulColumn","idx","minIndex","maxRow","maxRowIndex","minRow","minRowIndex","maxColumn","maxColumnIndex","minColumn","minColumnIndex","by","prod","dot","other","Bcolj","strassen2x2","a11","b11","a12","b12","a21","b21","a22","b22","m1","m5","m6","m7","c00","c01","c10","c11","strassen3x3","a00","a01","a02","a10","a20","b00","b01","b02","b10","b20","m8","m9","m10","m11","m12","m13","m14","m15","m16","m17","m18","m19","m20","m21","m22","m23","c02","c12","c20","c21","c22","mmulStrassen","c1","c2","embed","mat","resultat","blockMult","halfRows","parseInt","halfCols","subMatrix","sub","scaleRows","scaled","arrayUtils","scaleColumns","kroneckerProduct","q","sortRows","compareFunction","sortColumns","subMatrixColumn","selection","trace","transposeView","rowView","columnView","flipRowView","flipColumnView","subMatrixView","selectionView","det","subMatrix0","subMatrix1","subMatrix2","pseudoInverse","EPSILON","svdSolution","SvDecomposition","identity","negate","tensorProduct","inplaceOperator","inplaceOperatorScalar","inplaceOperatorMatrix","staticOperator","inplaceMethod","staticMethod","inplaceMethodWithArgs","staticMethodWithArgs","inplaceMethodWithOneArgScalar","inplaceMethodWithOneArgMatrix","inplaceMethodWithOneArg","staticMethodWithOneArg","operators","operator","inplaceOp","eval","fillTemplateFunction","op","inplaceOpS","inplaceOpM","staticOp","methods","forEach","mathMethod","push","method","inplaceMeth","staticMeth","methodsWithArgs","methodWithArg","args","inplaceMethWithArgs","staticMethWithArgs","tmplVar","inplaceMethod2","inplaceMethodS","inplaceMethodM","staticMethod2","template","replace","RegExp","nRows","nColumns","removeRow","splice","addRow","removeColumn","addColumn","assumeSymmetric","EigenvalueDecomposition","tred2","tql2","H","ort","orthes","hqr2","realEigenvalues","imaginaryEigenvalues","eigenvectorMatrix","hh","dl1","c3","el1","tst1","low","high","nn","exshift","norm","ra","sa","vr","vi","notlast","cdivres","cdiv","xr","xi","yr","yi","QrDecomposition","qr","rdiag","nrm","QR","Rdiag","isFullRank","orthogonalMatrix","CholeskyDecomposition","positiveDefinite","Lrowj","Lrowk","L","B","inv","leftHandSide","rightHandSide","SVD","EVD","CHO","A","subtract","multiply","dotMultiply","dotDivide","div","exp","dotPow","LM","optimize","func","y_dat","weight","dp","p_min","p_max","opts","iteration","Npar","Npnt","p_old","y_old","X2","X2_old","J","length_t","length_y_dat","math","prnt","MaxIter","epsilon_1","epsilon_2","epsilon_3","epsilon_4","lambda_0","lambda_UP_fac","lambda_DN_fac","Update_Type","dp_array","Nfit","stop","weight_sq","lm_matx","JtWJ","JtWdy","Chi_sq","y_hat","lambda","hidx","p_try","delta_y","X2_try","JtWdy_th","rho","dX2","lm_FD_J","ps","del","lm_Broyden_J","h_t","Jt","algebra","sumOfLorentzians","nL","p2","singleLorentzian","singleGaussian","factor2","optimizeSingleLorentzian","xy","peak","xy2","parseData","percentage","y_data","nbPoints","create","LMOptions","consts","dt","p_init","p_fit","optimizeSingleGaussian","optimizeLorentzianTrain","group","currentIndex","tI","yI","current","optimizeGaussianTrain","optimizeLorentzianSum","optimizeGaussianSum","nbSeries","sampleFunction","lastIndex","sampleX","sampleY","direction","sign","delta","mid","optimizePeaks","fnType","groups","groupPeaks","sampling","error","peaks","limits","optPeaks","optPeak","upperLimit","lowerLimit","joinBroadPeaks","broadLines","maxI","candidates","indexes","fitted","Opt","broadenPeaks","overlap","nextPeak","require$$3","getConverter","ntuplesSeparator","GC_MS_FIELDS","convertToFloatArray","stringArray","floatArray","parseFloat","Spectrum","keepRecordsRegExp","withoutXY","chromatogram","keepSpectra","noContour","nbContourLevels","noiseMultiplier","profiling","convert","jcamp","wantXY","Date","now","ntuples","ldr","dataLabel","dataValue","ldrs","position","endLine","infos","logs","spectra","info","spectrum","action","time","split","substring","trim","toUpperCase","xIndex","yIndex","firstVariable","secondVariable","symbol","first","firstX","firstY","last","lastX","lastY","vardim","xFactor","yFactor","units","xUnit","yUnit","datatable","deltaX","prepareSpectrum","match","fastParseXYData","parsePeakTable","parseXYA","title","dataType","twoD","maxX","minX","minY","observeFrequency","xType","indirectFrequency","shiftOffsetNum","shiftOffsetVal","varname","vartype","varform","yType","page","pageValue","pageSymbol","pageSymbolIndex","unit","isMSField","convertMSFieldToLabel","sampleDescription","keys","newNtuples","add2D","complexChromatogram","simpleChromatogram","toLowerCase","times","series","ms","existingGCMSFields","label","intensity","getMedian","convertTo3DZ","minZ","maxZ","ySize","xSize","xVector","noise","map","zData","contourLines","generateContourLines","povarHeight0","povarHeight1","povarHeight2","povarHeight3","isOver0","isOver1","isOver2","isOver3","nbSubSpectra","nbPovars","pAx","pAy","pBx","pBy","xN","yN","dy","contourLevels","lineZValue","level","contourLevel","side","lines","zValue","iSubSpectra","subSpectra","subSpectraAfter","povar","segments","isXYdata","currentData","currentX","currentY","ascii","charCodeAt","newLine","isDifference","isLastDifference","lastDifference","isDuplicate","inComment","lastValue","isNegative","inValue","skipFirstValue","decimalPosition","duplicate","ascii2","removeSymbolRegExp","isXYAdata","removeCommentRegExp","peakTableSplitRegExp","isPeaktable","JcampConverter","useWorker","postToWorker","stamps","worker","createWorker","Promise","resolve","stamp","postMessage","JSON","stringify","workerURL","URL","createObjectURL","Blob","type","Worker","revokeObjectURL","addEventListener","event","parse","createTree","flatten","flat","stack","ntupleLevel","spaces","includes","line","labelLine","startsWith","join","children","finished","pop","entry","sortX","sortFunc","grouped","val","response","uniqueX","xs","ys","counter","parseXY","text","normalize","arrayType","xColumn","yColumn","keepInfo","maxNumberColumns","minNumberColumns","fields","uniqueXFunction","newResult","_interopDefault","ex","getAnnotations","fillColor","strokeColor","creationFct","annotations","annotation","strokeWidth","oneAnnotation","kind","anchor","color","wavelength","addPeak","existing","getPeakKind","minIntensity","maxIntensity","peakPicking","targetWavelength","range","bestPeak","getClosest","findClosest","bestInRange","newError","setBestPeak","previousIndex","autoPeakPicking","fromWavelength","toWavelength","replaceExisting","mlGsd","absorbance","filter","peakLoop","json","check","setPeaks","getData","minWavelength","maxWavelength","fromJcamp","jcampconverter","fromText","xyParser"],"mappings":"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"}